// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Classes
$$.ListIterable = {"": "IterableBase;",
  get$iterator: function(_) {
    return $.ListIterator$(this, $.getRuntimeTypeArgument(this, this.$asListIterable, 0));
  },
  forEach$1: function(_, action) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      return this.forEach$1$bailout1(1, action, $length);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.elementAt$1(this, i));
      if ($length !== this.get$length(this))
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
  },
  forEach$1$bailout1: function(state0, action, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      action.call$1(this.elementAt$1(this, i));
      if (t1.$eq($length, this.get$length(this)) !== true)
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function(_) {
    return $.$eq(this.get$length(this), 0);
  },
  contains$1: function(_, element) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      return this.contains$1$bailout1(1, element, $length);
    for (i = 0; i < $length; ++i) {
      if ($.$eq(this.elementAt$1(this, i), element) === true)
        return true;
      if ($length !== this.get$length(this))
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
    return false;
  },
  contains$1$bailout1: function(state0, element, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      if ($.$eq(this.elementAt$1(this, i), element) === true)
        return true;
      if (t1.$eq($length, this.get$length(this)) !== true)
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
    return false;
  },
  toList$1$growable: function(_, growable) {
    var result, i, t1;
    if (growable) {
      result = $.List_List($, $.getRuntimeTypeArgument(this, this.$asListIterable, 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListIterable, 0)]);
      $.JSArray_methods.set$length(result, this.get$length(this));
    } else {
      result = $.List_List(this.get$length(this), $.getRuntimeTypeArgument(this, this.$asListIterable, 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListIterable, 0)]);
    }
    for (i = 0; $.JSNumber_methods.$lt(i, this.get$length(this)); ++i) {
      t1 = this.elementAt$1(this, i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  $asIterableBase: null,
  $asIterable: null
};

$$.SubListIterable = {"": "ListIterable;_iterable,_start,_endOrLength",
  get$_endIndex: function() {
    var $length, t1;
    $length = $.get$length$asx(this._iterable);
    t1 = this._endOrLength;
    if (t1 == null || $.JSNull_methods.$gt(t1, $length))
      return $length;
    return t1;
  },
  get$_startIndex: function() {
    var $length, t1;
    $length = $.get$length$asx(this._iterable);
    t1 = this._start;
    if ($.JSNumber_methods.$gt(t1, $length))
      return $length;
    return t1;
  },
  get$length: function(_) {
    var $length, t1, t2;
    $length = $.get$length$asx(this._iterable);
    if (typeof $length !== "number")
      return this.get$length$bailout2(1, $length);
    t1 = this._start;
    if (t1 >= $length)
      return 0;
    t2 = this._endOrLength;
    if (t2 == null || $.JSNull_methods.$ge(t2, $length))
      return $length - t1;
    return $.JSNull_methods.$sub(t2, t1);
  },
  get$length$bailout2: function(state0, $length) {
    var t1, t2;
    t1 = this._start;
    if ($.JSNumber_methods.$ge(t1, $length))
      return 0;
    t2 = this._endOrLength;
    if (t2 == null || $.JSNull_methods.$ge(t2, $length))
      return $.$sub$n($length, t1);
    return $.JSNull_methods.$sub(t2, t1);
  },
  elementAt$1: function(_, index) {
    var t1, realIndex;
    t1 = this.get$_startIndex();
    if (typeof t1 !== "number")
      return this.elementAt$1$bailout2(1, index, t1);
    realIndex = t1 + index;
    if (!(index < 0)) {
      t1 = this.get$_endIndex();
      if (typeof t1 !== "number")
        return this.elementAt$1$bailout2(2, index, t1, realIndex);
      t1 = realIndex >= t1;
    } else
      t1 = true;
    if (t1)
      throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
    return $.elementAt$1$ax(this._iterable, realIndex);
  },
  elementAt$1$bailout2: function(state0, index, t1, realIndex) {
    switch (state0) {
      case 0:
        t1 = this.get$_startIndex();
      case 1:
        state0 = 0;
        realIndex = $.$add$ns(t1, index);
      case 2:
        if (state0 === 2 || state0 === 0 && !(index < 0))
          switch (state0) {
            case 0:
              t1 = this.get$_endIndex();
            case 2:
              state0 = 0;
              t1 = $.$ge$n(realIndex, t1);
          }
        else
          t1 = true;
        if (t1)
          throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
        return $.elementAt$1$ax(this._iterable, realIndex);
    }
  },
  $asListIterable: null,
  $asIterable: null
};

$$.ListIterator = {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib$_length;
    t2 = this._iterable;
    if ($.$eq(t1, $.get$length$asx(t2)) !== true)
      throw $.wrapException($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = $.elementAt$1$ax(t2, t3);
    this._index = this._index + 1;
    return true;
  },
  $isIterator: true
};

$$.MappedIterable = {"": "IterableBase;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function(_) {
    var t1 = this._iterable;
    return $.MappedIterator$(t1.get$iterator(t1), this._f, $.getRuntimeTypeArgument(this, this.$asMappedIterable, 0), $.getRuntimeTypeArgument(this, this.$asMappedIterable, 1));
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  get$isEmpty: function(_) {
    var t1 = this._iterable;
    return t1.get$isEmpty(t1);
  },
  elementAt$1: function(_, index) {
    var t1 = this._iterable;
    return this._f$1(t1.elementAt$1(t1, index));
  },
  $asIterableBase: function (S, T) { return [T]; },
  $asIterable: function (S, T) { return [T]; }
};

$$.MappedIterator = {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  },
  $asIterator: function (S, T) { return [T]; }
};

$$.MappedListIterable = {"": "ListIterable;_liblib$_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function(_) {
    return $.get$length$asx(this._liblib$_source);
  },
  elementAt$1: function(_, index) {
    return this._f$1($.elementAt$1$ax(this._liblib$_source, index));
  },
  $asListIterable: function (S, T) { return [T]; },
  $asIterable: function (S, T) { return [T]; }
};

$$.WhereIterable = {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    return $.WhereIterator$(t1.get$iterator(t1), this._f, $.getRuntimeTypeArgument(this, this.$asWhereIterable, 0));
  },
  $asIterableBase: null,
  $asIterable: null
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  },
  $asIterator: null
};

$$.SkipIterable = {"": "IterableBase;_iterable,_skipCount",
  get$iterator: function(_) {
    return $.SkipIterator$($.get$iterator$ax(this._iterable), this._skipCount, $.getRuntimeTypeArgument(this, this.$asSkipIterable, 0));
  },
  $asIterableBase: null,
  $asIterable: null
};

$$.SkipIterator = {"": "Iterator;_iterator,_skipCount",
  moveNext$0: function() {
    var t1, i, t2;
    t1 = this._iterator;
    i = 0;
    while (true) {
      t2 = this._skipCount;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      if (!(i < t2))
        break;
      t1.moveNext$0();
      ++i;
    }
    this._skipCount = 0;
    return t1.moveNext$0();
  },
  get$current: function() {
    return this._iterator.get$current();
  },
  SkipIterator$2: function(_iterator, _skipCount, E) {
  },
  $asIterator: null
};

$$.UnmodifiableListMixin = {"": "Object;",
  $indexSet: function(_, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  add$1: function(_, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  insert$2: function(_, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1: function(_, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  remove$1: function(_, element) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeAt$1: function(_, index) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeLast$0: function(_) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  }
};

$$.UnmodifiableListBase = {"": "ListBase+UnmodifiableListMixin;", $asListBase: null, $asList: null, $asIterable: null};

$$.ToString__emitPair_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (!t1.first_0)
      $.write$1$x(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.write$1$x(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.HashMap_values_anon = {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
};

$$.HashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    $.$indexSet$ax(this.this_0, key, value);
  }
};

$$.HashMapKeyIterable = {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._map._liblib0$_length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.HashMapKeyIterator$(t1, t1._computeKeys$0(), $.getRuntimeTypeArgument(this, this.$asHashMapKeyIterable, 0));
  },
  contains$1: function(_, element) {
    var t1 = this._map;
    return t1.containsKey$1(t1, element);
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw $.wrapException($.ConcurrentModificationError$(t1));
    }
  },
  $asIterableBase: null,
  $asIterable: null
};

$$.HashMapKeyIterator = {"": "Object;_map,_keys,_offset,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw $.wrapException($.ConcurrentModificationError$(t1));
    else if (offset >= keys.length) {
      this._liblib0$_current = null;
      return false;
    } else {
      this._liblib0$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  },
  $isIterator: true
};

$$.LinkedHashMap_values_anon = {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
};

$$.LinkedHashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    $.$indexSet$ax(this.this_0, key, value);
  }
};

$$.LinkedHashMapCell = {"": "Object;_key<,_value@,_next@,_previous@"};

$$.LinkedHashMapKeyIterable = {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._map._liblib0$_length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.LinkedHashMapKeyIterator$(t1, t1._modifications, $.getRuntimeTypeArgument(this, this.$asLinkedHashMapKeyIterable, 0));
  },
  contains$1: function(_, element) {
    var t1 = this._map;
    return t1.containsKey$1(t1, element);
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell.get$_key());
      if (modifications !== t1._modifications)
        throw $.wrapException($.ConcurrentModificationError$(t1));
      cell = cell.get$_next();
    }
  },
  $asIterableBase: null,
  $asIterable: null
};

$$.LinkedHashMapKeyIterator = {"": "Object;_map,_modifications,_cell,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw $.wrapException($.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._liblib0$_current = null;
        return false;
      } else {
        this._liblib0$_current = t1.get$_key();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  },
  LinkedHashMapKeyIterator$2: function(_map, _modifications, E) {
    this._cell = this._map._first;
  },
  $isIterator: true
};

$$.HashSetIterator = {"": "Object;_set,_elements,_offset,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw $.wrapException($.ConcurrentModificationError$(t1));
    else if (offset >= elements.length) {
      this._liblib0$_current = null;
      return false;
    } else {
      this._liblib0$_current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  },
  $isIterator: true
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2, str;
    t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0)) {
      t2 = t1.sb_0;
      t2._contents = t2._contents + ", ";
    }
    t2 = t1.sb_0;
    str = typeof key === "string" ? key : $.S(key);
    t2._contents = t2._contents + str;
    t2 = t1.sb_0;
    t2._contents = t2._contents + ": ";
    t2 = t1.sb_0;
    str = $.Error_safeToString(value);
    str = typeof str === "string" ? str : $.S(str);
    t2._contents = t2._contents + str;
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
};

$$.Interceptor = {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(receiver)) + "'";
  }
};

$$.JSFunction = {"": "Interceptor;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
};

$$.JSNull = {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
};

$$.CloseToken = {"": "Object;", $isCloseToken: true};

$$.JsIsolateSink = {"": "EventSink;_isClosed,_port<",
  add$1: function(_, message) {
    $.send$1$x(this._port, message);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$isIsolateSink && $.$eq(this._port, other.get$_port()) === true;
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
};

$$._Manager = {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      if (t2 != null) {
        $.get$IsolateNatives_thisScript();
        t2 = true;
      } else
        t2 = false;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true) {
      var t1 = this.isolates;
      t1 = t1.get$isEmpty(t1) && this.topEventLoop.activeTimerCount === 0;
    } else
      t1 = false;
    if (t1) {
      t1 = $._serializeMessage($.makeLiteralMap(["command", "close"]));
      $.get$globalThis().postMessage(t1);
    }
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map($.JSInt, $._IsolateContext);
    this.managers = $.Map_Map($.JSInt, $._ManagerStub);
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id*,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1 = this.ports;
    if (t1.containsKey$1(t1, portId) === true)
      throw $.wrapException($._ExceptionImplementation$("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    t1 = this.ports;
    if (t1.get$isEmpty(t1)) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = $.Map_Map($.JSInt, $.ReceivePort);
    this.isolateStatics = new Isolate();
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount",
  enqueue$3: function(isolate, fn, msg) {
    var t1 = this.events;
    t1._add$1(t1, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty(t1))
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null) {
      var t1 = $globalState.isolates;
      if (t1.containsKey$1(t1, $globalState.rootContext.id) === true)
        if ($globalState.fromCommandLine === true) {
          t1 = $globalState.rootContext.ports;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
    } else
      t1 = false;
    if (t1)
      throw $.wrapException($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState;
        t1 = $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)]));
        $.get$globalThis().postMessage(t1);
      }

  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_run(this);
  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._ManagerStub = {"": "Object;"};

$$._MainManagerStub = {"": "Object;",
  get$id: function(_) {
    return 0;
  },
  set$id: function(_, i) {
    throw $.wrapException($.UnimplementedError$(null));
  },
  postMessage$1: function(_, msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function(_) {
  }
};

$$.IsolateNatives__processWorkerMessage_anon = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    var t1, t2;
    t1 = this.entryPoint_0;
    t2 = this.replyTo_1;
    $.lazyPort = $.ReceivePortImpl$();
    $.send$2$x(t2, "spawned", $._Isolate_port().toSendPort$0());
    t1.call$0();
  }
};

$$._BaseSendPort = {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_NativeJsSendPort) && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_WorkerSendPort) && true)
      throw $.wrapException($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(this, message, $._NativeJsSendPort$(port, $.get$id$x($globalState.currentContext)));
    port._callback = new $._BaseSendPort_call_anon(completer, port);
    return completer.future;
  },
  $isSendPort: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1 = this.port_1;
    t1._callback = null;
    $globalState.currentContext.unregister$1(t1._id);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!$.getInterceptor(value).$isException)
      t1.completeError$1(value);
    else {
      if (t1._isComplete)
        $.throwExpression($.StateError$("Future already completed"));
      t1._isComplete = true;
      t1.future._setValue$1(value);
    }
  }
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $.$eq($.get$id$x($globalState.currentContext), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    t3 = $globalState.topEventLoop;
    t4 = "receive " + $.S(msg);
    t3 = t3.events;
    t3._add$1(t3, $._IsolateEvent$(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), t4));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_WorkerSendPort) {
      other;
      t1 = $.$eq(this._workerId, other._workerId) === true && $.$eq(this._isolateId, other._isolateId) === true && $.$eq(this._receivePortId, other._receivePortId) === true;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = $.$shl$n(this._workerId, 16);
    t2 = $.$shl$n(this._isolateId, 8);
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 ^ t2 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true) {
      $globalState;
      $.get$globalThis().postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        $.postMessage$1$x(manager, workerMessage);
    }
  }
};

$$.ReceivePortImpl = {"": "Object;_id<,_callback<",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $.get$id$x($globalState.currentContext));
  },
  ReceivePortImpl$0: function() {
    $.register$2$x($._globalState().currentContext, this._id, this);
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax($.get$values$x(map), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (false)
      this.ports.push(port.get$_futurePort());
  },
  visitIsolateSink$1: function(sink) {
    var t1 = sink._port;
    if (false)
      this.ports.push(t1.get$_futurePort());
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return $._NativeJsSendPort$(x._receivePort, x._isolateId);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return $._WorkerSendPort$(x._workerId, x._isolateId, x._receivePortId);
    throw $.wrapException("Illegal underlying port " + $.S(this.get$p()));
  },
  visitIsolateSink$1: function(sink) {
    var isClosed, result;
    isClosed = sink._isClosed;
    result = $.JsIsolateSink$fromPort(this.visitSendPort$1(sink._port));
    result._isClosed = isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $globalState.currentManagerId) === true) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, isClosed, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    isClosed = t1.$index(list, 2);
    result = $.JsIsolateSink$fromPort(port);
    result._isClosed = isClosed;
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.C_CloseToken;
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    $.add$1$ax(this.tagged, object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List($, null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;_visited",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!$.getInterceptor(x).$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isCloseToken)
      return this.visitCloseToken$1(x);
    $.throwExpression("Message serialization: Illegal value " + $.S(x) + " passed");
    return;
  }
};

$$._Copier = {"": "_MessageTraverser;_visited",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.getInterceptor(list).$isJavaScriptIndexingBehavior))
      return this.visitList$1$bailout1(1, list);
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len, null);
    t1 = this._visited;
    t1.$indexSet(t1, list, copy);
    for (t1 = copy.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._visited;
        copy = t1.$index(t1, list);
        if (copy != null)
          return copy;
        t1 = $.getInterceptor$asx(list);
        len = t1.get$length(list);
      case 2:
        var copy, t2, i, t3;
        state0 = 0;
        copy = $.List_List(len, null);
        t2 = this._visited;
        t2.$indexSet(t2, list, copy);
        for (t2 = copy.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
          t3 = this._dispatch$1(t1.$index(list, i));
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = t3;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.HashMap$(null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    $.forEach$1$ax(map, new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$indexSet$ax(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._Serializer = {"": "_MessageTraverser;_nextFreeRefId,_visited",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = $.getInterceptor$x(map);
    return ["map", id, this._serializeList$1($.toList$0$ax(t1.get$keys(map))), this._serializeList$1($.toList$0$ax(t1.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var len, result, t1, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.getInterceptor(list).$isJavaScriptIndexingBehavior))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len, null);
    for (t1 = result.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      result[i] = t2;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$asx(list);
        len = t1.get$length(list);
      case 2:
        var result, t2, i, t3;
        state0 = 0;
        result = $.List_List(len, null);
        for (t2 = result.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
          t3 = this._dispatch$1(t1.$index(list, i));
          if (i >= t2)
            throw $.ioore(i);
          result[i] = t3;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;_deserialized",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$(null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    t1 = $.getInterceptor(x);
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        $.throwExpression("Unexpected serialized object");
        return;
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !$.getInterceptor(dartList).$isJavaScriptIndexingBehavior)
      return this._deserializeList$1$bailout(1, dartList, id);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t1, len, i;
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = $.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    for (i = 0; $.JSNumber_methods.$lt(i, len); ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.HashMap$(null, null);
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !$.getInterceptor(keys).$isJavaScriptIndexingBehavior))
      return this._deserializeMap$1$bailout(1, keys, t1, x, result);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !$.getInterceptor(values).$isJavaScriptIndexingBehavior))
      return this._deserializeMap$1$bailout(2, keys, 0, 0, result, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, keys, t1, x, result, values, len) {
    switch (state0) {
      case 0:
        result = $.HashMap$(null, null);
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t1 = $.getInterceptor$asx(keys);
        len = t1.get$length(keys);
      case 3:
        var id, t2, i;
        state0 = 0;
        for (t2 = $.getInterceptor$asx(values), i = 0; $.JSNumber_methods.$lt(i, len); ++i)
          result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
        return result;
    }
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle?",
  cancel$0: function(_) {
    var t1;
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw $.wrapException($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.wrapException($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$periodic$2: function(milliseconds, callback) {
    var t1;
    if ($.hasTimer()) {
      t1 = $._globalState().topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.anon5(this, callback), 0), milliseconds);
    } else
      throw $.wrapException($.UnsupportedError$("Periodic timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if (milliseconds === 0)
      t1 = !$.hasTimer() || $._globalState().isWorker === true;
    else
      t1 = false;
    if (t1) {
      t1 = $._globalState;
      t1().topEventLoop.enqueue$3(t1().currentContext, callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer()) {
      t1 = $._globalState().topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.internalCallback(this, callback), 0), milliseconds);
    } else
      throw $.wrapException($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
  }
};

$$.anon5 = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.JSArray = {"": "List/Interceptor;",
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("add"));
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.wrapException($.RangeError$value(index));
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("removeAt"));
    return receiver.splice(index, 1)[0];
  },
  insert$2: function(receiver, index, value) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    if (index < 0 || index > receiver.length)
      throw $.wrapException($.RangeError$value(index));
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("insert"));
    receiver.splice(index, 0, value);
  },
  removeLast$0: function(receiver) {
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("removeLast"));
    if (receiver.length === 0)
      throw $.wrapException($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("remove"));
    for (i = 0; i < receiver.length; ++i)
      if ($.$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  addAll$1: function(receiver, collection) {
    var t1, e;
    for (t1 = $.get$iterator$ax(collection); t1.moveNext$0() === true;) {
      e = t1.get$current();
      if (!!receiver.fixed$length)
        $.throwExpression($.UnsupportedError$("add"));
      receiver.push(e);
    }
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  join$1: function(receiver, separator) {
    var list, t1, i, t2;
    list = $.List_List(receiver.length, null);
    for (t1 = list.length, i = 0; i < receiver.length; ++i) {
      t2 = $.S(receiver[i]);
      if (i >= t1)
        throw $.ioore(i);
      list[i] = t2;
    }
    return list.join(separator);
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    if (start == null)
      $.throwExpression($.ArgumentError$(null));
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw $.wrapException($.ArgumentError$(start));
    else
      start;
    if (start < 0 || start > receiver.length)
      throw $.wrapException($.RangeError$range(start, 0, receiver.length));
    if (end == null)
      end = receiver.length;
    else {
      if (typeof end !== "number" || Math.floor(end) !== end)
        throw $.wrapException($.ArgumentError$(end));
      if (end < start || end > receiver.length)
        throw $.wrapException($.RangeError$range(end, start, receiver.length));
    }
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    if (!!receiver.immutable$list)
      $.throwExpression($.UnsupportedError$("set range"));
    $.IterableMixinWorkaround_setRangeList(receiver, start, end, iterable, skipCount);
  },
  indexOf$2: function(receiver, element, start) {
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    var result = $.StringBuffer$("");
    $.ToString__emitValue(receiver, result, $.List_List($, null));
    return result._contents;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.getRuntimeTypeArgument(receiver, receiver.$asJSArray, 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver, $.getRuntimeTypeArgument(receiver, receiver.$asJSArray, 0));
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
      throw $.wrapException($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.wrapException($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      $.throwExpression($.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException($.RangeError$value(index));
    receiver[index] = value;
  },
  $asInterceptor: null,
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isIterable: true
};

$$.JSMutableArray = {"": "JSArray;", $asList: function() { return [null]; }, $asIterable: function() { return [null]; }};

$$.JSFixedArray = {"": "JSMutableArray;"};

$$.JSExtendableArray = {"": "JSMutableArray;"};

$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$._StackTrace = {"": "Object;_stack",
  toString$0: function(_) {
    var t1 = this._stack;
    return t1 != null ? t1 : "";
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Closure = {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
};

$$.Creates = {"": "Object;types"};

$$.Returns = {"": "Object;types"};

$$.JSName = {"": "Object;name>"};

$$.Null = {"": "Object;"};

$$.TypeErrorImplementation = {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
};

$$.CastErrorImplementation = {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
};

$$.FallThroughErrorImplementation = {"": "Object;",
  toString$0: function(_) {
    return "Switch case fall-through.";
  }
};

$$.JSNumber = {"": "num/Interceptor;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  remainder$1: function(receiver, b) {
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.wrapException($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.wrapException($.UnsupportedError$("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  truncate$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      $.throwExpression($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      $.throwExpression($.UnsupportedError$("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  toDouble$0: function(receiver) {
    return receiver;
  },
  toRadixString$1: function(receiver, radix) {
    if (radix < 2 || radix > 36)
      throw $.wrapException($.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.wrapException($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return receiver << other >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.wrapException($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $and: function(receiver, other) {
    return (receiver & other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true
};

$$.JSInt = {"": "int/JSNumber;", $isint: true, $isnum: true};

$$.JSDouble = {"": "double/JSNumber;", $isdouble: true, $isnum: true};

$$.TypeImpl = {"": "Object;typeName",
  toString$0: function(_) {
    return this.typeName;
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this.typeName);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isTypeImpl)
      return false;
    return $.$eq(this.typeName, other.typeName);
  },
  $isTypeImpl: true
};

$$.JSString = {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.wrapException($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.wrapException($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw $.wrapException($.ArgumentError$(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    return receiver.split(pattern._nativeRegExp);
  },
  startsWith$1: function(receiver, other) {
    var otherLength = other.length;
    if (otherLength > receiver.length)
      return false;
    return other == receiver.substring(0, otherLength);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    if (typeof startIndex !== "number")
      $.throwExpression($.ArgumentError$(startIndex));
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number")
      $.throwExpression($.ArgumentError$(endIndex));
    t1 = $.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0))
      throw $.wrapException($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex))
      throw $.wrapException($.RangeError$value(startIndex));
    if ($.$gt$n(endIndex, receiver.length))
      throw $.wrapException($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    if (other == null)
      $.throwExpression($.ArgumentError$(null));
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw $.wrapException($.ArgumentError$(start));
    else
      start;
    if (typeof other !== "string")
      throw $.wrapException($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    if (other == null)
      $.throwExpression($.ArgumentError$(null));
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i;
    for (hash = 0, i = 0; i < receiver.length; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true
};

$$._Random = {"": "Object;"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive,_nativeRegExp",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    if (typeof str !== "string")
      $.throwExpression($.ArgumentError$(str));
    m = this._nativeRegExp.exec(str);
    if (m == null)
      return;
    matchStart = m.index;
    if (0 >= m.length)
      throw $.ioore(0);
    t1 = $.get$length$asx(m[0]);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(this), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return this._nativeRegExp.test(str);
  },
  allMatches$1: function(_, str) {
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function(_) {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true,
  $isRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern,str<,start,end,_groups",
  $index: function(_, index) {
    var t1 = this._groups;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
};

$$._AllMatchesIterable = {"": "IterableBase;_re,_str",
  get$iterator: function(_) {
    return $._AllMatchesIterator$(this._re, this._str);
  },
  $asIterable: function() { return [$.Match]; }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib8$_current",
  get$current: function() {
    return this._liblib8$_current;
  },
  moveNext$0: function() {
    this._liblib8$_current = this._re.firstMatch$1(this._str);
    return this._liblib8$_current != null;
  },
  $isIterator: true,
  $asIterator: function() { return [$.Match]; }
};

$$.StringMatch = {"": "Object;start,str<,pattern",
  $index: function(_, g) {
    if ($.$eq(g, 0) !== true)
      $.throwExpression($.RangeError$value(g));
    return this.pattern;
  }
};

$$._CompleterImpl = {"": "Object;future,_isComplete",
  completeError$2: function(error, stackTrace) {
    if (this._isComplete)
      throw $.wrapException($.StateError$("Future already completed"));
    this._isComplete = true;
    if (stackTrace != null)
      $._attachStackTrace(error, stackTrace);
    this.future._setError$1(error);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state@,_resultOrListeners<",
  get$_isComplete: function() {
    return this._state !== 0;
  },
  get$_hasValue: function() {
    return this._state === 1;
  },
  get$_hasError: function() {
    return (this._state & 2) !== 0;
  },
  get$_hasUnhandledError: function() {
    return (this._state & 4) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (!this.get$_isComplete()) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError()) {
      if (onError != null)
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue())
      return $._FutureWrapper$(this);
    if (!this.get$_isComplete()) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_run(new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._state = (this._state & 4294967291) >>> 0;
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_run(new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (listeners0 != null) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = (this._state | 4) >>> 0;
    $.Timer_run(new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    var t1;
    if (!this.get$_isComplete()) {
      t1 = $._FutureListenerWrapper$(future);
      t1._nextListener = this._resultOrListeners;
      this._resultOrListeners = t1;
    } else if (this.get$_hasValue())
      future._setValue$1(this._resultOrListeners);
    else {
      this._state = (this._state & 4294967291) >>> 0;
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!$.getInterceptor(result).$isFuture) {
      result;
      if (!!$.getInterceptor(result).$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    } else
      this._setValue$1(result);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  _FutureImpl$immediateError$2: function(error, stackTrace) {
    if (stackTrace != null)
      $._attachStackTrace(error, stackTrace);
    this._setError$1(error);
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = value;
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0) === true) {
      t2 = t1.completer_0;
      t1 = t1.values_1;
      if (t2._isComplete)
        $.throwExpression($.StateError$("Future already completed"));
      t2._isComplete = true;
      t2.future._setValue$1(t1);
    }
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error, trace;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError()) {
      t1.set$_state((t1.get$_state() & 4294967291) >>> 0);
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error));
      trace = $.getAttachedStackTrace(error);
      if (trace != null)
        $.Primitives_printString("Stack Trace:\n" + $.S(trace) + "\n");
      throw $.wrapException(error);
    }
  }
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener@",
  _subscribeTo$1: function(future) {
    this._nextListener = future._resultOrListeners;
    future._resultOrListeners = this;
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, s0, exception, t1;
    if (this._test != null) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error);
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($._asyncError(e, s));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      s0 = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e0, s0));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  contains$1: function(_, match) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_contains_anon(t1, match, future), true, new $.Stream_contains_anon0(future), future.get$_setError());
    return future;
  },
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_forEach_anon(t1, action, future), true, new $.Stream_forEach_anon0(future), future.get$_setError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new $.Stream_length_anon(t1), true, new $.Stream_length_anon0(t1, future), future.get$_setError());
    return future;
  },
  get$isEmpty: function(_) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_isEmpty_anon(t1, future), true, new $.Stream_isEmpty_anon0(future), future.get$_setError());
    return future;
  },
  elementAt$1: function(_, index) {
    var t1, t2, future;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (typeof t2 !== "number" || Math.floor(t2) !== t2 || $.$lt$n(t2, 0))
      throw $.wrapException($.ArgumentError$(t2));
    future = $._FutureImpl$();
    t1.subscription_1 = null;
    t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_elementAt_anon(t1, future), true, new $.Stream_elementAt_anon0(future), future.get$_setError());
    return future;
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = this.match_1;
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(new $.Stream_contains__anon(t1, element), new $.Stream_contains__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3));
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return $.$eq(this.element_4, this.match_3);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    var t1;
    if (isMatch === true) {
      t1 = this.box_0.subscription_0;
      t1.cancel$0(t1);
      this.future_5._setValue$1(true);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(false);
  }
};

$$.Stream_forEach_anon = {"": "Closure;box_0,action_1,future_2",
  call$1: function(element) {
    $._runUserCode(new $.Stream_forEach__anon(this.action_1, element), new $.Stream_forEach__anon0(), $._cancelAndError(this.box_0.subscription_0, this.future_2));
  }
};

$$.Stream_forEach__anon = {"": "Closure;action_3,element_4",
  call$0: function() {
    return this.action_3.call$1(this.element_4);
  }
};

$$.Stream_forEach__anon0 = {"": "Closure;",
  call$1: function(_) {
  }
};

$$.Stream_forEach_anon0 = {"": "Closure;future_5",
  call$0: function() {
    this.future_5._setValue$1(null);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    var t1 = this.box_0.subscription_0;
    t1.cancel$0(t1);
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$.Stream_elementAt_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    var t1 = this.box_0;
    if ($.$eq(t1.index_0, 0) === true) {
      t1 = t1.subscription_1;
      t1.cancel$0(t1);
      this.future_1._setValue$1(value);
      return;
    }
    t1.index_0 = $.$sub$n(t1.index_0, 1);
  }
};

$$.Stream_elementAt_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.StateError$("Not enough elements for elementAt"));
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.EventSink = {"": "Object;"};

$$._throwDelayed_anon = {"": "Closure;error_0,stackTrace_1",
  call$0: function() {
    var t1, t2, trace, t3;
    t1 = this.stackTrace_1;
    if (t1 != null)
      $.Primitives_printString($.JSNull_methods.toString$0(t1));
    t2 = this.error_0;
    trace = $.getAttachedStackTrace(t2);
    t3 = $.getInterceptor(trace);
    if (trace != null && t3.$eq(trace, t1) !== true)
      $.Primitives_printString(t3.toString$0(trace));
    throw $.wrapException(t2);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    var t1 = this.subscription_0;
    t1.cancel$0(t1);
    this.future_1._setError$1(error);
  }
};

$$._ForwardingStream = {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, true === cancelOnError);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  _handleData$2: function(data, sink) {
    sink._liblib7$_onData$1(data);
  }
};

$$._BaseStreamSubscription = {"": "Object;",
  _liblib7$_onData$1: function(arg0) {
    return this._liblib7$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  _BaseStreamSubscription$3: function(_onData, _onError, _onDone) {
    if (this._onError == null)
      this._onError = $._nullErrorHandler;
    if (this._onDone == null)
      this._onDone = $._nullDoneHandler;
  }
};

$$._ForwardingStreamSubscription = {"": "_BaseStreamSubscription;_stream,_cancelOnError<,_liblib7$_subscription@,_liblib7$_onData,_onError,_onDone",
  cancel$0: function(_) {
    var t1 = this._liblib7$_subscription;
    if (t1 != null) {
      t1.cancel$0(t1);
      this._liblib7$_subscription = null;
    }
  },
  _sendError$1: function(error) {
    var t1;
    this._onError$1(error);
    if (this._cancelOnError) {
      t1 = this._liblib7$_subscription;
      t1.cancel$0(t1);
      this._liblib7$_subscription = null;
    }
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.BoundClosure$1(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    var t1;
    this._onError$1(error);
    if (this._cancelOnError) {
      t1 = this._liblib7$_subscription;
      t1.cancel$0(t1);
      this._liblib7$_subscription = null;
    }
  },
  get$_handleError: function() {
    return new $.BoundClosure$1(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._liblib7$_subscription = null;
    var t1 = this._liblib7$_subscription;
    if (t1 != null) {
      t1.cancel$0(t1);
      this._liblib7$_subscription = null;
    }
    this._onDone$0();
  },
  get$_handleDone: function() {
    return new $.BoundClosure$0(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, _cancelOnError) {
    var t1, t2;
    t1 = this.get$_handleData();
    t2 = this.get$_handleError();
    this._liblib7$_subscription = this._stream._liblib7$_source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
  }
};

$$._WhereStream = {"": "_ForwardingStream;_test,_liblib7$_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1, t2;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      t1 = sink;
      t1._onError$1($._asyncError(e, s));
      if (t1.get$_cancelOnError()) {
        t2 = t1.get$_liblib7$_subscription();
        t2.cancel$0(t2);
        t1.set$_liblib7$_subscription(null);
      }
      return;
    }

    if (satisfies === true)
      sink._liblib7$_onData$1(inputEvent);
  }
};

$$._MapStream = {"": "_ForwardingStream;_transform,_liblib7$_source",
  _transform$1: function(arg0) {
    return this._transform.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var outputEvent, e, s, exception, t1, t2;
    outputEvent = null;
    try {
      outputEvent = this._transform$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      t1 = sink;
      t1._onError$1($._asyncError(e, s));
      if (t1.get$_cancelOnError()) {
        t2 = t1.get$_liblib7$_subscription();
        t2.cancel$0(t2);
        t1.set$_liblib7$_subscription(null);
      }
      return;
    }

    sink._liblib7$_onData$1(outputEvent);
  }
};

$$._SkipStream = {"": "_ForwardingStream;_remaining,_liblib7$_source",
  _handleData$2: function(inputEvent, sink) {
    var t1, t2;
    t1 = this._remaining;
    t2 = $.getInterceptor$n(t1);
    if (t2.$gt(t1, 0)) {
      this._remaining = t2.$sub(t1, 1);
      return;
    }
    sink._liblib7$_onData$1(inputEvent);
    return;
  }
};

$$.Timer_run_anon = {"": "Closure;",
  call$0: function() {
    var runCallbacks, i, callback, newCallbacks, exception;
    runCallbacks = $.get$Timer__runCallbacks();
    $.Timer__runCallbacks = [];
    for (i = 0; $.$lt$n(i, $.get$length$asx(runCallbacks)); i = $.$add$ns(i, 1)) {
      callback = $.$index$asx(runCallbacks, i);
      try {
        callback.call$0();
      } catch (exception) {
        $.unwrapException(exception);
        newCallbacks = $.get$Timer__runCallbacks();
        $.Timer__runCallbacks = [];
        i = $.$add$ns(i, 1);
        $.JSArray_methods.addAll$1($.get$Timer__runCallbacks(), $.sublist$1$ax(runCallbacks, i));
        $.JSArray_methods.addAll$1($.get$Timer__runCallbacks(), newCallbacks);
        throw exception;
      }

    }
  }
};

$$.UnmodifiableListView = {"": "UnmodifiableListBase;_liblib0$_source",
  get$length: function(_) {
    return this._liblib0$_source.length;
  },
  $index: function(_, index) {
    return $.JSArray_methods.elementAt$1(this._liblib0$_source, index);
  },
  $asUnmodifiableListBase: null,
  $asList: null,
  $asIterable: null
};

$$.HashMap = {"": "Object;_liblib0$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib0$_length === 0;
  },
  get$keys: function(_) {
    return $.HashMapKeyIterable$(this, $.getRuntimeTypeArgument(this, this.$asHashMap, 0));
  },
  get$values: function(_) {
    var t1 = this.get$keys(this);
    return t1.map$1(t1, new $.HashMap_values_anon(this));
  },
  containsKey$1: function(_, key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      return nums == null ? false : nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashMap__findBucketIndex(rest[$.get$hashCode$(key) & 0x3ffffff], key) >= 0;
    }
  },
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.HashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.HashMap__findBucketIndex(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, t1, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      if (strings[key] == null) {
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      }
      if (value == null)
        strings[key] = strings;
      else
        strings[key] = value;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      if (nums[key] == null) {
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      }
      if (value == null)
        nums[key] = nums;
      else
        nums[key] = value;
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null) {
        t1 = [key, value];
        if (t1 == null)
          rest[hash] = rest;
        else
          rest[hash] = t1;
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      } else {
        index = $.HashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._liblib0$_length = this._liblib0$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.HashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      this._liblib0$_length = this._liblib0$_length - 1;
      this._keys = null;
      return bucket.splice(index, 2)[1];
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
  },
  toString$0: function(_) {
    var result = $.StringBuffer$("");
    $.ToString__emitPair(this, result, $.List_List($, null));
    return result._contents;
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = $.List_List(this._liblib0$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _removeHashTableEntry$2: function(table, key) {
    var entry, value;
    if (table != null && table[key] != null) {
      entry = table[key];
      value = entry === table ? null : entry;
      delete table[key];
      this._liblib0$_length = this._liblib0$_length - 1;
      this._keys = null;
      return value;
    } else
      return;
  },
  $isMap: true,
  $asMap: null
};

$$._HashSetBase = {"": "IterableBase;",
  toString$0: function(_) {
    var result = $.StringBuffer$("");
    $.ToString__emitValue(this, result, $.List_List($, null));
    return result._contents;
  },
  $asIterableBase: null,
  $asIterable: null,
  $isIterable: true
};

$$.HashSet = {"": "_HashSetBase;_liblib0$_length,_strings,_nums,_rest,_elements",
  get$iterator: function(_) {
    return $.HashSetIterator$(this, this._computeElements$0(), $.getRuntimeTypeArgument(this, this.$asHashSet, 0));
  },
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib0$_length === 0;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashSet__findBucketIndex(rest[$.get$hashCode$(object) & 0x3ffffff], object) >= 0;
    }
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(element) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if ($.HashSet__findBucketIndex(bucket, element) >= 0)
          return;
        bucket.push(element);
      }
      this._liblib0$_length = this._liblib0$_length + 1;
      this._elements = null;
    }
  },
  addAll$1: function(_, objects) {
    var t1;
    for (t1 = $.get$iterator$ax(objects); t1.moveNext$0() === true;)
      this.add$1(this, t1.get$current());
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    if (typeof object === "string" && object !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, object);
    else if (typeof object === "number" && (object & 0x3ffffff) === object)
      return this._removeHashTableEntry$2(this._nums, object);
    else {
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[$.get$hashCode$(object) & 0x3ffffff];
      index = $.HashSet__findBucketIndex(bucket, object);
      if (index < 0)
        return false;
      this._liblib0$_length = this._liblib0$_length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    }
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = $.List_List(this._liblib0$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return;
    table[element] = 0;
    this._liblib0$_length = this._liblib0$_length + 1;
    this._elements = null;
  },
  _removeHashTableEntry$2: function(table, element) {
    if (table != null && table[element] != null) {
      delete table[element];
      this._liblib0$_length = this._liblib0$_length - 1;
      this._elements = null;
      return true;
    } else
      return false;
  },
  $as_HashSetBase: null,
  $asIterable: null
};

$$.IterableBase = {"": "Object;",
  map$1: function(_, f) {
    return $.MappedIterable$(this, f, $.getRuntimeTypeArgument(this, this.$asIterableBase, 0), null);
  },
  contains$1: function(_, element) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      if ($.$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.getRuntimeTypeArgument(this, this.$asIterableBase, 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function(_) {
    return this.get$iterator(this).moveNext$0() !== true;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException($.RangeError$value(index));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw $.wrapException($.RangeError$value(index));
  },
  $isIterable: true,
  $asIterable: null
};

$$.LinkedHashMap = {"": "Object;_liblib0$_length,_strings,_nums,_rest,_first,_last,_modifications",
  containsKey$1: function(_, key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.LinkedHashMap__findBucketIndex(rest[$.get$hashCode$(key) & 0x3ffffff], key) >= 0;
    }
  },
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.LinkedHashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = $.LinkedHashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index, cell;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      this._unlinkCell$1(cell);
      return cell.get$_value();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell.get$_key(), cell.get$_value());
      if (modifications !== this._modifications)
        throw $.wrapException($.ConcurrentModificationError$(this));
      cell = cell.get$_next();
    }
  },
  get$keys: function(_) {
    return $.LinkedHashMapKeyIterable$(this, $.getRuntimeTypeArgument(this, this.$asLinkedHashMap, 0));
  },
  get$values: function(_) {
    var t1 = this.get$keys(this);
    return t1.map$1(t1, new $.LinkedHashMap_values_anon(this));
  },
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib0$_length === 0;
  },
  toString$0: function(_) {
    var result = $.StringBuffer$("");
    $.ToString__emitPair(this, result, $.List_List($, null));
    return result._contents;
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.set$_value(value);
  },
  _removeHashTableEntry$2: function(table, key) {
    var cell;
    if (table == null)
      return;
    cell = table[key];
    if (cell == null)
      return;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.get$_value();
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = $.LinkedHashMapCell$(key, value);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._liblib0$_length = this._liblib0$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next.set$_previous(previous);
    this._liblib0$_length = this._liblib0$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  $isMap: true,
  $asMap: null
};

$$.ListBase = {"": "Object+ListMixin;", $isList: true, $asList: null, $isIterable: true, $asIterable: null};

$$.ListMixin = {"": "Object;",
  get$iterator: function(_) {
    return $.ListIterator$(this, $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
  },
  elementAt$1: function(_, index) {
    return this.$index(this, index);
  },
  forEach$1: function(_, action) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      return this.forEach$1$bailout(1, action, $length);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.$index(this, i));
      if ($length !== this.get$length(this))
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
  },
  forEach$1$bailout: function(state0, action, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      action.call$1(this.$index(this, i));
      if (t1.$eq($length, this.get$length(this)) !== true)
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function(_) {
    return $.$eq(this.get$length(this), 0);
  },
  get$last: function(_) {
    if ($.$eq(this.get$length(this), 0) === true)
      throw $.wrapException($.StateError$("No elements"));
    return this.$index(this, $.$sub$n(this.get$length(this), 1));
  },
  contains$1: function(_, element) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      return this.contains$1$bailout(1, element, $length);
    for (i = 0; i < $length; ++i) {
      if ($.$eq(this.$index(this, i), element) === true)
        return true;
      if ($length !== this.get$length(this))
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
    return false;
  },
  contains$1$bailout: function(state0, element, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      if ($.$eq(this.$index(this, i), element) === true)
        return true;
      if (t1.$eq($length, this.get$length(this)) !== true)
        throw $.wrapException($.ConcurrentModificationError$(this));
    }
    return false;
  },
  where$1: function(_, test) {
    return $.WhereIterable$(this, test, $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
  },
  skip$1: function(_, count) {
    return $.SubListIterable$(this, count, null, null);
  },
  toList$1$growable: function(_, growable) {
    var result, i, t1;
    if (growable) {
      result = $.List_List($, $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListMixin, 0)]);
      $.JSArray_methods.set$length(result, this.get$length(this));
    } else {
      result = $.List_List(this.get$length(this), $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListMixin, 0)]);
    }
    for (i = 0; $.JSNumber_methods.$lt(i, this.get$length(this)); ++i) {
      t1 = this.$index(this, i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(_, element) {
    var t1 = this.get$length(this);
    this.set$length(this, $.$add$ns(t1, 1));
    this.$indexSet(this, t1, element);
  },
  addAll$1: function(_, iterable) {
    var t1, element, t2;
    for (t1 = $.get$iterator$ax(iterable); t1.moveNext$0() === true;) {
      element = t1.get$current();
      t2 = this.get$length(this);
      this.set$length(this, $.$add$ns(t2, 1));
      this.$indexSet(this, t2, element);
    }
  },
  remove$1: function(_, element) {
    var i;
    for (i = 0; $.JSNumber_methods.$lt(i, this.get$length(this)); ++i)
      if ($.$eq(this.$index(this, i), element) === true) {
        this.setRange$4(this, i, $.$sub$n(this.get$length(this), 1), this, i + 1);
        this.set$length(this, $.$sub$n(this.get$length(this), 1));
        return true;
      }
    return false;
  },
  removeLast$0: function(_) {
    var result;
    if ($.$eq(this.get$length(this), 0) === true)
      throw $.wrapException($.StateError$("No elements"));
    result = this.$index(this, $.$sub$n(this.get$length(this), 1));
    this.set$length(this, $.$sub$n(this.get$length(this), 1));
    return result;
  },
  _rangeCheck$2: function(start, end) {
    var t1 = $.getInterceptor$n(start);
    if (t1.$lt(start, 0) || t1.$gt(start, this.get$length(this)))
      throw $.wrapException($.RangeError$range(start, 0, this.get$length(this)));
    t1 = $.getInterceptor$n(end);
    if (t1.$lt(end, start) || t1.$gt(end, this.get$length(this)))
      throw $.wrapException($.RangeError$range(end, start, this.get$length(this)));
  },
  sublist$2: function(_, start, end) {
    var $length, result, i, t1;
    if (typeof start !== "number")
      return this.sublist$2$bailout(1, start, end);
    if (end == null)
      end = this.get$length(this);
    this._rangeCheck$2(start, end);
    $length = $.$sub$n(end, start);
    if (typeof $length !== "number")
      return this.sublist$2$bailout(2, start, 0, $length);
    result = $.List_List($, $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
    $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListMixin, 0)]);
    $.JSArray_methods.set$length(result, $length);
    for (i = 0; i < $length; ++i) {
      t1 = this.$index(this, start + i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  sublist$2$bailout: function(state0, start, end, $length) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (end == null)
          end = this.get$length(this);
        this._rangeCheck$2(start, end);
        $length = $.$sub$n(end, start);
      case 2:
        var result, t1, i, t2;
        state0 = 0;
        result = $.List_List($, $.getRuntimeTypeArgument(this, this.$asListMixin, 0));
        $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this.$asListMixin, 0)]);
        $.JSArray_methods.set$length(result, $length);
        for (t1 = $.getInterceptor$ns(start), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
          t2 = this.$index(this, t1.$add(start, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    var $length, otherStart, otherList, i, t1;
    if (typeof start !== "number")
      return this.setRange$4$bailout(1, start, end, iterable, skipCount);
    if (typeof end !== "number")
      return this.setRange$4$bailout(1, start, end, iterable, skipCount);
    if (typeof skipCount !== "number")
      return this.setRange$4$bailout(1, start, end, iterable, skipCount);
    this._rangeCheck$2(start, end);
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount < 0)
      throw $.wrapException($.ArgumentError$(skipCount));
    otherStart = skipCount;
    otherList = iterable;
    if (typeof otherList !== "string" && (typeof otherList !== "object" || otherList === null || otherList.constructor !== Array && !$.getInterceptor(otherList).$isJavaScriptIndexingBehavior))
      return this.setRange$4$bailout(3, start, 0, 0, 0, $length, $.JSNumber_methods, otherList, otherStart);
    if (otherStart + $length > otherList.length)
      throw $.wrapException($.StateError$("Not enough elements"));
    if (otherStart < start)
      for (i = $length - 1; i >= 0; --i) {
        t1 = otherStart + i;
        if (t1 >>> 0 !== t1 || t1 >= otherList.length)
          throw $.ioore(t1);
        this.$indexSet(this, start + i, otherList[t1]);
      }
    else
      for (i = 0; i < $length; ++i) {
        t1 = otherStart + i;
        if (t1 >>> 0 !== t1 || t1 >= otherList.length)
          throw $.ioore(t1);
        this.$indexSet(this, start + i, otherList[t1]);
      }
  },
  setRange$4$bailout: function(state0, start, end, iterable, skipCount, $length, t1, otherList, otherStart, t2, t3, t4, t5) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        this._rangeCheck$2(start, end);
        $length = $.$sub$n(end, start);
        t1 = $.getInterceptor($length);
        if (t1.$eq($length, 0) === true)
          return;
        if ($.$lt$n(skipCount, 0))
          throw $.wrapException($.ArgumentError$(skipCount));
        otherStart = skipCount;
        otherList = iterable;
      case 3:
        state0 = 0;
        t2 = $.getInterceptor$ns(otherStart);
        t3 = t2.$add(otherStart, $length);
        t4 = $.getInterceptor$asx(otherList);
        t5 = t4.get$length(otherList);
      case 4:
        var i;
        state0 = 0;
        if ($.$gt$n(t3, t5))
          throw $.wrapException($.StateError$("Not enough elements"));
        if (t2.$lt(otherStart, start))
          for (i = t1.$sub($length, 1), t1 = $.getInterceptor$ns(start); t3 = $.getInterceptor$n(i), t3.$ge(i, 0); i = t3.$sub(i, 1))
            this.$indexSet(this, t1.$add(start, i), t4.$index(otherList, t2.$add(otherStart, i)));
        else
          for (t1 = $.getInterceptor$ns(start), i = 0; $.JSNumber_methods.$lt(i, $length); ++i)
            this.$indexSet(this, t1.$add(start, i), t4.$index(otherList, t2.$add(otherStart, i)));
    }
  },
  indexOf$2: function(_, element, startIndex) {
    var i;
    if ($.JSInt_methods.$ge(startIndex, this.get$length(this)))
      return -1;
    if (startIndex < 0)
      startIndex = 0;
    for (i = startIndex; $.JSNumber_methods.$lt(i, this.get$length(this)); ++i)
      if ($.$eq(this.$index(this, i), element) === true)
        return i;
    return -1;
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(_, index, element) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(this)))
      throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
    if (t1.$eq(index, this.get$length(this)) === true) {
      this.add$1(this, element);
      return;
    }
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException($.ArgumentError$(index));
    this.set$length(this, $.$add$ns(this.get$length(this), 1));
    this.setRange$4(this, index + 1, this.get$length(this), this, index);
    this.$indexSet(this, index, element);
  },
  removeAt$1: function(_, index) {
    var result = this.$index(this, index);
    this.setRange$4(this, index, $.$sub$n(this.get$length(this), 1), this, index + 1);
    this.set$length(this, $.$sub$n(this.get$length(this), 1));
    return result;
  },
  toString$0: function(_) {
    var result = $.StringBuffer$("");
    $.ToString__emitValue(this, result, $.List_List($, null));
    return result._contents;
  },
  $isList: true,
  $asList: null,
  $isIterable: true,
  $asIterable: null
};

$$.ListQueue = {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this, null);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        $.throwExpression($.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return $.$and$n($.$sub$n(this._tail, this._head), this._table.length - 1);
  },
  elementAt$1: function(_, index) {
    var t1, t2, t3;
    if (index < 0 || index > this.get$length(this))
      throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
    t1 = this._table;
    t2 = t1.length;
    t3 = (this._head + index & t2 - 1) >>> 0;
    if (t3 < 0 || t3 >= t2)
      throw $.ioore(t3);
    return t1[t3];
  },
  toList$1$growable: function(_, growable) {
    var list;
    if (growable) {
      list = $.List_List($, $.getRuntimeTypeArgument(this, this.$asListQueue, 0));
      $.setRuntimeTypeInfo(list, [$.getRuntimeTypeArgument(this, this.$asListQueue, 0)]);
      $.JSArray_methods.set$length(list, this.get$length(this));
    } else {
      list = $.List_List(this.get$length(this), $.getRuntimeTypeArgument(this, this.$asListQueue, 0));
      $.setRuntimeTypeInfo(list, [$.getRuntimeTypeArgument(this, this.$asListQueue, 0)]);
    }
    this._writeToList$1(list);
    return list;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(_, element) {
    this._add$1(this, element);
  },
  addAll$1: function(_, elements) {
    var addCount, $length, t1, t2, t3, endSpace, preSpace;
    if (typeof elements === "object" && elements !== null && (elements.constructor === Array || !!$.getInterceptor(elements).$isList)) {
      addCount = $.get$length$asx(elements);
      $length = this.get$length(this);
      if (typeof addCount !== "number")
        throw $.iae(addCount);
      t1 = $length + addCount;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3) {
        this._preGrow$1(t1);
        $.JSArray_methods.setRange$4(this._table, $length, t1, elements, 0);
        this._tail = $.$add$ns(this._tail, addCount);
      } else {
        t1 = this._tail;
        if (typeof t1 !== "number")
          throw $.iae(t1);
        endSpace = t3 - t1;
        if (addCount < endSpace) {
          $.JSArray_methods.setRange$4(t2, t1, t1 + addCount, elements, 0);
          this._tail = $.$add$ns(this._tail, addCount);
        } else {
          preSpace = addCount - endSpace;
          $.JSArray_methods.setRange$4(t2, t1, t1 + endSpace, elements, 0);
          $.JSArray_methods.setRange$4(this._table, 0, preSpace, elements, endSpace);
          this._tail = preSpace;
        }
      }
      this._modificationCount = this._modificationCount + 1;
    } else
      for (t1 = $.get$iterator$ax(elements); t1.moveNext$0() === true;)
        this._add$1(this, t1.get$current());
  },
  remove$1: function(_, object) {
    var i, t1;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], object) === true) {
        this._liblib0$_remove$1(this, i);
        this._modificationCount = this._modificationCount + 1;
        return true;
      }
    }
    return false;
  },
  toString$0: function(_) {
    var result = $.StringBuffer$("");
    $.ToString__emitValue(this, result, $.List_List($, null));
    return result._contents;
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.wrapException($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function(_) {
    var t1, t2;
    if (this._head === this._tail)
      throw $.wrapException($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = $.$and$n($.$sub$n(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _add$1: function(_, element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = $.$and$n(t2 + 1, this._table.length - 1);
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _liblib0$_remove$1: function(_, offset) {
    var t1, t2, mask, t3, startDistance, t4, i, prevOffset, nextOffset;
    t1 = this._table;
    t2 = t1.length;
    mask = t2 - 1;
    t3 = this._head;
    startDistance = (offset - t3 & mask) >>> 0;
    t4 = this._tail;
    if (typeof t4 !== "number")
      return this._liblib0$_remove$1$bailout(1, offset, t4, mask, startDistance);
    if (startDistance < (t4 - offset & mask) >>> 0) {
      for (i = offset; i !== t3; i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw $.ioore(prevOffset);
        t4 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t4;
      }
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = (t4 - 1 & mask) >>> 0;
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t2)
          throw $.ioore(nextOffset);
        t3 = t1[nextOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 >>> 0 !== t3 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      return offset;
    }
  },
  _liblib0$_remove$1$bailout: function(state0, offset, t1, mask, startDistance) {
    switch (state0) {
      case 0:
        mask = this._table.length - 1;
        startDistance = (offset - this._head & mask) >>> 0;
        t1 = this._tail;
      case 1:
        state0 = 0;
      case 2:
        var t2, i, t3, prevOffset, nextOffset;
        if (state0 === 0 && startDistance < $.$and$n($.$sub$n(t1, offset), mask)) {
          for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._head, i !== t3; i = prevOffset) {
            prevOffset = (i - 1 & mask) >>> 0;
            if (prevOffset < 0 || prevOffset >= t2)
              throw $.ioore(prevOffset);
            t3 = t1[prevOffset];
            if (i < 0 || i >= t2)
              throw $.ioore(i);
            t1[i] = t3;
          }
          if (t3 < 0 || t3 >= t2)
            throw $.ioore(t3);
          t1[t3] = null;
          this._head = (t3 + 1 & mask) >>> 0;
          return (offset + 1 & mask) >>> 0;
        } else
          switch (state0) {
            case 0:
              t1 = this._tail;
            case 2:
              state0 = 0;
              this._tail = $.$and$n($.$sub$n(t1, 1), mask);
              for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
                nextOffset = (i + 1 & mask) >>> 0;
                if (nextOffset < 0 || nextOffset >= t2)
                  throw $.ioore(nextOffset);
                t3 = t1[nextOffset];
                if (i < 0 || i >= t2)
                  throw $.ioore(i);
                t1[i] = t3;
              }
              if (t3 >>> 0 !== t3 || t3 >= t2)
                throw $.ioore(t3);
              t1[t3] = null;
              return offset;
          }
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2, $.getRuntimeTypeArgument(this, this.$asListQueue, 0));
    $.setRuntimeTypeInfo(newTable, [$.getRuntimeTypeArgument(this, this.$asListQueue, 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
    $.JSArray_methods.setRange$4(newTable, split, split + this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = this._head;
    t2 = this._tail;
    if ($.JSInt_methods.$le(t1, t2)) {
      $length = $.$sub$n(t2, t1);
      $.JSArray_methods.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t2 = this._table;
      firstPartSize = t2.length - t1;
      $.JSArray_methods.setRange$4(target, 0, firstPartSize, t2, t1);
      t1 = this._tail;
      if (typeof t1 !== "number")
        throw $.iae(t1);
      $.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + t1, this._table, 0);
      return $.$add$ns(this._tail, firstPartSize);
    }
  },
  _preGrow$1: function(newElementCount) {
    var newTable = $.List_List($.ListQueue__nextPowerOf2(newElementCount), $.getRuntimeTypeArgument(this, this.$asListQueue, 0));
    $.setRuntimeTypeInfo(newTable, [$.getRuntimeTypeArgument(this, this.$asListQueue, 0)]);
    this._tail = this._writeToList$1(newTable);
    this._table = newTable;
    this._head = 0;
  },
  ListQueue$1: function(initialCapacity, E) {
    var t1;
    if (initialCapacity == null || $.JSNull_methods.$lt(initialCapacity, 8))
      initialCapacity = 8;
    else if (!$.ListQueue__isPowerOf2(initialCapacity))
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    t1 = $.List_List(initialCapacity, E);
    $.setRuntimeTypeInfo(t1, [E]);
    this._table = t1;
  },
  $asIterableBase: null,
  $asIterable: null,
  $isIterable: true
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount,_liblib0$_position,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      $.throwExpression($.ConcurrentModificationError$(t1));
    t2 = this._liblib0$_position;
    if (t2 === this._end) {
      this._liblib0$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib0$_current = t3[t2];
    this._liblib0$_position = (this._liblib0$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  $isIterator: true
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch,isUtc",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDateTime)
      return false;
    else
      other;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) === true && $.$eq(this.isUtc, other.isUtc) === true;
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_twoDigits();
    y = new $.DateTime_toString_fourDigits().call$1(this.get$year());
    m = t1.call$1(this.get$month());
    d = t1.call$1(this.get$day());
    h = t1.call$1(this.get$hour());
    min = t1.call$1(this.get$minute());
    sec = t1.call$1(this.get$second());
    ms = new $.DateTime_toString_threeDigits().call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    return $.DateTime$fromMillisecondsSinceEpoch($.$add$ns(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.wrapException($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.wrapException($.ArgumentError$(isUtc));
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return $.S(n);
    if (t1.$ge(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Duration = {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, this._duration * factor, 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return this._duration <= other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inHours: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 3600000000);
  },
  get$inMinutes: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 60000000);
  },
  get$inSeconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000000);
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  get$inMicroseconds: function() {
    return this._duration;
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return $.JSNumber_methods.get$hashCode(this._duration);
  },
  toString$0: function(_) {
    var t1, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_twoDigits();
    if (this.get$inMicroseconds() < 0)
      return "-" + $.S($.Duration$(0, 0, -this.get$inMicroseconds(), 0, 0, 0));
    twoDigitMinutes = t1.call$1($.JSNumber_methods.remainder$1(this.get$inMinutes(), 60));
    twoDigitSeconds = t1.call$1($.JSNumber_methods.remainder$1(this.get$inSeconds(), 60));
    sixDigitUs = new $.Duration_toString_sixDigits().call$1($.JSNumber_methods.remainder$1(this.get$inMicroseconds(), 1000000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
};

$$.Duration_toString_sixDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return $.S(n);
    if (t1.$ge(n, 10000))
      return "0" + $.S(n);
    if (t1.$ge(n, 1000))
      return "00" + $.S(n);
    if (t1.$ge(n, 100))
      return "000" + $.S(n);
    if (t1.$gt(n, 10))
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Error = {"": "Object;"};

$$.AssertionError = {"": "Object;"};

$$.TypeError = {"": "Object;"};

$$.CastError = {"": "Object;"};

$$.NullThrownError = {"": "Object;",
  toString$0: function(_) {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
};

$$.FallThroughError = {"": "Object;"};

$$.AbstractClassInstantiationError = {"": "Object;_className",
  toString$0: function(_) {
    return "Cannot instantiate abstract class: '" + $.S(this._className) + "'";
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4, str, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    for (; t3 = t1.i_1, t4 = $.getInterceptor$n(t3), t4.$lt(t3, t2.length); t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if (t4.$gt(t3, 0)) {
        t3 = t1.sb_0;
        t3._contents = t3._contents + ", ";
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 >>> 0 !== t4 || t4 >= t2.length)
        throw $.ioore(t4);
      str = $.Error_safeToString(t2[t4]);
      str = typeof str === "string" ? str : $.S(str);
      t3._contents = t3._contents + str;
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (t2 == null)
      return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\nReceiver: " + $.S($.Error_safeToString(this._receiver)) + "\nArguments: [" + $.S(t1.sb_0) + "]";
    else {
      actualParameters = t1.sb_0._contents;
      t1.sb_0 = $.StringBuffer$("");
      for (i = 0; i < t2.length; ++i) {
        if (i > 0) {
          t3 = t1.sb_0;
          t3._contents = t3._contents + ", ";
        }
        t3 = t1.sb_0;
        if (i >= t2.length)
          throw $.ioore(i);
        str = t2[i];
        str = typeof str === "string" ? str : $.S(str);
        t3._contents = t3._contents + str;
      }
      formalParameters = t1.sb_0._contents;
      t1 = this._memberName;
      return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\nReceiver: " + $.S($.Error_safeToString(this._receiver)) + "\nTried calling: " + $.S(t1) + "(" + actualParameters + ")\nFound: " + $.S(t1) + "(" + formalParameters + ")";
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
};

$$.UnimplementedError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function(_) {
    return "RuntimeError: " + this.message;
  }
};

$$.Exception = {"": "Object;", $isException: true};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IntegerDivisionByZeroException = {"": "Object;",
  toString$0: function(_) {
    return "IntegerDivisionByZeroException";
  },
  $isException: true
};

$$.Expando = {"": "Object;name>",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = $.Primitives_getProperty(object, "expando$values");
    return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = $.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = $.Object$();
      $.Primitives_setProperty(object, "expando$values", values);
    }
    $.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = $.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = $.$add$ns(t1, 1);
      key = "expando$key$" + $.S(t1);
      $.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  }
};

$$.Iterable = {"": "Object;", $isIterable: true, $asIterable: null};

$$.Iterator = {"": "Object;", $isIterator: true};

$$.Map = {"": "Object;", $isMap: true, $asMap: null};

$$.Object = {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.Match = {"": "Object;"};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  write$1: function(_, obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    if (typeof separator !== "string")
      return this.writeAll$2$bailout(1, objects, separator);
    iterator = $.get$iterator$ax(objects);
    if (iterator.moveNext$0() !== true)
      return;
    if ($.JSString_methods.get$isEmpty(separator))
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0() === true);
    else {
      str = iterator.get$current();
      str = typeof str === "string" ? str : $.S(str);
      this._contents = this._contents + str;
      for (; iterator.moveNext$0() === true;) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  writeAll$2$bailout: function(state0, objects, separator) {
    var iterator, str, t1;
    iterator = $.get$iterator$ax(objects);
    if (iterator.moveNext$0() !== true)
      return;
    if ($.get$isEmpty$asx(separator) === true)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0() === true);
    else {
      str = iterator.get$current();
      str = typeof str === "string" ? str : $.S(str);
      this._contents = this._contents + str;
      for (t1 = typeof separator === "string"; iterator.moveNext$0() === true;) {
        str = t1 ? separator : $.S(separator);
        this._contents = this._contents + str;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
};

$$._ChildrenElementList = {"": "ListBase;_liblib3$_element<,_childElements",
  contains$1: function(_, element) {
    return $.IterableMixinWorkaround_contains(this._childElements, element);
  },
  get$isEmpty: function(_) {
    return this._liblib3$_element.firstElementChild == null;
  },
  get$length: function(_) {
    return this._childElements.length;
  },
  $index: function(_, index) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    this._liblib3$_element.replaceChild(value, t1[index]);
  },
  set$length: function(_, newLength) {
    throw $.wrapException($.UnsupportedError$("Cannot resize element lists"));
  },
  add$1: function(_, value) {
    this._liblib3$_element.appendChild(value);
    return value;
  },
  get$iterator: function(_) {
    return $.get$iterator$ax(this.toList$0(this));
  },
  addAll$1: function(_, iterable) {
    var t1, t2;
    if (typeof iterable === "object" && iterable !== null && !!$.getInterceptor(iterable).$is_ChildNodeListLazy)
      iterable = $.List_List$from(iterable, true, null);
    for (t1 = $.get$iterator$ax(iterable), t2 = this._liblib3$_element; t1.moveNext$0() === true;)
      t2.appendChild(t1.get$current());
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw $.wrapException($.UnimplementedError$(null));
  },
  remove$1: function(_, object) {
    var t1;
    if (typeof object === "object" && object !== null && !!$.getInterceptor(object).$isElement) {
      t1 = this._liblib3$_element;
      if (object.parentNode === t1) {
        t1.removeChild(object);
        return true;
      }
    }
    return false;
  },
  insert$2: function(_, index, element) {
    var t1, t2;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(this)))
      throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
    t2 = this._liblib3$_element;
    if (t1.$eq(index, this.get$length(this)) === true)
      t2.appendChild(element);
    else {
      t1 = this._childElements;
      if (index >>> 0 !== index || index >= t1.length)
        throw $.ioore(index);
      t2.insertBefore(element, t1[index]);
    }
  },
  clear$0: function(_) {
    this._liblib3$_element.textContent = "";
  },
  removeAt$1: function(_, index) {
    var t1, result;
    t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    result = t1[index];
    this._liblib3$_element.removeChild(result);
    return result;
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      this._liblib3$_element.removeChild(result);
    return result;
  },
  get$last: function(_) {
    var result = this._liblib3$_element.lastElementChild;
    if (result == null)
      throw $.wrapException($.StateError$("No elements"));
    return result;
  },
  $asList: function() { return [$.Element]; },
  $asIterable: function() { return [$.Element]; }
};

$$.ScrollAlignment = {"": "Object;_liblib3$_value",
  toString$0: function(_) {
    return "ScrollAlignment." + this._liblib3$_value;
  }
};

$$.Entry_getParent_anon = {"": "Closure;completer_0",
  call$1: function(value) {
    var t1 = this.completer_0;
    if (t1._isComplete)
      $.throwExpression($.StateError$("Future already completed"));
    t1._isComplete = true;
    t1.future._setValue$1(value);
  }
};

$$.Entry_getParent_anon0 = {"": "Closure;completer_1",
  call$1: function(error) {
    this.completer_1.completeError$1(error);
  }
};

$$.Entry_remove_anon = {"": "Closure;completer_0",
  call$0: function() {
    var t1 = this.completer_0;
    if (t1._isComplete)
      $.throwExpression($.StateError$("Future already completed"));
    t1._isComplete = true;
    t1.future._setValue$1(null);
  }
};

$$.Entry_remove_anon0 = {"": "Closure;completer_1",
  call$1: function(error) {
    this.completer_1.completeError$1(error);
  }
};

$$._ChildNodeListLazy = {"": "ListBase;_this",
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw $.wrapException($.StateError$("No elements"));
    return result;
  },
  add$1: function(_, value) {
    this._this.appendChild(value);
  },
  addAll$1: function(_, iterable) {
    var t1, len, i, t2;
    if (typeof iterable === "object" && iterable !== null && !!$.getInterceptor(iterable).$is_ChildNodeListLazy) {
      t1 = this._this;
      if (iterable._this !== t1) {
        len = iterable.get$length(iterable);
        if (typeof len !== "number")
          return this.addAll$1$bailout1(1, iterable, len, t1);
        i = 0;
        for (; i < len; ++i)
          t1.appendChild(iterable.$index(iterable, 0));
      }
      return;
    }
    for (t1 = $.get$iterator$ax(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.appendChild(t1.get$current());
  },
  addAll$1$bailout1: function(state0, iterable, len, t1) {
    switch (state0) {
      case 0:
      case 1:
        var i, t2;
        if (state0 === 1 || state0 === 0 && typeof iterable === "object" && iterable !== null && !!$.getInterceptor(iterable).$is_ChildNodeListLazy)
          switch (state0) {
            case 0:
              t1 = this._this;
            case 1:
              if (state0 === 1 || state0 === 0 && iterable._this !== t1)
                switch (state0) {
                  case 0:
                    len = iterable.get$length(iterable);
                  case 1:
                    state0 = 0;
                    i = 0;
                    for (; $.JSNumber_methods.$lt(i, len); ++i)
                      t1.appendChild(iterable.$index(iterable, 0));
                }
              return;
          }
        for (t1 = $.get$iterator$ax(iterable), t2 = this._this; t1.moveNext$0() === true;)
          t2.appendChild(t1.get$current());
    }
  },
  insert$2: function(_, index, node) {
    var t1, t2;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(this)))
      throw $.wrapException($.RangeError$range(index, 0, this.get$length(this)));
    t2 = this._this;
    if (t1.$eq(index, this.get$length(this)) === true)
      t2.appendChild(node);
    else {
      t1 = t2.childNodes;
      if (index >>> 0 !== index || index >= t1.length)
        throw $.ioore(index);
      t2.insertBefore(node, t1[index]);
    }
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      this._this.removeChild(result);
    return result;
  },
  removeAt$1: function(_, index) {
    var t1, t2, result;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw $.ioore(index);
    result = t2[index];
    if (result != null)
      t1.removeChild(result);
    return result;
  },
  remove$1: function(_, object) {
    var t1;
    if (typeof object !== "object" || object === null || !$.getInterceptor(object).$isNode)
      return false;
    t1 = this._this;
    if (t1 !== object.parentNode)
      return false;
    t1.removeChild(object);
    return true;
  },
  clear$0: function(_) {
    this._this.textContent = "";
  },
  $indexSet: function(_, index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw $.ioore(index);
    t1.replaceChild(value, t2[index]);
  },
  get$iterator: function(_) {
    return $.NodeList_methods.get$iterator(this._this.childNodes);
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw $.wrapException($.UnsupportedError$("Cannot setRange on Node list"));
  },
  get$length: function(_) {
    return this._this.childNodes.length;
  },
  set$length: function(_, value) {
    throw $.wrapException($.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(_, index) {
    var t1 = this._this.childNodes;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $is_ChildNodeListLazy: true,
  $asList: function() { return [$.Node]; },
  $asIterable: function() { return [$.Node]; }
};

$$.SelectElement_options_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isOptionElement;
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return this.keys_0.push(k);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return this.values_0.push(v);
  }
};

$$._AttributeMap = {"": "Object;_liblib3$_element<",
  forEach$1: function(_, f) {
    var t1, key;
    for (t1 = $.JSArray_methods.get$iterator(this.get$keys(this)); t1.moveNext$0();) {
      key = t1.get$current();
      f.call$2(key, this.$index(this, key));
    }
  },
  get$keys: function(_) {
    var attributes, keys, len, i, t1;
    attributes = this._liblib3$_element.attributes;
    keys = $.List_List($, $.JSString);
    $.setRuntimeTypeInfo(keys, [$.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      t1 = attributes[i];
      if (this._matches$1(t1))
        keys.push(t1.localName);
    }
    return keys;
  },
  get$values: function(_) {
    var attributes, values, len, i, t1;
    attributes = this._liblib3$_element.attributes;
    values = $.List_List($, $.JSString);
    $.setRuntimeTypeInfo(values, [$.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      t1 = attributes[i];
      if (this._matches$1(t1))
        values.push($.get$value$x(t1));
    }
    return values;
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  $isMap: true,
  $asMap: function() { return [$.JSString, $.JSString]; }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_liblib3$_element",
  containsKey$1: function(_, key) {
    return this._liblib3$_element.hasAttribute(key);
  },
  $index: function(_, key) {
    return this._liblib3$_element.getAttribute(key);
  },
  $indexSet: function(_, key, value) {
    this._liblib3$_element.setAttribute(key, value);
  },
  remove$1: function(_, key) {
    var t1, value;
    t1 = this._liblib3$_element;
    value = t1.getAttribute(key);
    t1.removeAttribute(key);
    return value;
  },
  get$length: function(_) {
    return this.get$keys(this).length;
  },
  _matches$1: function(node) {
    return node.namespaceURI == null;
  }
};

$$._DataAttributeMap = {"": "Object;$$dom_attributes",
  containsKey$1: function(_, key) {
    return this.$$dom_attributes._liblib3$_element.hasAttribute("data-" + $.S(key));
  },
  $index: function(_, key) {
    return this.$$dom_attributes._liblib3$_element.getAttribute("data-" + $.S(key));
  },
  $indexSet: function(_, key, value) {
    var t1 = this.$$dom_attributes;
    t1.$indexSet(t1, "data-" + $.S(key), value);
  },
  remove$1: function(_, key) {
    var t1, t2, value;
    t1 = "data-" + $.S(key);
    t2 = this.$$dom_attributes._liblib3$_element;
    value = t2.getAttribute(t1);
    t2.removeAttribute(t1);
    return value;
  },
  forEach$1: function(_, f) {
    var t1 = this.$$dom_attributes;
    t1.forEach$1(t1, new $._DataAttributeMap_forEach_anon(this, f));
  },
  get$keys: function(_) {
    var keys, t1;
    keys = $.List_List($, $.JSString);
    $.setRuntimeTypeInfo(keys, [$.JSString]);
    t1 = this.$$dom_attributes;
    t1.forEach$1(t1, new $._DataAttributeMap_keys_anon(this, keys));
    return keys;
  },
  get$values: function(_) {
    var values, t1;
    values = $.List_List($, $.JSString);
    $.setRuntimeTypeInfo(values, [$.JSString]);
    t1 = this.$$dom_attributes;
    t1.forEach$1(t1, new $._DataAttributeMap_values_anon(this, values));
    return values;
  },
  get$length: function(_) {
    return this.get$keys(this).length;
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  _attr$1: function(key) {
    return "data-" + key;
  },
  $isMap: true,
  $asMap: function() { return [$.JSString, $.JSString]; }
};

$$._DataAttributeMap_forEach_anon = {"": "Closure;this_0,f_1",
  call$2: function(key, value) {
    var t1;
    this.this_0;
    t1 = $.getInterceptor$s(key);
    if (t1.startsWith$1(key, "data-"))
      this.f_1.call$2(t1.substring$1(key, 5), value);
  }
};

$$._DataAttributeMap_keys_anon = {"": "Closure;this_0,keys_1",
  call$2: function(key, value) {
    var t1;
    this.this_0;
    t1 = $.getInterceptor$s(key);
    if (t1.startsWith$1(key, "data-"))
      this.keys_1.push(t1.substring$1(key, 5));
  }
};

$$._DataAttributeMap_values_anon = {"": "Closure;this_0,values_1",
  call$2: function(key, value) {
    this.this_0;
    if ($.startsWith$1$s(key, "data-"))
      this.values_1.push(value);
  }
};

$$._EventStream = {"": "Stream;_target<,_eventType<,_useCapture<",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target<,_eventType<,_onData,_useCapture<",
  cancel$0: function(_) {
    var t1;
    if (this.get$_canceled() === true)
      return;
    t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && !this.get$_paused())
      $.$$dom_addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType<",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  }
};

$$.Point = {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isPoint)
      return false;
    else
      other;
    return $.$eq(this.x, other.x) === true && $.$eq(this.y, other.y) === true;
  },
  $add: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$($.$add$ns(this.x, t1.get$x(other)), $.$add$ns(this.y, t1.get$y(other)));
  },
  $sub: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$($.$sub$n(this.x, t1.get$x(other)), $.$sub$n(this.y, t1.get$y(other)));
  },
  $mul: function(_, factor) {
    return $.Point$($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  toInt$0: function(_) {
    return $.Point$($.toInt$0$nx(this.x), $.toInt$0$nx(this.y));
  },
  $isPoint: true
};

$$.Rect = {"": "Object;left>,top>,width>,height>",
  get$right: function(_) {
    return $.$add$ns(this.left, this.width);
  },
  get$bottom: function(_) {
    return $.$add$ns(this.top, this.height);
  },
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = $.getInterceptor$x(other);
    return $.$eq(this.left, t1.get$left(other)) === true && $.$eq(this.top, t1.get$top(other)) === true && $.$eq(this.width, t1.get$width(other)) === true && $.$eq(this.height, t1.get$height(other)) === true;
  },
  toInt$0: function(_) {
    return $.Rect$($.toInt$0$nx(this.left), $.toInt$0$nx(this.top), $.toInt$0$nx(this.width), $.toInt$0$nx(this.height));
  },
  get$topLeft: function(_) {
    return $.Point$(this.left, this.top);
  },
  $isRect: true,
  $asRect: null
};

$$._WrappedList = {"": "ListBase;_list",
  get$iterator: function(_) {
    return $._WrappedIterator$($.get$iterator$ax(this._list), null);
  },
  get$length: function(_) {
    return this._list.length;
  },
  add$1: function(_, element) {
    $.throwExpression($.UnsupportedError$("Cannot add to immutable List."));
  },
  remove$1: function(_, element) {
    $.throwExpression($.UnsupportedError$("Cannot remove from immutable List."));
  },
  $index: function(_, index) {
    var t1 = this._list;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this._list;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  set$length: function(_, newLength) {
    $.set$length$asx(this._list, newLength);
  },
  indexOf$2: function(_, element, start) {
    var t1 = this._list;
    return $.Lists_indexOf(t1, element, start, t1.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(_, index, element) {
    $.throwExpression($.UnsupportedError$("Cannot add to immutable List."));
    return;
  },
  removeAt$1: function(_, index) {
    $.throwExpression($.UnsupportedError$("Cannot remove from immutable List."));
    return;
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    $.throwExpression($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $asListBase: null,
  $asList: null,
  $asIterable: null
};

$$._WrappedIterator = {"": "Object;_liblib3$_iterator",
  moveNext$0: function() {
    return this._liblib3$_iterator.moveNext$0();
  },
  get$current: function() {
    return this._liblib3$_iterator.get$current();
  },
  $isIterator: true
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$parent: function(_) {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  get$top: function(_) {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  }
};

$$._LocationCrossFrame = {"": "Object;_location"};

$$._LocationWrapper = {"": "Object;_ptr",
  get$hash: function(_) {
    return $._LocationWrapper__get(this._ptr, "hash");
  },
  set$hash: function(_, value) {
    $._LocationWrapper__set(this._ptr, "hash", value);
  },
  toString$0: function(_) {
    return this._ptr.toString();
  },
  $isLocation: true,
  $asLocation: null
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var nextPosition, t1;
    nextPosition = this._position + 1;
    t1 = this._length;
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (nextPosition < t1) {
      t1 = this._array;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  get$current: function() {
    return this._current;
  },
  $isIterator: true
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": "Closure;values_1,copies_2",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_1;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_2.push(null);
    return $length;
  }
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": "Closure;copies_3",
  call$1: function(i) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": "Closure;copies_4",
  call$2: function(i, x) {
    var t1 = this.copies_4;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": "Closure;",
  call$0: function() {
  }
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": "Closure;findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var t1, slot, t2, $length, copy, t3, i, element, elementCopy, copy0, j, t4;
    t1 = {};
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isDateTime)
      throw $.wrapException($.UnimplementedError$("structured clone of DateTime"));
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isRegExp)
      throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFile)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBlob)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFileList)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isImageData)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isByteBuffer)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isTypedData)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isMap) {
      slot = this.findSlot_5.call$1(e);
      t1.copy_0 = this.readSlot_6.call$1(slot);
      t2 = t1.copy_0;
      if (t2 != null)
        return t2;
      t1.copy_0 = {};
      this.writeSlot_7.call$2(slot, t1.copy_0);
      $.forEach$1$ax(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
      return t1.copy_0;
    }
    if (typeof e === "object" && e !== null && (e.constructor === Array || !!$.getInterceptor(e).$isList)) {
      if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !$.getInterceptor(e).$isJavaScriptIndexingBehavior)
        return this.call$1$bailout(1, e);
      $length = e.length;
      slot = this.findSlot_5.call$1(e);
      t1 = this.readSlot_6;
      copy = t1.call$1(slot);
      if (copy != null) {
        if (true === copy) {
          copy = new Array($length);
          this.writeSlot_7.call$2(slot, copy);
        }
        return copy;
      }
      t2 = e instanceof Array && !!!e.immutable$list;
      t3 = this.writeSlot_7;
      if (t2) {
        t3.call$2(slot, true);
        for (i = 0; i < $length; ++i) {
          if (i >= e.length)
            throw $.ioore(i);
          element = e[i];
          elementCopy = this.call$1(element);
          if (elementCopy == null ? element != null : elementCopy !== element) {
            copy0 = t1.call$1(slot);
            if (true === copy0) {
              copy0 = new Array($length);
              t3.call$2(slot, copy0);
            }
            if (typeof copy0 !== "object" || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !$.getInterceptor(copy0).$isJavaScriptIndexingBehavior)
              return this.call$1$bailout(2, e, t3, elementCopy, $.JSArray_methods, copy0, $length, slot, t1, copy, i);
            for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
              if (j >= t1)
                throw $.ioore(j);
              t4 = e[j];
              if (j >= t2)
                throw $.ioore(j);
              copy0[j] = t4;
            }
            if (i >= t2)
              throw $.ioore(i);
            copy0[i] = elementCopy;
            ++i;
            copy = copy0;
            break;
          }
        }
        if (copy == null) {
          t3.call$2(slot, e);
          copy = e;
        }
      } else {
        copy = new Array($length);
        t3.call$2(slot, copy);
        i = 0;
      }
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !$.getInterceptor(copy).$isJavaScriptIndexingBehavior)
        return this.call$1$bailout(3, e, 0, 0, $.JSArray_methods, 0, $length, 0, 0, copy, i);
      for (; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    throw $.wrapException($.UnimplementedError$("structured clone of other type"));
  },
  call$1$bailout: function(state0, e, t4, elementCopy, t1, copy0, $length, slot, t2, copy, i) {
    switch (state0) {
      case 0:
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isDateTime)
          throw $.wrapException($.UnimplementedError$("structured clone of DateTime"));
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isRegExp)
          throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFile)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBlob)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFileList)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isImageData)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isByteBuffer)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isTypedData)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isMap) {
          slot = this.findSlot_5.call$1(e);
          t1.copy_0 = this.readSlot_6.call$1(slot);
          t2 = t1.copy_0;
          if (t2 != null)
            return t2;
          t1.copy_0 = {};
          this.writeSlot_7.call$2(slot, t1.copy_0);
          $.forEach$1$ax(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
          return t1.copy_0;
        }
      default:
        var t3, element, j;
        if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === "object" && e !== null && (e.constructor === Array || !!$.getInterceptor(e).$isList))
          switch (state0) {
            case 0:
            case 1:
              state0 = 0;
              t1 = $.getInterceptor$asx(e);
              $length = t1.get$length(e);
              slot = this.findSlot_5.call$1(e);
              t2 = this.readSlot_6;
              copy = t2.call$1(slot);
              if (copy != null) {
                if (true === copy) {
                  copy = new Array($length);
                  this.writeSlot_7.call$2(slot, copy);
                }
                return copy;
              }
              t3 = e instanceof Array && !!!e.immutable$list;
              t4 = this.writeSlot_7;
            case 2:
              if (state0 === 2 || state0 === 0 && t3)
                switch (state0) {
                  case 0:
                    t4.call$2(slot, true);
                    i = 0;
                  case 2:
                    L0:
                      while (true)
                        switch (state0) {
                          case 0:
                            if (!$.JSNumber_methods.$lt(i, $length))
                              break L0;
                            element = t1.$index(e, i);
                            elementCopy = this.call$1(element);
                          case 2:
                            if (state0 === 2 || state0 === 0 && (elementCopy == null ? element != null : elementCopy !== element))
                              switch (state0) {
                                case 0:
                                  copy0 = t2.call$1(slot);
                                  if (true === copy0) {
                                    copy0 = new Array($length);
                                    t4.call$2(slot, copy0);
                                  }
                                case 2:
                                  state0 = 0;
                                  for (t2 = $.getInterceptor$ax(copy0), j = 0; j < i; ++j)
                                    t2.$indexSet(copy0, j, t1.$index(e, j));
                                  t2.$indexSet(copy0, i, elementCopy);
                                  ++i;
                                  copy = copy0;
                                  break L0;
                              }
                            ++i;
                        }
                    if (copy == null) {
                      t4.call$2(slot, e);
                      copy = e;
                    }
                }
              else {
                copy = new Array($length);
                t4.call$2(slot, copy);
                i = 0;
              }
            case 3:
              state0 = 0;
              for (t2 = $.getInterceptor$ax(copy); $.JSNumber_methods.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        throw $.wrapException($.UnimplementedError$("structured clone of other type"));
    }
  }
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": "Closure;box_0,walk_8",
  call$2: function(key, value) {
    this.box_0.copy_0[key] = this.walk_8.call$1(value);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, key, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !$.getInterceptor(e).$isJavaScriptIndexingBehavior)
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.wrapException($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        key = t1.get$current();
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !$.getInterceptor(copy).$isJavaScriptIndexingBehavior)
        return this.call$1$bailout(2, e, $length, copy, $.JSArray_methods, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, $length, copy, t1, slot) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.wrapException($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
            key = t1.get$current();
            copy.$indexSet(copy, key, this.call$1(e[key]));
          }
          return copy;
        }
      case 2:
        var key, t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              $length = t1.get$length(e);
              copy = this.mustCopy_4 ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$ax(copy), i = 0; $.JSNumber_methods.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
};

$$.FilteredElementList = {"": "ListBase;_node,_childNodes",
  get$_filtered: function() {
    var t1 = this._childNodes;
    return $.List_List$from(t1.where$1(t1, new $.FilteredElementList__filtered_anon()), true, $.Element);
  },
  forEach$1: function(_, f) {
    $.JSArray_methods.forEach$1(this.get$_filtered(), f);
  },
  $indexSet: function(_, index, value) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    $.replaceWith$1$x(t1[index], value);
  },
  set$length: function(_, newLength) {
    var len;
    if (typeof newLength !== "number")
      return this.set$length$bailout(1, newLength);
    len = this.get$length(this);
    if (newLength >= len)
      return;
    else if (newLength < 0)
      throw $.wrapException($.ArgumentError$("Invalid list length"));
    this.removeRange$2(this, newLength, len);
  },
  set$length$bailout: function(state0, newLength) {
    var len, t1;
    len = this.get$length(this);
    t1 = $.getInterceptor$n(newLength);
    if (t1.$ge(newLength, len))
      return;
    else if (t1.$lt(newLength, 0))
      throw $.wrapException($.ArgumentError$("Invalid list length"));
    this.removeRange$2(this, newLength, len);
  },
  add$1: function(_, value) {
    this._childNodes._this.appendChild(value);
  },
  addAll$1: function(_, iterable) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(iterable), t2 = this._childNodes._this; t1.moveNext$0() === true;)
      t2.appendChild(t1.get$current());
  },
  contains$1: function(_, element) {
    return element != null && $.$eq($.get$parentNode$x(element), this._node);
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw $.wrapException($.UnsupportedError$("Cannot setRange on filtered list"));
  },
  removeRange$2: function(_, start, end) {
    $.JSArray_methods.forEach$1($.JSArray_methods.sublist$2(this.get$_filtered(), start, end), new $.FilteredElementList_removeRange_anon());
  },
  clear$0: function(_) {
    this._childNodes._this.textContent = "";
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.remove$0$ax(result);
    return result;
  },
  insert$2: function(_, index, value) {
    var t1 = this._childNodes;
    t1.insert$2(t1, index, value);
  },
  removeAt$1: function(_, index) {
    var t1, result;
    t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    result = t1[index];
    $.remove$0$ax(result);
    return result;
  },
  remove$1: function(_, element) {
    var i, t1, indexElement;
    if (typeof element !== "object" || element === null || !$.getInterceptor(element).$isElement)
      return false;
    else
      element;
    for (i = 0; i < this.get$length(this); ++i) {
      t1 = this.get$_filtered();
      if (i >= t1.length)
        throw $.ioore(i);
      indexElement = t1[i];
      if (indexElement === element) {
        $.remove$0$ax(indexElement);
        return true;
      }
    }
    return false;
  },
  get$length: function(_) {
    return this.get$_filtered().length;
  },
  $index: function(_, index) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  get$iterator: function(_) {
    return $.JSArray_methods.get$iterator(this.get$_filtered());
  },
  $asListBase: null,
  $asList: null,
  $asIterable: null
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && !!$.getInterceptor(n).$isElement;
  }
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return $.remove$0$ax(el);
  }
};

$$.SupportedBrowser = {"": "Object;browserName,minimumVersion"};

$$.DomName = {"": "Object;name>"};

$$._completeRequest_anon = {"": "Closure;request_0,completer_1",
  call$1: function(e) {
    var t1, t2;
    t1 = this.completer_1;
    t2 = $.get$result$x(this.request_0);
    if (t1._isComplete)
      $.throwExpression($.StateError$("Future already completed"));
    t1._isComplete = true;
    t1.future._setValue$1(t2);
  }
};

$$._completeRequest_anon0 = {"": "Closure;completer_2",
  call$1: function(e) {
    this.completer_2.completeError$1(e);
  }
};

$$.ReceivePort = {"": "Object;"};

$$.Endianness = {"": "Object;_littleEndian"};

$$.AppPresenter = {"": "Object;display",
  addViewTo$1: function(container) {
    container.clear$0(container);
    container.add$1(container, this.display.asWidget$0());
  }
};

$$.AppView = {"": "Composite;centerPanel<,_pages,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  set$pages: function(values) {
    var t1 = this.centerPanel;
    t1.clear$0(t1);
    $.forEach$1$ax(values, new $.AppView_pages_anon(this));
  },
  asWidget$0: function() {
    return this;
  },
  AppView$0: function() {
    var mainPanel, topPanel, headerContent, statusPanel, copyright;
    mainPanel = $.DockLayoutPanel$($.Unit_px);
    this.initWidget$1(mainPanel);
    topPanel = $.DockLayoutPanel$($.Unit_px);
    topPanel.addStyleName$1("topPanel");
    topPanel.setSize$2("100%", "100%");
    topPanel.addEast$2($.StyleChooserComponent$("Style:", "clean"), 120);
    mainPanel.addNorth$2(topPanel, 25);
    headerContent = $.Label$("Dart Web Toolkit Showcase (ver " + $.DWT_majorVersion() + "." + $.DWT_minorVersion() + ")", null);
    headerContent.addStyleName$1("header-content");
    topPanel.add$1(topPanel, headerContent);
    statusPanel = $.DockLayoutPanel$($.Unit_px);
    statusPanel.addStyleName$1("statusPanel");
    statusPanel.setSize$2("100%", "100%");
    mainPanel.addSouth$2(statusPanel, 20);
    copyright = $.Label$("Copyright 2012-2013 Sergey Akopkokhyants", null);
    copyright.addStyleName$1("copyright");
    statusPanel.add$1(statusPanel, copyright);
    this.centerPanel = $.TabLayoutPanel$(25, $.Unit_px);
    this.centerPanel.setAnimationDuration$1(1000);
    this.centerPanel.addStyleName$1("centerPanel");
    this.centerPanel.setSize$2("100%", "100%");
    mainPanel.add$1(mainPanel, this.centerPanel);
  }
};

$$.AppView_pages_anon = {"": "Closure;this_0",
  call$1: function(presenter) {
    presenter.addViewTo$1(this.this_0.get$centerPanel());
  }
};

$$.StyleChooserComponent = {"": "Composite;styles,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  StyleChooserComponent$2: function(label, defaultStyle) {
    var widget, headerText, styleChooser, t1, selected, i, style;
    widget = $.HorizontalPanel$();
    this.initWidget$1(widget);
    widget.setVerticalAlignment$1($.VerticalAlignmentConstant_middle);
    headerText = $.Label$(label, null);
    headerText.addStyleName$1("style-chooser");
    widget.add$1(widget, headerText);
    styleChooser = $.ListBox$(false, null);
    for (t1 = this.styles, selected = 0, i = 0; i < t1.length; ++i) {
      style = t1[i];
      styleChooser.addItem$2(style, $.JSString_methods.$add($.DWT_getModuleBaseURL(), "resource/" + $.S(style) + "/" + $.S(style) + ".css"));
      if (defaultStyle === style)
        selected = i;
    }
    styleChooser.addChangeHandler$1($.ChangeHandlerAdapter$(new $.anon79(styleChooser)));
    widget.add$1(widget, styleChooser);
    styleChooser.setSelectedIndex$1(selected);
  }
};

$$.anon79 = {"": "Closure;styleChooser_0",
  call$1: function(evt) {
    var t1, index, t2, t3, value, link;
    t1 = this.styleChooser_0;
    index = $.interceptedTypeCast(t1._element, "$isSelectElement").selectedIndex;
    t2 = $.getInterceptor$n(index);
    if (!t2.$lt(index, 0)) {
      t3 = $.get$options$x($.interceptedTypeCast(t1.getElement$0(), "$isSelectElement"));
      t3 = t2.$ge(index, t3.get$length(t3));
    } else
      t3 = true;
    if (t3)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t3 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement"));
    t1.getOptionText$1(t3.$index(t3, index));
    if (!t2.$lt(index, 0)) {
      t3 = $.get$options$x($.interceptedTypeCast(t1.getElement$0(), "$isSelectElement"));
      t3 = t2.$ge(index, t3.get$length(t3));
      t2 = t3;
    } else
      t2 = true;
    if (t2)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement"));
    value = $.interceptedTypeCast(t1.$index(t1, index), "$isOptionElement").value;
    link = document.querySelector("#dwt-stylesheet");
    if (link != null)
      $.set$href$x(link, value);
  }
};

$$.ComponentPresenter = {"": "Object;display,models",
  addViewTo$1: function(container) {
    var t1, convertedModels;
    $.propertyTypeCast(container, "$isTabLayoutPanel").addTabText$2(this.display.asWidget$0(), $.get$title$x(this.display));
    t1 = this.display;
    t1.get$componentTree().addSelectionHandler$1(t1.get$componentPreview());
    convertedModels = this._convertFlatToTreeModel$0();
    $.setData$1$x(this.display.get$componentTree(), convertedModels);
  },
  _convertFlatToTreeModel$0: function() {
    var treeModels, t1, model, t2, t3;
    treeModels = $.HashMap$($.JSString, [$.JSArray, $.ViewModel]);
    for (t1 = $.get$iterator$ax(this.models); t1.moveNext$0();) {
      model = t1.get$current();
      if ($.get$available$x(model) === true) {
        if (treeModels.containsKey$1(treeModels, model.get$category()) !== true) {
          t2 = model.get$category();
          t3 = $.List_List($, $.ViewModel);
          $.setRuntimeTypeInfo(t3, [$.ViewModel]);
          treeModels.$indexSet(treeModels, t2, t3);
        }
        $.add$1$ax(treeModels.$index(treeModels, model.get$category()), model);
      }
    }
    return treeModels;
  }
};

$$.ComponentPreview = {"": "Object;_liblib6$_panel,_overviewPanel,_sourcePanel,_emptyPanel,_overviewContentPanel,_nameLabel,_descriptionLabel,_previewPanel,_codePanel,_stylePanel",
  asWidget$0: function() {
    return this._liblib6$_panel;
  },
  onSelection$1: function(evt) {
    var t1, item, model, t2;
    t1 = this._overviewPanel;
    t1.clear$0(t1);
    t1 = this._nameLabel;
    t1.set$text(t1, "");
    t1 = this._descriptionLabel;
    t1.set$text(t1, "");
    t1 = this._previewPanel;
    t1.clear$0(t1);
    t1 = this._codePanel;
    t1.clear$0(t1);
    t1 = this._stylePanel;
    t1.clear$0(t1);
    item = evt._selectedItem;
    if (item.getUserObject$0() != null) {
      t1 = item.getUserObject$0();
      t1 = typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isViewModel;
    } else
      t1 = false;
    if (t1) {
      model = $.propertyTypeCast(item.getUserObject$0(), "$isViewModel");
      t1 = this._nameLabel;
      t1.set$text(t1, model.get$category() + " : " + model.get$name(model));
      t1 = this._descriptionLabel;
      t1.set$text(t1, model.get$desc());
      t1 = this._previewPanel;
      t2 = model.asWidget$0();
      if (t1.getWidget$0() != null)
        $.throwExpression($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
      t1.setWidget$1(t2);
      t1 = this._codePanel;
      t2 = this._prepareToView$1(model.get$code(model));
      if (t1.getWidget$0() != null)
        $.throwExpression($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
      t1.setWidget$1(t2);
      t1 = this._stylePanel;
      t2 = this._prepareToView$1(model.get$style(model));
      if (t1.getWidget$0() != null)
        $.throwExpression($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
      t1.setWidget$1(t2);
      this._overviewPanel._insert$4(this._overviewContentPanel, $.DockLayoutConstant_0, 0, null);
    } else {
      this._liblib6$_panel.selectTab$1(0);
      this._overviewPanel._insert$4(this._emptyPanel, $.DockLayoutConstant_0, 0, null);
    }
  },
  _prepareToView$1: function(code) {
    var sb, str, html, scrollPanel;
    sb = $.StringBuffer$("");
    sb._contents = sb._contents + "<pre>";
    str = $.SafeHtmlString$($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2(code, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), "\"", "&quot;"), "'", "&apos;"))._html;
    str = typeof str === "string" ? str : $.S(str);
    sb._contents = sb._contents + str;
    sb._contents = sb._contents + "</pre>";
    html = $.Html$(sb._contents, null);
    html.setWidth$1("100%");
    html.setHeight$1("100%");
    scrollPanel = $.ScrollPanel$(html);
    $.UiObject.prototype.setSize$2.call(scrollPanel, "100%", "100%");
    return scrollPanel;
  },
  ComponentPreview$0: function() {
    var t1, infoPanel, sourceAndStyleContentPanel, styles, styleLabel, codes, sourceCodeLabel;
    this._liblib6$_panel = $.TabLayoutPanel$(25, $.Unit_px);
    this._liblib6$_panel.setSize$2("100%", "100%");
    this._overviewPanel = $.DockLayoutPanel$($.Unit_px);
    this._liblib6$_panel.addTabText$3(this._overviewPanel, "Overview", false);
    this._emptyPanel = $.FlexTable$();
    this._emptyPanel.setSize$2("100%", "100%");
    this._emptyPanel.setWidget$3(0, 0, $.Label$("Select component from tree", null));
    this._emptyPanel.getFlexCellFormatter$0().setVerticalAlignment$3(0, 0, $.VerticalAlignmentConstant_middle);
    this._emptyPanel.getFlexCellFormatter$0().setHorizontalAlignment$3(0, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    t1 = this._overviewPanel;
    t1.add$1(t1, this._emptyPanel);
    this._overviewContentPanel = $.SplitLayoutPanel$(8);
    infoPanel = $.SplitLayoutPanel$(8);
    t1 = this._overviewContentPanel;
    t1.add$1(t1, infoPanel);
    this._nameLabel = $.Label$(null, null);
    this._nameLabel.addStyleName$1("titlePreviewPanel");
    infoPanel.addNorth$2(this._nameLabel, 25);
    this._descriptionLabel = $.Label$(null, null);
    this._descriptionLabel.addStyleName$1("descPreviewPanel");
    infoPanel.addNorth$2($.ScrollPanel$(this._descriptionLabel), 75);
    this._previewPanel = $.SimplePanel$(null);
    this._previewPanel.addStyleName$1("previewPreviewPanel");
    infoPanel.add$1(infoPanel, this._previewPanel);
    sourceAndStyleContentPanel = $.SplitLayoutPanel$(8);
    this._liblib6$_panel.addTabText$3(sourceAndStyleContentPanel, "Source and Style", false);
    styles = $.DockLayoutPanel$($.Unit_px);
    sourceAndStyleContentPanel.addSouth$2(styles, 200);
    styleLabel = $.Label$("Style:", null);
    styleLabel.addStyleName$1("sourceCodeLabel");
    styles.addNorth$2(styleLabel, 24);
    this._stylePanel = $.SimplePanel$(null);
    styles.add$1(styles, this._stylePanel);
    codes = $.DockLayoutPanel$($.Unit_px);
    sourceAndStyleContentPanel.add$1(sourceAndStyleContentPanel, codes);
    sourceCodeLabel = $.Label$("Source Code:", null);
    sourceCodeLabel.addStyleName$1("sourceCodeLabel");
    codes.addNorth$2(sourceCodeLabel, 24);
    this._codePanel = $.SimplePanel$(null);
    codes.add$1(codes, this._codePanel);
  }
};

$$.ComponentTreeView = {"": "Object;_tree<",
  asWidget$0: function() {
    return this._tree;
  },
  setData$1: function(_, models) {
    this._tree.removeItems$0();
    models.forEach$1(models, new $.ComponentTreeView_setData_anon(this));
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2, t3;
    t1 = this._tree;
    t2 = $.get$SelectionEvent_TYPE();
    t3 = t1._eventBus;
    if (t3 == null) {
      t3 = $.SimpleEventBus$(null);
      t1._eventBus = t3;
      t1 = t3;
    } else
      t1 = t3;
    t1._doAdd$3(t2, $.get$SimpleEventBus__emptySource(), handler);
  },
  ComponentTreeView$0: function() {
    this._tree = $.Tree$(null, false);
    this._tree.setAnimationEnabled$1(true);
  }
};

$$.ComponentTreeView_setData_anon = {"": "Closure;this_0",
  call$2: function(category, components) {
    var t1, ret;
    t1 = this.this_0.get$_tree()._root;
    ret = $.TreeItem$(null, false, $);
    ret.set$text(ret, category);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    t1.insertItem$2(t1.getChildCount$0(), ret);
    $.forEach$1$ax(components, new $.ComponentTreeView_setData__anon(ret));
  }
};

$$.ComponentTreeView_setData__anon = {"": "Closure;topItem_1",
  call$1: function(component) {
    var t1, t2, ret;
    t1 = this.topItem_1;
    t2 = $.get$name$x(component);
    ret = $.TreeItem$(null, false, $);
    ret.set$text(ret, t2);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    t1.insertItem$2(t1.getChildCount$0(), ret);
    ret._userObject = component;
  }
};

$$.ComponentView = {"": "Object;componentTree<,componentPreview<",
  get$title: function(_) {
    return "Components";
  },
  asWidget$0: function() {
    var splitPanel, staticTreeWrapper;
    splitPanel = $.SplitLayoutPanel$(8);
    staticTreeWrapper = $.ScrollPanel$(this.componentTree.asWidget$0());
    $.UiObject.prototype.setSize$2.call(staticTreeWrapper, "100%", "100%");
    splitPanel._insert$4(staticTreeWrapper, $.DockLayoutConstant_6, 200, null);
    splitPanel._insert$4(this.componentPreview.asWidget$0(), $.DockLayoutConstant_0, 0, null);
    return splitPanel;
  }
};

$$.DockLayoutPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Layout";
  },
  get$name: function(_) {
    return "DockLayoutPanel";
  },
  get$desc: function() {
    return "A panel that lays its child widgets out \"docked\" at its outer edges, and allows \nits last widget to take up the remaining space in its center.\n\nThis widget will only work in standards mode, which requires that the HTML page \nin which it is run have an explicit <!DOCTYPE> declaration.\n";
  },
  get$code: function(_) {
    return "ui.DockLayoutPanel panel = new ui.DockLayoutPanel(util.Unit.PX);\npanel.addStyleName(\"demo-panel\");\n\npanel.addNorth(new ui.Html(\"<div style='background-color: #FF0000; width:100%; height:100%;'>north</div>\"), 50.0);\npanel.addSouth(new ui.Html(\"<div style='background-color: #00FF00; width:100%; height:100%;'>south</div>\"), 100.0);\npanel.addEast(new ui.Html(\"<div style='background-color: #0000FF; width:100%; height:100%;'>east</div>\"), 150.0);\npanel.addWest(new ui.Html(\"<div style='background-color: #FFFF00; width:100%; height:100%;'>west</div>\"), 200.0);\npanel.add(new ui.Html(\"<div style='background-color: #00FFFF;'>center</div>\"));\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.DockLayoutPanel$($.Unit_px);
    $.UiObject_manageElementStyleName(panel.getStyleElement$0(), "demo-panel", true);
    panel.setWidth$1("100%");
    panel.setHeight$1("100%");
    panel._insert$4($.Html$("<div style='background-color: #FF0000; width:100%; height:100%;'>north</div>", null), $.DockLayoutConstant_4, 50, null);
    panel._insert$4($.Html$("<div style='background-color: #00FF00; width:100%; height:100%;'>south</div>", null), $.DockLayoutConstant_5, 50, null);
    panel._insert$4($.Html$("<div style='background-color: #0000FF; width:100%; height:100%;'>east</div>", null), $.DockLayoutConstant_3, 50, null);
    panel._insert$4($.Html$("<div style='background-color: #FFFF00; width:100%; height:100%;'>west</div>", null), $.DockLayoutConstant_6, 50, null);
    panel._insert$4($.Html$("<div style='background-color: #00FFFF; width:100%; height:100%;'>center</div>", null), $.DockLayoutConstant_0, 0, null);
    return panel;
  }
};

$$.LayoutPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Layout";
  },
  get$name: function(_) {
    return "LayoutPanel";
  },
  get$desc: function() {
    return "A panel that lays its children out in arbitrary layers using the Layout class.\n\nThis widget will only work in standards mode, which requires that the HTML page \nin which it is run have an explicit <!DOCTYPE> declaration.\n";
  },
  get$code: function(_) {
    return "// Attach two child widgets to a LayoutPanel, laying them out horizontally,\n// splitting at 50%.\nui.Widget childOne = new ui.Html(\"<div style='background-color: #FF0000; width:100%; height:100%;'>left</div>\"); \nui.Widget childTwo = new ui.Html(\"<div style='background-color: #00FF00; width:100%; height:100%;'>right</div>\");\n\nui.LayoutPanel panel = new ui.LayoutPanel();\npanel.setSize(\"100%\", \"100%\");\npanel.add(childOne);\npanel.add(childTwo);\n\npanel.setWidgetLeftWidth(childOne, 0.0, util.Unit.PCT, 50.0, util.Unit.PCT);\npanel.setWidgetRightWidth(childTwo, 0.0, util.Unit.PCT, 50.0, util.Unit.PCT);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var childOne, childTwo, panel;
    childOne = $.Html$("<div style='background-color: #FF0000; width:100%; height:100%;'>left</div>", null);
    childTwo = $.Html$("<div style='background-color: #00FF00; width:100%; height:100%;'>right</div>", null);
    panel = $.LayoutPanel$();
    panel.setWidth$1("100%");
    panel.setHeight$1("100%");
    panel.insertAt$2(childOne, panel._children._size);
    panel.insertAt$2(childTwo, panel._children._size);
    $.propertyTypeCast(childOne.getLayoutData$0(), "$isLayer").setLeftWidth$4(0, $.Unit_aNe, 50, $.Unit_aNe);
    panel._layoutCmd.schedule$2(0, null);
    $.propertyTypeCast(childTwo.getLayoutData$0(), "$isLayer").setRightWidth$4(0, $.Unit_aNe, 50, $.Unit_aNe);
    panel._layoutCmd.schedule$2(0, null);
    return panel;
  }
};

$$.SplitLayoutPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Layout";
  },
  get$name: function(_) {
    return "SplitLayoutPanel";
  },
  get$desc: function() {
    return "A panel that adds user-positioned splitters between each of its child widgets.\n\nThis panel is used in the same way as DockLayoutPanel, except that its \nchildren's sizes are always specified in Style.Unit.PX units, and each pair of \nchild widgets has a splitter between them that the user can drag.\n\nThis widget will only work in standards mode, which requires that the HTML page \nin which it is run have an explicit <!DOCTYPE> declaration.\n";
  },
  get$code: function(_) {
    return "ui.SplitLayoutPanel panel = new ui.SplitLayoutPanel();\npanel.setSize(\"100%\", \"100%\");\n\npanel.addNorth(new ui.Html(\"<div style='background-color: #FF0000; width:100%; height:100%;'>north</div>\"), 50.0);\npanel.addSouth(new ui.Html(\"<div style='background-color: #00FF00; width:100%; height:100%;'>south</div>\"), 100.0);\npanel.addEast(new ui.Html(\"<div style='background-color: #0000FF; width:100%; height:100%;'>east</div>\"), 150.0);\npanel.addWest(new ui.Html(\"<div style='background-color: #FFFF00; width:100%; height:100%;'>west</div>\"), 200.0);\npanel.add(new ui.Html(\"<div style='background-color: #00FFFF; width:100%; height:100%;'>center</div>\"));\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.SplitLayoutPanel$(8);
    panel.setWidth$1("100%");
    panel.setHeight$1("100%");
    panel._insert$4($.Html$("<div style='background-color: #FF0000; width:100%; height:100%;'>north</div>", null), $.DockLayoutConstant_4, 50, null);
    panel._insert$4($.Html$("<div style='background-color: #00FF00; width:100%; height:100%;'>south</div>", null), $.DockLayoutConstant_5, 100, null);
    panel._insert$4($.Html$("<div style='background-color: #0000FF; width:100%; height:100%;'>east</div>", null), $.DockLayoutConstant_3, 150, null);
    panel._insert$4($.Html$("<div style='background-color: #FFFF00; width:100%; height:100%;'>west</div>", null), $.DockLayoutConstant_6, 200, null);
    panel._insert$4($.Html$("<div style='background-color: #00FFFF; width:100%; height:100%;'>center</div>", null), $.DockLayoutConstant_0, 0, null);
    return panel;
  }
};

$$.StackLayoutPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Layout";
  },
  get$name: function(_) {
    return "StackLayoutPanel";
  },
  get$desc: function() {
    return "A panel that stacks its children vertically, displaying only one at a time, with \na header for each child which the user can click to display.\n\nThis widget will only work in standards mode, which requires that the HTML page \nin which it is run have an explicit <!DOCTYPE> declaration.\n";
  },
  get$code: function(_) {
    return "// Create a new stack layout panel.\nui.StackLayoutPanel stackPanel = new ui.StackLayoutPanel(util.Unit.PX);\nstackPanel.setSize(\"300px\", \"100%\");\n\n// Add the Mail folders.\nui.Widget mailHeader = _createHeaderWidget(\"Mail\");\nstackPanel.addWidget(_createMailItem(), \"Mail\", false, 25.0);\n\n// Add a list of filters.\nstackPanel.addWidget(_createFiltersItem([\"All\", \"Starred\", \"Read\", \"Unread\", \"Recent\", \"Sent by me\"]), \"<b>Filters</b>\", true, 25.0);\n\n// Add a list of contacts.\nui.Widget contactsHeader = _createHeaderWidget(\"Contacts\");\nstackPanel.addWidget(_createContactsItem(), \"Contacts\", false, 25.0);\n\nreturn stackPanel;\n\n/**\n * Create a widget to display in the header that includes an image and some\n * text.\n *\n * @param text the header text\n * @param image the {@link ImageResource} to add next to the header\n * @return the header widget\n */\nui.Widget _createHeaderWidget(String text) {\n  // Add the image and text to a horizontal panel\n  ui.HorizontalPanel hPanel = new ui.HorizontalPanel();\n  hPanel.setHeight(\"100%\");\n  hPanel.spacing = 0;\n  hPanel.setVerticalAlignment(i18n.HasVerticalAlignment.ALIGN_MIDDLE);\n  //hPanel.add(new Image(image));\n  ui.Button headerText = new ui.Button(text);\n  headerText.clearAndSetStyleName(\"cw-StackPanelHeader\");\n  hPanel.add(headerText);\n  return new ui.SimplePanel(hPanel);\n}\n\nui.VerticalPanel _createMailItem() {\n  ui.VerticalPanel mailsPanel = new ui.VerticalPanel();\n  mailsPanel.setSize(\"100%\", \"100%\");\n  mailsPanel.spacing = 4;\n  mailsPanel.add(new ui.Button(\"Refresh\"));\n  return mailsPanel;\n}\n\nui.VerticalPanel _createFiltersItem(List<String> filters){\n  ui.VerticalPanel filtersPanel = new ui.VerticalPanel();\n  filtersPanel.setSize(\"100%\", \"100%\");\n  filtersPanel.spacing = 4;\n  for (String filter in filters) {\n    filtersPanel.add(new ui.CheckBox(filter));\n  }\n  return filtersPanel;\n}\n\nui.VerticalPanel _createContactsItem() {\n  // Create a popup to show the contact info when a contact is clicked\n  ui.VerticalPanel contactPopupContainer = new ui.VerticalPanel();\n  contactPopupContainer.setSize(\"100%\", \"100%\");\n  contactPopupContainer.spacing = 5;\n  String name = \"contacts\";\n  contactPopupContainer.add(new ui.RadioButton(name, \"Name 1\", false));\n  contactPopupContainer.add(new ui.RadioButton(name, \"Name 2\", false));\n  contactPopupContainer.add(new ui.RadioButton(name, \"Name 3\", false));\n  return contactPopupContainer;\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var stackPanel, t1;
    stackPanel = $.StackLayoutPanel$($.Unit_px);
    stackPanel.setWidth$1("300px");
    stackPanel.setHeight$1("100%");
    this._createHeaderWidget$1("Mail");
    t1 = stackPanel.layoutPanel;
    stackPanel.insertAsText$5(this._createMailItem$0(), "Mail", false, 25, $.JSNumber_methods.$tdiv(t1._children._size, 2));
    stackPanel.insertAsText$5(this._createFiltersItem$1(["All", "Starred", "Read", "Unread", "Recent", "Sent by me"]), "<b>Filters</b>", true, 25, $.JSNumber_methods.$tdiv(t1._children._size, 2));
    this._createHeaderWidget$1("Contacts");
    stackPanel.insertAsText$5(this._createContactsItem$0(), "Contacts", false, 25, $.JSNumber_methods.$tdiv(t1._children._size, 2));
    return stackPanel;
  },
  _createHeaderWidget$1: function(text) {
    var hPanel, headerText, td, t1;
    hPanel = $.HorizontalPanel$();
    $.setProperty$2$x($.get$style$x(hPanel._element), "height", "100%");
    hPanel.set$spacing(hPanel, 0);
    hPanel._vertAlign = $.VerticalAlignmentConstant_middle;
    headerText = $.Button$(text, null);
    $.set$$$dom_className$x(headerText.getStyleElement$0(), "cw-StackPanelHeader");
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    headerText.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, headerText, t1._size);
    td.appendChild(headerText.getElement$0());
    headerText.setParent$1(hPanel);
    return $.SimplePanel$(hPanel);
  },
  _createMailItem$0: function() {
    var mailsPanel = $.VerticalPanel$();
    mailsPanel.setWidth$1("100%");
    mailsPanel.setHeight$1("100%");
    mailsPanel.set$spacing(mailsPanel, 4);
    mailsPanel.add$1(mailsPanel, $.Button$("Refresh", null));
    return mailsPanel;
  },
  _createFiltersItem$1: function(filters) {
    var filtersPanel, t1;
    filtersPanel = $.VerticalPanel$();
    filtersPanel.setWidth$1("100%");
    filtersPanel.setHeight$1("100%");
    filtersPanel.set$spacing(filtersPanel, 4);
    for (t1 = $.JSArray_methods.get$iterator(filters); t1.moveNext$0();)
      filtersPanel.add$1(filtersPanel, $.CheckBox$(t1.get$current(), false));
    return filtersPanel;
  },
  _createContactsItem$0: function() {
    var contactPopupContainer = $.VerticalPanel$();
    contactPopupContainer.setWidth$1("100%");
    contactPopupContainer.setHeight$1("100%");
    contactPopupContainer.set$spacing(contactPopupContainer, 5);
    contactPopupContainer.add$1(contactPopupContainer, $.RadioButton$("contacts", "Name 1", false));
    contactPopupContainer.add$1(contactPopupContainer, $.RadioButton$("contacts", "Name 2", false));
    contactPopupContainer.add$1(contactPopupContainer, $.RadioButton$("contacts", "Name 3", false));
    return contactPopupContainer;
  }
};

$$.TabLayoutPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Layout";
  },
  get$name: function(_) {
    return "TabLayoutPanel";
  },
  get$desc: function() {
    return "A panel that represents a tabbed set of pages, each of which contains another \nwidget. Its child widgets are shown as the user selects the various tabs \nassociated with them. The tabs can contain arbitrary text, HTML, or widgets.\n\nThis widget will only work in standards mode, which requires that the HTML page \nin which it is run have an explicit <!DOCTYPE> declaration.\n";
  },
  get$code: function(_) {
    return "// Create a three-item tab panel, with the tab area 1.5em tall.\nui.TabLayoutPanel tabPanel = new ui.TabLayoutPanel(1.5, util.Unit.EM);\ntabPanel.setSize(\"100%\", \"100%\");\ntabPanel.setAnimationDuration(1000);\ntabPanel.getElement().style.marginBottom = \"10.0\" + util.Unit.PX.value;\n\ntabPanel.addTabText(new ui.Html(\"Home\"), \"[this]\");\ntabPanel.addTabText(new ui.Html(\"that\"), \"[that]\");\ntabPanel.addTabText(new ui.Html(\"the other\"), \"[the other]\");\n\nreturn tabPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var tabPanel, t1, t2, contents;
    tabPanel = $.TabLayoutPanel$(1.5, $.Unit_em);
    tabPanel.setWidth$1("100%");
    tabPanel.setHeight$1("100%");
    tabPanel._deckPanel._animationDuration = 1000;
    $.set$marginBottom$x($.get$style$x(tabPanel._element), $.JSString_methods.$add("10.0", $.Unit_px.get$value($.Unit_px)));
    t1 = $.Html$("Home", null);
    t2 = tabPanel._deckPanel._children._size;
    contents = $.Label$("[this]", null);
    tabPanel._insert$3(t1, $._Tab$(tabPanel, contents), t2);
    t1 = $.Html$("that", null);
    t2 = tabPanel._deckPanel._children._size;
    tabPanel._insert$3(t1, $._Tab$(tabPanel, $.Label$("[that]", null)), t2);
    t1 = $.Html$("the other", null);
    t2 = tabPanel._deckPanel._children._size;
    tabPanel._insert$3(t1, $._Tab$(tabPanel, $.Label$("[the other]", null)), t2);
    return tabPanel;
  }
};

$$.AbsolutePanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "AbsolutePanel";
  },
  get$desc: function() {
    return "An absolute panel positions all of its children absolutely, allowing them to \noverlap.\n\nNote that this panel will not automatically resize itself to allow enough room \nfor its absolutely-positioned children. It must be explicitly sized in order to \nmake room for them.\n\nOnce a widget has been added to an absolute panel, the panel effectively \"owns\" \nthe positioning of the widget. Any existing positioning attributes on the widget \nmay be modified by the panel.\n";
  },
  get$code: function(_) {
    return "ui.AbsolutePanel panel = new ui.AbsolutePanel();\npanel.setSize(\"200px\", \"120px\");\npanel.getElement().style.borderStyle = \"dashed\";\n\nui.Label label = new ui.Label(\"Label\");\nlabel.setWidth(\"100px\");\npanel.addInPosition(label, 50, 50);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, label, beforeIndex;
    panel = $.AbsolutePanel$(null);
    panel.setWidth$1("200px");
    panel.setHeight$1("120px");
    $.set$borderStyle$x($.get$style$x(panel._element), "dashed");
    label = $.Label$("Label", null);
    $.setProperty$2$x($.get$style$x(label._element), "width", "100px");
    label.removeFromParent$0();
    beforeIndex = panel._children._size;
    panel.setWidgetPositionImpl$3(label, 50, 50);
    panel.insert$4(panel, label, panel._element, beforeIndex, true);
    panel._verifyPositionNotStatic$1(label);
    return panel;
  }
};

$$.CaptionPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "CaptionPanel";
  },
  get$desc: function() {
    return "A panel that wraps its contents in a border with a caption that appears in the \nupper left corner of the border. This is an implementation of the fieldset HTML \nelement.\n";
  },
  get$code: function(_) {
    return "ui.CaptionPanel panel = new ui.CaptionPanel(\"Caption Goes Here\");\n\npanel.setContentWidget(new ui.Label(\"The main, wrapped widget goes here.\"));\n\npanel.getElement().style.border = \"3px solid #00c\";\npanel.getContentWidget().getElement().style.margin = \"5px 10px 10px 10px\";\npanel.getContentWidget().getElement().style.padding = \"10px 10px 10px 10px\";\npanel.getContentWidget().getElement().style.border = \"1px solid #ccf\";\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, t1;
    panel = $.CaptionPanel$("Caption Goes Here", false);
    t1 = $.Label$("The main, wrapped widget goes here.", null);
    $.propertyTypeCast(panel._widget, "$isSimplePanel").setWidget$1(t1);
    $.set$border$x($.get$style$x(panel._element), "3px solid #00c");
    $.set$margin$x($.get$style$x($.propertyTypeCast(panel._widget, "$isSimplePanel").getWidget$0().getElement$0()), "5px 10px 10px 10px");
    $.set$padding$x($.get$style$x($.propertyTypeCast(panel._widget, "$isSimplePanel").getWidget$0().getElement$0()), "10px 10px 10px 10px");
    $.set$border$x($.get$style$x($.propertyTypeCast(panel._widget, "$isSimplePanel").getWidget$0().getElement$0()), "1px solid #ccf");
    return panel;
  }
};

$$.DeckPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DeckPanel";
  },
  get$desc: function() {
    return "A panel that displays all of its child widgets in a 'deck', where only one can \nbe visible at a time. It is used by TabPanel.\n\nOnce a widget has been added to a DeckPanel, its visibility, width, and height \nattributes will be manipulated. When the widget is removed from the DeckPanel, \nit will be visible, and its width and height attributes will be cleared.\n";
  },
  get$code: function(_) {
    return "ui.DeckPanel panel = new ui.DeckPanel();\npanel.setSize(\"300px\", \"120px\");\nui.Label label;\n\nlabel = new ui.Label(\"Widget 0\");\nlabel.getElement().style.backgroundColor = \"red\";\npanel.add(label);\n\nlabel = new ui.Label(\"Widget 1\");\nlabel.getElement().style.backgroundColor = \"yellow\";\npanel.add(label);\n\nlabel = new ui.Label(\"Widget 2\");\nlabel.getElement().style.backgroundColor = \"pink\";\npanel.add(label);\n\nlabel = new ui.Label(\"Widget 3\");\nlabel.getElement().style.backgroundColor = \"cyan\";\npanel.add(label);\n\npanel.showWidgetAt(0);\n\nutil.Timer t = new util.Timer.get(()\n{\n  int index = panel.getVisibleWidgetIndex();\n  index++;\n  if (index == panel.getWidgetCount()) {\n    index = 0;\n  }\n  panel.showWidgetAt(index);\n});\nt.scheduleRepeating(1000);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, label, container, t;
    panel = $.DeckPanel$();
    panel.setWidth$1("300px");
    panel.setHeight$1("120px");
    label = $.Label$("Widget 0", null);
    $.set$backgroundColor$x($.get$style$x(label._element), "red");
    container = panel.createWidgetContainer$0();
    $.append$1$x(panel._element, container);
    $.ComplexPanel.prototype.addWidget$2.call(panel, label, container);
    panel.finishWidgetInitialization$2(container, label);
    label = $.Label$("Widget 1", null);
    $.set$backgroundColor$x($.get$style$x(label._element), "yellow");
    container = panel.createWidgetContainer$0();
    $.append$1$x(panel._element, container);
    $.ComplexPanel.prototype.addWidget$2.call(panel, label, container);
    panel.finishWidgetInitialization$2(container, label);
    label = $.Label$("Widget 2", null);
    $.set$backgroundColor$x($.get$style$x(label._element), "pink");
    container = panel.createWidgetContainer$0();
    $.append$1$x(panel._element, container);
    $.ComplexPanel.prototype.addWidget$2.call(panel, label, container);
    panel.finishWidgetInitialization$2(container, label);
    label = $.Label$("Widget 3", null);
    $.set$backgroundColor$x($.get$style$x(label._element), "cyan");
    container = panel.createWidgetContainer$0();
    $.append$1$x(panel._element, container);
    $.ComplexPanel.prototype.addWidget$2.call(panel, label, container);
    panel.finishWidgetInitialization$2(container, label);
    panel.showWidgetAt$1(0);
    if (!$.Timer__initialised) {
      $.Timer__initialised = true;
      $.Timer__hookWindowClosing();
    }
    t = $.Timer$_internal(new $.DeckPanelModel_asWidget_anon(panel));
    t.cancel$0(t);
    t.isRepeating = true;
    t._timer = $.Timer_createInterval(t, 1000);
    $.get$Timer__timers().push(t);
    return panel;
  }
};

$$.DeckPanelModel_asWidget_anon = {"": "Closure;panel_0",
  call$0: function() {
    var t1, t2, t3, index;
    t1 = this.panel_0;
    t2 = t1._visibleWidget;
    t3 = t1._children;
    index = t3.indexOf$1(t3, t2) + 1;
    t1.showWidgetAt$1(index === t1._children._size ? 0 : index);
  }
};

$$.DecoratedStackPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DecoratedStackPanel";
  },
  get$desc: function() {
    return "A StackPanel that wraps each item in a 2x3 grid (six box), which allows users to \nadd rounded corners.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use StackLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "ui.DecoratedStackPanel panel = new ui.DecoratedStackPanel();\npanel.setSize(\"400px\", \"100%\");\n\n_createDecoratedStackPanelContent(panel, \"Panel 1\", \"One\");\n_createDecoratedStackPanelContent(panel, \"Panel 2\", \"Two\");\n_createDecoratedStackPanelContent(panel, \"Panel 3\", \"Three\");\n\nreturn panel;\n\n\nvoid _createDecoratedStackPanelContent(ui.StackPanel panel, String text, String label, [bool asHtml = false]) {\n  ui.Label content = new ui.Label(text);\n  panel.add(content, label, asHtml);\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.DecoratedStackPanel$();
    panel.setWidth$1("400px");
    panel.setHeight$1("100%");
    panel.insertWidget$2($.Label$("Panel 1", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "One", false);
    panel.insertWidget$2($.Label$("Panel 2", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "Two", false);
    panel.insertWidget$2($.Label$("Panel 3", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "Three", false);
    return panel;
  }
};

$$.DecoratedTabBarModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DecoratedTabBar";
  },
  get$desc: function() {
    return "A TabBar that wraps each tab in a 2x3 grid (six box), which allows users to add \nrounded corners.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("DecoratedTabBar not implemented yet.", null);
  }
};

$$.DecoratedTabPanelModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DecoratedTabPanel";
  },
  get$desc: function() {
    return "A TabPanel that uses a DecoratedTabBar with rounded corners.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use TabLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("DecoratedTabPanel not implemented yet.", null);
  }
};

$$.DecoratorPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DecoratorPanel";
  },
  get$desc: function() {
    return "A SimplePanel that wraps its contents in stylized boxes, which can be used to \nadd rounded corners to a Widget.\n\nThis widget will only work in quirks mode in most cases. Specifically, setting \nthe height or width of the DecoratorPanel will result in rendering issues.\n\nWrapping a Widget in a \"9-box\" allows users to specify images in each of the \ncorners and along the four borders. This method allows the content within the \nDecoratorPanel to resize without disrupting the look of the border. In addition, \nrounded corners can generally be combined into a single image file, which \nreduces the number of downloaded files at startup. This class also simplifies \nthe process of using AlphaImageLoaders to support 8-bit transparencies \n(anti-aliasing and shadows) in ie6, which does not support them normally.\n\nSetting the Size:\n\nIf you set the width or height of the DecoratorPanel, you need to set the height \nand width of the middleCenter cell to 100% so that the middleCenter cell takes \nup all of the available space. If you do not set the width and height of the \nDecoratorPanel, it will wrap its contents tightly.\n\n.dwt-DecoratorPanel .middleCenter {\n  height: 100%;\n  width: 100%;\n}\n";
  },
  get$code: function(_) {
    return "ui.FlexTable layout = new ui.FlexTable();\nlayout.setCellSpacing(6);\nui.FlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n\n// Add a title to the form\nlayout.setHtml(0, 0, \"Enter Search Criteria\");\ncellFormatter.setColSpan(0, 0, 2);\ncellFormatter.setHorizontalAlignment(0, 0, i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n// Add some standard form options\nlayout.setHtml(1, 0, \"Name:\");\nlayout.setWidget(1, 1, new ui.TextBox());\nlayout.setHtml(2, 0, \"Description:\");\nlayout.setWidget(2, 1, new ui.TextBox());\n\n// Wrap the content in a DecoratorPanel\nui.DecoratorPanel decPanel = new ui.DecoratorPanel();\ndecPanel.setWidget(layout);\n\nreturn decPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var layout, cellFormatter, decPanel;
    layout = $.FlexTable$();
    $.Dom_setElementPropertyInt(layout.tableElem, "cellSpacing", 6);
    cellFormatter = $.propertyTypeCast(layout.cellFormatter, "$isFlexCellFormatter");
    layout.setHtml$3(0, 0, "Enter Search Criteria");
    cellFormatter.setColSpan$3(0, 0, 2);
    cellFormatter.setHorizontalAlignment$3(0, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    layout.setHtml$3(1, 0, "Name:");
    layout.setWidget$3(1, 1, $.TextBox$());
    layout.setHtml$3(2, 0, "Description:");
    layout.setWidget$3(2, 1, $.TextBox$());
    decPanel = $.DecoratorPanel$($.List_top_middle_bottom, 1);
    decPanel.setWidget$1(layout);
    return decPanel;
  }
};

$$.DisclosurePanelModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DisclosurePanel";
  },
  get$desc: function() {
    return "A widget that consists of a header and a content panel that discloses the \ncontent when a user clicks on the header.\n";
  },
  get$code: function(_) {
    return "// Create a table to layout the form options\nui.FlexTable layout = new ui.FlexTable();\nlayout.setCellSpacing(6);\nlayout.setWidth(\"300px\");\nui.FlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n\n// Add a title to the form\nlayout.setHtml(0, 0, \"Enter Search Criteria\");\ncellFormatter.setColSpan(0, 0, 2);\ncellFormatter.setHorizontalAlignment(0, 0, i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n// Add some standard form options\nlayout.setHtml(1, 0, \"Name\");\nlayout.setWidget(1, 1, new ui.TextBox());\nlayout.setHtml(2, 0, \"Description\");\nlayout.setWidget(2, 1, new ui.TextBox());\n\n// Create some advanced options\nui.HorizontalPanel genderPanel = new ui.HorizontalPanel();\nList<String> genderOptions = [\"male\", \"femail\"];\nfor (int i = 0; i < genderOptions.length; i++) {\n  genderPanel.add(new ui.RadioButton(\"gender\", genderOptions[i]));\n}\nui.Grid advancedOptions = new ui.Grid(2, 2);\nadvancedOptions.setCellSpacing(6);\nadvancedOptions.setHtml(0, 0, \"Location\");\nadvancedOptions.setWidget(0, 1, new ui.TextBox());\nadvancedOptions.setHtml(1, 0, \"Gender\");\nadvancedOptions.setWidget(1, 1, genderPanel);\n\n// Add advanced options to form in a disclosure panel\nui.DisclosurePanel advancedDisclosure = new ui.DisclosurePanel.fromText(\"Advanced Criteria\");\nadvancedDisclosure.setAnimationEnabled(true);\nadvancedDisclosure.setContent(advancedOptions);\nlayout.setWidget(3, 0, advancedDisclosure);\ncellFormatter.setColSpan(3, 0, 2);\n\n// Wrap the contents in a DecoratorPanel\nui.DecoratorPanel decPanel = new ui.DecoratorPanel();\ndecPanel.setWidget(layout);\n\nreturn decPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var layout, cellFormatter, genderPanel, genderOptions, i, t1, td, t2, advancedOptions, advancedDisclosure, decPanel;
    layout = $.FlexTable$();
    $.Dom_setElementPropertyInt(layout.tableElem, "cellSpacing", 6);
    $.setProperty$2$x($.get$style$x(layout._element), "width", "300px");
    cellFormatter = $.propertyTypeCast(layout.cellFormatter, "$isFlexCellFormatter");
    layout.setHtml$3(0, 0, "Enter Search Criteria");
    cellFormatter.setColSpan$3(0, 0, 2);
    cellFormatter.setHorizontalAlignment$3(0, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    layout.setHtml$3(1, 0, "Name");
    layout.setWidget$3(1, 1, $.TextBox$());
    layout.setHtml$3(2, 0, "Description");
    layout.setWidget$3(2, 1, $.TextBox$());
    genderPanel = $.HorizontalPanel$();
    genderOptions = ["male", "femail"];
    for (i = 0; i < genderOptions.length; ++i) {
      t1 = $.RadioButton$("gender", genderOptions[i], false);
      td = document.createElement("td");
      t2 = genderPanel._horzAlign;
      $.set$textAlign$x(td.style, t2.getTextAlignString$0());
      t2 = genderPanel._vertAlign;
      $.set$verticalAlign$x(td.style, t2.getVerticalAlignString$0());
      genderPanel._tableRow.appendChild(td);
      t1.removeFromParent$0();
      t2 = genderPanel._children;
      t2.insert$2(t2, t1, t2._size);
      td.appendChild(t1.getElement$0());
      t1.setParent$1(genderPanel);
    }
    advancedOptions = $.Grid$(2, 2);
    $.Dom_setElementPropertyInt(advancedOptions.tableElem, "cellSpacing", 6);
    advancedOptions.setHtml$3(0, 0, "Location");
    advancedOptions.setWidget$3(0, 1, $.TextBox$());
    advancedOptions.setHtml$3(1, 0, "Gender");
    advancedOptions.setWidget$3(1, 1, genderPanel);
    advancedDisclosure = $.DisclosurePanel$fromText("Advanced Criteria");
    advancedDisclosure._isAnimationEnabled = true;
    advancedDisclosure.setContent$1(advancedOptions);
    layout.setWidget$3(3, 0, advancedDisclosure);
    cellFormatter.setColSpan$3(3, 0, 2);
    decPanel = $.DecoratorPanel$($.List_top_middle_bottom, 1);
    decPanel.setWidget$1(layout);
    return decPanel;
  }
};

$$.DockPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "DockPanel";
  },
  get$desc: function() {
    return "A panel that lays its child widgets out \"docked\" at its outer edges, and allows \nits last widget to take up the remaining space in its center.\n\nThis widget has limitations in standards mode that did not exist in quirks mode. \nThe child Widgets contained within a DockPanel cannot be sized using percentages. \nSetting a child widget's height to 100% will NOT cause the child to fill the \navailable height.\n\nIf you need to work around these limitations, use DockLayoutPanel instead, but \nunderstand that it is not a drop in replacement for this class. It requires \nstandards mode, and is most easily used under a RootLayoutPanel (as opposed to \na RootPanel).\n";
  },
  get$code: function(_) {
    return "ui.DockPanel dock = new ui.DockPanel();\ndock.clearAndSetStyleName(\"cw-DockPanel\");\ndock.spacing = 4;\ndock.setSize(\"100%\", \"100%\");\ndock.setHorizontalAlignment(i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n// Add text all around\ndock.addWidgetTo(new ui.Html(\"This is the first north component\"), util.DockLayoutConstant.NORTH);\ndock.addWidgetTo(new ui.Html(\"This is the first south component\"), util.DockLayoutConstant.SOUTH);\ndock.addWidgetTo(new ui.Html(\"This is the east component\"), util.DockLayoutConstant.EAST);\ndock.addWidgetTo(new ui.Html(\"This is the west component\"), util.DockLayoutConstant.WEST);\ndock.addWidgetTo(new ui.Html(\"This is the second north component\"), util.DockLayoutConstant.NORTH);\ndock.addWidgetTo(new ui.Html(\"This is the second south component\"),util.DockLayoutConstant.SOUTH);\n\n// Add scrollable text in the center\nui.Html contents = new ui.Html(\"This is a ScrollPanel contained at the center of a DockPanel. By putting some fairly large contents in the middle and setting its size explicitly, it becomes a scrollable area within the page, but without requiring the use of an IFRAME./nHere's quite a bit more meaningless text that will serve primarily to make this thing scroll off the bottom of its visible area. Otherwise, you might have to make it really, really small in order to see the nifty scroll bars!\");\nui.ScrollPanel scroller = new ui.ScrollPanel(contents);\nscroller.setSize(\"400px\", \"100px\");\ndock.addWidgetTo(scroller, util.DockLayoutConstant.CENTER);\n\n// Return the content\nreturn dock;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var dock, scroller;
    dock = $.DockPanel$();
    $.set$$$dom_className$x(dock.getStyleElement$0(), "cw-DockPanel");
    dock.set$spacing(dock, 4);
    dock.setWidth$1("100%");
    dock.setHeight$1("100%");
    dock._horzAlign = $.HorizontalAlignmentConstant_TextAlign_center;
    dock.addWidgetTo$2($.Html$("This is the first north component", null), $.DockLayoutConstant_4);
    dock.addWidgetTo$2($.Html$("This is the first south component", null), $.DockLayoutConstant_5);
    dock.addWidgetTo$2($.Html$("This is the east component", null), $.DockLayoutConstant_3);
    dock.addWidgetTo$2($.Html$("This is the west component", null), $.DockLayoutConstant_6);
    dock.addWidgetTo$2($.Html$("This is the second north component", null), $.DockLayoutConstant_4);
    dock.addWidgetTo$2($.Html$("This is the second south component", null), $.DockLayoutConstant_5);
    scroller = $.ScrollPanel$($.Html$("This is a ScrollPanel contained at the center of a DockPanel. By putting some fairly large contents in the middle and setting its size explicitly, it becomes a scrollable area within the page, but without requiring the use of an IFRAME./nHere's quite a bit more meaningless text that will serve primarily to make this thing scroll off the bottom of its visible area. Otherwise, you might have to make it really, really small in order to see the nifty scroll bars!", null));
    $.UiObject.prototype.setSize$2.call(scroller, "400px", "100px");
    dock.addWidgetTo$2(scroller, $.DockLayoutConstant_0);
    return dock;
  }
};

$$.FlexTableModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "FlexTable";
  },
  get$desc: function() {
    return "A flexible table that creates cells on demand. It can be jagged (that is, each \nrow can contain a different number of cells) and individual cells can be set to \nspan multiple rows or columns.\n";
  },
  get$code: function(_) {
    return "ui.FlexTable layout = new ui.FlexTable();\nlayout.setCellSpacing(6);\nui.FlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n\n// Add a title to the form\nlayout.setHtml(0, 0, \"Enter Search Criteria\");\ncellFormatter.setColSpan(0, 0, 2);\ncellFormatter.setHorizontalAlignment(0, 0, i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n// Add some standard form options\nlayout.setHtml(1, 0, \"Name:\");\nlayout.setWidget(1, 1, new ui.TextBox());\nlayout.setHtml(2, 0, \"Description:\");\nlayout.setWidget(2, 1, new ui.TextBox());\n\n// Return the content\nreturn layout;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var layout, cellFormatter;
    layout = $.FlexTable$();
    $.Dom_setElementPropertyInt(layout.tableElem, "cellSpacing", 6);
    cellFormatter = $.propertyTypeCast(layout.cellFormatter, "$isFlexCellFormatter");
    layout.setHtml$3(0, 0, "Enter Search Criteria");
    cellFormatter.setColSpan$3(0, 0, 2);
    cellFormatter.setHorizontalAlignment$3(0, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    layout.setHtml$3(1, 0, "Name:");
    layout.setWidget$3(1, 1, $.TextBox$());
    layout.setHtml$3(2, 0, "Description:");
    layout.setWidget$3(2, 1, $.TextBox$());
    return layout;
  }
};

$$.FlowPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "FlowPanel";
  },
  get$desc: function() {
    return "A panel that formats its child widgets using the default HTML layout behavior.\n";
  },
  get$code: function(_) {
    return "ui.FlowPanel flowPanel = new ui.FlowPanel();\n\n// Add some content to the panel\nfor (int i = 0; i < 30; i++) {\n  ui.CheckBox checkbox = new ui.CheckBox(\"Item $i\");\n  flowPanel.add(checkbox);\n}\n\n// Return the content\nreturn flowPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var flowPanel, i, checkbox, t1, t2;
    flowPanel = $.FlowPanel$();
    for (i = 0; i < 30; ++i) {
      checkbox = $.CheckBox$("Item " + i, false);
      t1 = flowPanel._element;
      checkbox.removeFromParent$0();
      t2 = flowPanel._children;
      t2.insert$2(t2, checkbox, t2._size);
      $.append$1$x(t1, checkbox.getElement$0());
      checkbox.setParent$1(flowPanel);
    }
    return flowPanel;
  }
};

$$.FocusPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "FocusPanel";
  },
  get$desc: function() {
    return "A simple panel that makes its contents focusable, and adds the ability to catch \nmouse and keyboard events.\n";
  },
  get$code: function(_) {
    return "\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, label, allMouseHandlersAdapter;
    panel = $.FocusPanel$(null);
    panel.setWidth$1("200px");
    panel.setHeight$1("120px");
    $.UiObject_manageElementStyleName(panel.getStyleElement$0(), "demo-panel-borderless", true);
    label = $.Label$("Label", null);
    $.setProperty$2$x($.get$style$x(label._element), "width", "100px");
    $.UiObject_manageElementStyleName(label.getStyleElement$0(), "demo-label", true);
    allMouseHandlersAdapter = $.AllMouseHandlersAdapter$(new $.FocusPanelModel_asWidget_anon(label));
    label.addDomHandler$2(allMouseHandlersAdapter, $.get$MouseOverEvent_TYPE());
    label.addDomHandler$2(allMouseHandlersAdapter, $.get$MouseOutEvent_TYPE());
    if (panel.getWidget$0() != null)
      $.throwExpression($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
    panel.setWidget$1(label);
    return panel;
  }
};

$$.FocusPanelModel_asWidget_anon = {"": "Closure;label_0",
  call$1: function(evt) {
    if (typeof evt === "object" && evt !== null && !!$.getInterceptor(evt).$isMouseOverEvent)
      $.UiObject_manageElementStyleName(this.label_0.getStyleElement$0(), "demo-label-over", true);
    else if (typeof evt === "object" && evt !== null && !!$.getInterceptor(evt).$isMouseOutEvent)
      $.UiObject_manageElementStyleName(this.label_0.getStyleElement$0(), "demo-label-over", false);
  }
};

$$.FormPanelModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "FormPanel";
  },
  get$desc: function() {
    return "A panel that wraps its contents in an HTML <FORM> element.\n\nThis panel can be used to achieve interoperability with servers that accept \ntraditional HTML form encoding. The following widgets (those that implement \nHasName) will be submitted to the server if they are contained within this panel:\n\nTextBox\nPasswordTextBox\nRadioButton\nSimpleRadioButton\nCheckBox\nSimpleCheckBox\nTextArea\nListBox\nFileUpload\nHidden\nIn particular, FileUpload is only useful when used within a FormPanel, because \nthe browser will only upload files using form submission.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("FormPanel not implemented yet.", null);
  }
};

$$.FrameModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "Frame";
  },
  get$desc: function() {
    return "A widget that wraps an IFRAME element, which can contain an arbitrary web site.\n\nNote that if you are using History, any browser history items generated by the \nFrame will interleave with your application's history.\n";
  },
  get$code: function(_) {
    return "ui.Frame frame = new ui.Frame(\"frame_test.html\");\nframe.setWidth(\"100%\");\nframe.setHeight(\"150px\");\n\nreturn frame;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var frame = $.Frame$("frame_test.html");
    $.setProperty$2$x($.get$style$x(frame._element), "width", "100%");
    $.setProperty$2$x($.get$style$x(frame._element), "height", "150px");
    return frame;
  }
};

$$.GridModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "Grid";
  },
  get$desc: function() {
    return "A rectangular grid that can contain text, html, or a child Widget within its \ncells. It must be resized explicitly to the desired number of rows and columns.\n";
  },
  get$code: function(_) {
    return "// Create a grid\nui.Grid grid = new ui.Grid(4, 4);\ngrid.addStyleName(\"cw-FlexTable\");\n\n// Add images to the grid\nint numRows = grid.getRowCount();\nint numColumns = grid.getColumnCount();\nfor (int row = 0; row < numRows; row++) {\n  for (int col = 0; col < numColumns; col++) {\n    grid.setWidget(row, col, new ui.Html(\"Cell $row.$col\"));\n  }\n}\n\nreturn grid;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var grid, numRows, numColumns, row, col;
    grid = $.Grid$(4, 4);
    $.UiObject_manageElementStyleName(grid.getStyleElement$0(), "cw-FlexTable", true);
    numRows = grid.numRows;
    numColumns = grid.numColumns;
    for (row = 0; row < numRows; ++row)
      for (col = 0; col < numColumns; ++col)
        grid.setWidget$3(row, col, $.Html$("Cell " + row + "." + col, null));
    return grid;
  }
};

$$.HorizontalPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "HorizontalPanel";
  },
  get$desc: function() {
    return "A panel that lays all of its widgets out in a single horizontal column.\n";
  },
  get$code: function(_) {
    return "ui.HorizontalPanel hPanel = new ui.HorizontalPanel();\nhPanel.spacing = 5;\n\n// Add some content to the panel\nfor (int i = 1; i < 5; i++) {\n  hPanel.add(new ui.Button(\"Button $i\"));\n}\n\nreturn hPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var hPanel, i, t1, td, t2;
    hPanel = $.HorizontalPanel$();
    hPanel.set$spacing(hPanel, 5);
    for (i = 1; i < 5; ++i) {
      t1 = $.Button$("Button " + i, null);
      td = document.createElement("td");
      t2 = hPanel._horzAlign;
      $.set$textAlign$x(td.style, t2.getTextAlignString$0());
      t2 = hPanel._vertAlign;
      $.set$verticalAlign$x(td.style, t2.getVerticalAlignString$0());
      hPanel._tableRow.appendChild(td);
      t1.removeFromParent$0();
      t2 = hPanel._children;
      t2.insert$2(t2, t1, t2._size);
      td.appendChild(t1.getElement$0());
      t1.setParent$1(hPanel);
    }
    return hPanel;
  }
};

$$.HorizontalSplitPanelModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "HorizontalSplitPanel";
  },
  get$desc: function() {
    return "A panel that arranges two widgets in a single horizontal row and allows the user \nto interactively change the proportion of the width dedicated to each of the two \nwidgets. Widgets contained within a HorizontalSplitPanel will be automatically \ndecorated with scrollbars when necessary.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use SplitLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("HorizontalSplitPanel not implemented yet.", null);
  }
};

$$.HtmlPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "HtmlPanel";
  },
  get$desc: function() {
    return "A panel that contains HTML, and which can attach child widgets to identified \nelements within that HTML.\n";
  },
  get$code: function(_) {
    return "String html = \"<div id='one' style='border:3px dotted blue;'></div><div id='two' style='border:3px dotted green;'></div>\";\n    \nui.HtmlPanel panel = new ui.HtmlPanel(html);\npanel.setSize(\"200px\", \"120px\");\npanel.addStyleName(\"demo-panel\");\npanel.addById(new ui.Button(\"Do Nothing\"), \"one\");\npanel.addById(new ui.TextBox(), \"two\");\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, t1, elem, t2;
    panel = $.HtmlPanel$("<div id='one' style='border:3px dotted blue;'></div><div id='two' style='border:3px dotted green;'></div>");
    panel.setWidth$1("200px");
    panel.setHeight$1("120px");
    $.UiObject_manageElementStyleName(panel.getStyleElement$0(), "demo-panel", true);
    t1 = $.Button$("Do Nothing", null);
    elem = panel._attached ? document.getElementById("one") : panel._attachToDomAndGetElement$1("one");
    if (elem == null)
      $.throwExpression($._ExceptionImplementation$("NoSuchElement one"));
    t1.removeFromParent$0();
    t2 = panel._children;
    t2.insert$2(t2, t1, t2._size);
    $.append$1$x(elem, t1.getElement$0());
    t1.setParent$1(panel);
    t1 = $.TextBox$();
    elem = panel._attached ? document.getElementById("two") : panel._attachToDomAndGetElement$1("two");
    if (elem == null)
      $.throwExpression($._ExceptionImplementation$("NoSuchElement two"));
    t1.removeFromParent$0();
    t2 = panel._children;
    t2.insert$2(t2, t1, t2._size);
    $.append$1$x(elem, t1.getElement$0());
    t1.setParent$1(panel);
    return panel;
  }
};

$$.NamedFrameModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "NamedFrame";
  },
  get$desc: function() {
    return "A Frame that has a 'name' associated with it. This allows the frame to be the \ntarget of a FormPanel.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("NamedFrame not implemented yet.", null);
  }
};

$$.ScrolledPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "ScrolledPanel";
  },
  get$desc: function() {
    return "A simple panel that wraps its contents in a scrollable area.\n";
  },
  get$code: function(_) {
    return "ui.ScrollPanel panel = new ui.ScrollPanel(new ui.Html(\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Morbi sit amet massa ornare mauris lobortis laoreet. Pellentesque vel est at massa condimentum porta. Aliquam tincidunt scelerisque orci. Donec sit amet elit nec leo egestas vestibulum. Mauris et nibh quis ipsum volutpat congue. Ut tellus nibh, convallis sed, consectetuer sit amet, facilisis eget, lectus. Morbi hendrerit, dolor eget tincidunt tristique, velit enim laoreet erat, nec condimentum eros mi quis tellus. Fusce pharetra nibh vestibulum lacus. Integer vulputate eros at nisi. Phasellus elit quam, dignissim quis, volutpat vitae, egestas nec, nisi. Nullam sodales sagittis quam. Aliquam iaculis neque ut magna. Donec convallis interdum sem. Sed suscipit.\"));\npanel.setSize(\"200px\", \"120px\");\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.ScrollPanel$($.Html$("Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Morbi sit amet massa ornare mauris lobortis laoreet. Pellentesque vel est at massa condimentum porta. Aliquam tincidunt scelerisque orci. Donec sit amet elit nec leo egestas vestibulum. Mauris et nibh quis ipsum volutpat congue. Ut tellus nibh, convallis sed, consectetuer sit amet, facilisis eget, lectus. Morbi hendrerit, dolor eget tincidunt tristique, velit enim laoreet erat, nec condimentum eros mi quis tellus. Fusce pharetra nibh vestibulum lacus. Integer vulputate eros at nisi. Phasellus elit quam, dignissim quis, volutpat vitae, egestas nec, nisi. Nullam sodales sagittis quam. Aliquam iaculis neque ut magna. Donec convallis interdum sem. Sed suscipit.", null));
    $.UiObject.prototype.setSize$2.call(panel, "200px", "120px");
    return panel;
  }
};

$$.SimplePanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "SimplePanel";
  },
  get$desc: function() {
    return "Base class for panels that contain only one widget.\n";
  },
  get$code: function(_) {
    return "ui.SimplePanel panel = new ui.SimplePanel();\npanel.setSize(\"200px\", \"120px\");\npanel.addStyleName(\"demo-panel\");\n\nui.Label label = new ui.Label(\"Label\");\nlabel.setWidth(\"100px\");\nlabel.addStyleName(\"demo-label\");\npanel.add(label);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, label;
    panel = $.SimplePanel$(null);
    panel.setWidth$1("200px");
    panel.setHeight$1("120px");
    $.UiObject_manageElementStyleName(panel.getStyleElement$0(), "demo-panel", true);
    label = $.Label$("Label", null);
    $.setProperty$2$x($.get$style$x(label._element), "width", "100px");
    $.UiObject_manageElementStyleName(label.getStyleElement$0(), "demo-label", true);
    if (panel.getWidget$0() != null)
      $.throwExpression($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
    panel.setWidget$1(label);
    return panel;
  }
};

$$.StackPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "StackPanel";
  },
  get$desc: function() {
    return "A panel that stacks its children vertically, displaying only one at a time, with \na header for each child which the user can click to display.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use StackLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "ui.StackPanel panel = new ui.StackPanel();\npanel.setSize(\"400px\", \"100%\");\n\n_createStackPanelContent(panel, \"Panel 1\", \"One\");\n_createStackPanelContent(panel, \"Panel 2\", \"Two\");\n_createStackPanelContent(panel, \"Panel 3\", \"Three\");\n\nreturn panel;\n\n\nvoid _createStackPanelContent(ui.StackPanel panel, String text, String label, [bool asHtml = false]) {\n  ui.Label content = new ui.Label(text);\n  panel.add(content, label, asHtml);\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.StackPanel$();
    panel.setWidth$1("400px");
    panel.setHeight$1("100%");
    panel.insertWidget$2($.Label$("Panel 1", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "One", false);
    panel.insertWidget$2($.Label$("Panel 2", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "Two", false);
    panel.insertWidget$2($.Label$("Panel 3", null), panel._children._size);
    panel.setStackText$3(panel._children._size - 1, "Three", false);
    return panel;
  }
};

$$.TabBarModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "TabBar";
  },
  get$desc: function() {
    return "A horizontal bar of folder-style tabs, most commonly used as part of a TabPanel.\n";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.spacing = 10;\n\n// Create a tab bar with three items.\nui.TabBar bar = new ui.TabBar();\nbar.addTabText(\"foo\");\nbar.addTabText(\"bar\");\nbar.addTabText(\"baz\");\nvPanel.add(bar);\n\nui.Label selected = new ui.Label();\nvPanel.add(selected);\n\nbar.addSelectionHandler(new event.SelectionHandlerAdapter((event.SelectionEvent evt){\n  int selectedTabIndx = evt.getSelectedItem();\n  selected.text = \"Selected Tab $selectedTabIndx\";\n}));\n\nreturn vPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, bar, t1, selected, t2, t3;
    vPanel = $.VerticalPanel$();
    vPanel.set$spacing(vPanel, 10);
    bar = $.TabBar$();
    t1 = bar.panel;
    bar.insertTabText$3("foo", t1._children._size - 2, false);
    bar.insertTabText$3("bar", t1._children._size - 2, false);
    bar.insertTabText$3("baz", t1._children._size - 2, false);
    vPanel.add$1(vPanel, bar);
    selected = $.Label$("Nothing selected", null);
    vPanel.add$1(vPanel, selected);
    t1 = $.SelectionHandlerAdapter$(new $.TabBarModel_asWidget_anon(selected));
    t2 = $.get$SelectionEvent_TYPE();
    t3 = bar._eventBus;
    if (t3 == null) {
      t3 = $.SimpleEventBus$(null);
      bar._eventBus = t3;
    }
    t3._doAdd$3(t2, $.get$SimpleEventBus__emptySource(), t1);
    return vPanel;
  }
};

$$.TabBarModel_asWidget_anon = {"": "Closure;selected_0",
  call$1: function(evt) {
    var selectedTabIndx, t1;
    selectedTabIndx = evt.getSelectedItem$0();
    t1 = this.selected_0;
    t1.set$text(t1, "Selected Tab " + $.S(selectedTabIndx));
  }
};

$$.TabPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "TabPanel";
  },
  get$desc: function() {
    return "A panel that represents a tabbed set of pages, each of which contains another \nwidget. Its child widgets are shown as the user selects the various tabs \nassociated with them. The tabs can contain arbitrary HTML.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use TabLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "String text1 = \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut sit amet pede eu nulla volutpat tempor. Vestibulum porttitor. Nulla ut augue. Morbi sollicitudin elit sit amet lectus. Nullam convallis condimentum dolor. Ut viverra. Suspendisse aliquet dui ullamcorper tellus. Vestibulum eros. Praesent nec justo vitae erat imperdiet gravida. Suspendisse non ante vitae leo eleifend auctor. In lacus nulla, posuere sit amet, fringilla ut, scelerisque et, risus. Nulla ornare, lorem tempor dictum aliquam, pede justo lacinia felis, vel mattis dui lorem quis eros.\";\nString text2 = \"Sed egestas, arcu nec accumsan placerat, libero augue imperdiet pede, quis pretium nisi est et sapien. Maecenas eu augue a lectus dictum gravida. Nam quis enim at nibh viverra tempus. Integer feugiat eros vitae purus. Integer varius. Nam ligula ipsum, tempus ut, rutrum non, malesuada ac, lorem. Donec nisl. Maecenas quis ante. Praesent vel lectus vitae velit bibendum sollicitudin. Donec posuere. Fusce fermentum congue tortor. Sed facilisis, leo in fringilla suscipit, justo eros mattis nisi, sit amet sollicitudin libero nisl sit amet augue. In ultrices imperdiet ipsum. Quisque varius est id pede. Sed felis sem, aliquet vel, suscipit sit amet, lobortis ac, nisl. Proin auctor imperdiet nisl. Sed quis enim. Cras mollis. Morbi nunc justo, feugiat a, bibendum sit amet, egestas sed, lectus.\";\nString text3 = \"Proin tristique, elit at blandit vestibulum, odio eros ultrices urna, eget accumsan sapien lorem vitae lacus. Cras elit nisi, lacinia ac, sagittis sed, convallis eu, enim. Donec felis magna, ullamcorper tristique, placerat volutpat, sollicitudin et, elit. Donec tempus nulla ac erat. Suspendisse potenti. Curabitur bibendum, est in congue placerat, nisi enim tempor nunc, sit amet bibendum neque tellus in eros. Ut laoreet libero. Phasellus vel risus vitae elit faucibus tristique. Nulla eu pede. Cras eleifend. Nulla facilisi. Integer lobortis. Donec magna. Quisque ut mauris. Duis at magna et metus pharetra hendrerit. Nullam augue. Aliquam nunc. Cras non enim. Quisque ac est ut pede sodales pulvinar. Quisque augue.\";\n\nui.TabPanel panel = new ui.TabPanel();\nui.FlowPanel flowpanel;\n\nflowpanel = new ui.FlowPanel();\nflowpanel.add(new ui.Label(text1));\npanel.addTabText(flowpanel, \"One\");\n\nflowpanel = new ui.FlowPanel();\nflowpanel.add(new ui.Label(text2));\npanel.addTabText(flowpanel, \"Two\");\n\nflowpanel = new ui.FlowPanel();\nflowpanel.add(new ui.Label(text3));\npanel.addTabText(flowpanel, \"Three\");\n\npanel.selectTab(0);\n\npanel.setSize(\"500px\", \"250px\");\npanel.setAnimationEnabled(true);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel, flowpanel, t1, t2, t3;
    panel = $.TabPanel$();
    flowpanel = $.FlowPanel$();
    t1 = $.Label$("Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut sit amet pede eu nulla volutpat tempor. Vestibulum porttitor. Nulla ut augue. Morbi sollicitudin elit sit amet lectus. Nullam convallis condimentum dolor. Ut viverra. Suspendisse aliquet dui ullamcorper tellus. Vestibulum eros. Praesent nec justo vitae erat imperdiet gravida. Suspendisse non ante vitae leo eleifend auctor. In lacus nulla, posuere sit amet, fringilla ut, scelerisque et, risus. Nulla ornare, lorem tempor dictum aliquam, pede justo lacinia felis, vel mattis dui lorem quis eros.", null);
    t2 = flowpanel._element;
    t1.removeFromParent$0();
    t3 = flowpanel._children;
    t3.insert$2(t3, t1, t3._size);
    $.append$1$x(t2, t1.getElement$0());
    t1.setParent$1(flowpanel);
    t1 = panel.deck;
    t1.insertProtectedTabText$4(flowpanel, "One", false, t1._children._size);
    flowpanel = $.FlowPanel$();
    t1 = $.Label$("Sed egestas, arcu nec accumsan placerat, libero augue imperdiet pede, quis pretium nisi est et sapien. Maecenas eu augue a lectus dictum gravida. Nam quis enim at nibh viverra tempus. Integer feugiat eros vitae purus. Integer varius. Nam ligula ipsum, tempus ut, rutrum non, malesuada ac, lorem. Donec nisl. Maecenas quis ante. Praesent vel lectus vitae velit bibendum sollicitudin. Donec posuere. Fusce fermentum congue tortor. Sed facilisis, leo in fringilla suscipit, justo eros mattis nisi, sit amet sollicitudin libero nisl sit amet augue. In ultrices imperdiet ipsum. Quisque varius est id pede. Sed felis sem, aliquet vel, suscipit sit amet, lobortis ac, nisl. Proin auctor imperdiet nisl. Sed quis enim. Cras mollis. Morbi nunc justo, feugiat a, bibendum sit amet, egestas sed, lectus.", null);
    t2 = flowpanel._element;
    t1.removeFromParent$0();
    t3 = flowpanel._children;
    t3.insert$2(t3, t1, t3._size);
    $.append$1$x(t2, t1.getElement$0());
    t1.setParent$1(flowpanel);
    t1 = panel.deck;
    t1.insertProtectedTabText$4(flowpanel, "Two", false, t1._children._size);
    flowpanel = $.FlowPanel$();
    t1 = $.Label$("Proin tristique, elit at blandit vestibulum, odio eros ultrices urna, eget accumsan sapien lorem vitae lacus. Cras elit nisi, lacinia ac, sagittis sed, convallis eu, enim. Donec felis magna, ullamcorper tristique, placerat volutpat, sollicitudin et, elit. Donec tempus nulla ac erat. Suspendisse potenti. Curabitur bibendum, est in congue placerat, nisi enim tempor nunc, sit amet bibendum neque tellus in eros. Ut laoreet libero. Phasellus vel risus vitae elit faucibus tristique. Nulla eu pede. Cras eleifend. Nulla facilisi. Integer lobortis. Donec magna. Quisque ut mauris. Duis at magna et metus pharetra hendrerit. Nullam augue. Aliquam nunc. Cras non enim. Quisque ac est ut pede sodales pulvinar. Quisque augue.", null);
    t2 = flowpanel._element;
    t1.removeFromParent$0();
    t3 = flowpanel._children;
    t3.insert$2(t3, t1, t3._size);
    $.append$1$x(t2, t1.getElement$0());
    t1.setParent$1(flowpanel);
    t1 = panel.deck;
    t1.insertProtectedTabText$4(flowpanel, "Three", false, t1._children._size);
    panel.tabBar.selectTab$2(0, true);
    panel.setWidth$1("500px");
    panel.setHeight$1("250px");
    panel.deck._isAnimationEnabled = true;
    return panel;
  }
};

$$.VerticalPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "VerticalPanel";
  },
  get$desc: function() {
    return "A panel that lays all of its widgets out in a single vertical column.\n";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.spacing = 5;\n\n// Add some content to the panel\nfor (int i = 1; i < 5; i++) {\n  vPanel.add(new ui.Button(\"Button $i\"));\n}\n\nreturn vPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, i;
    vPanel = $.VerticalPanel$();
    vPanel.set$spacing(vPanel, 5);
    for (i = 1; i < 5; ++i)
      vPanel.add$1(vPanel, $.Button$("Button " + i, null));
    return vPanel;
  }
};

$$.VerticalSplitPanelModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Panel";
  },
  get$name: function(_) {
    return "VerticalSplitPanel";
  },
  get$desc: function() {
    return "A panel that arranges two widgets in a single vertical column and allows the \nuser to interactively change the proportion of the height dedicated to each of \nthe two widgets. Widgets contained within a VerticalSplitterPanel will be \nautomatically decorated with scrollbars when necessary.\n\nThis widget will only work in quirks mode. If your application is in Standards \nMode, use SplitLayoutPanel instead.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("VerticalSplitPanel not implemented yet.", null);
  }
};

$$.DialogBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Popup";
  },
  get$name: function(_) {
    return "DialogBox";
  },
  get$desc: function() {
    return "A form of popup that has a caption area at the top and can be dragged by the \nuser. Unlike a PopupPanel, calls to PopupPanel.setWidth(String) and \nPopupPanel.setHeight(String) will set the width and height of the dialog box \nitself, even if a widget has not been added as yet.\n";
  },
  get$code: function(_) {
    return "// Create the dialog box\nui.DialogBox dialogBox = _createDialogBox();\ndialogBox.setGlassEnabled(false);\ndialogBox.setAnimationEnabled(true);\n\n// Create a button to show the popup\nui.Button openButton = new ui.Button(\"Show Dialog Box\", new event.ClickHandlerAdapter((event.ClickEvent evt){\n  dialogBox.show();\n  dialogBox.center();\n}));\n\nreturn openButton;\n\n\n\n/**\n * Create the dialog box for this example.\n *\n * @return the new dialog box\n */\nui.DialogBox _createDialogBox() {\n  // Create a dialog box and set the caption text\n  ui.DialogBox dialogBox = new ui.DialogBox();\n  dialogBox.text = \"Sample DialogBox\";\n\n  // Create a table to layout the content\n  ui.VerticalPanel dialogContents = new ui.VerticalPanel();\n  dialogContents.spacing = 4;\n  dialogBox.setWidget(dialogContents);\n\n  // Add some text to the top of the dialog\n  ui.Html details = new ui.Html(\"This is an example of a standard dialog box component.\");\n  dialogContents.add(details);\n  dialogContents.setWidgetCellHorizontalAlignment(details, i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n  // Add an image to the dialog\n  ui.Image image = new ui.Image(\"img/lights.png\");\n  dialogContents.add(image);\n  dialogContents.setWidgetCellHorizontalAlignment(image, i18n.HasHorizontalAlignment.ALIGN_CENTER);\n\n  // Add a close button at the bottom of the dialog\n  ui.Button closeButton = new ui.Button(\"Close\", new event.ClickHandlerAdapter((event.ClickEvent evt){\n    dialogBox.hide();\n  }));\n  dialogContents.add(closeButton);\n  if (i18n.LocaleInfo.getCurrentLocale().isRTL()) {\n    dialogContents.setWidgetCellHorizontalAlignment(closeButton, i18n.HasHorizontalAlignment.ALIGN_LEFT);\n  } else {\n    dialogContents.setWidgetCellHorizontalAlignment(closeButton, i18n.HasHorizontalAlignment.ALIGN_RIGHT);\n  }\n\n  // Return the dialog box\n  return dialogBox;\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var dialogBox = $._createDialogBox();
    dialogBox.setGlassEnabled$1(false);
    dialogBox._isAnimationEnabled = true;
    return $.Button$("Show Dialog Box", $.ClickHandlerAdapter$(new $.DialogBoxModel_asWidget_anon(dialogBox)));
  }
};

$$.DialogBoxModel_asWidget_anon = {"": "Closure;dialogBox_0",
  call$1: function(evt) {
    var t1 = this.dialogBox_0;
    if (t1.resizeHandlerRegistration == null)
      ;
    $.PopupPanel.prototype.show$0.call(t1, t1);
    t1.center$0();
  }
};

$$._createDialogBox_anon = {"": "Closure;dialogBox_0",
  call$1: function(evt) {
    var t1, t2;
    t1 = this.dialogBox_0;
    t2 = t1.resizeHandlerRegistration;
    if (t2 != null) {
      t2.removeHandler$0();
      t1.resizeHandlerRegistration = null;
    }
    $.PopupPanel.prototype.hide$1.call(t1, false);
  }
};

$$.PopupPanelModel = {"": "ViewModel;",
  get$category: function() {
    return "Popup";
  },
  get$name: function(_) {
    return "PopupPanel";
  },
  get$desc: function() {
    return "A panel that can \"pop up\" over other widgets. It overlays the browser's client \narea (and any previously-created popups).\n\nA PopupPanel should not generally be added to other panels; rather, it should \nbe shown and hidden using the show() and hide() methods.\n\nThe width and height of the PopupPanel cannot be explicitly set; they are \ndetermined by the PopupPanel's widget. Calls to setWidth(String) and \nsetHeight(String) will call these methods on the PopupPanel's widget.\n\nThe PopupPanel can be optionally displayed with a \"glass\" element behind it, \nwhich is commonly used to gray out the widgets behind it. It can be enabled \nusing setGlassEnabled(boolean). It has a default style name of \n\"dwt-PopupPanelGlass\", which can be changed using setGlassStyleName(String).\n";
  },
  get$code: function(_) {
    return "// Create a basic popup widget\nui.DecoratedPopupPanel simplePopup = new ui.DecoratedPopupPanel(true);\nsimplePopup.setWidth(\"150px\");\n//simplePopup.setGlassEnabled(true);\nsimplePopup.setWidget(new ui.Html(\"Click anywhere outside this popup to make it disappear.\"));\n\n// Create a button to show the popup\nui.Button openButton = new ui.Button(\"Show Basic Popup\", new event.ClickHandlerAdapter((event.ClickEvent evt){\n  // Reposition the popup relative to the button\n  dart_html.ButtonElement source = evt.getSource();\n  \n  int left = event.Dom.getAbsoluteLeft(source) + 10;\n  int top = event.Dom.getAbsoluteTop(source) + 10;\n  \n  simplePopup.setPopupPosition(left, top);\n\n  // Show the popup\n  simplePopup.show();\n}));\n\nreturn openButton;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var simplePopup, t1;
    simplePopup = $.DecoratedPopupPanel$(true, false, "popup");
    simplePopup.desiredWidth = "150px";
    simplePopup.maybeUpdateSize$0();
    t1 = $.Html$("Click anywhere outside this popup to make it disappear.", null);
    simplePopup._decPanel.setWidget$1(t1);
    simplePopup.maybeUpdateSize$0();
    return $.Button$("Show Basic Popup", $.ClickHandlerAdapter$(new $.PopupPanelModel_asWidget_anon(simplePopup)));
  }
};

$$.PopupPanelModel_asWidget_anon = {"": "Closure;simplePopup_0",
  call$1: function(evt) {
    var source, t1, t2, t3;
    source = evt.getSource$0();
    t1 = $.get$Dom_impl().getAbsoluteLeft$1(source);
    t2 = $.get$Dom_impl().getAbsoluteTop$1(source);
    t3 = this.simplePopup_0;
    t3.setPopupPosition$2(t1 + 10, t2 + 10);
    t3.show$0(t3);
  }
};

$$.ButtonModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Button";
  },
  get$desc: function() {
    return "Basic Button";
  },
  get$code: function(_) {
    return "// Layout buttons in horizontal panel\nui.HorizontalPanel hPanel = new ui.HorizontalPanel();\nhPanel.spacing = 10;\n\n// Add a normal button\nui.Button normalButton = new ui.Button(\n    \"Normal Button\", new event.ClickHandlerAdapter((event.ClickEvent event) {\n      dart_html.window.alert(\"Stop poking me!\");\n    }));\nhPanel.add(normalButton);\n\n// Add a disabled button\nui.Button disabledButton = new ui.Button(\"Disabled Button\");\ndisabledButton.enabled = false;\nhPanel.add(disabledButton);\n\nreturn hPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var hPanel, normalButton, td, t1, disabledButton;
    hPanel = $.HorizontalPanel$();
    hPanel.set$spacing(hPanel, 10);
    normalButton = $.Button$("Normal Button", $.ClickHandlerAdapter$(new $.ButtonModel_asWidget_anon()));
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    normalButton.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, normalButton, t1._size);
    td.appendChild(normalButton.getElement$0());
    normalButton.setParent$1(hPanel);
    disabledButton = $.Button$("Disabled Button", null);
    disabledButton.set$enabled(disabledButton, false);
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    disabledButton.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, disabledButton, t1._size);
    td.appendChild(disabledButton.getElement$0());
    disabledButton.setParent$1(hPanel);
    return hPanel;
  }
};

$$.ButtonModel_asWidget_anon = {"": "Closure;",
  call$1: function($event) {
    window.alert("Stop poking me!");
  }
};

$$.CheckBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "CheckBox";
  },
  get$desc: function() {
    return "Basic Checkbox";
  },
  get$code: function(_) {
    return "ui.Label selectedDaysOfWeek = new ui.Label();\n    \n// Create a vertical panel to align the check boxes\nui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.add(new ui.Html(\"Check all days that you are available:\"));\n\n// Add a checkbox for each day of the week\nList<String> daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\nfor (int i = 0; i < daysOfWeek.length; i++) {\n  String day = daysOfWeek[i];\n  ui.CheckBox checkBox = new ui.CheckBox(day);\n\n  // Disable the weekends\n  if (i >= 5) {\n    checkBox.enabled = false;\n  } else {\n    checkBox.addValueChangeHandler(new event.ValueChangeHandlerAdapter((event.ValueChangeEvent evt){\n      StringBuffer sb = new StringBuffer();\n      // Move through all children and check selected\n      vPanel.getChildren().forEach((ui.Widget widget){\n        if (widget is ui.CheckBox && (widget as ui.CheckBox).getValue()) {\n          if (sb.length > 0) {\n            sb.write(\", \");\n          }\n          sb.write(widget.text);\n        }\n      });\n      selectedDaysOfWeek.text = sb.toString();\n    }));\n  }\n\n  vPanel.add(checkBox);\n}\n\nvPanel.add(new ui.Html(\"<hr/>\"));\nui.HorizontalPanel hBox = new ui.HorizontalPanel();\n// List of selected days of week\nhBox.add(new ui.Label(\"Selected: \"));\nhBox.add(selectedDaysOfWeek);\nvPanel.add(hBox);\n\nreturn vPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var selectedDaysOfWeek, vPanel, daysOfWeek, i, checkBox, t1, t2, t3, hBox, td;
    selectedDaysOfWeek = $.Label$(null, null);
    vPanel = $.VerticalPanel$();
    vPanel.add$1(vPanel, $.Html$("Check all days that you are available:", null));
    daysOfWeek = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
    for (i = 0; i < daysOfWeek.length; ++i) {
      checkBox = $.CheckBox$(daysOfWeek[i], false);
      if (i >= 5)
        checkBox.set$enabled(checkBox, false);
      else {
        t1 = $.ValueChangeHandlerAdapter$(new $.CheckBoxModel_asWidget_anon(selectedDaysOfWeek, vPanel));
        if (!checkBox._valueChangeHandlerInitialized) {
          checkBox.ensureDomEventHandlers$0();
          checkBox._valueChangeHandlerInitialized = true;
        }
        t2 = $.get$ValueChangeEvent_TYPE();
        t3 = checkBox._eventBus;
        if (t3 == null) {
          t3 = $.SimpleEventBus$(null);
          checkBox._eventBus = t3;
        }
        t3._doAdd$3(t2, $.get$SimpleEventBus__emptySource(), t1);
      }
      vPanel.add$1(vPanel, checkBox);
    }
    vPanel.add$1(vPanel, $.Html$("<hr/>", null));
    hBox = $.HorizontalPanel$();
    t1 = $.Label$("Selected: ", null);
    td = document.createElement("td");
    t2 = hBox._horzAlign;
    $.set$textAlign$x(td.style, t2.getTextAlignString$0());
    t2 = hBox._vertAlign;
    $.set$verticalAlign$x(td.style, t2.getVerticalAlignString$0());
    hBox._tableRow.appendChild(td);
    t1.removeFromParent$0();
    t2 = hBox._children;
    t2.insert$2(t2, t1, t2._size);
    td.appendChild(t1.getElement$0());
    t1.setParent$1(hBox);
    td = document.createElement("td");
    t1 = hBox._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hBox._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hBox._tableRow.appendChild(td);
    selectedDaysOfWeek.removeFromParent$0();
    t1 = hBox._children;
    t1.insert$2(t1, selectedDaysOfWeek, t1._size);
    td.appendChild(selectedDaysOfWeek.getElement$0());
    selectedDaysOfWeek.setParent$1(hBox);
    vPanel.add$1(vPanel, hBox);
    return vPanel;
  }
};

$$.CheckBoxModel_asWidget_anon = {"": "Closure;selectedDaysOfWeek_0,vPanel_1",
  call$1: function(evt) {
    var sb, t1;
    sb = $.StringBuffer$("");
    t1 = this.vPanel_1._children;
    t1.forEach$1(t1, new $.CheckBoxModel_asWidget__anon(sb));
    t1 = this.selectedDaysOfWeek_0;
    t1.set$text(t1, sb._contents);
  }
};

$$.CheckBoxModel_asWidget__anon = {"": "Closure;sb_2",
  call$1: function(widget) {
    var t1, str;
    if (typeof widget === "object" && widget !== null && !!$.getInterceptor(widget).$isCheckBox && widget.getValue$0() === true) {
      t1 = this.sb_2;
      if (t1.get$length(t1) > 0)
        t1._contents = t1._contents + ", ";
      str = $.get$text$x(widget);
      str = typeof str === "string" ? str : $.S(str);
      t1._contents = t1._contents + str;
    }
  }
};

$$.CompositeModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Composite";
  },
  get$desc: function() {
    return "The Composite is a wrapper for another widget. It hides all the wrapped widget's methods and properties.";
  },
  get$code: function(_) {
    return "// In our code\nreturn new _DisplayBox(\"Header\", \"This is my data\");\n\n// In some where...\nclass DisplayBox extends ui.Composite {\n\n    DisplayBox(String header, String data) {\n      ui.VerticalPanel widget = new ui.VerticalPanel();\n      initWidget(widget);\n      widget.addStyleName(\"demo-Composite\");\n\n      ui.Label headerText = new ui.Label(header);\n      widget.add(headerText);\n      headerText.addStyleName(\"demo-Composite-header\");\n\n      ui.Label dataText = new ui.Label(data);\n      widget.add(dataText);\n      dataText.addStyleName(\"demo-Composite-data\");\n    }\n}\n";
  },
  get$style: function(_) {
    return ".demo-Composite\n{\n  background-color  : #ffc;\n  border            : 3px solid #009;\n  margin            : 0 auto;\n}\n.demo-Composite-header\n{\n  background-color  : #ff0;\n  font-size         : 90%;\n  font-weight       : bold;\n  border-bottom     : 3px solid #009;\n  padding           : 5px;\n  text-align        : center;\n}\n.demo-Composite-data\n{\n  font-size         : 80%;\n  padding           : 15px;\n}\n";
  },
  asWidget$0: function() {
    return $._DisplayBox$("Header", "This is my data");
  }
};

$$._DisplayBox = {"": "Composite;_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _DisplayBox$2: function(header, data) {
    var widget, headerText, dataText;
    widget = $.VerticalPanel$();
    this.initWidget$1(widget);
    widget.addStyleName$1("demo-Composite");
    headerText = $.Label$(header, null);
    widget.add$1(widget, headerText);
    headerText.addStyleName$1("demo-Composite-header");
    dataText = $.Label$(data, null);
    widget.add$1(widget, dataText);
    dataText.addStyleName$1("demo-Composite-data");
  }
};

$$.DateBoxModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "DateBox";
  },
  get$desc: function() {
    return "A text box that shows a DatePicker when the user focuses on it.";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("DateBox not implemented yet.", null);
  }
};

$$.DatePickerModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "DatePicker";
  },
  get$desc: function() {
    return "Standard date picker.";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("DatePicker not implemented yet.", null);
  }
};

$$.DoubleBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "DoubleBox";
  },
  get$desc: function() {
    return "A ValueBox that uses DoubleParser and DoubleRenderer.";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.spacing = 4;\n    \nvPanel.add(new ui.Label(\"Type for validation\"));\n// Double boxNan\nui.DoubleBox boxV = new ui.DoubleBox();\nvPanel.add(boxV);\n// Value and validator\nui.Label validOutput = new ui.Label(\"Output is ${_validateField(boxV)}\");\nvPanel.add(validOutput);\nboxV.addKeyUpHandler(new event.KeyUpHandlerAdapter((event.KeyUpEvent evt){\n  validOutput.text = \"Output is ${_validateField(boxV)}\";\n}));\n\nreturn vPanel;\n\n\n\nString _validateField(ui.DoubleBox box) {\n  double value = box.getValue();\n  if (value == null) {\n    return \"not valid\";\n  } else {\n    return value.toString();\n  }\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, boxV, validOutput;
    vPanel = $.VerticalPanel$();
    vPanel.set$spacing(vPanel, 4);
    vPanel.add$1(vPanel, $.Label$("Type for validation", null));
    boxV = $.DoubleBox$();
    vPanel.add$1(vPanel, boxV);
    validOutput = $.Label$("Output is " + $.S(this._validateField$1(boxV)), null);
    vPanel.add$1(vPanel, validOutput);
    boxV.addDomHandler$2($.KeyUpHandlerAdapter$(new $.DoubleBoxModel_asWidget_anon(this, boxV, validOutput)), $.get$KeyUpEvent_TYPE());
    return vPanel;
  },
  _validateField$1: function(box) {
    var value = box.getValue$0();
    if (value == null)
      return "not valid";
    else
      return $.toString$0(value);
  }
};

$$.DoubleBoxModel_asWidget_anon = {"": "Closure;this_0,boxV_1,validOutput_2",
  call$1: function(evt) {
    var t1 = this.validOutput_2;
    t1.set$text(t1, "Output is " + $.S(this.this_0._validateField$1(this.boxV_1)));
  }
};

$$.FileUploadModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "FileUpload";
  },
  get$desc: function() {
    return "A widget that wraps the HTML <input type='file'> element. This widget must be used with FormPanel if it is to be submitted to a server.";
  },
  get$code: function(_) {
    return "// Create a vertical panel to align the content\nui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.spacing = 4;\n\n// Add a label\nvPanel.add(new ui.Html(\"Select File\"));\n\n// Add a file upload widget\nui.FileUpload fileUpload = new ui.FileUpload();\nvPanel.add(fileUpload);\n\n// Add a button to upload the file\nui.Button uploadButton = new ui.Button(\"Upload\");\nuploadButton.addClickHandler(new event.ClickHandlerAdapter((event.ClickEvent evt) {\n  String filename = fileUpload.getFilename();\n  if (filename.length == 0) {\n    dart_html.window.alert(\"File not selected\");\n  } else {\n    dart_html.window.alert(\"File uploaded successfully\");\n  }\n}));\nvPanel.add(new ui.Html(\"<br>\"));\nvPanel.add(uploadButton);\n// Return the layout panel\nreturn vPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, fileUpload, uploadButton;
    vPanel = $.VerticalPanel$();
    vPanel.set$spacing(vPanel, 4);
    vPanel.add$1(vPanel, $.Html$("Select File", null));
    fileUpload = $.FileUpload$($);
    vPanel.add$1(vPanel, fileUpload);
    uploadButton = $.Button$("Upload", null);
    uploadButton.addDomHandler$2($.ClickHandlerAdapter$(new $.FileUploadModel_asWidget_anon(fileUpload)), $.get$ClickEvent_TYPE());
    vPanel.add$1(vPanel, $.Html$("<br>", null));
    vPanel.add$1(vPanel, uploadButton);
    return vPanel;
  }
};

$$.FileUploadModel_asWidget_anon = {"": "Closure;fileUpload_0",
  call$1: function(evt) {
    if ($.$eq($.get$length$asx($.get$value$x(this.fileUpload_0._element)), 0) === true)
      window.alert("File not selected");
    else
      window.alert("File uploaded successfully");
  }
};

$$.HiddenModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Hidden";
  },
  get$desc: function() {
    return "Represents a hidden field in an HTML form.";
  },
  get$code: function(_) {
    return "//create textboxes\nui.TextBox textBox = new ui.TextBox(); \ntextBox.setWidth(\"275px\");\nui.Button button1 = new ui.Button(\"Set Value of Hidden Input\");\nui.Button button2 = new ui.Button(\"Get Value of Hidden Input\");\nui.Hidden hidden = new ui.Hidden();\n\nbutton1.addClickHandler(new event.ClickHandlerAdapter((event.ClickEvent event) {\n  String t = textBox.getValue();\n  hidden.setValue(t);\n  dart_html.window.alert(\"Value of Hidden Widget Updated!\");\n}));\n\nbutton2.addClickHandler(new event.ClickHandlerAdapter((event.ClickEvent event) {\n  String t = hidden.getValue();\n  dart_html.window.alert(\"Value of Hidden Widget: $t\");       \n}));\n\n// Add widgets to the root panel.\nui.VerticalPanel panel = new ui.VerticalPanel();\npanel.spacing = 10;\npanel.add(textBox);\npanel.add(button1);\npanel.add(hidden);\npanel.add(button2);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var textBox, button1, button2, hidden, panel;
    textBox = $.TextBox$();
    $.setProperty$2$x($.get$style$x(textBox._element), "width", "275px");
    button1 = $.Button$("Set Value of Hidden Input", null);
    button2 = $.Button$("Get Value of Hidden Input", null);
    hidden = $.Hidden$(null, null);
    button1.addDomHandler$2($.ClickHandlerAdapter$(new $.HiddenModel_asWidget_anon(textBox, hidden)), $.get$ClickEvent_TYPE());
    button2.addDomHandler$2($.ClickHandlerAdapter$(new $.HiddenModel_asWidget_anon0(hidden)), $.get$ClickEvent_TYPE());
    panel = $.VerticalPanel$();
    panel.set$spacing(panel, 10);
    panel.add$1(panel, textBox);
    panel.add$1(panel, button1);
    panel.add$1(panel, hidden);
    panel.add$1(panel, button2);
    return panel;
  }
};

$$.HiddenModel_asWidget_anon = {"": "Closure;textBox_0,hidden_1",
  call$1: function($event) {
    var raw, t;
    raw = $.ValueBoxBase.prototype.getValue$0.call(this.textBox_0);
    t = raw == null ? "" : raw;
    $.interceptedTypeCast(this.hidden_1._element, "$isInputElement").value = t;
    window.alert("Value of Hidden Widget Updated!");
  }
};

$$.HiddenModel_asWidget_anon0 = {"": "Closure;hidden_2",
  call$1: function($event) {
    var t = $.interceptedTypeCast(this.hidden_2._element, "$isInputElement").value;
    window.alert("Value of Hidden Widget: " + $.S(t));
  }
};

$$.HtmlModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Html";
  },
  get$desc: function() {
    return "A widget that can contain arbitrary Html. This widget \nuses a <div> element, causing it to be displayed with block layout. If you only \nneed a simple label (text, but not HTML), then the Label widget is more \nappropriate, as it disallows the use of HTML, which can lead to potential \nsecurity issues if not used properly.";
  },
  get$code: function(_) {
    return "// Create a Label and an Html widget.\nui.Label lbl = new ui.Label(\"This is just text.  It will not be interpreted as <html>.\");\n\nui.Html html = new ui.Html(\"This is <b>HTML</b>.\");\n\n// Add them to the root panel.\nui.VerticalPanel panel = new ui.VerticalPanel();\npanel.add(lbl);\npanel.add(html);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var lbl, html, panel;
    lbl = $.Label$("This is just text.  It will not be interpreted as <html>.", null);
    html = $.Html$("This is <b>HTML</b>.", null);
    panel = $.VerticalPanel$();
    panel.add$1(panel, lbl);
    panel.add$1(panel, html);
    return panel;
  }
};

$$.HyperlinkModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Hyperlink";
  },
  get$desc: function() {
    return "A widget that serves as an \"internal\" hyperlink. That is, it is a link to another state of the running application. When clicked, it will create a new history frame using History.newItem(java.lang.String), but without reloading the page.\n\nIf you want an HTML hyperlink (<a> tag) without interacting with the history system, use Anchor instead.\n\nBeing a true hyperlink, it is also possible for the user to \"right-click, open link in new window\", which will cause the application to be loaded in a new window at the state specified by the hyperlink.\n";
  },
  get$code: function(_) {
    return "ui.Label lbl = new ui.Label();\n\n// Create three hyperlinks that change the application's history.\nui.Hyperlink link0 = new ui.Hyperlink(\"link to foo\", false, \"foo\");\nui.Hyperlink link1 = new ui.Hyperlink(\"link to bar\", false, \"bar\");\nui.Hyperlink link2 = new ui.Hyperlink(\"link to baz\", false, \"baz\");\n\n// If the application starts with no history token, redirect to a new\n// 'baz' state.\nString initToken = ui.History.getToken();\nif (initToken.length == 0) {\n  ui.History.newItem(\"baz\");\n}\n\n// Add widgets to the root panel.\nui.VerticalPanel panel = new ui.VerticalPanel();\npanel.add(lbl);\npanel.add(link0);\npanel.add(link1);\npanel.add(link2);\n\n// Add history listener\nui.History.addValueChangeHandler(new event.ValueChangeHandlerAdapter((event.ValueChangeEvent<String> evt){\n  // This method is called whenever the application's history changes. Set\n  // the label to reflect the current history token.\n  lbl.text = \"The current history token is: ${evt.value}\";\n}));\n\n// Now that we've setup our listener, fire the initial history state.\nui.History.fireCurrentHistoryState();\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var lbl, link0, link1, link2, t1, initToken, panel, t2, token;
    lbl = $.Label$(null, null);
    link0 = $.Hyperlink$("link to foo", false, "foo");
    link1 = $.Hyperlink$("link to bar", false, "bar");
    link2 = $.Hyperlink$("link to baz", false, "baz");
    $.History_init();
    if ($.History__impl != null) {
      t1 = $.HistoryImpl__token;
      initToken = t1 == null ? "" : t1;
    } else
      initToken = "";
    if (initToken.length === 0) {
      $.History_init();
      t1 = $.History__impl;
      if (t1 != null)
        t1.newItem$2("baz", true);
    }
    panel = $.VerticalPanel$();
    panel.add$1(panel, lbl);
    panel.add$1(panel, link0);
    panel.add$1(panel, link1);
    panel.add$1(panel, link2);
    t1 = $.ValueChangeHandlerAdapter$(new $.HyperlinkModel_asWidget_anon(lbl));
    $.History_init();
    t2 = $.History__impl;
    if (t2 != null)
      t2._handlers._doAdd$3($.get$ValueChangeEvent_TYPE(), $.get$SimpleEventBus__emptySource(), t1);
    $.History_init();
    if ($.History__impl != null) {
      $.History_init();
      t1 = $.History__impl;
      if (t1 != null) {
        t2 = $.HistoryImpl__token;
        token = t2 == null ? "" : t2;
      } else
        token = "";
      $.get$ValueChangeEvent_TYPE();
      t1.fireEvent$1($.ValueChangeEvent$(token));
    }
    return panel;
  }
};

$$.HyperlinkModel_asWidget_anon = {"": "Closure;lbl_0",
  call$1: function(evt) {
    var t1 = this.lbl_0;
    t1.set$text(t1, "The current history token is: " + $.S($.get$value$x(evt)));
  }
};

$$.ImageModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Image";
  },
  get$desc: function() {
    return "A widget that displays the image at a given URL. The image can be in 'unclipped' mode (the default) or 'clipped' mode. In clipped mode, a viewport is overlaid on top of the image so that a subset of the image will be displayed. In unclipped mode, there is no viewport - the entire image will be visible. Whether an image is in clipped or unclipped mode depends on how the image is constructed, and how it is transformed after construction. Methods will operate differently depending on the mode that the image is in. These differences are detailed in the documentation for each method.";
  },
  get$code: function(_) {
    return "ui.Button btn = new ui.Button(\"Clip this image\");\nui.Button btn2 = new ui.Button(\"Restore image\");\nString uri = \"http://www.google.com/images/logo.gif\";\n\n// Create an image, not yet referencing a URL. We make it final so that we\n// can manipulate the image object within the ClickHandlers for the buttons.\nui.Image image = new ui.Image(uri);\n\n// When the user clicks this button, we want to clip the image.\nbtn.addClickHandler(new event.ClickHandlerAdapter((event.ClickEvent evt) {\n  image.setVisibleRect(70, 0, 47, 110);\n}));\nbtn.setWidth(\"120px\");\n\n// When the user clicks this button, we want to restore the image to its\n// unclipped state.\nbtn2.addClickHandler(new event.ClickHandlerAdapter((event.ClickEvent evt) {\n  image.setUrl(uri);\n}));\nbtn2.setWidth(\"120px\");\n\n// Add the image, label, and clip/restore buttons to the root panel.\nui.VerticalPanel panel = new ui.VerticalPanel();\npanel.add(image);\n\nui.HorizontalPanel buttonPanel = new ui.HorizontalPanel();\nbuttonPanel.add(btn);\nbuttonPanel.add(btn2);\n\npanel.add(buttonPanel);\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var btn, btn2, image, panel, buttonPanel, td, t1;
    btn = $.Button$("Clip this image", null);
    btn2 = $.Button$("Restore image", null);
    image = $.Image$("http://www.google.com/images/logo.gif");
    btn.addDomHandler$2($.ClickHandlerAdapter$(new $.ImageModel_asWidget_anon(image)), $.get$ClickEvent_TYPE());
    $.setProperty$2$x($.get$style$x(btn._element), "width", "120px");
    btn2.addDomHandler$2($.ClickHandlerAdapter$(new $.ImageModel_asWidget_anon0("http://www.google.com/images/logo.gif", image)), $.get$ClickEvent_TYPE());
    $.setProperty$2$x($.get$style$x(btn2._element), "width", "120px");
    panel = $.VerticalPanel$();
    panel.add$1(panel, image);
    buttonPanel = $.HorizontalPanel$();
    td = document.createElement("td");
    t1 = buttonPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = buttonPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    buttonPanel._tableRow.appendChild(td);
    btn.removeFromParent$0();
    t1 = buttonPanel._children;
    t1.insert$2(t1, btn, t1._size);
    td.appendChild(btn.getElement$0());
    btn.setParent$1(buttonPanel);
    td = document.createElement("td");
    t1 = buttonPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = buttonPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    buttonPanel._tableRow.appendChild(td);
    btn2.removeFromParent$0();
    t1 = buttonPanel._children;
    t1.insert$2(t1, btn2, t1._size);
    td.appendChild(btn2.getElement$0());
    btn2.setParent$1(buttonPanel);
    panel.add$1(panel, buttonPanel);
    return panel;
  }
};

$$.ImageModel_asWidget_anon = {"": "Closure;image_0",
  call$1: function(evt) {
    var t1 = this.image_0;
    t1._liblib1$_state.setVisibleRect$5(t1, 70, 0, 47, 110);
  }
};

$$.ImageModel_asWidget_anon0 = {"": "Closure;uri_1,image_2",
  call$1: function(evt) {
    var t1, t2;
    t1 = this.image_2;
    t2 = $.SafeUriString$(this.uri_1);
    t1._liblib1$_state.setUrl$2(t1, t2);
  }
};

$$.InlineHtmlModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "InlineHtml";
  },
  get$desc: function() {
    return "A widget that can contain arbitrary HTML. This widget uses a <span> element, causing it to be displayed with inline layout.\nIf you only need a simple label (text, but not HTML), then the Label widget is more appropriate, as it disallows the use of HTML, which can lead to potential security issues if not used properly.\n";
  },
  get$code: function(_) {
    return "ui.InlineHtml inlineHtml = new ui.InlineHtml(\"<div id='fred' style='background-color: red; border: 1px dotted green; width: 200px; text-align: center;'> This is an INLINE HTML Widget </div>\");\n    \nreturn inlineHtml;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.InlineHtml$("<div id='fred' style='background-color: red; border: 1px dotted green; width: 200px; text-align: center;'> This is an INLINE HTML Widget </div>");
  }
};

$$.InlineHyperlinkModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "InlineHyperlink";
  },
  get$desc: function() {
    return "A widget that serves as an \"internal\" hyperlink. That is, it is a link to another state of the running application. It should behave exactly like Hyperlink, save that it lays out as an inline element, not block.\n";
  },
  get$code: function(_) {
    return "ui.InlineHyperlink inlineHyperlink = new ui.InlineHyperlink(\"Inline Hyperlink\", \"Home\");\n    \nreturn inlineHyperlink;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.InlineHyperlink$("Inline Hyperlink", false, "Home");
  }
};

$$.InlineLabelModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "InlineLabel";
  },
  get$desc: function() {
    return "A widget that contains arbitrary text, not interpreted as HTML. This widget uses a <span> element, causing it to be displayed with inline layout.\n";
  },
  get$code: function(_) {
    return "ui.InlineLabel inlineLabel = new ui.InlineLabel(\"This is Inline Label\");\n    \nreturn inlineLabel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.InlineLabel$("This is Inline Label");
  }
};

$$.IntegerBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "IntegerBox";
  },
  get$desc: function() {
    return "A ValueBox that uses IntegerParser and IntegerRenderer.";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.spacing = 4;\n    \nvPanel.add(new ui.Label(\"Type for validation\"));\n// Integer boxNan\nui.IntegerBox boxV = new ui.IntegerBox();\nvPanel.add(boxV);\n// Value and validator\nui.Label validOutput = new ui.Label(\"Output is ${_validateField(boxV)}\");\nvPanel.add(validOutput);\nboxV.addKeyUpHandler(new event.KeyUpHandlerAdapter((event.KeyUpEvent evt){\n  validOutput.text = \"Output is ${_validateField(boxV)}\";\n}));\n  \nreturn vPanel;\n\n\n\nString _validateField(ui.IntegerBox box) {\n  int value = box.getValue();\n  if (value == null) {\n    return \"not valid\";\n  } else {\n    return value.toString();\n  }\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, boxV, validOutput;
    vPanel = $.VerticalPanel$();
    vPanel.set$spacing(vPanel, 4);
    vPanel.add$1(vPanel, $.Label$("Type for validation", null));
    boxV = $.IntegerBox$();
    vPanel.add$1(vPanel, boxV);
    validOutput = $.Label$("Output is " + $.S(this._validateField$1(boxV)), null);
    vPanel.add$1(vPanel, validOutput);
    boxV.addDomHandler$2($.KeyUpHandlerAdapter$(new $.IntegerBoxModel_asWidget_anon(this, boxV, validOutput)), $.get$KeyUpEvent_TYPE());
    return vPanel;
  },
  _validateField$1: function(box) {
    var value = box.getValue$0();
    if (value == null)
      return "not valid";
    else
      return $.toString$0(value);
  }
};

$$.IntegerBoxModel_asWidget_anon = {"": "Closure;this_0,boxV_1,validOutput_2",
  call$1: function(evt) {
    var t1 = this.validOutput_2;
    t1.set$text(t1, "Output is " + $.S(this.this_0._validateField$1(this.boxV_1)));
  }
};

$$.LabelModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Label";
  },
  get$desc: function() {
    return "A widget that contains arbitrary text, not interpreted as HTML. This widget uses a <div> element, causing it to be displayed with block layout.";
  },
  get$code: function(_) {
    return "ui.Label widget = new ui.Label(\"This is a Label\");\n    \nreturn widget;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("This is a Label", null);
  }
};

$$.ListBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "ListBox";
  },
  get$desc: function() {
    return "A widget that presents a list of choices to the user.";
  },
  get$code: function(_) {
    return "List<String> listTypes = [\"Car Type\", \"Sport\", \"City\"];\nconst String NOTHING = \"nothing\";\n\n// Create a panel to align the Widgets\nui.HorizontalPanel hPanel = new ui.HorizontalPanel();\nhPanel.spacing = 20;\n\nui.Label selectedBox = new ui.Label(NOTHING);\n\n// Add a drop box with the list types\nui.ListBox dropBox = new ui.ListBox();\nfor (int i = 0; i < listTypes.length; i++) {\n  dropBox.addItem(listTypes[i]);\n}\nui.VerticalPanel dropBoxPanel = new ui.VerticalPanel();\ndropBoxPanel.spacing = 4;\ndropBoxPanel.add(dropBox);\nhPanel.add(dropBoxPanel);\n\n// Add a list box with multiple selection enabled\nui.ListBox multiBox = new ui.ListBox(true);\nmultiBox.setWidth(\"11em\");\nmultiBox.setVisibleItemCount(10);\nfor (int i = 0; i < listTypes.length; i++) {\n  multiBox.addItem(listTypes[i]);\n}\nui.VerticalPanel multiBoxPanel = new ui.VerticalPanel();\nmultiBoxPanel.spacing = 4;\nmultiBoxPanel.add(multiBox);\nhPanel.add(multiBoxPanel);\n\n// Add a drop box with the list types\nui.VerticalPanel selectedPanel = new ui.VerticalPanel();\nselectedPanel.spacing = 4;\nselectedPanel.add(new ui.Html(\"Selected:\"));\nselectedPanel.add(selectedBox);\nhPanel.add(selectedPanel);\n\n// Add a handler to handle drop box events\ndropBox.addChangeHandler(new event.ChangeHandlerAdapter((event.ChangeEvent event){\n  showCategory(multiBox, dropBox.getSelectedIndex());\n  selectedBox.text = NOTHING;\n}));\n\n// Add a handler to handle drop box events\nmultiBox.addChangeHandler(new event.ChangeHandlerAdapter((event.ChangeEvent event){\n  StringBuffer sb = new StringBuffer();\n  if (multiBox.isMultipleSelect()) {\n    for (int i = 0; i < multiBox.getItemCount(); i++) {\n      String txt = multiBox.getItemText(i);\n      if (multiBox.isItemSelected(i)) {\n        if (sb.length > 0) {\n          sb.write(\", \");\n        }\n        sb.write(txt);\n      }\n    }\n  } else {\n    sb.write(multiBox.getItemText(multiBox.getSelectedIndex()));\n  }\n  selectedBox.text = sb.toString().length > 0 ? sb.toString() : NOTHING;\n}));\n\n// Show default category\nshowCategory(multiBox, 0);\n\nreturn hPanel;\n\n...\n\n\n/**\n * Display the options for a given category in the list box.\n *\n * @param listBox the ListBox to add the options to\n * @param category the category index\n */\nvoid showCategory(ui.ListBox listBox, int category) {\n  listBox.clear();\n  List<String> listData = null;\n  switch (category) {\n    case 0:\n      listData = [\"compact\", \"sedan\", \"coupe\", \"convertable\", \"SUV\", \"truck\"];\n      break;\n    case 1:\n      listData = [\"Baseball\", \"Basketball\", \"Footbal\"];\n      break;\n    case 2:\n      listData = [\"Paris\", \"London\"];\n      break;\n  }\n  for (int i = 0; i < listData.length; i++) {\n    listBox.addItem(listData[i]);\n  }\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var listTypes, hPanel, selectedBox, dropBox, i, dropBoxPanel, td, t1, multiBox, multiBoxPanel, selectedPanel;
    listTypes = ["Car Type", "Sport", "City"];
    hPanel = $.HorizontalPanel$();
    hPanel.set$spacing(hPanel, 20);
    selectedBox = $.Label$("nothing", null);
    dropBox = $.ListBox$(false, null);
    for (i = 0; i < listTypes.length; ++i)
      dropBox.addItem$1(listTypes[i]);
    dropBoxPanel = $.VerticalPanel$();
    dropBoxPanel.set$spacing(dropBoxPanel, 4);
    dropBoxPanel.add$1(dropBoxPanel, dropBox);
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    dropBoxPanel.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, dropBoxPanel, t1._size);
    td.appendChild(dropBoxPanel.getElement$0());
    dropBoxPanel.setParent$1(hPanel);
    multiBox = $.ListBox$(true, null);
    $.setProperty$2$x($.get$style$x(multiBox._element), "width", "11em");
    $.interceptedTypeCast(multiBox._element, "$isSelectElement").size = 10;
    for (i = 0; i < listTypes.length; ++i)
      multiBox.addItem$1(listTypes[i]);
    multiBoxPanel = $.VerticalPanel$();
    multiBoxPanel.set$spacing(multiBoxPanel, 4);
    multiBoxPanel.add$1(multiBoxPanel, multiBox);
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    multiBoxPanel.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, multiBoxPanel, t1._size);
    td.appendChild(multiBoxPanel.getElement$0());
    multiBoxPanel.setParent$1(hPanel);
    selectedPanel = $.VerticalPanel$();
    selectedPanel.set$spacing(selectedPanel, 4);
    selectedPanel.add$1(selectedPanel, $.Html$("Selected:", null));
    selectedPanel.add$1(selectedPanel, selectedBox);
    td = document.createElement("td");
    t1 = hPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = hPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    hPanel._tableRow.appendChild(td);
    selectedPanel.removeFromParent$0();
    t1 = hPanel._children;
    t1.insert$2(t1, selectedPanel, t1._size);
    td.appendChild(selectedPanel.getElement$0());
    selectedPanel.setParent$1(hPanel);
    dropBox.addDomHandler$2($.ChangeHandlerAdapter$(new $.ListBoxModel_asWidget_anon(this, "nothing", selectedBox, dropBox, multiBox)), $.get$ChangeEvent_TYPE());
    multiBox.addDomHandler$2($.ChangeHandlerAdapter$(new $.ListBoxModel_asWidget_anon0("nothing", selectedBox, multiBox)), $.get$ChangeEvent_TYPE());
    this.showCategory$2(multiBox, 0);
    return hPanel;
  },
  showCategory$2: function(listBox, category) {
    var t1, listData, i;
    t1 = $.get$children$x($.interceptedTypeCast(listBox._element, "$isSelectElement"));
    t1.clear$0(t1);
    listData = null;
    switch (category) {
      case 0:
        listData = ["compact", "sedan", "coupe", "convertable", "SUV", "truck"];
        break;
      case 1:
        listData = ["Baseball", "Basketball", "Footbal"];
        break;
      case 2:
        listData = ["Paris", "London"];
        break;
    }
    for (i = 0; i < listData.length; ++i)
      listBox.addItem$1(listData[i]);
  }
};

$$.ListBoxModel_asWidget_anon = {"": "Closure;this_0,NOTHING_1,selectedBox_2,dropBox_3,multiBox_4",
  call$1: function($event) {
    var t1;
    this.this_0.showCategory$2(this.multiBox_4, $.interceptedTypeCast(this.dropBox_3._element, "$isSelectElement").selectedIndex);
    t1 = this.selectedBox_2;
    t1.set$text(t1, this.NOTHING_1);
  }
};

$$.ListBoxModel_asWidget_anon0 = {"": "Closure;NOTHING_5,selectedBox_6,multiBox_7",
  call$1: function($event) {
    var sb, t1, t2, i, txt, str, t3, t4;
    sb = $.StringBuffer$("");
    t1 = this.multiBox_7;
    t2 = $.interceptedTypeCast(t1._element, "$isSelectElement");
    if (t2.multiple === true)
      for (i = 0; t2 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement")), i < t2.get$length(t2); ++i) {
        t2 = $.get$options$x($.interceptedTypeCast(t1.getElement$0(), "$isSelectElement"));
        t2 = i >= t2.get$length(t2);
        if (t2)
          $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
        t2 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement"));
        txt = t1.getOptionText$1(t2.$index(t2, i));
        t2 = $.get$options$x($.interceptedTypeCast(t1.getElement$0(), "$isSelectElement"));
        t2 = i >= t2.get$length(t2);
        if (t2)
          $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
        t2 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement"));
        if ($.interceptedTypeCast(t2.$index(t2, i), "$isOptionElement").selected === true) {
          if (sb.get$length(sb) > 0)
            sb._contents = sb._contents + ", ";
          str = typeof txt === "string" ? txt : $.S(txt);
          sb._contents = sb._contents + str;
        }
      }
    else {
      t2 = t2.selectedIndex;
      t3 = $.getInterceptor$n(t2);
      if (!t3.$lt(t2, 0)) {
        t4 = $.get$options$x($.interceptedTypeCast(t1.getElement$0(), "$isSelectElement"));
        t4 = t3.$ge(t2, t4.get$length(t4));
        t3 = t4;
      } else
        t3 = true;
      if (t3)
        $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
      t3 = $.get$options$x($.interceptedTypeCast(t1._element, "$isSelectElement"));
      str = t1.getOptionText$1(t3.$index(t3, t2));
      str = typeof str === "string" ? str : $.S(str);
      sb._contents = sb._contents + str;
    }
    t1 = this.selectedBox_6;
    t2 = sb._contents;
    t1.set$text(t1, t2.length > 0 ? t2 : this.NOTHING_5);
  }
};

$$.MenuBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "MenuBar";
  },
  get$desc: function() {
    return "A standard menu bar widget. A menu bar can contain any number of menu items,\neach of which can either fire a {@link scheduler.ScheduledCommand} or open a cascaded menu bar.\n";
  },
  get$code: function(_) {
    return "// Create a command that will execute on menu item selection\n_MenuCommand menuCommand = new _MenuCommand();\n\n// Create a menu bar\nui.MenuBar menu = new ui.MenuBar();\nmenu.setAutoOpen(true);\nmenu.setWidth(\"500px\");\nmenu.setAnimationEnabled(true);\n\n// Create a sub menu of recent documents\nui.MenuBar recentDocsMenu = new ui.MenuBar(true);\nList<String> recentDocs = [\"Fishing in the desert.txt\", \"How to tame a wild parrot\", \"Idiots Guide to Emu Farms\"];\nfor (int i = 0; i < recentDocs.length; i++) {\n  recentDocsMenu.addTextItem(recentDocs[i], false, cmd:menuCommand);\n}\n\n// Create the file menu\nui.MenuBar fileMenu = new ui.MenuBar(true);\nfileMenu.setAnimationEnabled(true);\nmenu.addItem(new ui.MenuItem(\"File\", false, subMenu:fileMenu));\nList<String> fileOptions = [\"New\", \"Open\", \"Close\", \"Recent\", \"Exit\"];\nfor (int i = 0; i < fileOptions.length; i++) {\n  if (i == 3) {\n    fileMenu.addSeparator();\n    fileMenu.addTextItem(fileOptions[i], false, popup:recentDocsMenu);\n    fileMenu.addSeparator();\n  } else {\n    fileMenu.addTextItem(fileOptions[i], false, cmd:menuCommand);\n  }\n}\n\n// Create the edit menu\nui.MenuBar editMenu = new ui.MenuBar(true);\nmenu.addItem(new ui.MenuItem(\"Edit\", false, subMenu:editMenu));\nList<String> editOptions = [\"Undo\", \"Redo\", \"Cut\", \"Copy\", \"Paste\"];\nfor (int i = 0; i < editOptions.length; i++) {\n  editMenu.addTextItem(editOptions[i], false, cmd:menuCommand);\n}\n\n// Create the DWT menu\nui.MenuBar dwtMenu = new ui.MenuBar(true);\nmenu.addItem(new ui.MenuItem(\"DWT\", true, subMenu:dwtMenu));\nList<String> dwtOptions = [\"Download\", \"Examples\", \"Source Code\", \"DWT wit' the program\"];\nfor (int i = 0; i < dwtOptions.length; i++) {\n  dwtMenu.addTextItem(dwtOptions[i], false, cmd:menuCommand);\n}\n\n// Create the help menu\nui.MenuBar helpMenu = new ui.MenuBar(true);\nmenu.addSeparator();\nmenu.addItem(new ui.MenuItem(\"Help\", true, subMenu:helpMenu));\nList<String> helpOptions = [\"Contents\", \"Fortune Cookie\", \"About DWT\"];\nfor (int i = 0; i < helpOptions.length; i++) {\n  helpMenu.addTextItem(helpOptions[i], false, cmd:menuCommand);\n}\n\nreturn menu;\n\n\nclass _MenuCommand implements scheduler.ScheduledCommand {\n  int _curPhrase = 0;\n  final List<String> phrases = [\"Thank you for selecting a menu item\", \"A fine selection indeed\", \"Don't you have anything better to do than select menu items?\", \"Try something else\", \"this is just a menu!, Another wasted click\"];\n\n  void execute() {\n    dart_html.window.alert(phrases[_curPhrase]);\n    _curPhrase = (_curPhrase + 1) % phrases.length;\n  }\n}\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var menuCommand, menu, recentDocsMenu, recentDocs, t1, i, fileMenu, fileOptions, t2, separator, editMenu, editOptions, dwtMenu, dwtOptions, helpMenu, helpOptions;
    menuCommand = $._MenuCommand$();
    menu = $.MenuBar$(false, null);
    menu._autoOpen = true;
    $.setProperty$2$x($.get$style$x(menu._element), "width", "100%");
    menu._isAnimationEnabled = true;
    recentDocsMenu = $.MenuBar$(true, null);
    recentDocs = ["Fishing in the desert.txt", "How to tame a wild parrot", "Idiots Guide to Emu Farms"];
    for (t1 = recentDocsMenu._allItems, i = 0; i < recentDocs.length; ++i)
      recentDocsMenu.insertItem$2($.MenuItem$(recentDocs[i], false, menuCommand, null), t1.length);
    fileMenu = $.MenuBar$(true, null);
    fileMenu._isAnimationEnabled = true;
    t1 = menu._allItems;
    menu.insertItem$2($.MenuItem$("File", false, null, fileMenu), t1.length);
    fileOptions = ["New", "Open", "Close", "Recent", "Exit"];
    for (t2 = fileMenu._allItems, i = 0; i < fileOptions.length; ++i)
      if (i === 3) {
        separator = $.MenuItemSeparator$();
        fileMenu.insertSeparator$2(t2.length, separator);
        if (i >= fileOptions.length)
          throw $.ioore(i);
        fileMenu.insertItem$2($.MenuItem$(fileOptions[i], false, null, recentDocsMenu), t2.length);
        separator = $.MenuItemSeparator$();
        fileMenu.insertSeparator$2(t2.length, separator);
      } else
        fileMenu.insertItem$2($.MenuItem$(fileOptions[i], false, menuCommand, null), t2.length);
    editMenu = $.MenuBar$(true, null);
    menu.insertItem$2($.MenuItem$("Edit", false, null, editMenu), t1.length);
    editOptions = ["Undo", "Redo", "Cut", "Copy", "Paste"];
    for (t2 = editMenu._allItems, i = 0; i < editOptions.length; ++i)
      editMenu.insertItem$2($.MenuItem$(editOptions[i], false, menuCommand, null), t2.length);
    dwtMenu = $.MenuBar$(true, null);
    menu.insertItem$2($.MenuItem$("DWT", true, null, dwtMenu), t1.length);
    dwtOptions = ["Download", "Examples", "Source Code", "DWT wit' the program"];
    for (t2 = dwtMenu._allItems, i = 0; i < dwtOptions.length; ++i)
      dwtMenu.insertItem$2($.MenuItem$(dwtOptions[i], false, menuCommand, null), t2.length);
    helpMenu = $.MenuBar$(true, null);
    separator = $.MenuItemSeparator$();
    menu.insertSeparator$2(t1.length, separator);
    menu.insertItem$2($.MenuItem$("Help", true, null, helpMenu), t1.length);
    helpOptions = ["Contents", "Fortune Cookie", "About DWT"];
    for (t1 = helpMenu._allItems, i = 0; i < helpOptions.length; ++i)
      helpMenu.insertItem$2($.MenuItem$(helpOptions[i], false, menuCommand, null), t1.length);
    return menu;
  }
};

$$._MenuCommand = {"": "Object;_curPhrase,phrases",
  execute$0: function() {
    var t1, t2, t3;
    t1 = window;
    t2 = this.phrases;
    t3 = this._curPhrase;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t1.alert(t2[t3]);
    this._curPhrase = $.JSNumber_methods.$mod(this._curPhrase + 1, t2.length);
  }
};

$$.NumberLabelModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "NumberLabel";
  },
  get$desc: function() {
    return "Extends ValueLabel for convenience when dealing with numbers and NumberFormat, \nespecially in UiBinder templates. (Note that this class does not accept renderers. \nTo do so use ValueLabel directly.)\n";
  },
  get$code: function(_) {
    return "ui.Grid grid = new ui.Grid(1, 2);\n\ngrid.setWidget(0, 0, new ui.Label(\"Number Label:\"));\nui.NumberLabel nLabel = new ui.NumberLabel();\nnLabel.setValue(123.12);\ngrid.setWidget(0, 1, nLabel);\n\nreturn grid;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var grid, nLabel;
    grid = $.Grid$(1, 2);
    grid.setWidget$3(0, 0, $.Label$("Number Label:", null));
    nLabel = $.NumberLabel$(null);
    nLabel._liblib1$_value = 123.12;
    nLabel.directionalTextHelper.setTextOrHtml$2(nLabel._renderer.render$1(123.12), false);
    nLabel.updateHorizontalAlignment$0();
    grid.setWidget$3(0, 1, nLabel);
    return grid;
  }
};

$$.PasswordTextBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "PasswordTextBox";
  },
  get$desc: function() {
    return "A text box that visually masks its input to prevent eavesdropping.\n";
  },
  get$code: function(_) {
    return "// Create a panel to layout the widgets\nui.Grid grid = new ui.Grid(5, 2);\n\ngrid.setWidget(0, 0, new ui.Label(\"Normal Password:\"));\n// Add a normal and disabled password text box\nui.PasswordTextBox normalPassword = new ui.PasswordTextBox();\ngrid.setWidget(0, 1, normalPassword);\n\ngrid.setWidget(1, 0, new ui.Label(\"Disabled Password:\"));\nui.PasswordTextBox disabledPassword = new ui.PasswordTextBox();\ndisabledPassword.text = \"123456\";\ndisabledPassword.enabled = false;\ngrid.setWidget(1, 1, disabledPassword);\n\nreturn grid;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var grid, disabledPassword;
    grid = $.Grid$(5, 2);
    grid.setWidget$3(0, 0, $.Label$("Normal Password:", null));
    grid.setWidget$3(0, 1, $.PasswordTextBox$());
    grid.setWidget$3(1, 0, $.Label$("Disabled Password:", null));
    disabledPassword = $.PasswordTextBox$();
    disabledPassword.set$text(disabledPassword, "123456");
    disabledPassword.set$enabled(disabledPassword, false);
    grid.setWidget$3(1, 1, disabledPassword);
    return grid;
  }
};

$$.PushButtonModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "PushButton";
  },
  get$desc: function() {
    return "A normal push button with custom styling.\n";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vpanel = new ui.VerticalPanel();\n\nui.HorizontalPanel pushPanel = new ui.HorizontalPanel();\npushPanel.spacing = 10;\n\n// Combine all the panels\nvpanel.add(pushPanel);\nvpanel.add(new ui.Html(\"<br><br>PushButtons allow you to customize the look of your buttons\"));\n\nui.PushButton normalPushButton = new ui.PushButton.fromImage(new ui.Image(\"img/darts.jpg\"));\npushPanel.add(normalPushButton);\n\n// Add a disabled PushButton\nui.PushButton disabledPushButton = new ui.PushButton.fromImage(new ui.Image(\"img/darts.jpg\"));\ndisabledPushButton.enabled = false;\npushPanel.add(disabledPushButton);\n\nreturn vpanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vpanel, pushPanel, normalPushButton, td, t1, disabledPushButton;
    vpanel = $.VerticalPanel$();
    pushPanel = $.HorizontalPanel$();
    pushPanel.set$spacing(pushPanel, 10);
    vpanel.add$1(vpanel, pushPanel);
    vpanel.add$1(vpanel, $.Html$("<br><br>PushButtons allow you to customize the look of your buttons", null));
    normalPushButton = $.PushButton$fromImage($.Image$("img/darts.jpg"), null, null);
    td = document.createElement("td");
    t1 = pushPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = pushPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    pushPanel._tableRow.appendChild(td);
    normalPushButton.removeFromParent$0();
    t1 = pushPanel._children;
    t1.insert$2(t1, normalPushButton, t1._size);
    td.appendChild(normalPushButton.getElement$0());
    normalPushButton.setParent$1(pushPanel);
    disabledPushButton = $.PushButton$fromImage($.Image$("img/darts.jpg"), null, null);
    disabledPushButton.set$enabled(disabledPushButton, false);
    td = document.createElement("td");
    t1 = pushPanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = pushPanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    pushPanel._tableRow.appendChild(td);
    disabledPushButton.removeFromParent$0();
    t1 = pushPanel._children;
    t1.insert$2(t1, disabledPushButton, t1._size);
    td.appendChild(disabledPushButton.getElement$0());
    disabledPushButton.setParent$1(pushPanel);
    return vpanel;
  }
};

$$.RadioButtonModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "RadioButton";
  },
  get$desc: function() {
    return "A mutually-exclusive selection radio button widget. Fires ClickEvents when the \nradio button is clicked, and ValueChangeEvents when the button becomes checked. \nNote, however, that browser limitations prevent ValueChangeEvents from being \nsent when the radio button is cleared as a side effect of another in the group \nbeing clicked.\n";
  },
  get$code: function(_) {
    return "// Create a vertical panel to align the radio buttons\nui.VerticalPanel vPanel = new ui.VerticalPanel();\nvPanel.add(new ui.Html(\"<b>Select your favorite color:</b>\"));\n\nString selectedLabel = \"Selected\";\nui.Label selected = new ui.Label(\"$selectedLabel: nothing\");\n// Add some radio buttons to a group called 'color'\nList<String> colors = [\"blue\", \"red\", \"yellow\", \"green\"];\nfor (int i = 0; i < colors.length; i++) {\n  String color = colors[i];\n  ui.RadioButton radioButton = new ui.RadioButton(\"color\", color);\n  if (i == 2) {\n    radioButton.enabled = false;\n  }\n  radioButton.addValueChangeHandler(new event.ValueChangeHandlerAdapter((event.ValueChangeEvent evt){\n    vPanel.getChildren().forEach((ui.Widget w){\n      if (w is ui.RadioButton) {\n        ui.RadioButton radio = w as ui.RadioButton;\n        if (radio.getValue()) {\n          selected.text = \"$selectedLabel: ${radio.text}\";\n        }\n      }\n    });\n  }));\n  vPanel.add(radioButton);\n}\nvPanel.add(selected);\n\nreturn vPanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vPanel, selected, colors, i, radioButton, t1, t2, t3;
    vPanel = $.VerticalPanel$();
    vPanel.add$1(vPanel, $.Html$("<b>Select your favorite color:</b>", null));
    selected = $.Label$("Selected: nothing", null);
    colors = ["blue", "red", "yellow", "green"];
    for (i = 0; i < colors.length; ++i) {
      radioButton = $.RadioButton$("color", colors[i], false);
      if (i === 2)
        radioButton.set$enabled(radioButton, false);
      t1 = $.ValueChangeHandlerAdapter$(new $.RadioButtonModel_asWidget_anon(vPanel, "Selected", selected));
      if (!radioButton._valueChangeHandlerInitialized) {
        radioButton.ensureDomEventHandlers$0();
        radioButton._valueChangeHandlerInitialized = true;
      }
      t2 = $.get$ValueChangeEvent_TYPE();
      t3 = radioButton._eventBus;
      if (t3 == null) {
        t3 = $.SimpleEventBus$(null);
        radioButton._eventBus = t3;
      }
      t3._doAdd$3(t2, $.get$SimpleEventBus__emptySource(), t1);
      vPanel.add$1(vPanel, radioButton);
    }
    vPanel.add$1(vPanel, selected);
    return vPanel;
  }
};

$$.RadioButtonModel_asWidget_anon = {"": "Closure;vPanel_0,selectedLabel_1,selected_2",
  call$1: function(evt) {
    var t1 = this.vPanel_0._children;
    t1.forEach$1(t1, new $.RadioButtonModel_asWidget__anon(this.selectedLabel_1, this.selected_2));
  }
};

$$.RadioButtonModel_asWidget__anon = {"": "Closure;selectedLabel_3,selected_4",
  call$1: function(w) {
    var t1;
    if (typeof w === "object" && w !== null && !!$.getInterceptor(w).$isRadioButton)
      if (w.getValue$0() === true) {
        t1 = this.selected_4;
        t1.set$text(t1, this.selectedLabel_3 + ": " + $.S(w.get$text(w)));
      }
  }
};

$$.RichTextAreaModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "RichTextArea";
  },
  get$desc: function() {
    return "A rich text editor that allows complex styling and formatting. Because some \nbrowsers do not support rich text editing, and others support only a limited \nsubset of functionality, there are two formatter interfaces, accessed via \ngetBasicFormatter() and getExtendedFormatter() . A browser that does not support \nrich text editing at all will return null for both of these, while one that \nsupports only the basic functionality will return null for the latter.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("RichTextArea not implemented yet.", null);
  }
};

$$.SimpleCheckBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "SimpleCheckBox";
  },
  get$desc: function() {
    return "A simple checkbox widget, with no label.\n";
  },
  get$code: function(_) {
    return "ui.SimpleCheckBox sCheckBox = new ui.SimpleCheckBox();\nsCheckBox.setValue(true);\n\nreturn sCheckBox;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var sCheckBox, value;
    sCheckBox = $.SimpleCheckBox$(null);
    value = true;
    $.interceptedTypeCast(sCheckBox._element, "$isInputElement").checked = value;
    $.interceptedTypeCast(sCheckBox._element, "$isInputElement").defaultChecked = value;
    return sCheckBox;
  }
};

$$.SimpleRadioButtonModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "SimpleRadioButton";
  },
  get$desc: function() {
    return "A simple radio button widget, with no label.\n";
  },
  get$code: function(_) {
    return "// Create a panel to layout the widgets\nui.VerticalPanel vpanel = new ui.VerticalPanel();\nvpanel.spacing = 5;\n\nui.SimpleRadioButton rCheckBox1 = new ui.SimpleRadioButton(\"SimpleRadioButtonGroup\");\nrCheckBox1.setValue(true);\nvpanel.add(rCheckBox1);\n\nui.SimpleRadioButton rCheckBox2 = new ui.SimpleRadioButton(\"SimpleRadioButtonGroup\");\nvpanel.add(rCheckBox2);\n\nreturn vpanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vpanel, rCheckBox1, value;
    vpanel = $.VerticalPanel$();
    vpanel.set$spacing(vpanel, 5);
    rCheckBox1 = $.SimpleRadioButton$("SimpleRadioButtonGroup", null);
    value = true;
    $.interceptedTypeCast(rCheckBox1._element, "$isInputElement").checked = value;
    $.interceptedTypeCast(rCheckBox1._element, "$isInputElement").defaultChecked = value;
    vpanel.add$1(vpanel, rCheckBox1);
    vpanel.add$1(vpanel, $.SimpleRadioButton$("SimpleRadioButtonGroup", null));
    return vpanel;
  }
};

$$.SuggestBoxModel = {"": "ViewModel;",
  get$available: function(_) {
    return false;
  },
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "SuggestBox";
  },
  get$desc: function() {
    return "A SuggestBox is a text box or text area which displays a pre-configured set of \nselections that match the user's input. Each SuggestBox is associated with a \nsingle SuggestOracle. The SuggestOracle is used to provide a set of selections \ngiven a specific query string.\n";
  },
  get$code: function(_) {
    return "";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    return $.Label$("SuggestBox not implemented yet.", null);
  }
};

$$.TextAreaModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "TextArea";
  },
  get$desc: function() {
    return "A text box that allows multiple lines of text to be entered.\n";
  },
  get$code: function(_) {
    return "// Create a panel to layout the widgets\nui.Grid grid = new ui.Grid(1, 2);\n\ngrid.setWidget(0, 0, new ui.Label(\"Text Area:\"));\n// Add a text area\nui.TextArea textArea = new ui.TextArea();\ntextArea.setVisibleLines(5);\ngrid.setWidget(0, 1, textArea);\n\nreturn grid;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var grid, textArea;
    grid = $.Grid$(1, 2);
    grid.setWidget$3(0, 0, $.Label$("Text Area:", null));
    textArea = $.TextArea$();
    $.interceptedTypeCast(textArea._element, "$isTextAreaElement").rows = 5;
    grid.setWidget$3(0, 1, textArea);
    return grid;
  }
};

$$.TextBoxModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "TextBox";
  },
  get$desc: function() {
    return "A standard single-line text box.\n";
  },
  get$code: function(_) {
    return "ui.VerticalPanel panel = new ui.VerticalPanel();\npanel.add(new ui.Label(\"This is text box:\"));\npanel.add(new ui.TextBox());\n\nreturn panel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var panel = $.VerticalPanel$();
    panel.add$1(panel, $.Label$("This is text box:", null));
    panel.add$1(panel, $.TextBox$());
    return panel;
  }
};

$$.ToggleButtonModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "ToggleButton";
  },
  get$desc: function() {
    return "A ToggleButton is a stylish stateful button which allows the user to toggle \nbetween up and down states.\n";
  },
  get$code: function(_) {
    return "ui.VerticalPanel vpanel = new ui.VerticalPanel();\n\nui.HorizontalPanel togglePanel = new ui.HorizontalPanel();\ntogglePanel.spacing = 10;\n\n// Combine all the panels\nvpanel.add(togglePanel);\nvpanel.add(new ui.Html(\"<br><br>ToggleButtons allow you to customize the look of your buttons\"));\n\nui.ToggleButton normalToggleButton = new ui.ToggleButton.fromImage(new ui.Image(\"img/darts.jpg\"));\ntogglePanel.add(normalToggleButton);\n\n// Add a disabled ToggleButton\nui.ToggleButton disabledToggleButton = new ui.ToggleButton.fromImage(new ui.Image(\"img/darts.jpg\"));\ndisabledToggleButton.enabled = false;\ntogglePanel.add(disabledToggleButton);\n\nreturn vpanel;\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var vpanel, togglePanel, normalToggleButton, td, t1, disabledToggleButton;
    vpanel = $.VerticalPanel$();
    togglePanel = $.HorizontalPanel$();
    togglePanel.set$spacing(togglePanel, 10);
    vpanel.add$1(vpanel, togglePanel);
    vpanel.add$1(vpanel, $.Html$("<br><br>ToggleButtons allow you to customize the look of your buttons", null));
    normalToggleButton = $.ToggleButton$fromImage($.Image$("img/darts.jpg"), null, null);
    td = document.createElement("td");
    t1 = togglePanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = togglePanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    togglePanel._tableRow.appendChild(td);
    normalToggleButton.removeFromParent$0();
    t1 = togglePanel._children;
    t1.insert$2(t1, normalToggleButton, t1._size);
    td.appendChild(normalToggleButton.getElement$0());
    normalToggleButton.setParent$1(togglePanel);
    disabledToggleButton = $.ToggleButton$fromImage($.Image$("img/darts.jpg"), null, null);
    disabledToggleButton.set$enabled(disabledToggleButton, false);
    td = document.createElement("td");
    t1 = togglePanel._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = togglePanel._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    togglePanel._tableRow.appendChild(td);
    disabledToggleButton.removeFromParent$0();
    t1 = togglePanel._children;
    t1.insert$2(t1, disabledToggleButton, t1._size);
    td.appendChild(disabledToggleButton.getElement$0());
    disabledToggleButton.setParent$1(togglePanel);
    return vpanel;
  }
};

$$.TreeModel = {"": "ViewModel;",
  get$category: function() {
    return "Widget";
  },
  get$name: function(_) {
    return "Tree";
  },
  get$desc: function() {
    return "A standard hierarchical tree widget. The tree contains a hierarchy of TreeItems \nthat the user can open, close, and select.\n";
  },
  get$code: function(_) {
    return "// Create a static tree and a container to hold it\nui.Tree staticTree = _createStaticTree();\nstaticTree.setAnimationEnabled(true);\nui.ScrollPanel staticTreeWrapper = new ui.ScrollPanel(staticTree);\nstaticTreeWrapper.setSize(\"300px\", \"300px\");\n\n// Wrap the static tree in a DecoratorPanel\nui.DecoratorPanel staticDecorator = new ui.DecoratorPanel();\nstaticDecorator.setWidget(staticTreeWrapper);\n\n\n// Create a dynamically generated tree and a container to hold it\nui.Tree dynamicTree = _createDynamicTree();\nui.ScrollPanel dynamicTreeWrapper = new ui.ScrollPanel(dynamicTree);\ndynamicTreeWrapper.setSize(\"300px\", \"300px\");\n\n// Wrap the dynamic tree in a DecoratorPanel\nui.DecoratorPanel dynamicDecorator = new ui.DecoratorPanel();\ndynamicDecorator.setWidget(dynamicTreeWrapper);\n\n\n// Combine trees onto the page\nui.Grid grid = new ui.Grid(2, 3);\ngrid.setCellPadding(2);\ngrid.getRowFormatter().setVerticalAlign(1, i18n.HasVerticalAlignment.ALIGN_TOP);\ngrid.setHtml(0, 0, \"<b>Static Tree:</b>\");\ngrid.setHtml(0, 1, \"   \");\ngrid.setHtml(0, 2, \"<b>Dynamic Tree:</b>\");\ngrid.setWidget(1, 0, staticDecorator);\ngrid.setHtml(1, 1, \"   \");\ngrid.setWidget(1, 2, dynamicDecorator);\n\nreturn grid;\n\n\n\n/**\n * Create a static tree with some data in it.\n *\n * @return the new tree\n */\nui.Tree _createStaticTree() {\n  // Create the tree\n  List<String> composers = [\"Beethoven\", \"Brahms\", \"Mozart\"];\n  String concertosLabel = \"Concertos\";\n  String quartetsLabel = \"Quartets\";\n  String sonatasLabel = \"Sonatas\";\n  String symphoniesLabel = \"Symphonies\";\n  ui.Tree staticTree = new ui.Tree();\n\n  // Add some of Beethoven's music\n  ui.TreeItem beethovenItem = staticTree.addTextItem(composers[0]);\n  _addMusicSection(beethovenItem, concertosLabel, [\"No. 1 - C\", \"No. 2 - B-Flat Major\", \"No. 3 - C Minor\", \"No. 4 - G Major\", \"No. 5 - E-Flat Major\"]);\n  _addMusicSection(beethovenItem, quartetsLabel, [\"Six String Quartets\", \"Three String Quartets\", \"Grosse Fugue for String Quartets\"]);\n  _addMusicSection(beethovenItem, sonatasLabel, [\"Sonata in A Minor\", \"Sonata in F Major\"]);\n  _addMusicSection(beethovenItem, symphoniesLabel, [\"No. 2 - D Major\", \"No. 2 - D Major\", \"No. 3 - E-Flat Major\", \"No. 4 - B-Flat Major\", \"No. 5 - C Minor\", \"No. 6 - F Major\", \"No. 7 - A Major\", \"No. 8 - F Major\", \"No. 9 - D Minor\"]);\n\n  // Add some of Brahms's music\n  ui.TreeItem brahmsItem = staticTree.addTextItem(composers[1]);\n  _addMusicSection(brahmsItem, concertosLabel, [\"Violin Concerto\", \"Double Concerto - A Minor\", \"Piano Concerto No. 1 - D Minor\", \"Piano Concerto No. 2 - B-Flat Major\"]);\n  _addMusicSection(brahmsItem, quartetsLabel, [\"Piano Quartet No. 1 - G Minor\", \"Piano Quartet No. 2 - A Major\", \"Piano Quartet No. 3 - C Minor\", \"String Quartet No. 3 - B-Flat Minor\"]);\n  _addMusicSection(brahmsItem, sonatasLabel, [\"Two Sonatas for Clarinet - F Minor\", \"Two Sonatas for Clarinet - E-Flat Major\"]);\n  _addMusicSection(brahmsItem, symphoniesLabel, [\"No. 1 - C Minor\", \"No. 2 - D Minor\", \"No. 3 - F Major\", \"No. 4 - E Minor\"]);\n\n  // Add some of Mozart's music\n  ui.TreeItem mozartItem = staticTree.addTextItem(composers[2]);\n  _addMusicSection(mozartItem, concertosLabel, [\"Piano Concerto No. 12\", \"Piano Concerto No. 17\", \"Clarinet Concerto\", \"Violin Concerto No. 5\", \"Violin Concerto No. 4\"]);\n\n  // Return the tree\n  return staticTree;\n}\n\n/**\n * Add a new section of music created by a specific composer.\n *\n * @param parent the parent {@link TreeItem} where the section will be added\n * @param label the label of the new section of music\n * @param composerWorks an array of works created by the composer\n */\nvoid _addMusicSection(ui.TreeItem parent, String label, List<String> composerWorks) {\n  ui.TreeItem section = parent.addTextItem(label);\n  for (String work in composerWorks) {\n    section.addTextItem(work);\n  }\n}\n\n/**\n * Create a dynamic tree that will add a random number of children to each\n * node as it is clicked.\n *\n * @return the new tree\n */\nui.Tree _createDynamicTree() {\n  // Create a new tree\n  ui.Tree dynamicTree = new ui.Tree();\n\n  // Add some default tree items\n  for (int i = 0; i < 5; i++) {\n    ui.TreeItem item = dynamicTree.addTextItem(\"Item $i\");\n\n    // Temporarily add an item so we can expand this node\n    item.addTextItem(\"\");\n  }\n\n  dart_math.Random random = new dart_math.Random(5);\n\n  // Add a handler that automatically generates some children\n  dynamicTree.addOpenHandler(new event.OpenHandlerAdapter((event.OpenEvent evt) {\n    ui.TreeItem item = evt.getTarget();\n    if (item.getChildCount() == 1) {\n      // Close the item immediately\n      item.setState(false, false);\n\n      // Add a random number of children to the item\n      String itemText = item.text;\n      int numChildren = random.nextInt(5) + 2;\n      for (int i = 0; i < numChildren; i++) {\n        ui.TreeItem child = item.addTextItem(itemText.concat(\".\").concat(i.toString()));\n        child.addTextItem(\"\");\n      }\n\n      // Remove the temporary item when we finish loading\n      item.getChild(0).remove();\n\n      // Reopen the item\n      item.setState(true, false);\n    }\n  }));\n\n  // Return the tree\n  return dynamicTree;\n}\n\n";
  },
  get$style: function(_) {
    return "";
  },
  asWidget$0: function() {
    var staticTree, staticTreeWrapper, staticDecorator, dynamicTreeWrapper, dynamicDecorator, grid, t1;
    staticTree = $._createStaticTree();
    staticTree._isAnimationEnabled = true;
    staticTreeWrapper = $.ScrollPanel$(staticTree);
    $.UiObject.prototype.setSize$2.call(staticTreeWrapper, "300px", "300px");
    staticDecorator = $.DecoratorPanel$($.List_top_middle_bottom, 1);
    staticDecorator.setWidget$1(staticTreeWrapper);
    dynamicTreeWrapper = $.ScrollPanel$($._createDynamicTree());
    $.UiObject.prototype.setSize$2.call(dynamicTreeWrapper, "300px", "300px");
    dynamicDecorator = $.DecoratorPanel$($.List_top_middle_bottom, 1);
    dynamicDecorator.setWidget$1(dynamicTreeWrapper);
    grid = $.Grid$(2, 3);
    $.Dom_setElementPropertyInt(grid.tableElem, "cellPadding", 2);
    t1 = grid.rowFormatter;
    t1._liblib1$_table.prepareRow$1(1);
    t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(t1._liblib1$_table.bodyElem), "$isTableElement"));
    $.setProperty$2$x($.get$style$x(t1.$index(t1, 1)), "verticalAlign", $.VerticalAlignmentConstant_top._verticalAlignString);
    grid.setHtml$3(0, 0, "<b>Static Tree:</b>");
    grid.setHtml$3(0, 1, "   ");
    grid.setHtml$3(0, 2, "<b>Dynamic Tree:</b>");
    grid.setWidget$3(1, 0, staticDecorator);
    grid.setHtml$3(1, 1, "   ");
    grid.setWidget$3(1, 2, dynamicDecorator);
    return grid;
  }
};

$$._createDynamicTree_anon = {"": "Closure;random_0",
  call$1: function(evt) {
    var item, itemText, max, numChildren, t1, i, child, ret;
    item = evt.getTarget$0();
    if (item.getChildCount$0() === 1) {
      item.setState$2(false, false);
      itemText = item.get$text(item);
      this.random_0;
      max = 5;
      numChildren = (Math.random() * max >>> 0) + 2;
      for (t1 = $.getInterceptor$ns(itemText), i = 0; i < numChildren; ++i) {
        child = item.addTextItem$1($.$add$ns(t1.$add(itemText, "."), $.JSNumber_methods.toString$0(i)));
        ret = $.TreeItem$(null, false, $);
        ret.set$text(ret, "");
        if (ret.getParentItem$0() != null || ret.getTree$0() != null)
          ret.remove$0(ret);
        child.insertItem$2(child.getChildCount$0(), ret);
      }
      $.remove$0$ax(item.getChild$1(0));
      item.setState$2(true, false);
    }
  }
};

$$.HomePresenter = {"": "Object;display",
  addViewTo$1: function(container) {
    $.propertyTypeCast(container, "$isTabLayoutPanel").addTabText$2(this.display.asWidget$0(), $.get$title$x(this.display));
  }
};

$$.HomeView = {"": "Object;",
  get$title: function(_) {
    return "Home";
  },
  asWidget$0: function() {
    var layout, cellFormatter, title, logoImage;
    layout = $.FlexTable$();
    layout.setWidth$1("100%");
    layout.setHeight$1("100%");
    $.Dom_setElementPropertyInt(layout.tableElem, "cellSpacing", 6);
    cellFormatter = $.propertyTypeCast(layout.cellFormatter, "$isFlexCellFormatter");
    title = $.Html$("<h2>Welcom to <strong>Dart Web Toolkit</strong> !</h2>", null);
    $.setProperty$2$x($.get$style$x(title._element), "width", "80%");
    layout.setWidget$3(0, 0, title);
    cellFormatter.setHorizontalAlignment$3(0, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    logoImage = $.Image$("img/dwt-logo.png");
    $.UiObject_manageElementStyleName(logoImage.getStyleElement$0(), "logo-image", true);
    layout.setWidget$3(1, 0, logoImage);
    cellFormatter.setHorizontalAlignment$3(2, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    layout.setHtml$3(2, 0, "Dart Web Toolkit is a pure Dart application framework that works on all modern browsers.<br/>It enables you to create the best cross-platform applications using nothing but a browser.");
    cellFormatter.setHorizontalAlignment$3(1, 0, $.HorizontalAlignmentConstant_TextAlign_center);
    $.DecoratorPanel$($.List_top_middle_bottom, 1).setWidget$1(layout);
    return layout;
  }
};

$$.AppConfiguration = {"": "InCodeConfiguration;_inConfigs",
  AppConfiguration$0: function() {
    this.add$2(this, "AppPresenter", new $.anon76());
    this.add$2(this, "AppView", new $.anon77());
    this.add$2(this, "pages", new $.anon78());
  }
};

$$.anon76 = {"": "Closure;",
  call$2: function(container, params) {
    var app, view;
    app = $.AppPresenter$();
    view = container.resolve$1("AppView");
    view.set$pages(container.resolve$1("pages"));
    app.display = view;
    return app;
  }
};

$$.anon77 = {"": "Closure;",
  call$2: function(container, params) {
    return $.AppView$();
  }
};

$$.anon78 = {"": "Closure;",
  call$2: function(container, params) {
    return [container.resolve$1("HomePresenter"), container.resolve$1("ComponentPresenter")];
  }
};

$$.ComponentConfiguration = {"": "InCodeConfiguration;_inConfigs",
  ComponentConfiguration$0: function() {
    this.add$2(this, "ComponentView", new $.anon69());
    this.add$2(this, "ComponentPresenter", new $.anon70());
    this.add$2(this, "ComponentTreeView", new $.anon71());
    this.add$2(this, "ComponentPreview", new $.anon72());
    this.add$2(this, "componentModels", new $.anon73());
  }
};

$$.anon69 = {"": "Closure;",
  call$2: function(container, params) {
    var view = $.ComponentView$();
    view.componentTree = container.resolve$1("ComponentTreeView");
    view.componentPreview = container.resolve$1("ComponentPreview");
    return view;
  }
};

$$.anon70 = {"": "Closure;",
  call$2: function(container, params) {
    var presenter, modelNames, models;
    presenter = $.ComponentPresenter$();
    presenter.display = container.resolve$1("ComponentView");
    modelNames = container.resolve$1("componentModels");
    models = $.List_List($, null);
    $.forEach$1$ax(modelNames, new $._anon(container, models));
    presenter.models = models;
    return presenter;
  }
};

$$._anon = {"": "Closure;container_0,models_1",
  call$1: function(modelName) {
    this.models_1.push(this.container_0.resolve$1(modelName));
  }
};

$$.anon71 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ComponentTreeView$();
  }
};

$$.anon72 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ComponentPreview$();
  }
};

$$.anon73 = {"": "Closure;",
  call$2: function(container, params) {
    return ["ButtonModel", "CheckBoxModel", "CompositeModel", "DateBoxModel", "DatePickerModel", "DoubleBoxModel", "FileUploadModel", "HiddenModel", "HtmlModel", "HyperlinkModel", "ImageModel", "InlineHtmlModel", "InlineHyperlinkModel", "InlineLabelModel", "IntegerBoxModel", "LabelModel", "ListBoxModel", "MenuBoxModel", "NumberLabelModel", "PasswordTextBoxModel", "PushButtonModel", "RadioButtonModel", "RichTextAreaModel", "SimpleCheckBoxModel", "SimpleRadioButtonModel", "SuggestBoxModel", "TextAreaModel", "TextBoxModel", "ToggleButtonModel", "TreeModel", "DialogBoxModel", "PopupPanelModel", "AbsolutePanelModel", "CaptionPanelModel", "DeckPanelModel", "DecoratedStackPanelModel", "DecoratedTabBarModel", "DecoratedTabPanelModel", "DecoratorPanelModel", "DisclosurePanelModel", "DockPanelModel", "FlexTableModel", "FlowPanelModel", "FocusPanelModel", "FormPanelModel", "FrameModel", "GridModel", "HorizontalPanelModel", "HorizontalSplitPanelModel", "HtmlPanelModel", "NamedFrameModel", "ScrolledPanelModel", "SimplePanelModel", "StackPanelModel", "TabBarModel", "TabPanelModel", "VerticalPanelModel", "VerticalSplitPanelModel", "DockLayoutPanelModel", "LayoutPanelModel", "SplitLayoutPanelModel", "StackLayoutPanelModel", "TabLayoutPanelModel"];
  }
};

$$.HomeConfiguration = {"": "InCodeConfiguration;_inConfigs",
  HomeConfiguration$0: function() {
    this.add$2(this, "HomeView", new $.anon74());
    this.add$2(this, "HomePresenter", new $.anon75());
  }
};

$$.anon74 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HomeView$();
  }
};

$$.anon75 = {"": "Closure;",
  call$2: function(container, params) {
    var presenter = $.HomePresenter$();
    presenter.display = container.resolve$1("HomeView");
    return presenter;
  }
};

$$.LayoutComponentConfiguration = {"": "InCodeConfiguration;_inConfigs",
  LayoutComponentConfiguration$0: function() {
    this.add$2(this, "DockLayoutPanelModel", new $.anon6());
    this.add$2(this, "LayoutPanelModel", new $.anon7());
    this.add$2(this, "SplitLayoutPanelModel", new $.anon8());
    this.add$2(this, "StackLayoutPanelModel", new $.anon9());
    this.add$2(this, "TabLayoutPanelModel", new $.anon10());
  }
};

$$.anon6 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DockLayoutPanelModel$();
  }
};

$$.anon7 = {"": "Closure;",
  call$2: function(container, params) {
    return $.LayoutPanelModel$();
  }
};

$$.anon8 = {"": "Closure;",
  call$2: function(container, params) {
    return $.SplitLayoutPanelModel$();
  }
};

$$.anon9 = {"": "Closure;",
  call$2: function(container, params) {
    return $.StackLayoutPanelModel$();
  }
};

$$.anon10 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TabLayoutPanelModel$();
  }
};

$$.PanelComponentConfiguration = {"": "InCodeConfiguration;_inConfigs",
  PanelComponentConfiguration$0: function() {
    this.add$2(this, "AbsolutePanelModel", new $.anon11());
    this.add$2(this, "CaptionPanelModel", new $.anon12());
    this.add$2(this, "DeckPanelModel", new $.anon13());
    this.add$2(this, "DecoratedStackPanelModel", new $.anon14());
    this.add$2(this, "DecoratedTabBarModel", new $.anon15());
    this.add$2(this, "DecoratedTabPanelModel", new $.anon16());
    this.add$2(this, "DecoratorPanelModel", new $.anon17());
    this.add$2(this, "DisclosurePanelModel", new $.anon18());
    this.add$2(this, "DockPanelModel", new $.anon19());
    this.add$2(this, "FlexTableModel", new $.anon20());
    this.add$2(this, "FlowPanelModel", new $.anon21());
    this.add$2(this, "FocusPanelModel", new $.anon22());
    this.add$2(this, "FormPanelModel", new $.anon23());
    this.add$2(this, "FrameModel", new $.anon24());
    this.add$2(this, "GridModel", new $.anon25());
    this.add$2(this, "HorizontalPanelModel", new $.anon26());
    this.add$2(this, "HorizontalSplitPanelModel", new $.anon27());
    this.add$2(this, "HtmlPanelModel", new $.anon28());
    this.add$2(this, "NamedFrameModel", new $.anon29());
    this.add$2(this, "ScrolledPanelModel", new $.anon30());
    this.add$2(this, "SimplePanelModel", new $.anon31());
    this.add$2(this, "StackPanelModel", new $.anon32());
    this.add$2(this, "TabBarModel", new $.anon33());
    this.add$2(this, "TabPanelModel", new $.anon34());
    this.add$2(this, "VerticalPanelModel", new $.anon35());
    this.add$2(this, "VerticalSplitPanelModel", new $.anon36());
  }
};

$$.anon11 = {"": "Closure;",
  call$2: function(container, params) {
    return $.AbsolutePanelModel$();
  }
};

$$.anon12 = {"": "Closure;",
  call$2: function(container, params) {
    return $.CaptionPanelModel$();
  }
};

$$.anon13 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DeckPanelModel$();
  }
};

$$.anon14 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DecoratedStackPanelModel$();
  }
};

$$.anon15 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DecoratedTabBarModel$();
  }
};

$$.anon16 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DecoratedTabPanelModel$();
  }
};

$$.anon17 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DecoratorPanelModel$();
  }
};

$$.anon18 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DisclosurePanelModel$();
  }
};

$$.anon19 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DockPanelModel$();
  }
};

$$.anon20 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FlexTableModel$();
  }
};

$$.anon21 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FlowPanelModel$();
  }
};

$$.anon22 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FocusPanelModel$();
  }
};

$$.anon23 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FormPanelModel$();
  }
};

$$.anon24 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FrameModel$();
  }
};

$$.anon25 = {"": "Closure;",
  call$2: function(container, params) {
    return $.GridModel$();
  }
};

$$.anon26 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HorizontalPanelModel$();
  }
};

$$.anon27 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HorizontalSplitPanelModel$();
  }
};

$$.anon28 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HtmlPanelModel$();
  }
};

$$.anon29 = {"": "Closure;",
  call$2: function(container, params) {
    return $.NamedFrameModel$();
  }
};

$$.anon30 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ScrolledPanelModel$();
  }
};

$$.anon31 = {"": "Closure;",
  call$2: function(container, params) {
    return $.SimplePanelModel$();
  }
};

$$.anon32 = {"": "Closure;",
  call$2: function(container, params) {
    return $.StackPanelModel$();
  }
};

$$.anon33 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TabBarModel$();
  }
};

$$.anon34 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TabPanelModel$();
  }
};

$$.anon35 = {"": "Closure;",
  call$2: function(container, params) {
    return $.VerticalPanelModel$();
  }
};

$$.anon36 = {"": "Closure;",
  call$2: function(container, params) {
    return $.VerticalSplitPanelModel$();
  }
};

$$.PopupComponentConfiguration = {"": "InCodeConfiguration;_inConfigs",
  PopupComponentConfiguration$0: function() {
    this.add$2(this, "DialogBoxModel", new $.anon37());
    this.add$2(this, "PopupPanelModel", new $.anon38());
  }
};

$$.anon37 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DialogBoxModel$();
  }
};

$$.anon38 = {"": "Closure;",
  call$2: function(container, params) {
    return $.PopupPanelModel$();
  }
};

$$.WidgetComponentConfiguration = {"": "InCodeConfiguration;_inConfigs",
  WidgetComponentConfiguration$0: function() {
    this.add$2(this, "ButtonModel", new $.anon39());
    this.add$2(this, "CheckBoxModel", new $.anon40());
    this.add$2(this, "CompositeModel", new $.anon41());
    this.add$2(this, "DateBoxModel", new $.anon42());
    this.add$2(this, "DatePickerModel", new $.anon43());
    this.add$2(this, "DoubleBoxModel", new $.anon44());
    this.add$2(this, "FileUploadModel", new $.anon45());
    this.add$2(this, "HiddenModel", new $.anon46());
    this.add$2(this, "HtmlModel", new $.anon47());
    this.add$2(this, "HyperlinkModel", new $.anon48());
    this.add$2(this, "ImageModel", new $.anon49());
    this.add$2(this, "InlineHtmlModel", new $.anon50());
    this.add$2(this, "InlineHyperlinkModel", new $.anon51());
    this.add$2(this, "InlineLabelModel", new $.anon52());
    this.add$2(this, "IntegerBoxModel", new $.anon53());
    this.add$2(this, "LabelModel", new $.anon54());
    this.add$2(this, "ListBoxModel", new $.anon55());
    this.add$2(this, "MenuBoxModel", new $.anon56());
    this.add$2(this, "NumberLabelModel", new $.anon57());
    this.add$2(this, "PasswordTextBoxModel", new $.anon58());
    this.add$2(this, "PushButtonModel", new $.anon59());
    this.add$2(this, "RadioButtonModel", new $.anon60());
    this.add$2(this, "RichTextAreaModel", new $.anon61());
    this.add$2(this, "SimpleCheckBoxModel", new $.anon62());
    this.add$2(this, "SimpleRadioButtonModel", new $.anon63());
    this.add$2(this, "SuggestBoxModel", new $.anon64());
    this.add$2(this, "TextAreaModel", new $.anon65());
    this.add$2(this, "TextBoxModel", new $.anon66());
    this.add$2(this, "ToggleButtonModel", new $.anon67());
    this.add$2(this, "TreeModel", new $.anon68());
  }
};

$$.anon39 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ButtonModel$();
  }
};

$$.anon40 = {"": "Closure;",
  call$2: function(container, params) {
    return $.CheckBoxModel$();
  }
};

$$.anon41 = {"": "Closure;",
  call$2: function(container, params) {
    return $.CompositeModel$();
  }
};

$$.anon42 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DateBoxModel$();
  }
};

$$.anon43 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DatePickerModel$();
  }
};

$$.anon44 = {"": "Closure;",
  call$2: function(container, params) {
    return $.DoubleBoxModel$();
  }
};

$$.anon45 = {"": "Closure;",
  call$2: function(container, params) {
    return $.FileUploadModel$();
  }
};

$$.anon46 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HiddenModel$();
  }
};

$$.anon47 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HtmlModel$();
  }
};

$$.anon48 = {"": "Closure;",
  call$2: function(container, params) {
    return $.HyperlinkModel$();
  }
};

$$.anon49 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ImageModel$();
  }
};

$$.anon50 = {"": "Closure;",
  call$2: function(container, params) {
    return $.InlineHtmlModel$();
  }
};

$$.anon51 = {"": "Closure;",
  call$2: function(container, params) {
    return $.InlineHyperlinkModel$();
  }
};

$$.anon52 = {"": "Closure;",
  call$2: function(container, params) {
    return $.InlineLabelModel$();
  }
};

$$.anon53 = {"": "Closure;",
  call$2: function(container, params) {
    return $.IntegerBoxModel$();
  }
};

$$.anon54 = {"": "Closure;",
  call$2: function(container, params) {
    return $.LabelModel$();
  }
};

$$.anon55 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ListBoxModel$();
  }
};

$$.anon56 = {"": "Closure;",
  call$2: function(container, params) {
    return $.MenuBoxModel$();
  }
};

$$.anon57 = {"": "Closure;",
  call$2: function(container, params) {
    return $.NumberLabelModel$();
  }
};

$$.anon58 = {"": "Closure;",
  call$2: function(container, params) {
    return $.PasswordTextBoxModel$();
  }
};

$$.anon59 = {"": "Closure;",
  call$2: function(container, params) {
    return $.PushButtonModel$();
  }
};

$$.anon60 = {"": "Closure;",
  call$2: function(container, params) {
    return $.RadioButtonModel$();
  }
};

$$.anon61 = {"": "Closure;",
  call$2: function(container, params) {
    return $.RichTextAreaModel$();
  }
};

$$.anon62 = {"": "Closure;",
  call$2: function(container, params) {
    return $.SimpleCheckBoxModel$();
  }
};

$$.anon63 = {"": "Closure;",
  call$2: function(container, params) {
    return $.SimpleRadioButtonModel$();
  }
};

$$.anon64 = {"": "Closure;",
  call$2: function(container, params) {
    return $.SuggestBoxModel$();
  }
};

$$.anon65 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TextAreaModel$();
  }
};

$$.anon66 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TextBoxModel$();
  }
};

$$.anon67 = {"": "Closure;",
  call$2: function(container, params) {
    return $.ToggleButtonModel$();
  }
};

$$.anon68 = {"": "Closure;",
  call$2: function(container, params) {
    return $.TreeModel$();
  }
};

$$.ViewModel = {"": "Object;",
  get$available: function(_) {
    return true;
  },
  $isViewModel: true
};

$$.Animation = {"": "Object;",
  cancel$0: function(_) {
    var t1;
    if (!this.running)
      return;
    this.wasStarted = this.isStarted;
    this.element = null;
    this.running = false;
    this.isStarted = false;
    t1 = this.requestHandle;
    if (t1 != null) {
      t1.cancel$0(t1);
      this.requestHandle = null;
    }
    this.onCancel$0();
  },
  run$3$element$startTime: function(duration, element, startTime) {
    var t1, t2;
    this.cancel$0(this);
    if (startTime == null)
      startTime = $.DateTime$_now().millisecondsSinceEpoch;
    this.running = true;
    this.isStarted = false;
    this.duration = duration;
    this.startTime = startTime;
    this.element = element;
    this.runId = this.runId + 1;
    t1 = this.callback;
    t2 = $.DateTime$_now();
    t1 = t1._animation;
    if (t1.update$1(t1, t2.millisecondsSinceEpoch))
      t1.requestHandle = $.requestAnimationFrame$2$x(t1.scheduler, t1.callback, t1.element);
    else
      t1.requestHandle = null;
  },
  run$1: function(duration) {
    return this.run$3$element$startTime(duration, null, null);
  },
  run$2$element: function(duration, element) {
    return this.run$3$element$startTime(duration, element, null);
  },
  onCancel$0: function() {
    if (this.wasStarted)
      this.onComplete$0(this);
  },
  onComplete$0: function(_) {
    this.onUpdate$1((1 + Math.cos(6.283185307179586)) / 2);
  },
  onStart$0: function(_) {
    this.onUpdate$1((1 + Math.cos(3.141592653589793)) / 2);
  },
  update$1: function(_, curTime) {
    var curRunId, t1, finished, t2;
    curRunId = this.runId;
    t1 = $.getInterceptor$n(curTime);
    finished = t1.$ge(curTime, $.$add$ns(this.startTime, this.duration));
    t2 = this.isStarted;
    if (t2 && !finished) {
      t1 = 3.141592653589793 + $.$div$n(t1.$sub(curTime, this.startTime), this.duration) * 3.141592653589793;
      this.onUpdate$1((1 + Math.cos(t1)) / 2);
      return this.running && this.runId === curRunId;
    }
    if (!t2 && t1.$ge(curTime, this.startTime)) {
      this.isStarted = true;
      this.onStart$0(this);
      if (!(this.running && this.runId === curRunId))
        return false;
    }
    if (finished) {
      this.running = false;
      this.isStarted = false;
      this.onComplete$0(this);
      return false;
    }
    return true;
  },
  Animation$1: function(scheduler) {
    if (scheduler == null)
      this.scheduler = $.AnimationScheduler_AnimationScheduler$Instance();
    else
      this.scheduler = scheduler;
    this.callback = $.AnimationCallback2$(this);
  }
};

$$.AnimationCallback2 = {"": "Object;_animation",
  execute$1: function(timestamp) {
    var t1 = this._animation;
    if (t1.update$1(t1, timestamp))
      t1.requestHandle = $.requestAnimationFrame$2$x(t1.scheduler, t1.callback, t1.element);
    else
      t1.requestHandle = null;
  }
};

$$.AnimationScheduler = {"": "Object;"};

$$.AnimationHandle = {"": "Object;"};

$$.AnimationSchedulerImpl = {"": "AnimationScheduler;", $isAnimationSchedulerImpl: true};

$$.AnimationSchedulerImplTimer = {"": "AnimationSchedulerImpl;animationRequests,timer",
  requestAnimationFrame$2: function(_, callback, element) {
    var requestId, t1, t2;
    requestId = $.AnimationHandleImplTimer$(callback, this);
    t1 = this.animationRequests;
    t1.push(requestId);
    if (t1.length === 1) {
      t1 = this.timer;
      t2 = $.AnimationSchedulerImplTimer_DEFAULT_FRAME_DELAY;
      if (t2 < 0)
        $.throwExpression($._ExceptionImplementation$("must be non-negative"));
      t1.cancel$0(t1);
      t1.isRepeating = false;
      t1._timer = $.Timer_createTimeout(t1, t2);
      $.get$Timer__timers().push(t1);
    }
    return requestId;
  },
  isNativelySupported$0: function() {
    return true;
  },
  cancelAnimationFrame$1: function(_, requestId) {
    var t1, index;
    t1 = this.animationRequests;
    index = $.JSArray_methods.indexOf$1(t1, requestId);
    if (index !== -1)
      $.JSArray_methods.removeAt$1(t1, index);
    if (t1.length === 0) {
      t1 = this.timer;
      t1.cancel$0(t1);
    }
  },
  updateAnimations$0: function() {
    var t1, curAnimations, duration, t2, requestId, index;
    t1 = this.animationRequests;
    curAnimations = $.List_List$from(t1, true, $.AnimationHandleImplTimer);
    duration = $.Duration$(0, 0, 0, 0, 0, 0);
    for (t2 = $.get$iterator$ax(curAnimations); t2.moveNext$0() === true;) {
      requestId = t2.get$current();
      index = $.JSArray_methods.indexOf$1(t1, requestId);
      if (index !== -1)
        $.JSArray_methods.removeAt$1(t1, index);
      requestId.getCallback$0().execute$1($.DateTime$_now().millisecondsSinceEpoch);
    }
    if (t1.length > 0) {
      t1 = this.timer;
      t2 = $.max($.AnimationSchedulerImplTimer_MIN_FRAME_DELAY, $.AnimationSchedulerImplTimer_DEFAULT_FRAME_DELAY - duration.get$inMilliseconds());
      if ($.$lt$n(t2, 0))
        $.throwExpression($._ExceptionImplementation$("must be non-negative"));
      t1.cancel$0(t1);
      t1.isRepeating = false;
      t1._timer = $.Timer_createTimeout(t1, t2);
      $.get$Timer__timers().push(t1);
    }
  },
  get$updateAnimations: function() {
    return new $.BoundClosure$0(this, "updateAnimations$0");
  },
  AnimationSchedulerImplTimer$0: function() {
    this.timer = $.Timer_Timer$get(this.get$updateAnimations());
  }
};

$$.AnimationHandleImplTimer = {"": "AnimationHandle;callback,_impl",
  cancel$0: function(_) {
    var t1 = this._impl;
    t1.cancelAnimationFrame$1(t1, this);
  },
  getCallback$0: function() {
    return this.callback;
  }
};

$$.AnimationSchedulerImplWebkit = {"": "AnimationSchedulerImpl;",
  requestAnimationFrame$2: function(_, callback, element) {
    return $.AnimationHandleImplWebkit$(this.requestAnimationFrameImpl$2(callback, element), this);
  },
  isNativelySupported$0: function() {
    $.Window_methods.get$requestAnimationFrame(window);
    $.Window_methods.get$cancelAnimationFrame(window);
    var t1 = true;
    return t1;
  },
  requestAnimationFrameImpl$2: function(callback, element) {
    return $.Window_methods.requestAnimationFrame$1(window, new $.AnimationSchedulerImplWebkit_requestAnimationFrameImpl_anon(callback));
  }
};

$$.AnimationSchedulerImplWebkit_requestAnimationFrameImpl_anon = {"": "Closure;callback_0",
  call$1: function(highResTime) {
    this.callback_0.execute$1($.DateTime$_now().millisecondsSinceEpoch);
  }
};

$$.AnimationHandleImplWebkit = {"": "AnimationHandle;requestId,impl",
  cancel$0: function(_) {
    $.Window_methods.cancelAnimationFrame$1(window, this.requestId);
  }
};

$$.AllMouseHandlersAdapter = {"": "EventHandlerAdapter;callback",
  onMouseDown$1: function(_, $event) {
    this.callback$1($event);
  },
  onMouseMove$1: function(_, $event) {
    this.callback$1($event);
  },
  onMouseOut$1: function(_, $event) {
    this.callback$1($event);
  },
  onMouseOver$1: function(_, $event) {
    this.callback$1($event);
  },
  onMouseUp$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.BlurHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onBlur$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.ChangeHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onChange$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.ClickHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onClick$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.CloseHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onClose$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.KeyUpHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onKeyUp$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.MouseDownHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onMouseDown$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.MouseMoveHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onMouseMove$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.MouseOutHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onMouseOut$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.MouseOverHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onMouseOver$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.MouseUpHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onMouseUp$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.NativePreviewHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onPreviewNativeEvent$1: function($event) {
    this.callback$1($event);
  }
};

$$.OpenHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onOpen$1: function(_, $event) {
    this.callback$1($event);
  }
};

$$.SelectionHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onSelection$1: function($event) {
    this.callback$1($event);
  }
};

$$.ValueChangeHandlerAdapter = {"": "EventHandlerAdapter;callback",
  onValueChange$1: function($event) {
    this.callback$1($event);
  }
};

$$.AttachEvent = {"": "DwtEvent;_liblib5$_attached,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$AttachEvent_TYPE();
  },
  dispatch$1: function(handler) {
    handler.onAttachOrDetach$1(this);
  }
};

$$.AttachEventHandler = {"": "EventHandler;"};

$$.BeforeSelectionEvent = {"": "DwtEvent;_item,_liblib5$_canceled,_dead,_source",
  cancel$0: function(_) {
    this._liblib5$_canceled = true;
  },
  getAssociatedType$0: function() {
    return $.get$BeforeSelectionEvent_TYPE();
  },
  isCanceled$0: function() {
    return this._liblib5$_canceled;
  },
  dispatch$1: function(handler) {
    handler.onBeforeSelection$1(this);
  }
};

$$.BeforeSelectionHandler = {"": "EventHandler;"};

$$.BlurEvent = {"": "DomEvent;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$BlurEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onBlur$1$x(handler, this);
  }
};

$$.BlurHandler = {"": "EventHandler;"};

$$.ChangeEvent = {"": "DomEvent;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$ChangeEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onChange$1$x(handler, this);
  }
};

$$.ChangeHandler = {"": "EventHandler;"};

$$.ClickEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$ClickEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onClick$1$x(handler, this);
  }
};

$$.ClickHandler = {"": "EventHandler;"};

$$.CloseEvent = {"": "DwtEvent;target>,autoClosed<,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$CloseEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onClose$1$x(handler, this);
  }
};

$$.CloseHandler = {"": "EventHandler;"};

$$.Command = {"": "Object;"};

$$.DomEvent = {"": "DwtEvent;",
  getAssociatedType$0: function() {
    return $.get$DomEvent_TYPE();
  },
  preventDefault$0: function(_) {
    $.preventDefault$0$x(this._nativeEvent);
  },
  stopPropagation$0: function(_) {
    $.stopPropagation$0$x(this._nativeEvent);
  },
  getNativeEvent$0: function() {
    return this._nativeEvent;
  }
};

$$.DomEventType = {"": "EventType;eventName,flyweight<",
  DomEventType$2: function(eventName, flyweight) {
    var t1 = $.DomEvent_getRegistered();
    t1.$indexSet(t1, this.eventName, this);
  }
};

$$.DwtEvent = {"": "IEvent;_dead@",
  getSource$0: function() {
    return $.IEvent.prototype.getSource$0.call(this);
  },
  revive$0: function() {
    this._dead = false;
    this._source = null;
  }
};

$$.IEvent = {"": "Object;_source?",
  getSource$0: function() {
    return this._source;
  },
  setSource$1: function(source) {
    this._source = source;
  },
  toString$0: function(_) {
    return "An event type";
  }
};

$$.EventType = {"": "Object;",
  toString$0: function(_) {
    return "Event type";
  }
};

$$.EventBus = {"": "Object;"};

$$.EventHandler = {"": "Object;"};

$$.EventHandlerAdapter = {"": "Object;callback",
  callback$1: function(arg0) {
    return this.callback.call$1(arg0);
  }
};

$$.EventListener = {"": "Object;"};

$$.HandlerRegistration = {"": "Object;"};

$$.DomImpl = {"": "Object;",
  _getEventBits$1: function(elem) {
    var eventBits, t1, exception;
    eventBits = $.get$dataset$x(elem).$$dom_attributes._liblib3$_element.getAttribute("data-eventBits");
    if (eventBits != null)
      try {
        t1 = $.Primitives_parseInt(eventBits, null, null);
        return t1;
      } catch (exception) {
        t1 = $.unwrapException(exception);
        if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isException)
          ;
        else
          throw exception;
      }

    return 0;
  },
  eventGetTypeInt$1: function(eventType) {
    switch (eventType) {
      case "blur":
        return 4096;
      case "change":
        return 1024;
      case "click":
        return 1;
      case "dblclick":
        return 2;
      case "focus":
        return 2048;
      case "keydown":
        return 128;
      case "keypress":
        return 256;
      case "keyup":
        return 512;
      case "load":
        return 32768;
      case "losecapture":
        return 8192;
      case "mousedown":
        return 4;
      case "mousemove":
        return 64;
      case "mouseout":
        return 32;
      case "mouseover":
        return 16;
      case "mouseup":
        return 8;
      case "scroll":
        return 16384;
      case "error":
        return 65536;
      case "mousewheel":
        return 131072;
      case "DOMMouseScroll":
        return 131072;
      case "contextmenu":
        return 262144;
      case "paste":
        return 524288;
      case "touchstart":
        return 1048576;
      case "touchmove":
        return 2097152;
      case "touchend":
        return 4194304;
      case "touchcancel":
        return 8388608;
      default:
        return -1;
    }
  }
};

$$.DomImplStandard = {"": "DomImpl;_listener<,captureElem<,_subscription",
  insertChild$3: function($parent, toAdd, index) {
    var t1, child, count, before;
    t1 = $.getInterceptor$x($parent);
    child = t1.get$$$dom_firstChild($parent);
    for (count = 0; before = null, child != null;) {
      if (child.nodeType === 1) {
        if (count === index) {
          before = child;
          break;
        }
        ++count;
      }
      child = child.nextSibling;
    }
    if (before == null)
      t1.append$1($parent, toAdd);
    else
      t1.insertBefore$2($parent, toAdd, before);
  },
  getChild$2: function(elem, index) {
    var child, count, t1;
    child = $.get$$$dom_firstElementChild$x(elem);
    for (count = 0; t1 = $.getInterceptor(child), child != null;) {
      if (t1.get$nodeType(child) === 1) {
        if (index === count)
          return child;
        ++count;
      }
      child = t1.get$nextElementSibling(child);
    }
    return;
  },
  getChildCount$1: function(elem) {
    var child, count, t1;
    child = $.get$$$dom_firstElementChild$x(elem);
    for (count = 0; t1 = $.getInterceptor(child), child != null;) {
      if (t1.get$nodeType(child) === 1)
        ++count;
      child = t1.get$nextElementSibling(child);
    }
    return count;
  },
  getAbsoluteLeft$1: function(elem) {
    var curr, left, t1, t2;
    for (curr = elem, left = 0; t1 = $.getInterceptor$x(curr), t1.get$offsetParent(curr) != null;) {
      t2 = t1.get$scrollLeft(curr);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      left -= t2;
      curr = t1.get$parent(curr);
    }
    for (; t1 = $.getInterceptor(elem), elem != null;) {
      t2 = $.get$left$x(t1.get$offset(elem));
      if (typeof t2 !== "number")
        throw $.iae(t2);
      left += t2;
      elem = t1.get$offsetParent(elem);
    }
    return left;
  },
  getAbsoluteTop$1: function(elem) {
    var curr, $top, t1, t2;
    for (curr = elem, $top = 0; t1 = $.getInterceptor$x(curr), t1.get$offsetParent(curr) != null;) {
      t2 = t1.get$scrollTop(curr);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      $top -= t2;
      curr = t1.get$parentNode(curr);
    }
    for (; t1 = $.getInterceptor(elem), elem != null;) {
      t2 = $.get$top$x(t1.get$offset(elem));
      if (typeof t2 !== "number")
        throw $.iae(t2);
      $top += t2;
      elem = t1.get$offsetParent(elem);
    }
    return $top;
  },
  initEventSystem$0: function() {
    $.DomImplStandard_dispatchCapturedEvent = new $.DomImplStandard_initEventSystem_anon();
    $.DomImplStandard_dispatchEvent = new $.DomImplStandard_initEventSystem_anon0(this);
    $.DomImplStandard_dispatchDragEvent = new $.DomImplStandard_initEventSystem_anon1();
    $.DomImplStandard_dispatchUnhandledEvent = new $.DomImplStandard_initEventSystem_anon2();
    $.DomImplStandard_dispatchCapturedMouseEvent = new $.DomImplStandard_initEventSystem_anon3(this);
    var t1 = $.EventStreamProvider_click.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_dblclick.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_mousedown.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_mouseup.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_mousemove.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_mouseover.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_mouseout.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $._CustomEventStreamProvider__determineMouseWheelEventType.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_keydown.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedEvent, t1._useCapture);
    t1 = $.EventStreamProvider_keyup.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedEvent, t1._useCapture);
    t1 = $.EventStreamProvider_keypress.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedEvent, t1._useCapture);
    t1 = $.EventStreamProvider_touchstart.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_touchmove.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_touchend.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
    t1 = $.EventStreamProvider_touchcancel.forTarget$2$useCapture(window, true);
    $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchCapturedMouseEvent, t1._useCapture);
  },
  _sinkBitlessEventImpl$2: function(elem, eventTypeName) {
    var t1;
    switch (eventTypeName) {
      case "drag":
        t1 = $.get$onDrag$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "dragend":
        t1 = $.get$onDragEnd$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "dragleave":
        t1 = $.get$onDragLeave$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "dragstart":
        t1 = $.get$onDragStart$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "drop":
        t1 = $.get$onDrop$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "dragenter":
        t1 = $.get$onDragEnter$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchDragEvent, t1._useCapture);
        break;
      case "dragover":
        t1 = $.get$onDragOver$x(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchDragEvent, t1._useCapture);
        break;
      case "canplaythrough":
        t1 = $.EventStreamProvider_canplaythrough.forTarget$1(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "ended":
        t1 = $.EventStreamProvider_ended.forTarget$1(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      case "progress":
        t1 = $.EventStreamProvider_progress.forTarget$1(elem);
        $._EventStreamSubscription$(t1._target, t1._eventType, $.DomImplStandard_dispatchEvent, t1._useCapture);
        break;
      default:
        throw $.wrapException($._ExceptionImplementation$("Trying to sink unknown event type " + eventTypeName));
    }
  },
  sinkEventsImpl$2: function(elem, bits) {
    var chMask, t1;
    chMask = $.$xor$n(this._getEventBits$1(elem), bits);
    if (chMask === 0)
      return;
    t1 = $.get$dataset$x(elem);
    t1.$indexSet(t1, "eventBits", $.JSInt_methods.toRadixString$1(chMask, 16));
    this._applyDispatcher$7(elem, $.EventStreamProvider_click, bits, chMask, "click", 1, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_dblclick, bits, chMask, "dblclick", 2, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_mousedown, bits, chMask, "mousedown", 4, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_mouseup, bits, chMask, "mouseup", 8, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_mouseover, bits, chMask, "mouseover", 16, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_mouseout, bits, chMask, "mouseout", 32, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_mousemove, bits, chMask, "mousemove", 64, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_keydown, bits, chMask, "keydown", 128, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_keypress, bits, chMask, "keypress", 256, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_keyup, bits, chMask, "keyup", 512, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_change, bits, chMask, "change", 1024, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_focus, bits, chMask, "focus", 2048, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_blur, bits, chMask, "blur", 4096, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_scroll, bits, chMask, "scroll", 16384, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_load, bits, chMask, "load", 32768, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_error, bits, chMask, "error", 65536, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $._CustomEventStreamProvider__determineMouseWheelEventType, bits, chMask, "mousewheel", 131072, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_contextmenu, bits, chMask, "contextmenu", 262144, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_paste, bits, chMask, "paste", 524288, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_touchstart, bits, chMask, "touchstart", 1048576, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_touchmove, bits, chMask, "touchmove", 2097152, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_touchend, bits, chMask, "touchend", 4194304, $.DomImplStandard_dispatchEvent);
    this._applyDispatcher$7(elem, $.EventStreamProvider_touchcancel, bits, chMask, "touchcancel", 8388608, $.DomImplStandard_dispatchEvent);
  },
  _applyDispatcher$8: function(elem, provider, bits, chMask, eventName, mask, handler, useCapture) {
    var t1, t2;
    if ((chMask & 1) !== 0) {
      t1 = this._subscription;
      if ($.$and$n(bits, 1) !== 0) {
        t2 = provider.forTarget$2$useCapture(elem, useCapture);
        t1.$indexSet(t1, "click", $._EventStreamSubscription$(t2._target, t2._eventType, $.DomImplStandard_dispatchEvent, t2._useCapture));
      } else
        $.cancel$0$x(t1.$index(t1, "click"));
    }
  },
  _applyDispatcher$7: function(elem, provider, bits, chMask, eventName, mask, handler) {
    return this._applyDispatcher$8(elem, provider, bits, chMask, eventName, mask, handler, false);
  },
  eventGetToElement$1: function(evt) {
    var t1 = $.getInterceptor$x(evt);
    if ($.$eq(t1.get$type(evt), "mouseover") === true)
      return $.interceptedTypeCast(t1.get$target(evt), "$isElement");
    if ($.$eq(t1.get$type(evt), "mouseout") === true)
      return $.interceptedTypeCast($.get$relatedTarget$x($.interceptedTypeCast(evt, "$isMouseEvent")), "$isElement");
    return;
  }
};

$$.DomImplStandard_initEventSystem_anon = {"": "Closure;",
  call$1: function(evt) {
    var t1;
    if (!$.Dom_previewEvent(evt)) {
      t1 = $.getInterceptor$x(evt);
      t1.stopPropagation$0(evt);
      t1.preventDefault$0(evt);
      return false;
    }
    return true;
  }
};

$$.DomImplStandard_initEventSystem_anon0 = {"": "Closure;this_0",
  call$1: function($event) {
    var t1, curElem, t2, listener, t3, t4, prevCurrentEvent;
    t1 = $.getInterceptor$x($event);
    curElem = $.interceptedTypeCast(t1.get$currentTarget($event), "$isNode");
    t2 = this.this_0;
    listener = null;
    while (true) {
      t3 = curElem != null;
      if (t3) {
        t4 = t2.get$_listener();
        listener = t4.$index(t4, curElem);
        t4 = listener == null;
      } else
        t4 = false;
      if (!t4)
        break;
      curElem = curElem.parentNode;
    }
    if (t3 && curElem.nodeType !== 1)
      curElem = null;
    if (listener != null) {
      prevCurrentEvent = $.Dom__currentEvent;
      $.Dom__currentEvent = $event;
      t2 = $.Dom__sCaptureElem;
      if (curElem == null ? t2 == null : curElem === t2)
        if ($.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event)) === 8192)
          $.Dom__sCaptureElem = null;
      listener.onBrowserEvent$1($event);
      $.Dom__currentEvent = prevCurrentEvent;
    }
  }
};

$$.DomImplStandard_initEventSystem_anon1 = {"": "Closure;",
  call$1: function(evt) {
    $.preventDefault$0$x(evt);
    $.DomImplStandard_dispatchEvent.call$1(evt);
  }
};

$$.DomImplStandard_initEventSystem_anon2 = {"": "Closure;",
  call$1: function(evt) {
    var t1, t2;
    t1 = $.getInterceptor$x(evt);
    t2 = t1.get$target(evt);
    if (typeof t2 === "object" && t2 !== null && !!$.getInterceptor(t2).$isImageElement) {
      t2 = $.get$dataset$x($.interceptedTypeCast(t1.get$target(evt), "$isImageElement"));
      t2.$indexSet(t2, "dwtLastUnhandledEvent", t1.get$type(evt));
    }
    $.DomImplStandard_dispatchEvent.call$1(evt);
  }
};

$$.DomImplStandard_initEventSystem_anon3 = {"": "Closure;this_1",
  call$1: function(evt) {
    var t1, cap, t2, prevCurrentEvent;
    if ($.DomImplStandard_dispatchCapturedEvent.call$1(evt) === true) {
      t1 = this.this_1;
      cap = t1.get$captureElem();
      if (cap != null) {
        t2 = t1.get$_listener();
        t2 = t2.$index(t2, cap) != null;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.get$_listener();
        t1 = t1.$index(t1, cap);
        prevCurrentEvent = $.Dom__currentEvent;
        $.Dom__currentEvent = evt;
        if ($.$eq(cap, $.Dom__sCaptureElem) === true)
          if ($.get$Dom_impl().eventGetTypeInt$1($.get$type$x(evt)) === 8192)
            $.Dom__sCaptureElem = null;
        t1.onBrowserEvent$1(evt);
        $.Dom__currentEvent = prevCurrentEvent;
        $.stopPropagation$0$x(evt);
      }
    }
  }
};

$$.KeyCodeEvent = {"": "KeyEvent;"};

$$.KeyEvent = {"": "DomEvent;"};

$$.KeyUpEvent = {"": "KeyCodeEvent;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$KeyUpEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onKeyUp$1$x(handler, this);
  }
};

$$.KeyUpHandler = {"": "EventHandler;"};

$$.MouseDownEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$MouseDownEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onMouseDown$1$x(handler, this);
  }
};

$$.MouseDownHandler = {"": "EventHandler;"};

$$.MouseEvent0 = {"": "DomEvent;",
  getMouseEvent$0: function() {
    var t1 = this._nativeEvent;
    if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isMouseEvent)
      return $.interceptedTypeCast(t1, "$isMouseEvent");
    throw $.wrapException($._ExceptionImplementation$("Native event is not subtype of MouseEvent"));
  },
  getX$0: function() {
    var relativeElem, t1;
    relativeElem = this._relativeElem;
    t1 = $.getInterceptor(relativeElem);
    if (relativeElem != null)
      return $.$add$ns($.$add$ns($.$sub$n($.get$x$x($.get$client$x(this.getMouseEvent$0())), $.get$Dom_impl().getAbsoluteLeft$1(relativeElem)), t1.get$scrollLeft(relativeElem)), t1.get$document(relativeElem).documentElement.scrollLeft);
    return $.get$x$x($.get$client$x(this.getMouseEvent$0()));
  },
  getY$0: function() {
    var relativeElem, t1;
    relativeElem = this._relativeElem;
    t1 = $.getInterceptor(relativeElem);
    if (relativeElem != null)
      return $.$add$ns($.$add$ns($.$sub$n($.get$y$x($.get$client$x(this.getMouseEvent$0())), $.get$Dom_impl().getAbsoluteTop$1(relativeElem)), t1.get$scrollTop(relativeElem)), t1.get$document(relativeElem).documentElement.scrollTop);
    return $.get$y$x($.get$client$x(this.getMouseEvent$0()));
  }
};

$$.MouseMoveEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$MouseMoveEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onMouseMove$1$x(handler, this);
  }
};

$$.MouseMoveHandler = {"": "EventHandler;"};

$$.MouseOutEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$MouseOutEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onMouseOut$1$x(handler, this);
  },
  $isMouseOutEvent: true
};

$$.MouseOutHandler = {"": "EventHandler;"};

$$.MouseOverEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$MouseOverEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onMouseOver$1$x(handler, this);
  },
  $isMouseOverEvent: true
};

$$.MouseOverHandler = {"": "EventHandler;"};

$$.MouseUpEvent = {"": "MouseEvent0;_nativeEvent,_relativeElem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$MouseUpEvent_TYPE();
  },
  dispatch$1: function(handler) {
    $.onMouseUp$1$x(handler, this);
  }
};

$$.MouseUpHandler = {"": "EventHandler;"};

$$.NativePreviewEvent = {"": "DwtEvent;_isCanceled,_isConsumed,_isFirstHandler,_nativeEvent,_dead,_source",
  cancel$0: function(_) {
    this._isCanceled = true;
  },
  consume$0: function() {
    this._isConsumed = true;
  },
  getAssociatedType$0: function() {
    return $.get$NativePreviewEvent_TYPE();
  },
  getNativeEvent$0: function() {
    return this._nativeEvent;
  },
  isCanceled$0: function() {
    return this._isCanceled;
  },
  isConsumed$0: function() {
    return this._isConsumed;
  },
  isFirstHandler$0: function() {
    return this._isFirstHandler;
  },
  dispatch$1: function(handler) {
    handler.onPreviewNativeEvent$1(this);
    $.NativePreviewEvent_singleton._isFirstHandler = false;
  },
  revive$0: function() {
    $.DwtEvent.prototype.revive$0.call(this);
    this._isCanceled = false;
    this._isConsumed = false;
    this._isFirstHandler = true;
    this._nativeEvent = null;
  }
};

$$.NativePreviewHandler = {"": "EventHandler;"};

$$.OpenEvent = {"": "DwtEvent;_liblib5$_target,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$OpenEvent_TYPE();
  },
  getTarget$0: function() {
    return this._liblib5$_target;
  },
  dispatch$1: function(handler) {
    $.onOpen$1$x(handler, this);
  }
};

$$.OpenHandler = {"": "EventHandler;"};

$$.SelectionEvent = {"": "DwtEvent;_selectedItem,_dead,_source",
  getAssociatedType$0: function() {
    return $.get$SelectionEvent_TYPE();
  },
  getSelectedItem$0: function() {
    return this._selectedItem;
  },
  dispatch$1: function(handler) {
    handler.onSelection$1(this);
  },
  SelectionEvent$1: function(selectedItem) {
    this._selectedItem = selectedItem;
  }
};

$$.SelectionHandler = {"": "EventHandler;"};

$$.SimpleEventBus = {"": "EventBus;map,_firingDepth,_deferredDeltas",
  _doAdd$3: function(type, source, handler) {
    var t1, t2;
    if (this._firingDepth > 0) {
      t1 = $._AddCommand$(this, type, source, handler);
      if (this._deferredDeltas == null) {
        t2 = $.List_List($, $.Command);
        $.setRuntimeTypeInfo(t2, [$.Command]);
        this._deferredDeltas = t2;
      }
      $.add$1$ax(this._deferredDeltas, t1);
    } else
      $.add$1$ax(this.ensureHandlerList$2(type, source), handler);
    return $._HandlerRegistration$(this, type, source, handler);
  },
  ensureHandlerList$2: function(type, source) {
    var t1, sourceMap, handlers;
    t1 = this.map;
    if (t1.containsKey$1(t1, type) === true)
      sourceMap = t1.$index(t1, type);
    else {
      sourceMap = $.HashMap$($.Object, $.JSArray);
      t1.$indexSet(t1, type, sourceMap);
    }
    t1 = $.getInterceptor$x(sourceMap);
    if (t1.containsKey$1(sourceMap, source) === true)
      handlers = t1.$index(sourceMap, source);
    else {
      handlers = $.List_List($, $.getRuntimeTypeArgument(this, this.$asSimpleEventBus, 0));
      $.setRuntimeTypeInfo(handlers, [$.getRuntimeTypeArgument(this, this.$asSimpleEventBus, 0)]);
      t1.$indexSet(sourceMap, source, handlers);
    }
    return handlers;
  },
  _doRemoveNow$3: function(type, source, handler) {
    var l, t1, indx;
    l = this.getHandlerList$2(type, source);
    t1 = $.getInterceptor$asx(l);
    indx = t1.indexOf$1(l, handler);
    if (indx !== -1) {
      t1.removeAt$1(l, indx);
      if (t1.get$isEmpty(l) === true)
        this.prune$2(type, source);
    }
  },
  prune$2: function(type, source) {
    var t1, sourceMap, t2;
    t1 = this.map;
    if (t1.containsKey$1(t1, type) === true) {
      sourceMap = t1.$index(t1, type);
      t2 = $.getInterceptor$ax(sourceMap);
      t2.remove$1(sourceMap, source);
      if (t2.get$isEmpty(sourceMap) === true)
        t1.remove$1(t1, type);
    }
  },
  _handleQueuedAddsAndRemoves$0: function() {
    var c, t1;
    t1 = this._deferredDeltas;
    if (t1 != null)
      try {
        for (t1 = $.get$iterator$ax(t1); t1.moveNext$0();) {
          c = t1.get$current();
          c.execute$0();
        }
      } finally {
        this._deferredDeltas = null;
      }
  },
  fireEvent$1: function($event) {
    this._doFire$2($event, null);
  },
  _doFire$2: function($event, source) {
    var handlers, causes, i, handler, e, exception, t1, causes0;
    try {
      this._firingDepth = this._firingDepth + 1;
      if (source != null)
        $event.set$_source(source);
      handlers = this.getDispatchList$2($event.getAssociatedType$0(), source);
      causes = null;
      for (i = 0; $.$lt$n(i, $.get$length$asx(handlers)); i = $.$add$ns(i, 1)) {
        handler = $.$index$asx(handlers, i);
        try {
          $event.dispatch$1(handler);
        } catch (exception) {
          t1 = $.unwrapException(exception);
          if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isException) {
            e = t1;
            if (causes == null) {
              causes0 = $.HashSet$($.Exception);
              causes = causes0;
            }
            $.add$1$ax(causes, e);
          } else
            throw exception;
        }

      }
      if (causes != null) {
        t1 = $.UmbrellaException$(causes);
        throw $.wrapException(t1);
      }
    } finally {
      this._firingDepth = this._firingDepth - 1;
      if (this._firingDepth === 0)
        this._handleQueuedAddsAndRemoves$0();
    }
  },
  getDispatchList$2: function(type, source) {
    var directHandlers, globalHandlers, rtn;
    directHandlers = this.getHandlerList$2(type, source);
    if (source == null)
      return directHandlers;
    globalHandlers = this.getHandlerList$2(type, $.get$SimpleEventBus__emptySource());
    rtn = $.List_List$from(directHandlers, true, $.getRuntimeTypeArgument(this, this.$asSimpleEventBus, 0));
    if ($.$gt$n($.get$length$asx(globalHandlers), 0))
      $.addAll$1$ax(rtn, globalHandlers);
    return rtn;
  },
  getHandlerList$2: function(type, source) {
    var t1, sourceMap;
    t1 = this.map;
    if (t1.containsKey$1(t1, type) === true) {
      sourceMap = t1.$index(t1, type);
      if (source == null)
        source = $.get$SimpleEventBus__emptySource();
      if (source != null && $.containsKey$1$x(sourceMap, source) === true)
        return $.$index$asx(sourceMap, source);
    }
    t1 = $.List_List($, $.getRuntimeTypeArgument(this, this.$asSimpleEventBus, 0));
    $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeArgument(this, this.$asSimpleEventBus, 0)]);
    return t1;
  },
  $asEventBus: null
};

$$._HandlerRegistration = {"": "HandlerRegistration;_liblib5$_eventBus,type*,source,handler"};

$$._EmptySource = {"": "Object;"};

$$._AddCommand = {"": "Command;_liblib5$_eventBus,type*,source,handler",
  execute$0: function() {
    $.add$1$ax(this._liblib5$_eventBus.ensureHandlerList$2(this.type, this.source), this.handler);
  }
};

$$._RemoveCommand = {"": "Command;_liblib5$_eventBus,type*,source,handler",
  execute$0: function() {
    this._liblib5$_eventBus._doRemoveNow$3(this.type, this.source, this.handler);
  }
};

$$.UmbrellaException = {"": "Object;_causes",
  get$causes: function() {
    return this._causes;
  },
  toString$0: function(_) {
    return $.UmbrellaException_makeMessage(this._causes);
  },
  UmbrellaException$1: function(_causes) {
    throw $.wrapException($.UmbrellaException_makeCause(this._causes));
  },
  $isUmbrellaException: true,
  $isException: true
};

$$.ValueChangeEvent = {"": "DwtEvent;_liblib5$_value,_dead,_source",
  get$value: function(_) {
    return this._liblib5$_value;
  },
  getAssociatedType$0: function() {
    return $.get$ValueChangeEvent_TYPE();
  },
  dispatch$1: function(handler) {
    handler.onValueChange$1(this);
  },
  toString$0: function(_) {
    return "ValueChangeEvent. Value: " + $.S(this.get$value(this));
  }
};

$$.ValueChangeHandler = {"": "EventHandler;"};

$$.AutoDirectionHandler = {"": "Object;directionEstimator,handlerRegistration,target>",
  onKeyUp$1: function(_, $event) {
    this.refreshDirection$0();
  },
  refreshDirection$0: function() {
    var t1, t2, dir;
    t1 = this.directionEstimator;
    if (t1 != null) {
      t2 = this.target;
      dir = t1.estimateStringDirection$1(t2.get$text(t2));
      t1 = this.target;
      if (dir !== t1.get$direction(t1)) {
        t1 = this.target;
        t1.set$direction(t1, dir);
      }
    }
  },
  setDirectionEstimator$1: function(directionEstimator) {
    var t1, t2, t3, t4;
    this.directionEstimator = directionEstimator;
    t1 = directionEstimator == null;
    t2 = this.handlerRegistration;
    if (t1 !== (t2 == null))
      if (t1) {
        t1 = t2._liblib5$_eventBus;
        t3 = t2.type;
        t4 = t2.source;
        t2 = t2.handler;
        if (t1._firingDepth > 0) {
          t2 = $._RemoveCommand$(t1, t3, t4, t2);
          if (t1._deferredDeltas == null) {
            t3 = $.List_List($, $.Command);
            $.setRuntimeTypeInfo(t3, [$.Command]);
            t1._deferredDeltas = t3;
          }
          $.add$1$ax(t1._deferredDeltas, t2);
        } else
          t1._doRemoveNow$3(t3, t4, t2);
        this.handlerRegistration = null;
      } else
        this.handlerRegistration = this.target.addDomHandler$2(this, $.get$KeyUpEvent_TYPE());
    this.refreshDirection$0();
  },
  AutoDirectionHandler$2: function(target, directionEstimator) {
    this.target = target;
    this.handlerRegistration = null;
    this.setDirectionEstimator$1(directionEstimator);
  }
};

$$.BidiFormatter = {"": "BidiFormatterBase;alwaysSpan,contextDir"};

$$.BidiFormatterBase = {"": "Object;",
  spanWrapWithKnownDirBase$4: function(dir, str, isHtml, dirReset) {
    var t1, dirCondition, result, str0;
    t1 = $.getInterceptor(dir);
    dirCondition = t1.$eq(dir, $.Direction_DEFAULT) !== true && t1.$eq(dir, this.contextDir) !== true;
    result = $.StringBuffer$("");
    if (this.alwaysSpan || dirCondition) {
      result._contents = result._contents + "<span";
      if (dirCondition) {
        result._contents = result._contents + " ";
        t1 = t1.$eq(dir, $.Direction_RTL) === true ? "dir=rtl" : "dir=ltr";
        result._contents = result._contents + t1;
      }
      result._contents = result._contents + ">";
      str0 = typeof str === "string" ? str : $.S(str);
      result._contents = result._contents + str0;
      result._contents = result._contents + "</span>";
    } else {
      str0 = typeof str === "string" ? str : $.S(str);
      result._contents = result._contents + str0;
    }
    t1 = this.dirResetIfNeeded$4(str, dir, isHtml, dirReset);
    result._contents = result._contents + t1;
    return result._contents;
  },
  dirResetIfNeeded$4: function(str, dir, isHtml, dirReset) {
    var t1, str0, t2;
    if (dirReset) {
      t1 = this.contextDir;
      if (t1 === $.Direction_LTR)
        if ($.$eq(dir, $.Direction_RTL) !== true) {
          $.get$BidiUtils__INSTANCE();
          str0 = isHtml ? isHtml ? $.replaceAll$2$s(str, $.get$BidiUtils_SKIP_HTML_RE(), " ") : str : str;
          t2 = $.get$BidiUtils_LAST_STRONG_IS_RTL_RE();
          if (typeof str0 !== "string")
            $.throwExpression($.ArgumentError$(str0));
          t2 = t2._nativeRegExp.test(str0);
        } else
          t2 = true;
      else
        t2 = false;
      if (!t2)
        if (t1 === $.Direction_RTL)
          if ($.$eq(dir, $.Direction_LTR) !== true) {
            $.get$BidiUtils__INSTANCE();
            if (isHtml)
              str = isHtml ? $.replaceAll$2$s(str, $.get$BidiUtils_SKIP_HTML_RE(), " ") : str;
            t1 = $.get$BidiUtils_LAST_STRONG_IS_LTR_RE();
            if (typeof str !== "string")
              $.throwExpression($.ArgumentError$(str));
            t1 = t1._nativeRegExp.test(str);
          } else
            t1 = true;
        else
          t1 = false;
      else
        t1 = true;
    } else
      t1 = false;
    if (t1)
      return this.contextDir === $.Direction_LTR ? $.get$Format_LRM_STRING() : $.get$Format_RLM_STRING();
    else
      return "";
  }
};

$$.BidiPolicyImpl = {"": "Object;"};

$$.BidiUtils = {"": "Object;",
  estimateDirection$2: function(str, isHtml) {
    var t1, tokens, rtlCount, total, hasWeaklyLtr, i, token, t2;
    if (isHtml)
      str = isHtml ? $.replaceAll$2$s(str, $.get$BidiUtils_SKIP_HTML_RE(), " ") : str;
    t1 = $.get$BidiUtils_WORD_SEPARATOR_RE();
    if (typeof str !== "string")
      $.throwExpression($.ArgumentError$(str));
    tokens = $._AllMatchesIterable$(t1, str);
    for (rtlCount = 0, total = 0, hasWeaklyLtr = false, i = 0; i < tokens.get$length(tokens); ++i) {
      token = tokens.elementAt$1(tokens, i).get$str();
      str = token;
      t1 = $.get$BidiUtils_FIRST_STRONG_IS_RTL_RE();
      if (typeof str !== "string")
        $.throwExpression($.ArgumentError$(str));
      if (t1._nativeRegExp.test(str)) {
        ++rtlCount;
        ++total;
      } else {
        t1 = $.get$BidiUtils_IS_REQUIRED_LTR_RE();
        t2 = typeof token !== "string";
        if (t2)
          $.throwExpression($.ArgumentError$(token));
        if (t1._nativeRegExp.test(token))
          hasWeaklyLtr = true;
        else {
          str = token;
          t1 = $.get$BidiUtils_HAS_ANY_LTR_RE();
          if (typeof str !== "string")
            $.throwExpression($.ArgumentError$(str));
          if (t1._nativeRegExp.test(str))
            ++total;
          else {
            t1 = $.get$BidiUtils_HAS_NUMERALS_RE();
            if (t2)
              $.throwExpression($.ArgumentError$(token));
            if (t1._nativeRegExp.test(token))
              hasWeaklyLtr = true;
          }
        }
      }
    }
    if (total === 0)
      t1 = hasWeaklyLtr ? $.Direction_LTR : $.Direction_DEFAULT;
    else
      t1 = rtlCount / total > 0.4 ? $.Direction_RTL : $.Direction_LTR;
    return t1;
  },
  estimateDirection$1: function(str) {
    return this.estimateDirection$2(str, false);
  }
};

$$.Direction = {"": "Enum;_liblib2$_value"};

$$.DirectionEstimator = {"": "Object;",
  estimateStringDirection$2: function(str, isHtml) {
    $.get$BidiUtils__INSTANCE();
    return this.estimateDirection$1(isHtml ? $.replaceAll$2$s(str, $.get$BidiUtils_SKIP_HTML_RE(), " ") : str);
  },
  estimateStringDirection$1: function(str) {
    return this.estimateStringDirection$2(str, false);
  }
};

$$.DirectionalTextHelper = {"": "Object;directionEstimator,isDirectionExplicitlySet,isSpanWrapped,element,initialElementDir,isElementInline,textDir",
  getTextOrHtml$1: function(isHtml) {
    var t1, elem;
    t1 = this.isSpanWrapped;
    elem = this.element;
    if (t1)
      elem = $.get$$$dom_firstElementChild$x(elem);
    return isHtml ? $.get$innerHtml$x(elem) : $.get$text$x(elem);
  },
  setTextOrHtml$3: function($content, isHtml, dir) {
    var t1, t2;
    t1 = this.directionEstimator;
    if (t1 == null) {
      this.isSpanWrapped = false;
      t1 = this.element;
      if (isHtml)
        $.set$innerHtml$x(t1, $content);
      else
        $.set$text$x(t1, $content);
      t1 = this.textDir;
      t2 = this.initialElementDir;
      if (t1 == null ? t2 != null : t1 !== t2) {
        this.textDir = t2;
        $.BidiUtils_setDirectionOnElement(this.element, this.initialElementDir);
      }
    } else
      this.setTextOrHtmlWithDirection$3($content, t1.estimateStringDirection$2($content, isHtml), isHtml);
    this.isDirectionExplicitlySet = false;
  },
  setTextOrHtml$2: function(content, isHtml) {
    return this.setTextOrHtml$3(content, isHtml, null);
  },
  setTextOrHtmlWithDirection$3: function($content, dir, isHtml) {
    var t1;
    this.textDir = dir;
    if (this.isElementInline) {
      this.isSpanWrapped = true;
      t1 = this.element;
      $.get$LocaleInfo_instance();
      $.set$innerHtml$x(t1, $.BidiFormatter$($.Direction_LTR, true).spanWrapWithKnownDirBase$4(dir, $content, isHtml, true));
    } else {
      this.isSpanWrapped = false;
      $.BidiUtils_setDirectionOnElement(this.element, dir);
      t1 = this.element;
      if (isHtml)
        $.set$innerHtml$x(t1, $content);
      else
        $.set$text$x(t1, $content);
    }
    this.isDirectionExplicitlySet = true;
  },
  DirectionalTextHelper$2: function(element, isElementInline) {
    this.element = element;
    this.isElementInline = isElementInline;
    this.isSpanWrapped = false;
    this.initialElementDir = $.BidiUtils_getDirectionOnElement(element);
    this.textDir = this.initialElementDir;
    this.isDirectionExplicitlySet = true;
  }
};

$$.AutoHorizontalAlignmentConstant = {"": "Object;"};

$$.HorizontalAlignmentConstant = {"": "AutoHorizontalAlignmentConstant;_textAlign",
  getTextAlignString$0: function() {
    var t1 = this._textAlign;
    return t1.get$value(t1);
  },
  $isHorizontalAlignmentConstant: true
};

$$.VerticalAlignmentConstant = {"": "Object;_verticalAlignString",
  getVerticalAlignString$0: function() {
    return this._verticalAlignString;
  }
};

$$.LocaleInfoImpl = {"": "Object;"};

$$.LocaleInfo = {"": "Object;infoImpl,dateTimeFormatInfo,numberConstants",
  isRTL$0: function() {
    return false;
  }
};

$$.NumberFormat = {"": "Object;",
  formatDouble$1: function(number) {
    if ($.JSDouble_methods.get$isNaN(number))
      return "NaN";
    return $.JSDouble_methods.toString$0(number);
  },
  formatInt$1: function(number) {
    if ($.JSInt_methods.get$isNaN(number))
      return "NaN";
    return $.JSInt_methods.toString$0(number);
  },
  format$1: function(_, number) {
    if (typeof number === "number" && Math.floor(number) === number)
      return this.formatInt$1(number);
    else if (typeof number === "number")
      return this.formatDouble$1(number);
    throw $.wrapException($._ExceptionImplementation$("Unknown type"));
  }
};

$$.WordCountDirectionEstimator = {"": "DirectionEstimator;",
  estimateDirection$2: function(str, isHtml) {
    return $.get$BidiUtils__INSTANCE().estimateDirection$1(str);
  },
  estimateDirection$1: function(str) {
    return this.estimateDirection$2(str, false);
  }
};

$$.LayoutImpl = {"": "Object;relativeRuler",
  attachChild$3: function($parent, child, before) {
    var container = document.createElement("div");
    container.appendChild(child);
    $.set$position$x(container.style, $.Position_absolute.get$value($.Position_absolute));
    $.set$overflow$x(container.style, $.Overflow_hidden.get$value($.Overflow_hidden));
    $.set$left$x(container.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$top$x(container.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$right$x(container.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$bottom$x(container.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    this.fillParent$1(child);
    $.insertBefore$2$x($parent, container, before != null ? $.get$parent$x(before) : null);
    return container;
  },
  fillParent$1: function(elem) {
    var t1 = $.getInterceptor$x(elem);
    $.set$position$x(t1.get$style(elem), $.Position_absolute.get$value($.Position_absolute));
    $.set$left$x(t1.get$style(elem), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$top$x(t1.get$style(elem), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$right$x(t1.get$style(elem), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$bottom$x(t1.get$style(elem), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
  },
  getUnitSizeInPixels$3: function($parent, unit, vertical) {
    var t1;
    if (unit == null)
      return 1;
    switch (unit) {
      case $.Unit_aNe:
        t1 = $.getInterceptor$x($parent);
        return $.$div$n(vertical ? $.get$height$x(t1.get$client($parent)) : $.get$width$x(t1.get$client($parent)), 100);
      case $.Unit_em:
        return $.$div$n($.get$offset$x(this.relativeRuler).width, 10);
      case $.Unit_ex:
        return $.$div$n($.get$offset$x(this.relativeRuler).height, 10);
      case $.Unit_cm:
        return $.$mul$n($.get$offset$x($.LayoutImpl_fixedRuler).width, 0.1);
      case $.Unit_mm:
        return $.$mul$n($.get$offset$x($.LayoutImpl_fixedRuler).width, 0.01);
      case $.Unit_in:
        return $.$mul$n($.get$offset$x($.LayoutImpl_fixedRuler).width, 0.254);
      case $.Unit_pt:
        return $.$mul$n($.get$offset$x($.LayoutImpl_fixedRuler).width, 0.00353);
      case $.Unit_pc:
        return $.$mul$n($.get$offset$x($.LayoutImpl_fixedRuler).width, 0.0423);
      case $.Unit_px:
      default:
        return 1;
    }
  },
  initParent$1: function($parent) {
    var t1, t2;
    t1 = $.getInterceptor$x($parent);
    $.set$position$x(t1.get$style($parent), $.Position_relative.get$value($.Position_relative));
    t2 = $.LayoutImpl_createRuler($.Unit_em, $.Unit_ex);
    this.relativeRuler = t2;
    t1.append$1($parent, t2);
  },
  layout$1: function(layer) {
    var t1, t2, t3, t4;
    t1 = $.getInterceptor$x(layer);
    if (t1.get$visible(layer) === true)
      $.set$display$x($.get$style$x(layer.get$container()), "");
    else
      $.set$display$x($.get$style$x(layer.get$container()), $.Display_none.get$value($.Display_none));
    t2 = $.get$style$x(layer.get$container());
    if (layer.get$setLeft()) {
      t3 = $.toString$0(t1.get$left(layer));
      t4 = layer.get$leftUnit();
      t4 = $.$add$ns(t3, t4.get$value(t4));
      t3 = t4;
    } else
      t3 = "";
    $.set$left$x(t2, t3);
    t3 = $.get$style$x(layer.get$container());
    if (layer.get$setTop()) {
      t2 = $.toString$0(t1.get$top(layer));
      t4 = layer.get$topUnit();
      t4 = $.$add$ns(t2, t4.get$value(t4));
      t2 = t4;
    } else
      t2 = "";
    $.set$top$x(t3, t2);
    t2 = $.get$style$x(layer.get$container());
    if (layer.get$setRight()) {
      t3 = $.toString$0(t1.get$right(layer));
      t4 = layer.get$rightUnit();
      t4 = $.$add$ns(t3, t4.get$value(t4));
      t3 = t4;
    } else
      t3 = "";
    $.set$right$x(t2, t3);
    t3 = $.get$style$x(layer.get$container());
    if (layer.get$setBottom()) {
      t2 = $.toString$0(t1.get$bottom(layer));
      t4 = layer.get$bottomUnit();
      t4 = $.$add$ns(t2, t4.get$value(t4));
      t2 = t4;
    } else
      t2 = "";
    $.set$bottom$x(t3, t2);
    t2 = $.get$style$x(layer.get$container());
    if (layer.get$setWidth() === true) {
      t3 = $.toString$0(t1.get$width(layer));
      t4 = layer.get$widthUnit();
      t4 = $.$add$ns(t3, t4.get$value(t4));
      t3 = t4;
    } else
      t3 = "";
    $.set$width$x(t2, t3);
    t3 = $.get$style$x(layer.get$container());
    if (layer.get$setHeight() === true) {
      t1 = $.toString$0(t1.get$height(layer));
      t2 = layer.get$heightUnit();
      t2 = $.$add$ns(t1, t2.get$value(t2));
      t1 = t2;
    } else
      t1 = "";
    $.set$height$x(t3, t1);
    switch (layer.get$hPos()) {
      case $.Alignment_BEGIN:
        $.set$left$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        $.set$right$x($.get$style$x(layer.get$child()), "");
        break;
      case $.Alignment_END:
        $.set$left$x($.get$style$x(layer.get$child()), "");
        $.set$right$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        break;
      case $.Alignment_STRETCH:
        $.set$left$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        $.set$right$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        break;
    }
    switch (layer.get$vPos()) {
      case $.Alignment_BEGIN:
        $.set$top$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        $.set$bottom$x($.get$style$x(layer.get$child()), "");
        break;
      case $.Alignment_END:
        $.set$top$x($.get$style$x(layer.get$child()), "");
        $.set$bottom$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        break;
      case $.Alignment_STRETCH:
        $.set$top$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        $.set$bottom$x($.get$style$x(layer.get$child()), $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
        break;
    }
  },
  removeChild$2: function(container, child) {
    var t1;
    $.remove$0$ax(container);
    t1 = $.getInterceptor$x(child);
    if ($.$eq(t1.get$parent(child), container) === true)
      t1.remove$0(child);
    $.set$position$x(t1.get$style(child), "");
    $.set$left$x(t1.get$style(child), "");
    $.set$top$x(t1.get$style(child), "");
    $.set$width$x(t1.get$style(child), "");
    $.set$height$x(t1.get$style(child), "");
  }
};

$$.Layout = {"": "Object;impl,layers,parentElem,animation",
  attachChild$3$before$userObject: function(child, before, userObject) {
    var layer = $.Layer$(this.impl.attachChild$3(this.parentElem, child, before), child, userObject);
    this.layers.push(layer);
    return layer;
  },
  attachChild$2$userObject: function(child, userObject) {
    return this.attachChild$3$before$userObject(child, null, userObject);
  },
  layout$2: function(duration, callback) {
    var t1, t2, l, t3, t4, parentWidth, parentHeight;
    t1 = this.animation;
    if (t1 != null)
      t1.cancel$0(t1);
    if ($.$eq(duration, 0) === true) {
      for (t1 = $.JSArray_methods.get$iterator(this.layers), t2 = this.impl; t1.moveNext$0();) {
        l = t1.get$current();
        t3 = l.get$targetLeft();
        l.set$sourceLeft(t3);
        t4 = $.getInterceptor$x(l);
        t4.set$left(l, t3);
        t3 = l.get$targetTop();
        l.set$sourceTop(t3);
        t4.set$top(l, t3);
        t3 = l.get$targetRight();
        l.set$sourceRight(t3);
        t4.set$right(l, t3);
        t3 = l.get$targetBottom();
        l.set$sourceBottom(t3);
        t4.set$bottom(l, t3);
        t3 = l.get$targetWidth();
        l.set$sourceWidth(t3);
        t4.set$width(l, t3);
        t3 = l.get$targetHeight();
        l.set$sourceHeight(t3);
        t4.set$height(l, t3);
        l.set$setLeft(l.get$setTargetLeft());
        l.set$setTop(l.get$setTargetTop());
        l.set$setRight(l.get$setTargetRight());
        l.set$setBottom(l.get$setTargetBottom());
        l.set$setWidth(l.get$setTargetWidth());
        l.set$setHeight(l.get$setTargetHeight());
        l.set$leftUnit(l.get$targetLeftUnit());
        l.set$topUnit(l.get$targetTopUnit());
        l.set$rightUnit(l.get$targetRightUnit());
        l.set$bottomUnit(l.get$targetBottomUnit());
        l.set$widthUnit(l.get$targetWidthUnit());
        l.set$heightUnit(l.get$targetHeightUnit());
        t2.layout$1(l);
      }
      if (callback != null) {
        t1 = callback._liblib1$_command.callback;
        if (t1 != null) {
          t1._panel.doAfterLayout$0();
          t1 = t1._liblib1$_callback;
          if (t1 != null)
            t1.onAnimationComplete$0();
        }
      }
      return;
    }
    parentWidth = $.get$width$x($.get$client$x(this.parentElem));
    parentHeight = $.get$height$x($.get$client$x(this.parentElem));
    for (t1 = $.JSArray_methods.get$iterator(this.layers); t1.moveNext$0();) {
      l = t1.get$current();
      this.adjustHorizontalConstraints$2(parentWidth, l);
      this.adjustVerticalConstraints$2(parentHeight, l);
    }
    this.animation = $.LayoutAnimation$(this, callback);
    this.animation.run$2$element(duration, this.parentElem);
  },
  layout$0: function() {
    return this.layout$2(0, null);
  },
  onAttach$0: function() {
  },
  onDetach$0: function() {
  },
  removeChild$1: function(layer) {
    var t1, indx;
    this.impl.removeChild$2(layer.container, layer.child);
    t1 = this.layers;
    indx = $.JSArray_methods.indexOf$1(t1, layer);
    if (indx !== -1)
      $.JSArray_methods.removeAt$1(t1, indx);
  },
  adjustHorizontalConstraints$2: function(parentWidth, l) {
    var t1, t2, t3, t4, leftPx, rightPx, widthPx;
    if (typeof parentWidth !== "number")
      return this.adjustHorizontalConstraints$2$bailout(1, parentWidth, l);
    t1 = $.getInterceptor$x(l);
    t2 = t1.get$left(l);
    if (typeof t2 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(2, parentWidth, l, t1, t2);
    t3 = l.get$leftUnit();
    t4 = this.impl;
    t3 = t4.getUnitSizeInPixels$3(this.parentElem, t3, false);
    if (typeof t3 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(3, parentWidth, l, t1, t2, t4, t3);
    leftPx = t2 * t3;
    t3 = t1.get$right(l);
    if (typeof t3 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(4, parentWidth, l, t1, 0, t4, t3, leftPx);
    t2 = l.get$rightUnit();
    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
    if (typeof t2 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(5, parentWidth, l, t1, t2, t4, t3, leftPx);
    rightPx = t3 * t2;
    t1 = t1.get$width(l);
    if (typeof t1 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(6, parentWidth, l, t1, 0, t4, 0, leftPx, rightPx);
    t2 = l.get$widthUnit();
    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
    if (typeof t2 !== "number")
      return this.adjustHorizontalConstraints$2$bailout(7, parentWidth, l, t1, t2, t4, 0, leftPx, rightPx);
    widthPx = t1 * t2;
    if (l.get$setLeft() && !l.get$setTargetLeft()) {
      l.set$setLeft(false);
      if (l.get$setWidth() !== true) {
        l.set$setTargetWidth(true);
        t1 = parentWidth - (leftPx + rightPx);
        t2 = l.get$targetWidthUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(8, 0, l, t1, t2);
        l.set$sourceWidth(t1 / t2);
      } else {
        l.set$setTargetRight(true);
        t1 = parentWidth - (leftPx + widthPx);
        t2 = l.get$targetRightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(9, 0, l, t1, t2);
        l.set$sourceRight(t1 / t2);
      }
    } else if (l.get$setWidth() === true && !l.get$setTargetWidth()) {
      l.set$setWidth(false);
      if (!l.get$setLeft()) {
        l.set$setTargetLeft(true);
        t1 = parentWidth - (rightPx + widthPx);
        t2 = l.get$targetLeftUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(10, 0, l, t1, t2);
        l.set$sourceLeft(t1 / t2);
      } else {
        l.set$setTargetRight(true);
        t1 = parentWidth - (leftPx + widthPx);
        t2 = l.get$targetRightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(11, 0, l, t1, t2);
        l.set$sourceRight(t1 / t2);
      }
    } else if (l.get$setRight() && !l.get$setTargetRight()) {
      l.set$setRight(false);
      if (l.get$setWidth() !== true) {
        l.set$setTargetWidth(true);
        t1 = parentWidth - (leftPx + rightPx);
        t2 = l.get$targetWidthUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(12, 0, l, t1, t2);
        l.set$sourceWidth(t1 / t2);
      } else {
        l.set$setTargetLeft(true);
        t1 = parentWidth - (rightPx + widthPx);
        t2 = l.get$targetLeftUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
        if (typeof t2 !== "number")
          return this.adjustHorizontalConstraints$2$bailout(13, 0, l, t1, t2);
        l.set$sourceLeft(t1 / t2);
      }
    }
    l.set$setLeft(l.get$setTargetLeft());
    l.set$setRight(l.get$setTargetRight());
    l.set$setWidth(l.get$setTargetWidth());
    l.set$leftUnit(l.get$targetLeftUnit());
    l.set$rightUnit(l.get$targetRightUnit());
    l.set$widthUnit(l.get$targetWidthUnit());
  },
  adjustHorizontalConstraints$2$bailout: function(state0, parentWidth, l, t1, t2, t4, t3, leftPx, rightPx) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$x(l);
        t2 = t1.get$left(l);
      case 2:
        state0 = 0;
        t3 = l.get$leftUnit();
        t4 = this.impl;
        t3 = t4.getUnitSizeInPixels$3(this.parentElem, t3, false);
      case 3:
        state0 = 0;
        leftPx = $.$mul$n(t2, t3);
        t3 = t1.get$right(l);
      case 4:
        state0 = 0;
        t2 = l.get$rightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
      case 5:
        state0 = 0;
        rightPx = $.$mul$n(t3, t2);
        t1 = t1.get$width(l);
      case 6:
        state0 = 0;
        t2 = l.get$widthUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
      case 7:
        state0 = 0;
        widthPx = $.$mul$n(t1, t2);
      default:
        var widthPx;
        if (state0 === 9 || state0 === 8 || state0 === 0 && l.get$setLeft() && !l.get$setTargetLeft())
          switch (state0) {
            case 0:
              l.set$setLeft(false);
              t1 = $.getInterceptor$ns(leftPx);
              t2 = $.getInterceptor$n(parentWidth);
            default:
              if (state0 === 8 || state0 === 0 && l.get$setWidth() !== true)
                switch (state0) {
                  case 0:
                    l.set$setTargetWidth(true);
                    t1 = t2.$sub(parentWidth, t1.$add(leftPx, rightPx));
                    t2 = l.get$targetWidthUnit();
                    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                  case 8:
                    state0 = 0;
                    l.set$sourceWidth($.$div$n(t1, t2));
                }
              else
                switch (state0) {
                  case 0:
                    l.set$setTargetRight(true);
                    t1 = t2.$sub(parentWidth, t1.$add(leftPx, widthPx));
                    t2 = l.get$targetRightUnit();
                    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                  case 9:
                    state0 = 0;
                    l.set$sourceRight($.$div$n(t1, t2));
                }
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 11 || state0 === 10 || state0 === 0 && l.get$setWidth() === true && !l.get$setTargetWidth())
                switch (state0) {
                  case 0:
                    l.set$setWidth(false);
                    t1 = $.getInterceptor$n(parentWidth);
                  default:
                    if (state0 === 10 || state0 === 0 && !l.get$setLeft())
                      switch (state0) {
                        case 0:
                          l.set$setTargetLeft(true);
                          t1 = t1.$sub(parentWidth, $.$add$ns(rightPx, widthPx));
                          t2 = l.get$targetLeftUnit();
                          t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                        case 10:
                          state0 = 0;
                          l.set$sourceLeft($.$div$n(t1, t2));
                      }
                    else
                      switch (state0) {
                        case 0:
                          l.set$setTargetRight(true);
                          t1 = t1.$sub(parentWidth, $.$add$ns(leftPx, widthPx));
                          t2 = l.get$targetRightUnit();
                          t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                        case 11:
                          state0 = 0;
                          l.set$sourceRight($.$div$n(t1, t2));
                      }
                }
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 13 || state0 === 12 || state0 === 0 && l.get$setRight() && !l.get$setTargetRight())
                      switch (state0) {
                        case 0:
                          l.set$setRight(false);
                          t1 = $.getInterceptor$n(parentWidth);
                        default:
                          if (state0 === 12 || state0 === 0 && l.get$setWidth() !== true)
                            switch (state0) {
                              case 0:
                                l.set$setTargetWidth(true);
                                t1 = t1.$sub(parentWidth, $.$add$ns(leftPx, rightPx));
                                t2 = l.get$targetWidthUnit();
                                t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                              case 12:
                                state0 = 0;
                                l.set$sourceWidth($.$div$n(t1, t2));
                            }
                          else
                            switch (state0) {
                              case 0:
                                l.set$setTargetLeft(true);
                                t1 = t1.$sub(parentWidth, $.$add$ns(rightPx, widthPx));
                                t2 = l.get$targetLeftUnit();
                                t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, false);
                              case 13:
                                state0 = 0;
                                l.set$sourceLeft($.$div$n(t1, t2));
                            }
                      }
                }
          }
        l.set$setLeft(l.get$setTargetLeft());
        l.set$setRight(l.get$setTargetRight());
        l.set$setWidth(l.get$setTargetWidth());
        l.set$leftUnit(l.get$targetLeftUnit());
        l.set$rightUnit(l.get$targetRightUnit());
        l.set$widthUnit(l.get$targetWidthUnit());
    }
  },
  adjustVerticalConstraints$2: function(parentHeight, l) {
    var t1, t2, t3, t4, topPx, bottomPx, heightPx;
    if (typeof parentHeight !== "number")
      return this.adjustVerticalConstraints$2$bailout(1, parentHeight, l);
    t1 = $.getInterceptor$x(l);
    t2 = t1.get$top(l);
    if (typeof t2 !== "number")
      return this.adjustVerticalConstraints$2$bailout(2, parentHeight, l, t1, t2);
    t3 = l.get$topUnit();
    t4 = this.impl;
    t3 = t4.getUnitSizeInPixels$3(this.parentElem, t3, true);
    if (typeof t3 !== "number")
      return this.adjustVerticalConstraints$2$bailout(3, parentHeight, l, t1, t2, t4, t3);
    topPx = t2 * t3;
    t3 = t1.get$bottom(l);
    if (typeof t3 !== "number")
      return this.adjustVerticalConstraints$2$bailout(4, parentHeight, l, t1, 0, t4, t3, topPx);
    t2 = l.get$bottomUnit();
    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
    if (typeof t2 !== "number")
      return this.adjustVerticalConstraints$2$bailout(5, parentHeight, l, t1, t2, t4, t3, topPx);
    bottomPx = t3 * t2;
    t1 = t1.get$height(l);
    if (typeof t1 !== "number")
      return this.adjustVerticalConstraints$2$bailout(6, parentHeight, l, t1, 0, t4, 0, topPx, bottomPx);
    t2 = l.get$heightUnit();
    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
    if (typeof t2 !== "number")
      return this.adjustVerticalConstraints$2$bailout(7, parentHeight, l, t1, t2, t4, 0, topPx, bottomPx);
    heightPx = t1 * t2;
    if (l.get$setTop() && !l.get$setTargetTop()) {
      l.set$setTop(false);
      if (l.get$setHeight() !== true) {
        l.set$setTargetHeight(true);
        t1 = parentHeight - (topPx + bottomPx);
        t2 = l.get$targetHeightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(8, 0, l, t1, t2);
        l.set$sourceHeight(t1 / t2);
      } else {
        l.set$setTargetBottom(true);
        t1 = parentHeight - (topPx + heightPx);
        t2 = l.get$targetBottomUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(9, 0, l, t1, t2);
        l.set$sourceBottom(t1 / t2);
      }
    } else if (l.get$setHeight() === true && !l.get$setTargetHeight()) {
      l.set$setHeight(false);
      if (!l.get$setTop()) {
        l.set$setTargetTop(true);
        t1 = parentHeight - (bottomPx + heightPx);
        t2 = l.get$targetTopUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(10, 0, l, t1, t2);
        l.set$sourceTop(t1 / t2);
      } else {
        l.set$setTargetBottom(true);
        t1 = parentHeight - (topPx + heightPx);
        t2 = l.get$targetBottomUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(11, 0, l, t1, t2);
        l.set$sourceBottom(t1 / t2);
      }
    } else if (l.get$setBottom() && !l.get$setTargetBottom()) {
      l.set$setBottom(false);
      if (l.get$setHeight() !== true) {
        l.set$setTargetHeight(true);
        t1 = parentHeight - (topPx + bottomPx);
        t2 = l.get$targetHeightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(12, 0, l, t1, t2);
        l.set$sourceHeight(t1 / t2);
      } else {
        l.set$setTargetTop(true);
        t1 = parentHeight - (bottomPx + heightPx);
        t2 = l.get$targetTopUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
        if (typeof t2 !== "number")
          return this.adjustVerticalConstraints$2$bailout(13, 0, l, t1, t2);
        l.set$sourceTop(t1 / t2);
      }
    }
    l.set$setTop(l.get$setTargetTop());
    l.set$setBottom(l.get$setTargetBottom());
    l.set$setHeight(l.get$setTargetHeight());
    l.set$topUnit(l.get$targetTopUnit());
    l.set$bottomUnit(l.get$targetBottomUnit());
    l.set$heightUnit(l.get$targetHeightUnit());
  },
  adjustVerticalConstraints$2$bailout: function(state0, parentHeight, l, t1, t2, t4, t3, topPx, bottomPx) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$x(l);
        t2 = t1.get$top(l);
      case 2:
        state0 = 0;
        t3 = l.get$topUnit();
        t4 = this.impl;
        t3 = t4.getUnitSizeInPixels$3(this.parentElem, t3, true);
      case 3:
        state0 = 0;
        topPx = $.$mul$n(t2, t3);
        t3 = t1.get$bottom(l);
      case 4:
        state0 = 0;
        t2 = l.get$bottomUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
      case 5:
        state0 = 0;
        bottomPx = $.$mul$n(t3, t2);
        t1 = t1.get$height(l);
      case 6:
        state0 = 0;
        t2 = l.get$heightUnit();
        t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
      case 7:
        state0 = 0;
        heightPx = $.$mul$n(t1, t2);
      default:
        var heightPx;
        if (state0 === 9 || state0 === 8 || state0 === 0 && l.get$setTop() && !l.get$setTargetTop())
          switch (state0) {
            case 0:
              l.set$setTop(false);
              t1 = $.getInterceptor$ns(topPx);
              t2 = $.getInterceptor$n(parentHeight);
            default:
              if (state0 === 8 || state0 === 0 && l.get$setHeight() !== true)
                switch (state0) {
                  case 0:
                    l.set$setTargetHeight(true);
                    t1 = t2.$sub(parentHeight, t1.$add(topPx, bottomPx));
                    t2 = l.get$targetHeightUnit();
                    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                  case 8:
                    state0 = 0;
                    l.set$sourceHeight($.$div$n(t1, t2));
                }
              else
                switch (state0) {
                  case 0:
                    l.set$setTargetBottom(true);
                    t1 = t2.$sub(parentHeight, t1.$add(topPx, heightPx));
                    t2 = l.get$targetBottomUnit();
                    t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                  case 9:
                    state0 = 0;
                    l.set$sourceBottom($.$div$n(t1, t2));
                }
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 11 || state0 === 10 || state0 === 0 && l.get$setHeight() === true && !l.get$setTargetHeight())
                switch (state0) {
                  case 0:
                    l.set$setHeight(false);
                    t1 = $.getInterceptor$n(parentHeight);
                  default:
                    if (state0 === 10 || state0 === 0 && !l.get$setTop())
                      switch (state0) {
                        case 0:
                          l.set$setTargetTop(true);
                          t1 = t1.$sub(parentHeight, $.$add$ns(bottomPx, heightPx));
                          t2 = l.get$targetTopUnit();
                          t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                        case 10:
                          state0 = 0;
                          l.set$sourceTop($.$div$n(t1, t2));
                      }
                    else
                      switch (state0) {
                        case 0:
                          l.set$setTargetBottom(true);
                          t1 = t1.$sub(parentHeight, $.$add$ns(topPx, heightPx));
                          t2 = l.get$targetBottomUnit();
                          t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                        case 11:
                          state0 = 0;
                          l.set$sourceBottom($.$div$n(t1, t2));
                      }
                }
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 13 || state0 === 12 || state0 === 0 && l.get$setBottom() && !l.get$setTargetBottom())
                      switch (state0) {
                        case 0:
                          l.set$setBottom(false);
                          t1 = $.getInterceptor$n(parentHeight);
                        default:
                          if (state0 === 12 || state0 === 0 && l.get$setHeight() !== true)
                            switch (state0) {
                              case 0:
                                l.set$setTargetHeight(true);
                                t1 = t1.$sub(parentHeight, $.$add$ns(topPx, bottomPx));
                                t2 = l.get$targetHeightUnit();
                                t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                              case 12:
                                state0 = 0;
                                l.set$sourceHeight($.$div$n(t1, t2));
                            }
                          else
                            switch (state0) {
                              case 0:
                                l.set$setTargetTop(true);
                                t1 = t1.$sub(parentHeight, $.$add$ns(bottomPx, heightPx));
                                t2 = l.get$targetTopUnit();
                                t2 = t4.getUnitSizeInPixels$3(this.parentElem, t2, true);
                              case 13:
                                state0 = 0;
                                l.set$sourceTop($.$div$n(t1, t2));
                            }
                      }
                }
          }
        l.set$setTop(l.get$setTargetTop());
        l.set$setBottom(l.get$setTargetBottom());
        l.set$setHeight(l.get$setTargetHeight());
        l.set$topUnit(l.get$targetTopUnit());
        l.set$bottomUnit(l.get$targetBottomUnit());
        l.set$heightUnit(l.get$targetHeightUnit());
    }
  },
  Layout$1: function($parent) {
    this.parentElem = $parent;
    this.impl.initParent$1($parent);
  }
};

$$.Alignment = {"": "Enum;_liblib2$_value"};

$$.Layer = {"": "Object;container<,child<,userObject<,setLeft@,setRight@,setTop@,setBottom@,setWidth@,setHeight@,setTargetLeft@,setTargetRight@,setTargetTop@,setTargetBottom@,setTargetWidth@,setTargetHeight@,leftUnit@,topUnit@,rightUnit@,bottomUnit@,widthUnit@,heightUnit@,targetLeftUnit<,targetTopUnit<,targetRightUnit<,targetBottomUnit<,targetWidthUnit<,targetHeightUnit<,left*,top*,right*,bottom*,width*,height*,sourceLeft@,sourceTop@,sourceRight@,sourceBottom@,sourceWidth@,sourceHeight@,targetLeft<,targetTop<,targetRight<,targetBottom<,targetWidth<,targetHeight<,hPos<,vPos<,visible*",
  setWidth$1: function(arg0) {
    return this.setWidth.call$1(arg0);
  },
  setHeight$1: function(arg0) {
    return this.setHeight.call$1(arg0);
  },
  getUserObject$0: function() {
    return this.userObject;
  },
  setBottomHeight$4: function(bottom, bottomUnit, height, heightUnit) {
    this.setTargetHeight = true;
    this.setTargetBottom = true;
    this.setTargetTop = false;
    this.targetBottom = bottom;
    this.targetHeight = height;
    this.targetBottomUnit = bottomUnit;
    this.targetHeightUnit = heightUnit;
  },
  setChildVerticalPosition$1: function(position) {
    this.vPos = position;
  },
  setLeftRight$4: function(left, leftUnit, right, rightUnit) {
    this.setTargetRight = true;
    this.setTargetLeft = true;
    this.setTargetWidth = false;
    this.targetLeft = left;
    this.targetRight = right;
    this.targetLeftUnit = leftUnit;
    this.targetRightUnit = rightUnit;
  },
  setLeftWidth$4: function(left, leftUnit, width, widthUnit) {
    this.setTargetWidth = true;
    this.setTargetLeft = true;
    this.setTargetRight = false;
    this.targetLeft = left;
    this.targetWidth = width;
    this.targetLeftUnit = leftUnit;
    this.targetWidthUnit = widthUnit;
  },
  setRightWidth$4: function(right, rightUnit, width, widthUnit) {
    this.setTargetWidth = true;
    this.setTargetRight = true;
    this.setTargetLeft = false;
    this.targetRight = right;
    this.targetWidth = width;
    this.targetRightUnit = rightUnit;
    this.targetWidthUnit = widthUnit;
  },
  setTopBottom$4: function($top, topUnit, bottom, bottomUnit) {
    this.setTargetBottom = true;
    this.setTargetTop = true;
    this.setTargetHeight = false;
    this.targetTop = $top;
    this.targetBottom = bottom;
    this.targetTopUnit = topUnit;
    this.targetBottomUnit = bottomUnit;
  },
  setTopHeight$4: function($top, topUnit, height, heightUnit) {
    this.setTargetHeight = true;
    this.setTargetTop = true;
    this.setTargetBottom = false;
    this.targetTop = $top;
    this.targetHeight = height;
    this.targetTopUnit = topUnit;
    this.targetHeightUnit = heightUnit;
  },
  setVisible$1: function(visible) {
    this.visible = visible;
  },
  Layer$3: function(container, child, userObject) {
    this.container = container;
    this.child = child;
    this.userObject = userObject;
  },
  $isLayer: true
};

$$.LayoutAnimation = {"": "Animation;_liblib4$_layout,_liblib4$_callback,callback,duration,element,running,isStarted,requestHandle,runId,scheduler,startTime,wasStarted",
  onCancel$0: function() {
    var t1 = this._liblib4$_layout;
    t1.animation = null;
    t1.layout$0();
    if (this.callback != null) {
      t1 = this._liblib4$_callback._liblib1$_command.callback;
      if (t1 != null) {
        t1._panel.doAfterLayout$0();
        t1 = t1._liblib1$_callback;
        if (t1 != null)
          t1.onAnimationComplete$0();
      }
    }
  },
  onComplete$0: function(_) {
    var t1 = this._liblib4$_layout;
    t1.animation = null;
    t1.layout$0();
    if (this.callback != null) {
      t1 = this._liblib4$_callback._liblib1$_command.callback;
      if (t1 != null) {
        t1._panel.doAfterLayout$0();
        t1 = t1._liblib1$_callback;
        if (t1 != null)
          t1.onAnimationComplete$0();
      }
    }
  },
  onUpdate$1: function(progress) {
    var t1, t2, t3, t4, l, t5;
    for (t1 = this._liblib4$_layout, t2 = $.JSArray_methods.get$iterator(t1.layers), t3 = this._liblib4$_callback, t4 = t3 != null, t1 = t1.impl; t2.moveNext$0();) {
      l = t2.get$current();
      if (l.get$setTargetLeft()) {
        t5 = l.get$sourceLeft();
        $.set$left$x(l, t5 + (l.get$targetLeft() - t5) * progress);
      }
      if (l.get$setTargetRight()) {
        t5 = l.get$sourceRight();
        $.set$right$x(l, t5 + (l.get$targetRight() - t5) * progress);
      }
      if (l.get$setTargetTop()) {
        t5 = l.get$sourceTop();
        $.set$top$x(l, t5 + (l.get$targetTop() - t5) * progress);
      }
      if (l.get$setTargetBottom()) {
        t5 = l.get$sourceBottom();
        $.set$bottom$x(l, t5 + (l.get$targetBottom() - t5) * progress);
      }
      if (l.get$setTargetWidth()) {
        t5 = l.get$sourceWidth();
        $.set$width$x(l, $.$add$ns(t5, $.$mul$n($.$sub$n(l.get$targetWidth(), t5), progress)));
      }
      if (l.get$setTargetHeight()) {
        t5 = l.get$sourceHeight();
        $.set$height$x(l, $.$add$ns(t5, $.$mul$n($.$sub$n(l.get$targetHeight(), t5), progress)));
      }
      t1.layout$1(l);
      if (t4)
        t3.onLayout$2(l, progress);
    }
  }
};

$$.ImageResource = {"": "ResourcePrototype;"};

$$.ImageResourcePrototype = {"": "Object;animated,lossy,name>,url>,left>,top>,width>,height>"};

$$.ResourcePrototype = {"": "Object;"};

$$.AriaValueAttribute = {"": "Attribute;name,defaultValue",
  getSingleValue$1: function(value) {
    return value.getAriaValue$0();
  }
};

$$.Attribute = {"": "Object;name>",
  remove$1: function(_, element) {
    var t1, t2;
    t1 = this.name;
    t2 = $.get$attributes$x(element)._liblib3$_element;
    t2.getAttribute(t1);
    t2.removeAttribute(t1);
  },
  _getAriaValue$1: function(value) {
    return this.getSingleValue$1(value);
  },
  Attribute$2: function($name, defaultValue) {
    this.defaultValue = defaultValue;
  }
};

$$.ButtonRoleImpl = {"": "Role;_roleName",
  removeAriaPressedState$1: function(element) {
    var t1, t2;
    t1 = $.get$State_PRESSED();
    t1 = t1.name;
    t2 = $.get$attributes$x(element)._liblib3$_element;
    t2.getAttribute(t1);
    t2.removeAttribute(t1);
  }
};

$$.PressedValue = {"": "Enum;_liblib2$_value",
  getAriaValue$0: function() {
    switch (this) {
      case $.PressedValue_0:
        return "true";
      case $.PressedValue_1:
        return "false";
      case $.PressedValue_2:
        return "mixed";
      case $.PressedValue_3:
        return "undefined";
    }
    return;
  }
};

$$.Role = {"": "Object;_roleName",
  remove$1: function(_, element) {
    var t1 = $.get$attributes$x(element)._liblib3$_element;
    t1.getAttribute("role");
    t1.removeAttribute("role");
  },
  Role$1: function(roleName) {
    this._roleName = roleName;
  }
};

$$.Flusher = {"": "Object;_schedulerImpl",
  execute$0: function() {
    var t1, t2;
    t1 = this._schedulerImpl;
    t1._flushRunning = true;
    t1.flushPostEventPumpCommands$0();
    t1._flushRunning = false;
    t2 = t1.deferredCommands != null || t1.incrementalCommands != null;
    t1._shouldBeRunning = t2;
    return t2;
  },
  $isRepeatingCommand: true
};

$$.Rescuer = {"": "Object;_schedulerImpl",
  execute$0: function() {
    var t1 = this._schedulerImpl;
    if (t1._flushRunning)
      $.SchedulerImpl__scheduleFixedDelayImpl(t1.flusher, 1);
    return t1._shouldBeRunning;
  },
  $isRepeatingCommand: true
};

$$.SchedulerImpl = {"": "Scheduler;flusher,rescue,deferredCommands,entryCommands,finallyCommands,incrementalCommands,_flushRunning,_shouldBeRunning",
  maybeSchedulePostEventPumpCommands$0: function() {
    if (!this._shouldBeRunning) {
      this._shouldBeRunning = true;
      if (this.flusher == null)
        this.flusher = $.Flusher$(this);
      $.SchedulerImpl__scheduleFixedDelayImpl(this.flusher, 1);
      if (this.rescue == null)
        this.rescue = $.Rescuer$(this);
      $.SchedulerImpl__scheduleFixedDelayImpl(this.rescue, 50);
    }
  },
  flushPostEventPumpCommands$0: function() {
    var t1, t2;
    t1 = this.deferredCommands;
    if (t1 != null) {
      this.deferredCommands = null;
      if (this.incrementalCommands == null) {
        t2 = $.List_List($, $.Task);
        $.setRuntimeTypeInfo(t2, [$.Task]);
        this.incrementalCommands = t2;
      }
      $.SchedulerImpl__runScheduledTasks(t1, this.incrementalCommands);
    }
    t1 = this.incrementalCommands;
    if (t1 != null)
      this.incrementalCommands = $.SchedulerImpl__runRepeatingTasks(t1);
  }
};

$$.SchedulerImpl__scheduleFixedDelayImpl_anon = {"": "Closure;cmd_0,delayMs_1,caleer_2",
  call$0: function() {
    var t1, t2, milliseconds;
    if (this.cmd_0.execute$0()) {
      t1 = $.Duration$(0, 0, 0, this.delayMs_1, 0, 0);
      t2 = this.caleer_2.timeoutHandler;
      milliseconds = t1.get$inMilliseconds();
      if (milliseconds < 0)
        milliseconds = 0;
      $.TimerImpl$(milliseconds, t2);
    }
  }
};

$$.Caleer = {"": "Object;timeoutHandler,handle"};

$$.Task = {"": "Object;_command,_repeating",
  executeRepeating$0: function() {
    return $.propertyTypeCast(this._command, "$isRepeatingCommand").execute$0();
  },
  executeScheduled$0: function() {
    this._command.execute$0();
  },
  isRepeating$0: function() {
    return this._repeating;
  }
};

$$.Scheduler = {"": "Object;"};

$$.ScheduledCommand = {"": "Object;"};

$$.AbstractRenderer = {"": "Object;"};

$$.DoubleParser = {"": "Object;",
  parse$1: function(object) {
    if (object == null || $.$eq(object, "") === true)
      return;
    return $.Primitives_parseDouble(object, null);
  }
};

$$.DoubleRenderer = {"": "AbstractRenderer;"};

$$.IntegerParser = {"": "Object;",
  parse$1: function(object) {
    if (object == null || $.$eq(object, "") === true)
      return;
    return $.Primitives_parseInt(object, null, null);
  }
};

$$.IntegerRenderer = {"": "AbstractRenderer;"};

$$.NumberFormatRenderer = {"": "AbstractRenderer;format",
  format$1: function($receiver, arg0) {
    return this.format.call$1(arg0);
  },
  render$1: function(object) {
    return $.format$1$x(this.format, object);
  },
  NumberFormatRenderer$1: function(format) {
    if (format == null)
      this.format = $.NumberFormat_getDecimalFormat();
    else
      this.format = format;
  }
};

$$.PassthroughParser = {"": "Object;",
  parse$1: function(text) {
    return $.stringTypeCast(text);
  }
};

$$.PassthroughRenderer = {"": "AbstractRenderer;"};

$$.Html = {"": "Label;_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  set$html: function(val) {
    this.directionalTextHelper.setTextOrHtml$2(val, true);
    this.updateHorizontalAlignment$0();
  },
  Html$fromElement$1: function(element) {
    this.clearAndSetStyleName$1("dwt-HTML");
  },
  Html$2: function(html, wordWrap) {
    this.clearAndSetStyleName$1("dwt-HTML");
    if (html != null)
      this.set$html(html);
    if (wordWrap != null)
      this.set$wordWrap(this, wordWrap);
  }
};

$$.AbsolutePanel = {"": "ComplexPanel;_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    $.ComplexPanel.prototype.addWidget$2.call(this, w, this._element);
  },
  remove$1: function(_, w) {
    var removed, t1, t2;
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed) {
      t1 = w.getElement$0();
      t2 = $.getInterceptor$x(t1);
      $.set$left$x(t2.get$style(t1), "");
      $.set$top$x(t2.get$style(t1), "");
      $.set$position$x(t2.get$style(t1), "");
    }
    return removed;
  },
  setWidgetPositionImpl$3: function(w, left, $top) {
    var h, t1, t2;
    h = w._element;
    t1 = left === -1 && $top === -1;
    t2 = $.getInterceptor$x(h);
    if (t1) {
      $.set$left$x(t2.get$style(h), "");
      $.set$top$x(t2.get$style(h), "");
      $.set$position$x(t2.get$style(h), "");
    } else {
      $.set$position$x(t2.get$style(h), "absolute");
      $.set$left$x(t2.get$style(h), $.JSString_methods.$add($.JSInt_methods.toString$0(left), "px"));
      $.set$top$x(t2.get$style(h), $.JSString_methods.$add($.JSInt_methods.toString$0($top), "px"));
    }
  },
  _verifyPositionNotStatic$1: function(child) {
    var t1, t2;
    if (!this._attached)
      return;
    t1 = $.get$offsetParent$x(child._element);
    if (t1 == null)
      return;
    t2 = this._element;
    if (t1 == null ? t2 == null : t1 === t2)
      return;
    if (typeof t2 === "object" && t2 !== null && !!$.getInterceptor(t2).$isBodyElement)
      return;
  },
  AbsolutePanel$1: function(elem) {
    if (elem == null) {
      this.setElement$1($.DivElement_DivElement());
      $.set$position$x($.get$style$x(this.getElement$0()), "relative");
      $.set$overflow$x($.get$style$x(this.getElement$0()), "hidden");
    } else
      this.setElement$1(elem);
  }
};

$$.AbstractImagePrototype = {"": "Object;"};

$$.AttachDetachException = {"": "UmbrellaException;_causes"};

$$.AttachExceptionCommand = {"": "Object;",
  execute$1: function(w) {
    w.onAttach$0();
  }
};

$$.DetachExceptionCommand = {"": "Object;",
  execute$1: function(w) {
    w.onDetach$0();
  }
};

$$.Button = {"": "ButtonBase;eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  Button$2: function(html, handler) {
    this.clearAndSetStyleName$1("dwt-Button");
    this.set$html(html);
    if (handler != null)
      this.addClickHandler$1(handler);
  }
};

$$.ButtonBase = {"": "FocusWidget;",
  set$html: function(value) {
    $.set$innerHtml$x(this.getElement$0(), value);
  },
  get$text: function(_) {
    return $.get$text$x(this.getElement$0());
  },
  set$text: function(_, value) {
    $.set$text$x(this.getElement$0(), value);
  }
};

$$.CaptionPanel = {"": "Composite;legend,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    var t1 = $.propertyTypeCast(this._widget, "$isSimplePanel");
    t1.add$1(t1, w);
  },
  setCaptionHtml$1: function(html) {
    $.get$CaptionPanel_impl().setCaption$4($.interceptedTypeCast(this._element, "$isFieldSetElement"), this.legend, html, true);
  },
  setCaptionText$1: function(text) {
    $.get$CaptionPanel_impl().setCaption$4($.interceptedTypeCast(this._element, "$isFieldSetElement"), this.legend, text, false);
  },
  iterator$0: function(_) {
    var t1 = $.propertyTypeCast(this._widget, "$isSimplePanel");
    return t1.iterator$0(t1);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  remove$1: function(_, w) {
    var t1 = $.propertyTypeCast(this._widget, "$isSimplePanel");
    return t1.remove$1(t1, w);
  },
  CaptionPanel$2: function(caption, asHtml) {
    var fieldSet = $.FieldSetElement_FieldSetElement();
    this.initWidget$1($.SimplePanel$fromElement(fieldSet));
    this.legend = $.LegendElement_LegendElement();
    $.append$1$x(fieldSet, this.legend);
    if (asHtml)
      this.setCaptionHtml$1(caption);
    else
      this.setCaptionText$1(caption);
  },
  $isHasWidgets: true
};

$$.CaptionPanelImpl = {"": "Object;",
  setCaption$4: function(fieldset, legend, caption, asHtml) {
    var t1;
    if (asHtml)
      $.set$innerHtml$x(legend, caption);
    else
      legend.textContent = caption;
    if ("" !== caption) {
      t1 = $.getInterceptor$x(fieldset);
      t1.insertBefore$2(fieldset, legend, t1.get$$$dom_firstChild(fieldset));
    } else if (legend.parentElement != null) {
      t1 = legend.parentNode;
      if (t1 != null)
        t1.removeChild(legend);
    }
  }
};

$$.CellPanel = {"": "ComplexPanel;",
  get$spacing: function(_) {
    return this._spacing;
  },
  set$spacing: function(_, val) {
    this._spacing = val;
    $.Dom_setElementPropertyInt(this._liblib1$_table, "cellSpacing", this.get$spacing(this));
  },
  getBody$0: function() {
    return this._body;
  },
  getTable$0: function() {
    return this._liblib1$_table;
  },
  getWidgetTd$1: function(w) {
    if (w.getParent$0(w) !== this)
      return;
    return $.get$parent$x(w.getElement$0());
  },
  setWidgetCellHeight$2: function(w, height) {
    var td = this.getWidgetTd$1(w);
    if (td != null)
      $.set$height$x($.get$style$x(td), height);
  },
  setWidgetCellWidth$2: function(w, width) {
    var td = this.getWidgetTd$1(w);
    if (td != null)
      $.set$width$x($.get$style$x(td), width);
  },
  CellPanel$0: function() {
    this._liblib1$_table = $.TableElement_TableElement();
    this._body = $.createTBody$0$x(this._liblib1$_table);
    this.setElement$1(this._liblib1$_table);
  }
};

$$.CheckBox = {"": "ButtonBase;directionalTextHelper,inputElem,labelElem,editor,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _initWidget$1: function(element) {
    var t1, uid;
    this.inputElem = element;
    this.labelElem = document.createElement("label");
    $.append$1$x(this._element, this.inputElem);
    $.append$1$x(this._element, this.labelElem);
    t1 = $.Dom_uniqueId;
    $.Dom_uniqueId = $.$add$ns(t1, 1);
    uid = "dwt-id-" + $.S(t1);
    $.set$id$x(this.inputElem, uid);
    $.set$htmlFor$x(this.labelElem, uid);
    this.directionalTextHelper = $.DirectionalTextHelper$(this.labelElem, true);
    this.set$tabIndex(this, 0);
  },
  set$name: function(_, val) {
    $.set$name$x(this.inputElem, val);
  },
  get$name: function(_) {
    return $.get$name$x(this.inputElem);
  },
  set$html: function(val) {
    this.directionalTextHelper.setTextOrHtml$2(val, true);
  },
  get$enabled: function(_) {
    return $.get$disabled$x(this.inputElem) !== true;
  },
  set$enabled: function(_, val) {
    $.set$disabled$x(this.inputElem, !val);
    if (val)
      this.removeStyleDependentName$1("disabled");
    else
      this.addStyleDependentName$1("disabled");
  },
  get$tabIndex: function(_) {
    return $.get$tabIndex$x(this.inputElem);
  },
  set$tabIndex: function(_, index) {
    var t1 = this.inputElem;
    if (t1 != null)
      $.set$tabIndex$x(t1, index);
  },
  set$focus: function(_, focused) {
    var t1 = this.inputElem;
    if (focused)
      $.focus$0$x(t1);
    else
      $.blur$0$x(t1);
  },
  get$text: function(_) {
    return this.directionalTextHelper.getTextOrHtml$1(false);
  },
  set$text: function(_, val) {
    this.directionalTextHelper.setTextOrHtml$2(val, false);
  },
  get$formValue: function() {
    return $.get$value$x(this.inputElem);
  },
  set$formValue: function(val) {
    $.set$value$x(this.inputElem, val);
  },
  getValue$0: function() {
    var t1, t2;
    t1 = this._attached;
    t2 = this.inputElem;
    if (t1)
      return $.get$checked$x(t2);
    else
      return $.get$defaultChecked$x(t2);
  },
  setValue$2: function(val, fireEvents) {
    var oldValue;
    if (val == null)
      val = false;
    oldValue = this.getValue$0();
    $.set$checked$x(this.inputElem, val);
    $.set$defaultChecked$x(this.inputElem, val);
    if ($.$eq(val, oldValue) !== true && fireEvents) {
      $.get$ValueChangeEvent_TYPE();
      this.fireEvent$1($.ValueChangeEvent$(val));
    }
  },
  setValue$1: function(val) {
    return this.setValue$2(val, false);
  },
  ensureDomEventHandlers$0: function() {
    this.addDomHandler$2($.ClickHandlerAdapter$(new $.CheckBox_ensureDomEventHandlers_anon(this)), $.get$ClickEvent_TYPE());
  },
  sinkEvents$1: function(eventBitsToAdd) {
    var t1, t2, t3;
    if (this.eventsToSink === -1) {
      t1 = this.inputElem;
      t2 = $.get$Dom_impl()._getEventBits$1(t1);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t3.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      t3.sinkEventsImpl$2(t1, (eventBitsToAdd | t2) >>> 0);
    } else
      $.Widget.prototype.sinkEvents$1.call(this, eventBitsToAdd);
  },
  onLoad$0: function(_) {
    var t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this.inputElem, this);
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  onUnload$0: function(_) {
    var t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this.inputElem, null);
    this.setValue$2(this.getValue$0(), false);
  },
  replaceInputElement$1: function(newInputElem) {
    var _tabIndex, _checked, _enabled, _formValue, _uid, t1, sunkEvents, t2;
    _tabIndex = this.get$tabIndex(this);
    _checked = this.getValue$0();
    _enabled = this.get$enabled(this);
    _formValue = this.get$formValue();
    _uid = $.get$id$x(this.inputElem);
    t1 = this.inputElem;
    sunkEvents = $.get$Dom_impl()._getEventBits$1(t1);
    t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this.inputElem, null);
    $.replaceWith$1$x(this.inputElem, newInputElem);
    t1 = this.inputElem;
    t1 = $.get$Dom_impl()._getEventBits$1(t1);
    t2 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t2.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    t2.sinkEventsImpl$2(newInputElem, t1);
    t1 = this.inputElem;
    t2 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t2.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    t2.sinkEventsImpl$2(t1, 0);
    this.inputElem = newInputElem;
    t1 = this.inputElem;
    t2 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t2.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    t2.sinkEventsImpl$2(t1, sunkEvents);
    $.set$id$x(this.inputElem, _uid);
    this.set$tabIndex(this, _tabIndex);
    this.setValue$1(_checked);
    this.set$enabled(this, _enabled);
    this.set$formValue(_formValue);
    if (this._attached) {
      t1 = $.get$Dom_impl()._listener;
      t1.$indexSet(t1, this.inputElem, this);
    }
  },
  CheckBox$fromElement$1: function(element) {
    this._initWidget$1(element);
  },
  CheckBox$2: function(label, asHtml) {
    var element = $.InputElement_InputElement(null);
    $.set$type$x(element, "checkbox");
    this._initWidget$1(element);
    this.clearAndSetStyleName$1("dwt-CheckBox");
    if (label != null)
      if (asHtml)
        this.set$html(label);
      else
        this.set$text(this, label);
  },
  $isCheckBox: true
};

$$.CheckBox_ensureDomEventHandlers_anon = {"": "Closure;this_0",
  call$1: function($event) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.getValue$0();
    $.get$ValueChangeEvent_TYPE();
    t1.fireEvent$1($.ValueChangeEvent$(t2));
  }
};

$$.ComplexPanel = {"": "Panel;_children>",
  remove$1: function(_, w) {
    var elem, indx, t1;
    if ($.$eq($.getParent$0$x(w), this) !== true)
      return false;
    try {
      w.setParent$1(null);
    } finally {
      elem = w.getElement$0();
      $.remove$0$ax(elem);
      t1 = this._children;
      indx = t1.indexOf$1(t1, w);
      if ($.$eq(indx, -1) !== true) {
        t1 = this._children;
        t1.remove$1(t1, indx);
      }
    }
    return true;
  },
  iterator$0: function(_) {
    var t1 = this._children;
    return t1.get$iterator(t1);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  getWidgetIndex$1: function(child) {
    var t1 = this._children;
    return t1.indexOf$1(t1, child);
  },
  removeAt$1: function(_, index) {
    var t1 = this._children;
    if (index < 0 || index >= t1._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = t1._liblib1$_array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return this.remove$1(this, t1[index]);
  },
  addWidget$2: function(child, container) {
    var t1;
    child.removeFromParent$0();
    t1 = this._children;
    t1.insert$2(t1, child, t1._size);
    $.append$1$x(container, child.getElement$0());
    child.setParent$1(this);
  },
  adjustIndex$2: function(child, beforeIndex) {
    var t1, t2;
    t1 = $.getInterceptor$n(beforeIndex);
    if (t1.$lt(beforeIndex, 0) || t1.$gt(beforeIndex, this._children._size))
      $.throwExpression($._ExceptionImplementation$("Index Out Of Bounds Exception"));
    if ($.$eq($.getParent$0$x(child), this) === true) {
      t2 = this._children;
      if ($.JSNumber_methods.$lt(t2.indexOf$1(t2, child), beforeIndex))
        beforeIndex = t1.$sub(beforeIndex, 1);
    }
    return beforeIndex;
  },
  insert$4: function(_, child, container, beforeIndex, domInsert) {
    var t1;
    if (container == null)
      throw $.wrapException($._ExceptionImplementation$("container may not be null"));
    beforeIndex = this.adjustIndex$2(child, beforeIndex);
    child.removeFromParent$0();
    t1 = this._children;
    t1.insert$2(t1, child, beforeIndex);
    if (domInsert) {
      t1 = child.getElement$0();
      $.get$Dom_impl().insertChild$3(container, t1, beforeIndex);
    } else
      $.append$1$x(container, child.getElement$0());
    child.setParent$1(this);
  },
  ComplexPanel$0: function() {
    this._children = $.WidgetCollection$(this);
  }
};

$$.OrpahExceptionCommand = {"": "Object;_panel",
  execute$1: function(w) {
    w.setParent$1(null);
  }
};

$$.Composite = {"": "Widget;",
  isAttached$0: function() {
    var t1 = this._widget;
    if (t1 != null)
      return t1.isAttached$0();
    return false;
  },
  onBrowserEvent$1: function($event) {
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
    this._widget.onBrowserEvent$1($event);
  },
  getWidget$0: function() {
    return this._widget;
  },
  initWidget$1: function(widget) {
    if (this._widget != null)
      throw $.wrapException($._ExceptionImplementation$("Composite.initWidget() may only be called once."));
    if (typeof widget === "object" && widget !== null && !!$.getInterceptor(widget).$isIsRenderable)
      this._renderable = widget;
    widget.removeFromParent$0();
    this._element = widget._element;
    this._widget = widget;
    widget.setParent$1(this);
  },
  onAttach$0: function() {
    var t1 = this.eventsToSink;
    if (t1 !== -1) {
      this._widget.sinkEvents$1(t1);
      this.eventsToSink = -1;
    }
    this._widget.onAttach$0();
    t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this._element, this);
    this.onLoad$0(this);
    $.get$AttachEvent_TYPE();
    this.fireEvent$1($.AttachEvent$(true));
  },
  onDetach$0: function() {
    try {
      $.get$AttachEvent_TYPE();
      this.fireEvent$1($.AttachEvent$(false));
    } finally {
      this._widget.onDetach$0();
    }
  },
  $isIsRenderable: true
};

$$.CustomButton = {"": "ButtonBase;_curFaceElement,_curFace,_up,_down,_downHovering,_upHovering,_upDisabled,_downDisabled,_isCapturing,_isFocusing,_allowClick,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$0: function() {
    var t1, t2;
    t1 = this.eventsToSink;
    if (t1 === -1)
      $.UiObject.prototype.sinkEvents$1.call(this, t1);
    else
      this.eventsToSink = (t1 | 7165) >>> 0;
    this._up = $.SimpleFace$(this, null, "up", 0);
    t1 = $.CustomButton__STYLENAME_DEFAULT;
    $.set$$$dom_className$x(this.getStyleElement$0(), t1);
    t1 = $.get$Roles_BUTTON();
    t2 = $.get$attributes$x(this._element);
    t2.$indexSet(t2, "role", t1._roleName);
  },
  getUpFace$0: function() {
    return this._up;
  },
  getDownFace$0: function() {
    if (this._down == null)
      this._down = $.SimpleFace$(this, this._up, "down", 1);
    return this._down;
  },
  get$tabIndex: function(_) {
    return $.get$FocusPanel_impl().getTabIndex$1(this.getElement$0());
  },
  set$tabIndex: function(_, index) {
    $.get$FocusPanel_impl().setTabIndex$2(this.getElement$0(), index);
  },
  get$text: function(_) {
    var t1 = this.getCurrentFace$0();
    return t1.get$text(t1);
  },
  set$text: function(_, value) {
    var t1 = this.getCurrentFace$0();
    t1.set$text(t1, value);
  },
  onBrowserEvent$1: function($event) {
    var t1, type, t2, t3, to, keyCode;
    if (!this.get$enabled(this))
      return;
    t1 = $.getInterceptor$x($event);
    type = $.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event));
    switch (type) {
      case 1:
        if (!this._allowClick) {
          t1.stopPropagation$0($event);
          return;
        }
        break;
      case 4:
        if ($.interceptedTypeCast($event, "$isMouseEvent").button === 0) {
          $.get$FocusPanel_impl();
          $.focus$0$x(this._element);
          this.onClickStart$0();
          t2 = this._element;
          $.Dom__sCaptureElem = t2;
          t3 = $.get$Dom_impl();
          if (!$.DomImpl_eventSystemIsInitialized) {
            t3.initEventSystem$0();
            $.DomImpl_eventSystemIsInitialized = true;
          }
          t3.captureElem = t2;
          this._isCapturing = true;
          t1.preventDefault$0($event);
        }
        break;
      case 8:
        if (this._isCapturing) {
          this._isCapturing = false;
          t1 = this._element;
          t2 = $.Dom__sCaptureElem;
          if (t2 != null && $.$eq(t1, t2) === true)
            $.Dom__sCaptureElem = null;
          t2 = $.get$Dom_impl();
          if (!$.DomImpl_eventSystemIsInitialized) {
            t2.initEventSystem$0();
            $.DomImpl_eventSystemIsInitialized = true;
          }
          if ($.$eq(t1, t2.captureElem) === true)
            t2.captureElem = null;
          if (this._curFace == null)
            this.setCurrentFace$1(this._up);
          if ((2 & this._curFace.faceID) > 0 && $.interceptedTypeCast($event, "$isMouseEvent").button === 0)
            this.onClick$0(this);
        }
        break;
      case 64:
        if (this._isCapturing)
          t1.preventDefault$0($event);
        break;
      case 32:
        to = $.get$Dom_impl().eventGetToElement$1($event);
        t2 = this._element;
        t1 = t1.get$target($event);
        $.get$Dom_impl();
        if ($.contains$1$asx(t2, t1) === true)
          if (to != null) {
            t1 = this._element;
            $.get$Dom_impl();
            t1 = $.contains$1$asx(t1, to) !== true;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1) {
          if (this._isCapturing)
            this.onClickCancel$0();
          if (this._curFace == null)
            this.setCurrentFace$1(this.getUpFace$0());
          t1 = this._curFace;
          if ((2 & t1.faceID) > 0) {
            if (t1 == null)
              this.setCurrentFace$1(this.getUpFace$0());
            this.setCurrentFace$1(this._getFaceFromID$1(((this._curFace.faceID ^ 2) & 4294967291) >>> 0));
          }
        }
        break;
      case 16:
        t2 = this._element;
        t1 = t1.get$target($event);
        $.get$Dom_impl();
        if ($.contains$1$asx(t2, t1) === true) {
          if (this._curFace == null)
            this.setCurrentFace$1(this.getUpFace$0());
          t1 = this._curFace;
          if ((2 & t1.faceID) <= 0) {
            if (t1 == null)
              this.setCurrentFace$1(this.getUpFace$0());
            this.setCurrentFace$1(this._getFaceFromID$1(((this._curFace.faceID ^ 2) & 4294967291) >>> 0));
          }
          if (this._isCapturing)
            this.onClickStart$0();
        }
        break;
      case 4096:
        if (this._isFocusing) {
          this._isFocusing = false;
          this.onClickCancel$0();
        }
        break;
      case 8192:
        if (this._isCapturing) {
          this._isCapturing = false;
          this.onClickCancel$0();
        }
        break;
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
    if (typeof $event === "object" && $event !== null && !!$.getInterceptor($event).$isKeyboardEvent) {
      t1 = $event.type;
      t1 = ($.get$Dom_impl().eventGetTypeInt$1(t1) & 896) !== 0;
    } else
      t1 = false;
    if (t1) {
      keyCode = $.get$keyCode$x($.interceptedTypeCast($event, "$isKeyboardEvent"));
      switch (type) {
        case 128:
          if (keyCode === $.JSString_methods.codeUnitAt$1(" ", 0)) {
            this._isFocusing = true;
            this.onClickStart$0();
          }
          break;
        case 512:
          if (this._isFocusing && keyCode === $.JSString_methods.codeUnitAt$1(" ", 0)) {
            this._isFocusing = false;
            this.onClick$0(this);
          }
          break;
        case 256:
          if (keyCode === $.JSString_methods.codeUnitAt$1("\n", 0) || keyCode === $.JSString_methods.codeUnitAt$1("\r", 0)) {
            this.onClickStart$0();
            this.onClick$0(this);
          }
          break;
      }
    }
  },
  set$enabled: function(_, value) {
    if (this.get$enabled(this) !== value) {
      this.toggleDisabled$0();
      $.FocusWidget.prototype.set$enabled.call(this, this, value);
      if (!value) {
        this.cleanupCaptureState$0();
        $.get$Roles_BUTTON().removeAriaPressedState$1(this.getElement$0());
      } else
        this._setAriaPressed$1(this.getCurrentFace$0());
    }
  },
  onAttach$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    $.FocusWidget.prototype.onAttach$0.call(this);
  },
  onDetach$0: function() {
    var t1, t2;
    $.Widget.prototype.onDetach$0.call(this);
    if (this._isCapturing || this._isFocusing) {
      t1 = this._element;
      t2 = $.Dom__sCaptureElem;
      if (t2 != null && $.$eq(t1, t2) === true)
        $.Dom__sCaptureElem = null;
      t2 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t2.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      if ($.$eq(t1, t2.captureElem) === true)
        t2.captureElem = null;
      this._isCapturing = false;
      this._isFocusing = false;
      this.onClickCancel$0();
    }
    if (this._curFace == null)
      this.setCurrentFace$1(this.getUpFace$0());
    t1 = this._curFace;
    if ((2 & t1.faceID) > 0) {
      if (t1 == null)
        this.setCurrentFace$1(this.getUpFace$0());
      this.setCurrentFace$1(this._getFaceFromID$1(((this._curFace.faceID ^ 2) & 4294967291) >>> 0));
    }
  },
  onClick$0: function(_) {
    var evt;
    this._allowClick = true;
    evt = document.createEvent("CustomEvent");
    $.$$dom_initCustomEvent$4$x(evt, "CustomEvent", false, false, false);
    $.dispatchEvent$1$x(this._element, evt);
    this._allowClick = false;
  },
  onClickCancel$0: function() {
  },
  onClickStart$0: function() {
  },
  getCurrentFace$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    return this._curFace;
  },
  setCurrentFace$1: function(newFace) {
    var t1, t2, t3;
    t1 = this._curFace;
    if (t1 == null ? newFace != null : t1 !== newFace) {
      if (t1 != null) {
        t1 = t1.name;
        t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), t1);
        $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
      }
      this._curFace = newFace;
      t1 = newFace.getFace$0();
      if ($.$eq(this._curFaceElement, t1) !== true) {
        t2 = this._curFaceElement;
        if (t2 != null)
          $.remove$0$ax(t2);
        this._curFaceElement = t1;
        $.append$1$x(this._element, this._curFaceElement);
      }
      t1 = this._curFace.name;
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), t1);
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
      if (this.get$enabled(this)) {
        t1 = newFace.faceID;
        $.get$Roles_BUTTON();
        t2 = this._element;
        t1 = (t1 & 1) === 1 ? $.PressedValue_0 : $.PressedValue_1;
        t3 = $.get$State_PRESSED();
        t2 = $.get$attributes$x(t2);
        t2.$indexSet(t2, t3.name, t3._getAriaValue$1(t1));
      }
    }
  },
  cleanupCaptureState$0: function() {
    var t1, t2;
    if (this._isCapturing || this._isFocusing) {
      t1 = this._element;
      t2 = $.Dom__sCaptureElem;
      if (t2 != null && $.$eq(t1, t2) === true)
        $.Dom__sCaptureElem = null;
      t2 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t2.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      if ($.$eq(t1, t2.captureElem) === true)
        t2.captureElem = null;
      this._isCapturing = false;
      this._isFocusing = false;
      this.onClickCancel$0();
    }
  },
  _getFaceFromID$1: function(id) {
    switch (id) {
      case 1:
        if (this._down == null)
          this._down = $.SimpleFace$(this, this._up, "down", 1);
        return this._down;
      case 0:
        return this._up;
      case 3:
        if (this._downHovering == null) {
          if (this._down == null)
            this._down = $.SimpleFace$(this, this._up, "down", 1);
          this._downHovering = $.SimpleFace$(this, this._down, "down-hovering", 3);
        }
        return this._downHovering;
      case 2:
        if (this._upHovering == null)
          this._upHovering = $.SimpleFace$(this, this._up, "up-hovering", 2);
        return this._upHovering;
      case 4:
        if (this._upDisabled == null)
          this._upDisabled = $.SimpleFace$(this, this._up, "up-disabled", 4);
        return this._upDisabled;
      case 5:
        if (this._downDisabled == null) {
          if (this._down == null)
            this._down = $.SimpleFace$(this, this._up, "down", 1);
          this._downDisabled = $.SimpleFace$(this, this._down, "down-disabled", 5);
        }
        return this._downDisabled;
      default:
        throw $.wrapException($._ExceptionImplementation$("" + id + " is not a known face id."));
    }
  },
  _setAriaPressed$1: function(newFace) {
    var t1, t2, t3;
    t1 = newFace.faceID;
    $.get$Roles_BUTTON();
    t2 = this._element;
    t1 = (t1 & 1) === 1 ? $.PressedValue_0 : $.PressedValue_1;
    t3 = $.get$State_PRESSED();
    t2 = $.get$attributes$x(t2);
    t2.$indexSet(t2, t3.name, t3._getAriaValue$1(t1));
  },
  toggleDisabled$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    this.setCurrentFace$1(this._getFaceFromID$1(((this._curFace.faceID ^ 4) & 4294967293) >>> 0));
  },
  CustomButton$fromImage$3$downImage$handler: function(upImage, downImage, handler) {
    this._init$0();
    this.getUpFace$0().setImage$1(upImage);
    if (downImage != null)
      this.getDownFace$0().setImage$1(downImage);
    if (handler != null)
      this.addClickHandler$1(handler);
  }
};

$$.Face = {"": "Object;",
  get$text: function(_) {
    return $.get$text$x(this.getFace$0());
  },
  set$text: function(_, value) {
    this.face = $.DivElement_DivElement();
    $.UiObject_manageElementStyleName(this.face, $.Face_STYLENAME_HTML_FACE, true);
    $.set$text$x(this.face, value);
    this.updateButtonFace$0();
  },
  setImage$1: function(image) {
    var t1, t2, t3;
    this.face = image.getElement$0();
    t1 = this._customButton;
    t2 = t1._curFace;
    if (t2 != null && $.$eq(t2.getFace$0(), this.getFace$0()) === true) {
      t2 = this.face;
      if ($.$eq(t1._curFaceElement, t2) !== true) {
        t3 = t1._curFaceElement;
        if (t3 != null)
          $.remove$0$ax(t3);
        t1._curFaceElement = t2;
        $.append$1$x(t1._element, t1._curFaceElement);
      }
    }
  },
  getFace$0: function() {
    var t1 = this.face;
    if (t1 == null) {
      t1 = this.delegateTo;
      if (t1 == null) {
        this.face = document.createElement("div");
        return this.face;
      } else
        return t1.getFace$0();
    } else
      return t1;
  },
  updateButtonFace$0: function() {
    var t1, t2, t3;
    t1 = this._customButton;
    t2 = t1._curFace;
    if (t2 != null && $.$eq(t2.getFace$0(), this.getFace$0()) === true) {
      t2 = this.face;
      if ($.$eq(t1._curFaceElement, t2) !== true) {
        t3 = t1._curFaceElement;
        if (t3 != null)
          $.remove$0$ax(t3);
        t1._curFaceElement = t2;
        $.append$1$x(t1._element, t1._curFaceElement);
      }
    }
  },
  toString$0: function(_) {
    return this.getName$0();
  }
};

$$.SimpleFace = {"": "Face;name*,faceID,delegateTo,face,_customButton",
  getName$0: function() {
    return this.name;
  }
};

$$.DeckLayoutPanel = {"": "ComplexPanel;_animationDuration<,_isAnimationVertical,_hidingWidget,_lastVisibleWidget,_layout,_layoutCmd,_visibleWidget,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    this.insertWidget$2(w, this._children._size);
  },
  insertWidget$2: function(widget, beforeIndex) {
    var t1, t2, t3, before;
    t1 = this._children;
    t2 = t1._size;
    t3 = $.getInterceptor$n(beforeIndex);
    if (t3.$lt(beforeIndex, t2)) {
      if (t3.$lt(beforeIndex, 0) || t3.$ge(beforeIndex, t2))
        $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
      t1 = t1._liblib1$_array;
      if (beforeIndex >>> 0 !== beforeIndex || beforeIndex >= t1.length)
        throw $.ioore(beforeIndex);
      before = t1[beforeIndex];
    } else
      before = null;
    this.insertBefore$2(this, widget, before);
  },
  insertBefore$2: function(_, widget, before) {
    var children, t1, t2, t3, layer;
    widget.removeFromParent$0();
    children = this._children;
    t1 = before == null;
    if (t1)
      children.insert$2(children, widget, children._size);
    else
      children.insert$2(children, widget, children.indexOf$1(children, before));
    t2 = this._layout;
    t3 = widget.getElement$0();
    layer = t2.attachChild$3$before$userObject(t3, t1 ? null : before.getElement$0(), widget);
    layer.setVisible$1(false);
    $.set$visible$x(widget, false);
    widget.setLayoutData$1(layer);
    widget.setParent$1(this);
    t1 = this._layoutCmd;
    $.LayoutCommand.prototype.schedule$2.call(t1, 0, $._LayoutCommandAnimationCallback$(t1._panel, null));
  },
  onResize$0: function(_) {
    var t1, child;
    for (t1 = this._children, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
      child = t1.get$current();
      if (typeof child === "object" && child !== null && !!$.getInterceptor(child).$isRequiresResize)
        child.onResize$0(child);
    }
  },
  remove$1: function(_, w) {
    var removed, layer;
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed) {
      layer = $.propertyTypeCast(w.getLayoutData$0(), "$isLayer");
      this._layout.removeChild$1(layer);
      w.setLayoutData$1(null);
      if ($.$eq(this._visibleWidget, w) === true)
        this._visibleWidget = null;
      if ($.$eq(this._hidingWidget, w) === true)
        this._hidingWidget = null;
      if ($.$eq(this._lastVisibleWidget, w) === true)
        this._lastVisibleWidget = null;
    }
    return removed;
  },
  showWidget$1: function(widget) {
    var t1, t2;
    if ($.$eq(widget, this._visibleWidget) === true)
      return;
    this._visibleWidget = widget;
    t1 = widget == null ? 0 : this._animationDuration;
    t2 = this._layoutCmd;
    $.LayoutCommand.prototype.schedule$2.call(t2, t1, $._LayoutCommandAnimationCallback$(t2._panel, null));
  },
  onAttach$0: function() {
    $.Widget.prototype.onAttach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  onDetach$0: function() {
    $.Widget.prototype.onDetach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  doAfterLayout$0: function() {
    var t1 = this._hidingWidget;
    if (t1 != null) {
      $.propertyTypeCast(t1.getLayoutData$0(), "$isLayer").setVisible$1(false);
      $.set$visible$x(t1, false);
      this._layout.layout$0();
      this._hidingWidget = null;
    }
  },
  doBeforeLayout$0: function() {
    var t1, oldLayer, t2, newLayer, oldIndex, direction, vDirection, hDirection;
    t1 = this._lastVisibleWidget;
    oldLayer = t1 == null ? null : $.propertyTypeCast(t1.getLayoutData$0(), "$isLayer");
    t2 = this._visibleWidget;
    newLayer = t2 == null ? null : $.propertyTypeCast(t2.getLayoutData$0(), "$isLayer");
    t2 = this._children;
    oldIndex = t2.indexOf$1(t2, t1);
    t1 = this._visibleWidget;
    t2 = this._children;
    direction = oldIndex < t2.indexOf$1(t2, t1) ? 100 : -100;
    t1 = this._isAnimationVertical;
    vDirection = t1 ? direction : 0;
    if (t1)
      hDirection = 0;
    else {
      $.get$LocaleInfo_instance();
      hDirection = direction;
    }
    this._hidingWidget = null;
    if ($.$eq(this._visibleWidget, this._lastVisibleWidget) !== true) {
      if (oldLayer != null) {
        oldLayer.setTopHeight$4(0, $.Unit_aNe, 100, $.Unit_aNe);
        oldLayer.setLeftWidth$4(0, $.Unit_aNe, 100, $.Unit_aNe);
        t1 = this._lastVisibleWidget;
        oldLayer.setVisible$1(true);
        $.set$visible$x(t1, true);
      }
      if (newLayer != null) {
        newLayer.setTopHeight$4(vDirection, $.Unit_aNe, 100, $.Unit_aNe);
        newLayer.setLeftWidth$4(hDirection, $.Unit_aNe, 100, $.Unit_aNe);
        t1 = this._visibleWidget;
        newLayer.setVisible$1(true);
        $.set$visible$x(t1, true);
      }
      this._layout.layout$0();
      this._hidingWidget = this._lastVisibleWidget;
    }
    if (oldLayer != null) {
      oldLayer.setTopHeight$4(-vDirection, $.Unit_aNe, 100, $.Unit_aNe);
      oldLayer.setLeftWidth$4(-hDirection, $.Unit_aNe, 100, $.Unit_aNe);
      t1 = this._lastVisibleWidget;
      oldLayer.setVisible$1(true);
      $.set$visible$x(t1, true);
    }
    if (newLayer != null) {
      newLayer.setTopHeight$4(0, $.Unit_aNe, 100, $.Unit_aNe);
      newLayer.setLeftWidth$4(0, $.Unit_aNe, 100, $.Unit_aNe);
      t1 = this._visibleWidget;
      newLayer.setVisible$1(true);
      $.set$visible$x(t1, true);
    }
    this._lastVisibleWidget = this._visibleWidget;
  },
  DeckLayoutPanel$0: function() {
    this.setElement$1($.DivElement_DivElement());
    this._layout = $.Layout$(this.getElement$0());
    this._layoutCmd = $._DeckAnimateCommand$(this, this._layout);
  },
  $isRequiresResize: true
};

$$._DeckAnimateCommand = {"": "LayoutCommand;_panel,_scheduled,_liblib1$_canceled,_liblib1$_duration,callback,_layout",
  doBeforeLayout$0: function() {
    this._panel.doBeforeLayout$0();
  }
};

$$._LayoutCommandAnimationCallback = {"": "Object;_panel,_liblib1$_callback",
  onAnimationComplete$0: function() {
    this._panel.doAfterLayout$0();
    var t1 = this._liblib1$_callback;
    if (t1 != null)
      t1.onAnimationComplete$0();
  },
  onLayout$2: function(layer, progress) {
    var t1 = this._liblib1$_callback;
    if (t1 != null)
      t1.onLayout$2(layer, progress);
  }
};

$$.DeckPanel = {"": "ComplexPanel;_isAnimationEnabled,_visibleWidget,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    var container = this.createWidgetContainer$0();
    $.append$1$x(this._element, container);
    $.ComplexPanel.prototype.addWidget$2.call(this, w, container);
    this.finishWidgetInitialization$2(container, w);
  },
  insertAt$2: function(w, beforeIndex) {
    var container, t1;
    container = this.createWidgetContainer$0();
    t1 = this._element;
    $.get$Dom_impl().insertChild$3(t1, container, beforeIndex);
    $.ComplexPanel.prototype.insert$4.call(this, this, w, container, beforeIndex, true);
    this.finishWidgetInitialization$2(container, w);
  },
  isAnimationEnabled$0: function() {
    return this._isAnimationEnabled;
  },
  remove$1: function(_, w) {
    var container, removed;
    container = $.get$parent$x(w.getElement$0());
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed) {
      w.setSize$2("", "");
      $.set$visible$x(w, true);
      $.remove$0$ax(container);
      if ($.$eq(this._visibleWidget, w) === true)
        this._visibleWidget = null;
    }
    return removed;
  },
  showWidgetAt$1: function(index) {
    var t1, oldWidget, t2;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, this._children._size))
      $.throwExpression($._ExceptionImplementation$("Index Out Of Bounds Exception"));
    oldWidget = this._visibleWidget;
    t2 = this._children;
    if (t1.$lt(index, 0) || t1.$ge(index, t2._size))
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = t2._liblib1$_array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    this._visibleWidget = t1[index];
    if ($.$eq(this._visibleWidget, oldWidget) !== true) {
      if ($.DeckPanel__slideAnimation == null)
        $.DeckPanel__slideAnimation = $._SlideAnimation$(this, null);
      t1 = $.DeckPanel__slideAnimation;
      t2 = this._visibleWidget;
      t1.showWidget$3(oldWidget, t2, this._isAnimationEnabled && this._attached);
    }
  },
  createWidgetContainer$0: function() {
    var container = document.createElement("div");
    $.set$width$x(container.style, "100%");
    $.set$height$x(container.style, "0px");
    $.set$padding$x(container.style, "0px");
    $.set$margin$x(container.style, "0px");
    return container;
  },
  finishWidgetInitialization$2: function(container, w) {
    var t1, element;
    t1 = container.style;
    $.set$display$x(t1, "none");
    t1 = $.get$attributes$x(container);
    t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
    $.set$height$x(container.style, "100%");
    element = w.getElement$0();
    t1 = $.getInterceptor$x(element);
    if ($.$eq($.get$width$x(t1.get$style(element)), "") === true)
      w.setWidth$1("100%");
    if ($.$eq($.get$height$x(t1.get$style(element)), "") === true)
      w.setHeight$1("100%");
    $.set$visible$x(w, false);
  },
  DeckPanel$0: function() {
    this.setElement$1($.DivElement_DivElement());
  }
};

$$._SlideAnimation = {"": "Animation;_deckPanel<,container1,container2,growing,fixedHeight,oldWidget,callback,duration,element,running,isStarted,requestHandle,runId,scheduler,startTime,wasStarted",
  showWidget$3: function(oldWidget, newWidget, animate) {
    var newContainer, t1, newIndex, t2, oldContainer, deckElem, deckHeight, t3, t4;
    this.cancel$0(this);
    newContainer = $.get$parent$x(newWidget.getElement$0());
    t1 = $.getInterceptor$x(newContainer);
    newIndex = $.indexOf$1$asx($.get$children$x(t1.get$parent(newContainer)), newContainer);
    if (oldWidget == null) {
      t2 = t1.get$style(newContainer);
      $.set$display$x(t2, "");
      t1 = t1.get$attributes(newContainer);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
      $.set$visible$x(newWidget, true);
      return;
    }
    this.oldWidget = oldWidget;
    oldContainer = $.get$parent$x(oldWidget.getElement$0());
    if (newIndex > $.indexOf$1$asx($.get$children$x($.get$parent$x(oldContainer)), oldContainer)) {
      this.container1 = oldContainer;
      this.container2 = newContainer;
      this.growing = false;
    } else {
      this.container1 = newContainer;
      this.container2 = oldContainer;
      this.growing = true;
    }
    t1 = this.container1;
    if (animate) {
      deckElem = $.get$parent$x(t1);
      t1 = $.getInterceptor$x(deckElem);
      deckHeight = $.get$height$x(t1.get$offset(deckElem));
      if (this.growing) {
        this.fixedHeight = $.get$height$x($.get$offset$x(this.container2));
        $.set$height$x($.get$style$x(this.container2), $.JSString_methods.$add($.JSNumber_methods.toString$0($.max(1, $.$sub$n(this.fixedHeight, 1))), $.Unit_px.get$value($.Unit_px)));
      } else {
        this.fixedHeight = $.get$height$x($.get$offset$x(this.container1));
        $.set$height$x($.get$style$x(this.container1), $.JSString_methods.$add($.JSNumber_methods.toString$0($.max(1, $.$sub$n(this.fixedHeight, 1))), $.Unit_px.get$value($.Unit_px)));
      }
      if ($.$eq($.get$height$x(t1.get$offset(deckElem)), deckHeight) !== true)
        this.fixedHeight = -1;
      this.run$2$element(350, $.$eq(this.fixedHeight, -1) === true ? null : deckElem);
    } else {
      t2 = this.growing;
      t3 = $.getInterceptor$x(t1);
      t4 = t3.get$style(t1);
      $.set$display$x(t4, t2 ? "" : "none");
      t1 = t3.get$attributes(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(!t2));
      t2 = this.container2;
      t1 = this.growing;
      t3 = $.getInterceptor$x(t2);
      t4 = t3.get$style(t2);
      $.set$display$x(t4, !t1 ? "" : "none");
      t2 = t3.get$attributes(t2);
      t2.$indexSet(t2, "aria-hidden", $.JSBool_methods.toString$0(t1));
      this.container1 = null;
      this.container2 = null;
      $.set$visible$x(this.oldWidget, false);
      this.oldWidget = null;
    }
    $.set$visible$x(newWidget, true);
  },
  onComplete$0: function(_) {
    var t1, t2, t3;
    t1 = this.growing;
    t2 = this.container1;
    if (t1) {
      $.set$height$x($.get$style$x(t2), "100%");
      t1 = this.container1;
      t2 = $.getInterceptor$x(t1);
      t3 = t2.get$style(t1);
      $.set$display$x(t3, "");
      t1 = t2.get$attributes(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
      t1 = this.container2;
      t2 = $.getInterceptor$x(t1);
      t3 = t2.get$style(t1);
      $.set$display$x(t3, "none");
      t1 = t2.get$attributes(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
      $.set$height$x($.get$style$x(this.container2), "100%");
    } else {
      t1 = $.getInterceptor$x(t2);
      t3 = t1.get$style(t2);
      $.set$display$x(t3, "none");
      t1 = t1.get$attributes(t2);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
      $.set$height$x($.get$style$x(this.container1), "100%");
      $.set$height$x($.get$style$x(this.container2), "100%");
      t1 = this.container2;
      t2 = $.getInterceptor$x(t1);
      t3 = t2.get$style(t1);
      $.set$display$x(t3, "");
      t1 = t2.get$attributes(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
    }
    $.set$overflow$x($.get$style$x(this.container1), "visible");
    $.set$overflow$x($.get$style$x(this.container2), "visible");
    this.container1 = null;
    this.container2 = null;
    $.set$visible$x(this.oldWidget, false);
    this.oldWidget = null;
  },
  onStart$0: function(_) {
    var t1, t2, t3;
    $.set$overflow$x($.get$style$x(this.container1), "hidden");
    $.set$overflow$x($.get$style$x(this.container2), "hidden");
    this.onUpdate$1(0);
    t1 = this.container1;
    t2 = $.getInterceptor$x(t1);
    t3 = t2.get$style(t1);
    $.set$display$x(t3, "");
    t1 = t2.get$attributes(t1);
    t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
    t1 = this.container2;
    t2 = $.getInterceptor$x(t1);
    t3 = t2.get$style(t1);
    $.set$display$x(t3, "");
    t1 = t2.get$attributes(t1);
    t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
  },
  onUpdate$1: function(progress) {
    var t1, height1, height2;
    if (!this.growing)
      progress = 1 - progress;
    if ($.$eq(this.fixedHeight, -1) === true) {
      t1 = $.Dom_getElementPropertyInt(this.container1, "scrollHeight");
      if (typeof t1 !== "number")
        throw $.iae(t1);
      height1 = $.JSNumber_methods.toInt$0(progress * t1);
      t1 = $.Dom_getElementPropertyInt(this.container2, "scrollHeight");
      if (typeof t1 !== "number")
        throw $.iae(t1);
      height2 = $.JSNumber_methods.toInt$0((1 - progress) * t1);
    } else {
      t1 = this.fixedHeight;
      if (typeof t1 !== "number")
        throw $.iae(t1);
      height1 = $.JSNumber_methods.toInt$0(progress * t1);
      height2 = $.$sub$n(this.fixedHeight, height1);
    }
    if (height1 === 0) {
      height2 = $.max(1, $.$sub$n(height2, 1));
      height1 = 1;
    } else if ($.$eq(height2, 0) === true) {
      height1 = $.max(1, height1 - 1);
      height2 = 1;
    }
    $.set$height$x($.get$style$x(this.container1), $.JSString_methods.$add($.JSNumber_methods.toString$0(height1), "px"));
    $.set$height$x($.get$style$x(this.container2), $.$add$ns($.toString$0(height2), "px"));
  }
};

$$.DecoratedPopupPanel = {"": "PopupPanel;_decPanel,glassResizer,animType,autoHide,previewAllNativeEvents,modal,showing,autoHideOnHistoryEvents,autoHidePartners,desiredHeight,desiredWidth,glass,glassStyleName,_isGlassEnabled,_isAnimationEnabled,leftPosition,nativePreviewHandlerRegistration,historyHandlerRegistration,resizeAnimation,topPosition,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getWidget$0: function() {
    return this._decPanel.widget;
  },
  iterator$0: function(_) {
    return $.SimplePanelIterator$(this._decPanel);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  remove$1: function(_, w) {
    var t1 = this._decPanel;
    return t1.remove$1(t1, w);
  },
  setWidget$1: function(w) {
    this._decPanel.setWidget$1(w);
    this.maybeUpdateSize$0();
  },
  doAttachChildren$0: function() {
    this._decPanel.onAttach$0();
  },
  doDetachChildren$0: function() {
    this._decPanel.onDetach$0();
  },
  getCellElement$2: function(row, cell) {
    return $.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x($.$index$asx($.get$children$x(this._decPanel._tbody), row)), cell));
  },
  DecoratedPopupPanel$3: function(autoHide, modal, prefix) {
    this._decPanel = $.DecoratorPanel$([$.JSString_methods.$add(prefix, "Top"), $.JSString_methods.$add(prefix, "Middle"), $.JSString_methods.$add(prefix, "Bottom")], 1);
    this._decPanel.clearAndSetStyleName$1("");
    this.setStylePrimaryName$1("dwt-DecoratedPopupPanel");
    $.PopupPanel.prototype.setWidget$1.call(this, this._decPanel);
    $.UiObject_manageElementStyleName(this.getContainerElement$0(), "popupContent", false);
    $.UiObject_manageElementStyleName(this._decPanel.getContainerElement$0(), $.JSString_methods.$add(prefix, "Content"), true);
  }
};

$$.DecoratedStackPanel = {"": "StackPanel;_body,_visibleStack,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  createHeaderElem$0: function() {
    var table, tbody, t1, i, t2;
    table = document.createElement("table");
    tbody = $.createTBody$0$x(table);
    table.appendChild(tbody);
    $.setProperty$2$x(table.style, "width", "100%");
    $.Dom_setElementPropertyInt(table, "cellSpacing", 0);
    $.Dom_setElementPropertyInt(table, "cellPadding", 0);
    for (t1 = $.getInterceptor$x(tbody), i = 0; i < $.get$DecoratedStackPanel__DEFAULT_ROW_STYLENAMES().length; ++i) {
      t2 = $.get$DecoratedStackPanel__DEFAULT_ROW_STYLENAMES();
      if (i >= t2.length)
        throw $.ioore(i);
      t1.append$1(tbody, $.DecoratorPanel_createTR(t2[i]));
    }
    return table;
  },
  getHeaderTextElem$1: function(headerElem) {
    return $.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x($.$index$asx($.get$children$x($.get$$$dom_firstElementChild$x(headerElem)), 1)), 1));
  },
  DecoratedStackPanel$0: function() {
    this.clearAndSetStyleName$1("dwt-DecoratedStackPanel");
  }
};

$$.DecoratorPanel = {"": "SimplePanel;_containerElem,_tbody,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getContainerElement$0: function() {
    return this._containerElem;
  },
  DecoratorPanel$2: function(rowStyles, containerIndex) {
    var table, t1, i, row;
    table = this.getElement$0();
    t1 = $.getInterceptor$x(table);
    this._tbody = t1.createTBody$0(table);
    t1.append$1(table, this._tbody);
    $.Dom_setElementPropertyInt(table, "cellSpacing", 0);
    $.Dom_setElementPropertyInt(table, "cellPadding", 0);
    for (i = 0; i < rowStyles.length; ++i) {
      row = $.DecoratorPanel_createTR(rowStyles[i]);
      $.append$1$x(this._tbody, row);
      if (i === containerIndex) {
        t1 = $.get$children$x(row);
        this._containerElem = $.get$$$dom_firstElementChild$x(t1.$index(t1, 1));
      }
    }
    this.clearAndSetStyleName$1("dwt-DecoratorPanel");
  }
};

$$.DialogBox = {"": "DecoratedPopupPanel;caption,dragging?,dragStartX,dragStartY,windowWidth,clientLeft,clientTop,resizeHandlerRegistration,_decPanel,glassResizer,animType,autoHide,previewAllNativeEvents,modal,showing,autoHideOnHistoryEvents,autoHidePartners,desiredHeight,desiredWidth,glass,glassStyleName,_isGlassEnabled,_isAnimationEnabled,leftPosition,nativePreviewHandlerRegistration,historyHandlerRegistration,resizeAnimation,topPosition,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$text: function(_) {
    var t1 = this.caption;
    return t1.get$text(t1);
  },
  hide$1: function(autoClosed) {
    var t1 = this.resizeHandlerRegistration;
    if (t1 != null) {
      t1.removeHandler$0();
      this.resizeHandlerRegistration = null;
    }
    $.PopupPanel.prototype.hide$1.call(this, autoClosed);
  },
  hide$0: function() {
    return this.hide$1(false);
  },
  onBrowserEvent$1: function($event) {
    var t1 = $.get$type$x($event);
    switch ($.get$Dom_impl().eventGetTypeInt$1(t1)) {
      case 4:
      case 8:
      case 64:
      case 16:
      case 32:
        if (!this.dragging && this.isCaptionEvent$1($event) !== true)
          return;
        break;
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  set$text: function(_, val) {
    var t1 = this.caption;
    t1.set$text(t1, val);
  },
  show$0: function(_) {
    if (this.resizeHandlerRegistration == null)
      ;
    $.PopupPanel.prototype.show$0.call(this, this);
  },
  beginDragging$1: function($event) {
    var t1, t2;
    if ($.Dom__sCaptureElem == null) {
      this.dragging = true;
      t1 = this._element;
      $.Dom__sCaptureElem = t1;
      t2 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t2.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      t2.captureElem = t1;
      this.dragStartX = $event.getX$0();
      this.dragStartY = $event.getY$0();
    }
  },
  continueDragging$1: function($event) {
    var t1, t2, absX, absY;
    if (this.dragging) {
      t1 = $event.getX$0();
      t2 = this._element;
      absX = $.$add$ns(t1, $.get$Dom_impl().getAbsoluteLeft$1(t2));
      t2 = $event.getY$0();
      t1 = this._element;
      absY = $.$add$ns(t2, $.get$Dom_impl().getAbsoluteTop$1(t1));
      t1 = $.getInterceptor$n(absX);
      if (t1.$lt(absX, this.clientLeft) || t1.$ge(absX, this.windowWidth) || $.$lt$n(absY, this.clientTop))
        return;
      this.setPopupPosition$2(t1.$sub(absX, this.dragStartX), $.$sub$n(absY, this.dragStartY));
    }
  },
  doAttachChildren$0: function() {
    try {
      $.DecoratedPopupPanel.prototype.doAttachChildren$0.call(this);
    } finally {
      this.caption.onAttach$0();
    }
  },
  doDetachChildren$0: function() {
    try {
      $.DecoratedPopupPanel.prototype.doDetachChildren$0.call(this);
    } finally {
      this.caption.onDetach$0();
    }
  },
  onPreviewNativeEvent$1: function($event) {
    var nativeEvent, t1;
    nativeEvent = $event.getNativeEvent$0();
    if ($event.isCanceled$0() !== true) {
      t1 = $.get$type$x(nativeEvent);
      t1 = $.get$Dom_impl().eventGetTypeInt$1(t1) === 4 && this.isCaptionEvent$1(nativeEvent) === true;
    } else
      t1 = false;
    if (t1)
      $.preventDefault$0$x(nativeEvent);
    $.PopupPanel.prototype.onPreviewNativeEvent$1.call(this, $event);
  },
  isCaptionEvent$1: function($event) {
    var target, t1;
    target = $.get$target$x($event);
    if (typeof target === "object" && target !== null && !!$.getInterceptor(target).$isElement) {
      t1 = $.get$parent$x($.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x($.$index$asx($.get$children$x(this._decPanel._tbody), 0)), 1)));
      $.get$Dom_impl();
      return $.contains$1$asx(t1, target);
    }
    return false;
  },
  DialogBox$3: function(autoHide, modal, captionWidget) {
    var t1;
    if (captionWidget == null)
      captionWidget = $.DialogBoxCaptionImpl$();
    captionWidget.asWidget$0().removeFromParent$0();
    this.caption = captionWidget;
    $.append$1$x(this.getCellElement$2(0, 1), this.caption.asWidget$0().getElement$0());
    this.adopt$1(this.caption.asWidget$0());
    this.clearAndSetStyleName$1("dwt-DialogBox");
    this.windowWidth = $.Dom_getClientWidth();
    t1 = $.document;
    this.clientLeft = $.get$offset$x(t1().body).left;
    this.clientTop = $.get$offset$x(t1().body).top;
    this.addDomHandler$2($.MouseDownHandlerAdapter$(new $.anon0(this)), $.get$MouseDownEvent_TYPE());
    this.addDomHandler$2($.MouseUpHandlerAdapter$(new $.anon1(this)), $.get$MouseUpEvent_TYPE());
    this.addDomHandler$2($.MouseMoveHandlerAdapter$(new $.anon2(this)), $.get$MouseMoveEvent_TYPE());
    this.addDomHandler$2($.MouseOverHandlerAdapter$(new $.anon3()), $.get$MouseOverEvent_TYPE());
    this.addDomHandler$2($.MouseOutHandlerAdapter$(new $.anon4()), $.get$MouseOutEvent_TYPE());
  }
};

$$.anon0 = {"": "Closure;this_0",
  call$1: function($event) {
    this.this_0.beginDragging$1($event);
  }
};

$$.anon1 = {"": "Closure;this_1",
  call$1: function($event) {
    var t1, t2;
    t1 = this.this_1;
    t1.set$dragging(false);
    t1 = t1.get$_element();
    t2 = $.Dom__sCaptureElem;
    if (t2 != null && $.$eq(t1, t2) === true)
      $.Dom__sCaptureElem = null;
    t2 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t2.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    if ($.$eq(t1, t2.captureElem) === true)
      t2.captureElem = null;
  }
};

$$.anon2 = {"": "Closure;this_2",
  call$1: function($event) {
    this.this_2.continueDragging$1($event);
  }
};

$$.anon3 = {"": "Closure;",
  call$1: function($event) {
  }
};

$$.anon4 = {"": "Closure;",
  call$1: function($event) {
  }
};

$$.DialogBoxCaptionImpl = {"": "Html;_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  DialogBoxCaptionImpl$0: function() {
    this.clearAndSetStyleName$1("Caption");
  }
};

$$.DisclosurePanel = {"": "Composite;_mainPanel,_contentWrapper,_header,_isAnimationEnabled,_isOpen,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$0: function() {
    var t1, t2;
    this._header = $._ClickableHeader$(this);
    t1 = this._mainPanel;
    this.initWidget$1(t1);
    t1.add$1(t1, this._header);
    t2 = this._contentWrapper;
    t1.add$1(t1, t2);
    $.setProperty$2$x($.get$style$x(t2._element), "padding", "0px");
    $.setProperty$2$x($.get$style$x(t2._element), "overflow", "hidden");
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-DisclosurePanel");
    this._setContentDisplay$1(false);
  },
  add$1: function(_, w) {
    if (this._contentWrapper.widget == null)
      this.setContent$1(w);
    else
      throw $.wrapException($._ExceptionImplementation$("A DisclosurePanel can only contain two Widgets."));
  },
  addCloseHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$CloseEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  addOpenHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$OpenEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  isAnimationEnabled$0: function() {
    return this._isAnimationEnabled;
  },
  iterator$0: function(_) {
    return $._WidgetsIterator$(this, [this._contentWrapper.widget], null);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  remove$1: function(_, w) {
    if ($.$eq(w, this._contentWrapper.widget) === true) {
      this.setContent$1(null);
      return true;
    }
    return false;
  },
  setContent$1: function($content) {
    var t1, currentContent;
    t1 = this._contentWrapper;
    currentContent = t1.widget;
    if (currentContent != null) {
      t1.setWidget$1(null);
      currentContent.removeStyleName$1("content");
    }
    if ($content != null) {
      t1.setWidget$1($content);
      $content.addStyleName$1("content");
      this._setContentDisplay$1(false);
    }
  },
  setHeader$1: function(headerWidget) {
    this._header.setWidget$1(headerWidget);
  },
  _setContentDisplay$1: function(animate) {
    var t1;
    if (this._isOpen) {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "closed");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "open");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    } else {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "open");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "closed");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    }
    if (this._contentWrapper.widget != null) {
      if ($.DisclosurePanel__contentAnimation == null)
        $.DisclosurePanel__contentAnimation = $._ContentAnimation$();
      t1 = $.DisclosurePanel__contentAnimation;
      t1.setOpen$2(this, animate && this._isAnimationEnabled);
    }
  },
  DisclosurePanel$fromImageResources$3: function(openImage, closedImage, headerText) {
    this._init$0();
    this.setHeader$1($._DefaultHeader$fromImageResources(this, openImage, closedImage, headerText));
  },
  $isHasWidgets: true
};

$$._DefaultImages = {"": "Object;_resources,CLOSED_RESOURCE,CLOSED_RESOURCE_RTL,OPEN_RESOURCE",
  disclosurePanelClosed$0: function() {
    var t1, t2;
    t1 = this._resources;
    t2 = this.CLOSED_RESOURCE;
    if (t1.containsKey$1(t1, t2) !== true)
      t1.$indexSet(t1, t2, this._getImageResourcePrototype$1(t2));
    return t1.$index(t1, t2);
  },
  disclosurePanelOpen$0: function() {
    var t1, t2;
    t1 = this._resources;
    t2 = this.OPEN_RESOURCE;
    if (t1.containsKey$1(t1, t2) !== true)
      t1.$indexSet(t1, t2, this._getImageResourcePrototype$1(t2));
    return t1.$index(t1, t2);
  },
  _getImageResourcePrototype$1: function($name) {
    return $.ImageResourcePrototype$($name, $.SafeUriString$($.JSString_methods.$add($.JSString_methods.$add("src/packages/dart_web_toolkit/", "resource/images/"), $name)), 0, 0, 16, 16, false, false);
  }
};

$$._ClickableHeader = {"": "SimplePanel;_panel,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onBrowserEvent$1: function($event) {
    var t1, t2, t3;
    t1 = $.getInterceptor$x($event);
    switch ($.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event))) {
      case 1:
        t1.preventDefault$0($event);
        t1 = this._panel;
        t2 = t1._isOpen;
        t3 = !t2;
        if (t2 !== t3) {
          t1._isOpen = t3;
          t1._setContentDisplay$1(true);
          if (t1._isOpen) {
            $.get$OpenEvent_TYPE();
            t1.fireEvent$1($.OpenEvent$(t1));
          } else {
            $.get$CloseEvent_TYPE();
            t1.fireEvent$1($.CloseEvent$(t1, false));
          }
        }
        break;
    }
  },
  _ClickableHeader$1: function(_panel) {
    var elem = this.getElement$0();
    $.Dom_setElementProperty(elem, "href", "javascript:void(0);");
    $.Dom_setElementProperty(elem, "display", "block");
    this.sinkEvents$1(1);
    this.clearAndSetStyleName$1("_header");
  }
};

$$._ContentAnimation = {"": "Animation;_opening,_curPanel,callback,duration,element,running,isStarted,requestHandle,runId,scheduler,startTime,wasStarted",
  setOpen$2: function(panel, animate) {
    var t1;
    this.cancel$0(this);
    if (animate) {
      this._curPanel = panel;
      this._opening = panel._isOpen;
      this.run$1(350);
    } else {
      t1 = panel._contentWrapper;
      t1.set$visible(t1, panel._isOpen);
      if (panel._isOpen)
        $.set$visible$x(t1.widget, true);
    }
  },
  onComplete$0: function(_) {
    var t1;
    if (this._opening !== true) {
      t1 = this._curPanel._contentWrapper;
      t1.set$visible(t1, false);
    }
    $.setProperty$2$x($.get$style$x(this._curPanel._contentWrapper._element), "height", "auto");
    this._curPanel = null;
  },
  onStart$0: function(_) {
    var t1;
    $.Animation.prototype.onStart$0.call(this, this);
    if (this._opening === true) {
      t1 = this._curPanel._contentWrapper;
      t1.set$visible(t1, true);
      $.set$visible$x(this._curPanel._contentWrapper.widget, true);
    }
  },
  onUpdate$1: function(progress) {
    var scrollHeight, height, t1, t2;
    scrollHeight = $.Dom_getElementPropertyInt(this._curPanel._contentWrapper._element, "scrollHeight");
    if (typeof scrollHeight !== "number")
      throw $.iae(scrollHeight);
    height = $.JSNumber_methods.toInt$0(progress * scrollHeight);
    if (this._opening !== true)
      height = scrollHeight - height;
    height = $.max(height, 1);
    t1 = this._curPanel._contentWrapper._element;
    t2 = $.S(height) + "px";
    $.setProperty$2$x($.get$style$x(t1), "height", t2);
    $.setProperty$2$x($.get$style$x(this._curPanel._contentWrapper._element), "width", "auto");
  }
};

$$._ImageResourceImager = {"": "Object;openImage,closedImage",
  makeImage$0: function() {
    return $.Image$fromImageResource(this.closedImage);
  },
  updateImage$2: function($open, image) {
    var t1, t2, t3, t4, t5, t6;
    if ($open) {
      t1 = this.openImage;
      t2 = $.getInterceptor$x(t1);
      t3 = t2.get$url(t1).asString$0();
      t4 = t2.get$left(t1);
      t5 = t2.get$top(t1);
      t6 = t2.get$width(t1);
      t1 = t2.get$height(t1);
      t3 = $.SafeUriString$(t3);
      image._liblib1$_state.setUrlAndVisibleRect$6(image, t3, t4, t5, t6, t1);
    } else {
      t1 = this.closedImage;
      t2 = $.getInterceptor$x(t1);
      t3 = t2.get$url(t1).asString$0();
      t4 = t2.get$left(t1);
      t5 = t2.get$top(t1);
      t6 = t2.get$width(t1);
      t1 = t2.get$height(t1);
      t3 = $.SafeUriString$(t3);
      image._liblib1$_state.setUrlAndVisibleRect$6(image, t3, t4, t5, t6, t1);
    }
  }
};

$$._DefaultHeader = {"": "Widget;_panel,_labelTD,_iconImage,_imager,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$2: function(imager, text) {
    var root, tbody, tr, imageTD, t1, t2;
    this._imager = imager;
    this._iconImage = this._imager.makeImage$0();
    root = document.createElement("table");
    tbody = $.createTBody$0$x(root);
    tr = document.createElement("tr");
    imageTD = document.createElement("td");
    this._labelTD = document.createElement("td");
    this._element = root;
    root.appendChild(tbody);
    $.append$1$x(tbody, tr);
    tr.appendChild(imageTD);
    tr.appendChild(this._labelTD);
    t1 = $.getInterceptor$x(imageTD);
    t2 = t1.get$attributes(imageTD);
    t2.$indexSet(t2, "align", "center");
    t1 = t1.get$attributes(imageTD);
    t1.$indexSet(t1, "valign", "middle");
    t1 = this._iconImage;
    t1 = $.$add$ns($.toString$0(t1._liblib1$_state.getWidth$1(t1)), "px");
    $.setProperty$2$x(imageTD.style, "width", t1);
    imageTD.appendChild(this._iconImage._element);
    this.set$text(this, text);
    t1 = this._panel;
    t1.addOpenHandler$1(this);
    t1.addCloseHandler$1(this);
    this._imager.updateImage$2(t1._isOpen, this._iconImage);
  },
  get$text: function(_) {
    return this._labelTD.textContent;
  },
  onClose$1: function(_, $event) {
    this._imager.updateImage$2(this._panel._isOpen, this._iconImage);
  },
  onOpen$1: function(_, $event) {
    this._imager.updateImage$2(this._panel._isOpen, this._iconImage);
  },
  set$text: function(_, value) {
    this._labelTD.textContent = value;
  },
  _DefaultHeader$3: function(_panel, imager, text) {
    this._init$2(imager, text);
  }
};

$$.DockLayoutPanel = {"": "ComplexPanel;_unit,_center,_layout,_layoutCmd,_filledWidth,_filledHeigh,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, widget) {
    this._insert$4(widget, $.DockLayoutConstant_0, 0, null);
  },
  addEast$2: function(widget, size) {
    this._insert$4(widget, $.DockLayoutConstant_3, size, null);
  },
  addNorth$2: function(widget, size) {
    this._insert$4(widget, $.DockLayoutConstant_4, size, null);
  },
  addSouth$2: function(widget, size) {
    this._insert$4(widget, $.DockLayoutConstant_5, size, null);
  },
  _insert$4: function(widget, direction, size, before) {
    var t1, children, t2, t3;
    t1 = before == null;
    if (t1)
      ;
    widget.removeFromParent$0();
    children = this._children;
    if (t1)
      children.insert$2(children, widget, children._size);
    else
      children.insert$2(children, widget, children.indexOf$1(children, before));
    if ($.$eq(direction, $.DockLayoutConstant_0) === true)
      this._center = widget;
    t2 = this._layout;
    t3 = widget.getElement$0();
    widget.setLayoutData$1($.LayoutData$(direction, size, t2.attachChild$3$before$userObject(t3, !t1 ? before.getElement$0() : null, widget)));
    widget.setParent$1(this);
    this._layoutCmd.schedule$2(0, null);
  },
  onResize$0: function(_) {
    var t1, child;
    for (t1 = this._children, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
      child = t1.get$current();
      if (typeof child === "object" && child !== null && !!$.getInterceptor(child).$isRequiresResize)
        child.onResize$0(child);
    }
  },
  remove$1: function(_, w) {
    var removed, data;
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed) {
      if ($.$eq(w, this._center) === true)
        this._center = null;
      data = $.propertyTypeCast(w.getLayoutData$0(), "$isLayoutData");
      this._layout.removeChild$1(data.layer);
    }
    return removed;
  },
  getResolvedDirection$1: function(direction) {
    var t1 = $.getInterceptor(direction);
    if (t1.$eq(direction, $.DockLayoutConstant_1) === true) {
      $.get$LocaleInfo_instance();
      return $.DockLayoutConstant_6;
    } else if (t1.$eq(direction, $.DockLayoutConstant_2) === true) {
      $.get$LocaleInfo_instance();
      return $.DockLayoutConstant_3;
    }
    return direction;
  },
  onAttach$0: function() {
    $.Widget.prototype.onAttach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  onDetach$0: function() {
    $.Widget.prototype.onDetach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  _doLayout$0: function() {
    var t1, t2, left, $top, right, bottom, data, layer;
    for (t1 = this._children, t1 = t1.get$iterator(t1), t2 = this._unit, left = 0, $top = 0, right = 0, bottom = 0; t1.moveNext$0();) {
      data = $.propertyTypeCast(t1.get$current().getLayoutData$0(), "$isLayoutData");
      layer = data.layer;
      if (data.hidden) {
        layer.setVisible$1(false);
        continue;
      }
      switch (this.getResolvedDirection$1(data.direction)) {
        case $.DockLayoutConstant_4:
          layer.setLeftRight$4(left, t2, right, t2);
          layer.setTopHeight$4($top, t2, data.size, t2);
          $top += data.size;
          break;
        case $.DockLayoutConstant_5:
          layer.setLeftRight$4(left, t2, right, t2);
          layer.setBottomHeight$4(bottom, t2, data.size, t2);
          bottom += data.size;
          break;
        case $.DockLayoutConstant_6:
          layer.setTopBottom$4($top, t2, bottom, t2);
          layer.setLeftWidth$4(left, t2, data.size, t2);
          left += data.size;
          break;
        case $.DockLayoutConstant_3:
          layer.setTopBottom$4($top, t2, bottom, t2);
          layer.setRightWidth$4(right, t2, data.size, t2);
          right += data.size;
          break;
        case $.DockLayoutConstant_0:
          layer.setLeftRight$4(left, t2, right, t2);
          layer.setTopBottom$4($top, t2, bottom, t2);
          break;
      }
      layer.setVisible$1(true);
    }
    this._filledWidth = left + right;
    this._filledHeigh = $top + bottom;
  },
  DockLayoutPanel$1: function(_unit) {
    this.setElement$1($.DivElement_DivElement());
    this._layout = $.Layout$(this.getElement$0());
    this._layoutCmd = $._DockAnimateCommand$(this, this._layout);
  },
  $isRequiresResize: true
};

$$.LayoutData = {"": "Object;direction,oldSize,size,originalSize,hidden,layer", $isLayoutData: true};

$$._DockAnimateCommand = {"": "LayoutCommand;_panel,_scheduled,_liblib1$_canceled,_liblib1$_duration,callback,_layout",
  doBeforeLayout$0: function() {
    this._panel._doLayout$0();
  }
};

$$.DockPanel = {"": "CellPanel;_horzAlign,_vertAlign,_center,_spacing,_liblib1$_table,_body,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  addWidgetTo$2: function(widget, direction) {
    var t1, t2;
    t1 = direction === $.DockLayoutConstant_0;
    if (t1) {
      t2 = this._center;
      if (widget === t2)
        return;
      else if (t2 != null)
        throw $.wrapException($._ExceptionImplementation$("Only one CENTER widget may be added"));
    }
    widget.removeFromParent$0();
    t2 = this._children;
    t2.insert$2(t2, widget, t2._size);
    if (t1)
      this._center = widget;
    widget._layoutData = $.DockPanelLayoutData$(direction);
    this.setWidgetCellHorizontalAlignment$2(widget, this._horzAlign);
    this.setWidgetCellVerticalAlignment$2(widget, this._vertAlign);
    this.realizeTable$0();
    widget.setParent$1(this);
  },
  remove$1: function(_, w) {
    var removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed) {
      if ($.$eq(w, this._center) === true)
        this._center = null;
      this.realizeTable$0();
    }
    return removed;
  },
  setWidgetCellHorizontalAlignment$2: function(w, align) {
    var data, t1;
    data = $.propertyTypeCast(w.get$_layoutData(), "$isDockPanelLayoutData");
    t1 = align._textAlign;
    data.hAlign = t1.get$value(t1);
    t1 = data.td;
    if (t1 != null)
      $.set$textAlign$x(t1.style, align.getTextAlignString$0());
  },
  setWidgetCellVerticalAlignment$2: function(w, align) {
    var data, t1;
    data = $.propertyTypeCast(w.get$_layoutData(), "$isDockPanelLayoutData");
    data.vAlign = align.getVerticalAlignString$0();
    t1 = data.td;
    if (t1 != null)
      $.set$verticalAlign$x(t1.style, align.getVerticalAlignString$0());
  },
  realizeTable$0: function() {
    var bodyElem, t1, t2, it, rowCount, colCount, dir, rows, i, t3, logicalRightCol, southRow, logicalLeftCol, northRow, centerTd, child, layout, td, row;
    bodyElem = this._body;
    for (t1 = $.getInterceptor$x(bodyElem); $.$gt$n($.get$length$asx(t1.get$children(bodyElem)), 0);)
      $.remove$0$ax($.$index$asx(t1.get$children(bodyElem), 0));
    for (t2 = this._children, it = t2.get$iterator(t2), rowCount = 1, colCount = 1; it.index < it._widgetCollection._size - 1;) {
      dir = $.propertyTypeCast(it.get$current().getLayoutData$0(), "$isDockPanelLayoutData").direction;
      if (dir === $.DockLayoutConstant_4 || dir === $.DockLayoutConstant_5)
        ++rowCount;
      else if (dir === $.DockLayoutConstant_3 || dir === $.DockLayoutConstant_6 || dir === $.DockLayoutConstant_1 || dir === $.DockLayoutConstant_2)
        ++colCount;
    }
    rows = $.List_List(rowCount, $.TmpRow);
    $.setRuntimeTypeInfo(rows, [$.TmpRow]);
    for (t2 = rows.length, i = 0; i < rowCount; ++i) {
      t3 = $.TmpRow$();
      if (i >= t2)
        throw $.ioore(i);
      rows[i] = t3;
      rows[i].set$tr(document.createElement("tr"));
      t1.append$1(bodyElem, rows[i].get$tr());
    }
    logicalRightCol = colCount - 1;
    southRow = rowCount - 1;
    for (t1 = this._children, it = t1.get$iterator(t1), logicalLeftCol = 0, northRow = 0, centerTd = null; it.index < it._widgetCollection._size - 1;) {
      child = it.get$current();
      layout = $.propertyTypeCast(child.getLayoutData$0(), "$isDockPanelLayoutData");
      td = document.createElement("td");
      layout.td = td;
      $.set$alignContent$x(layout.td.style, layout.hAlign);
      $.set$verticalAlign$x(layout.td.style, layout.vAlign);
      $.set$width$x(layout.td.style, layout.width);
      $.set$height$x(layout.td.style, layout.height);
      t1 = layout.direction;
      if (t1 === $.DockLayoutConstant_4) {
        if (northRow >= t2)
          throw $.ioore(northRow);
        t1 = rows[northRow];
        t3 = t1.get$tr();
        t1 = t1.get$center();
        $.get$Dom_impl().insertChild$3(t3, td, t1);
        td.appendChild(child.getElement$0());
        $.Dom_setElementPropertyInt(td, "colSpan", logicalRightCol - logicalLeftCol + 1);
        ++northRow;
      } else if (t1 === $.DockLayoutConstant_5) {
        if (southRow < 0 || southRow >= t2)
          throw $.ioore(southRow);
        t1 = rows[southRow];
        t3 = t1.get$tr();
        t1 = t1.get$center();
        $.get$Dom_impl().insertChild$3(t3, td, t1);
        td.appendChild(child.getElement$0());
        $.Dom_setElementPropertyInt(td, "colSpan", logicalRightCol - logicalLeftCol + 1);
        --southRow;
      } else if (t1 === $.DockLayoutConstant_0)
        centerTd = td;
      else if (this.shouldAddToLogicalLeftOfTable$1(t1) === true) {
        if (northRow >= t2)
          throw $.ioore(northRow);
        row = rows[northRow];
        t1 = row.get$tr();
        t3 = row.get$center();
        row.set$center($.$add$ns(t3, 1));
        $.get$Dom_impl().insertChild$3(t1, td, t3);
        td.appendChild(child.getElement$0());
        $.Dom_setElementPropertyInt(td, "rowSpan", southRow - northRow + 1);
        ++logicalLeftCol;
      } else if (this.shouldAddToLogicalRightOfTable$1(layout.direction) === true) {
        if (northRow >= t2)
          throw $.ioore(northRow);
        row = rows[northRow];
        t1 = row.get$tr();
        t3 = row.get$center();
        $.get$Dom_impl().insertChild$3(t1, td, t3);
        td.appendChild(child.getElement$0());
        $.Dom_setElementPropertyInt(td, "rowSpan", southRow - northRow + 1);
        --logicalRightCol;
      }
    }
    if (this._center != null) {
      if (northRow >= t2)
        throw $.ioore(northRow);
      row = rows[northRow];
      t1 = row.get$tr();
      t2 = row.get$center();
      $.get$Dom_impl().insertChild$3(t1, centerTd, t2);
      centerTd.appendChild(this._center._element);
    }
  },
  shouldAddToLogicalLeftOfTable$1: function(widgetDirection) {
    if (widgetDirection === $.DockLayoutConstant_1)
      return true;
    $.get$LocaleInfo_instance();
    return widgetDirection === $.DockLayoutConstant_6;
  },
  shouldAddToLogicalRightOfTable$1: function(widgetDirection) {
    if (widgetDirection === $.DockLayoutConstant_2)
      return true;
    $.get$LocaleInfo_instance();
    return widgetDirection === $.DockLayoutConstant_3;
  },
  DockPanel$0: function() {
    $.Dom_setElementPropertyInt(this.getTable$0(), "cellSpacing", 0);
    $.Dom_setElementPropertyInt(this.getTable$0(), "cellPadding", 0);
  }
};

$$.DockPanelLayoutData = {"": "Object;direction,hAlign,height*,td,vAlign,width*",
  DockPanelLayoutData$1: function(dir) {
    this.direction = dir;
  },
  $isDockPanelLayoutData: true
};

$$.TmpRow = {"": "Object;center@,tr@"};

$$.DoubleBox = {"": "ValueBox;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element", $asWidget: null, $asUiObject: null, $asFocusable: null};

$$.FileUpload = {"": "Widget;_liblib1$_impl,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$name: function(_) {
    return $.get$name$x(this._getInputElement$0());
  },
  set$name: function(_, value) {
    $.set$name$x(this._getInputElement$0(), value);
  },
  get$enabled: function(_) {
    return $.get$disabled$x(this._getInputElement$0()) !== true;
  },
  onBrowserEvent$1: function($event) {
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  _getInputElement$0: function() {
    return this._element;
  },
  FileUpload$1: function(element, element_check) {
    if (element_check === true)
      this.setElement$1(element);
    else {
      element = $.InputElement_InputElement(null);
      $.set$type$x(element, "file");
      this.setElement$1(element);
      this.clearAndSetStyleName$1("dwt-FileUpload");
      this._liblib1$_impl = $.FileUploadImpl_FileUploadImpl$browserDependent();
      this._liblib1$_impl.init$1(this);
    }
  }
};

$$.FileUploadImpl = {"": "Object;",
  init$1: function(fileUpload) {
  },
  onBrowserEvent$1: function($event) {
    return true;
  }
};

$$.FlexTable = {"": "HtmlTable;bodyElem,cellFormatter,columnFormatter,rowFormatter,tableElem,widgetMap,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getCellCount$1: function(row) {
    var rowSize;
    if (typeof row !== "number")
      return this.getCellCount$1$bailout1(1, row);
    rowSize = this.getRowCount$0();
    if (typeof rowSize !== "number")
      return this.getCellCount$1$bailout1(2, row, rowSize);
    if (row >= rowSize || row < 0)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + $.S(row) + ", Row size: " + $.S(rowSize)));
    return this.getDomCellCount$2(row, this.bodyElem);
  },
  getCellCount$1$bailout1: function(state0, row, rowSize) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        rowSize = this.getRowCount$0();
      case 2:
        var t1;
        state0 = 0;
        t1 = $.getInterceptor$n(row);
        if (t1.$ge(row, rowSize) || t1.$lt(row, 0))
          $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + $.S(row) + ", Row size: " + $.S(rowSize)));
        return this.getDomCellCount$2(row, this.bodyElem);
    }
  },
  getFlexCellFormatter$0: function() {
    return $.propertyTypeCast(this.cellFormatter, "$isFlexCellFormatter");
  },
  getRowCount$0: function() {
    return this.getDomRowCount$0();
  },
  prepareCell$2: function(row, column) {
    var t1, rowSize, t2, cellCount, required;
    this.prepareRow$1(row);
    t1 = $.getInterceptor$n(column);
    if (t1.$lt(column, 0))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot create a column with a negative index: " + $.S(column)));
    rowSize = this.getRowCount$0();
    t2 = $.getInterceptor$n(row);
    if (t2.$ge(row, rowSize) || t2.$lt(row, 0))
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + $.S(row) + ", Row size: " + $.S(rowSize)));
    cellCount = this.getDomCellCount$2(row, this.bodyElem);
    required = $.$sub$n(t1.$add(column, 1), cellCount);
    if ($.$gt$n(required, 0))
      $.FlexTable_addCells(this.bodyElem, row, required);
  },
  prepareRow$1: function(row) {
    var rowCount, i;
    if (typeof row !== "number")
      return this.prepareRow$1$bailout1(1, row);
    if (row < 0)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot create a row with a negative index: " + $.S(row)));
    rowCount = this.getDomRowCount$0();
    if (typeof rowCount !== "number")
      return this.prepareRow$1$bailout1(2, row, rowCount);
    for (i = rowCount; i <= row; ++i)
      $.HtmlTable.prototype.insertRow$1.call(this, this, i);
  },
  prepareRow$1$bailout1: function(state0, row, rowCount) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if ($.$lt$n(row, 0))
          throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot create a row with a negative index: " + $.S(row)));
        rowCount = this.getDomRowCount$0();
      case 2:
        var i, t1;
        state0 = 0;
        for (i = rowCount; t1 = $.getInterceptor$n(i), t1.$le(i, row); i = t1.$add(i, 1))
          $.HtmlTable.prototype.insertRow$1.call(this, this, i);
    }
  },
  FlexTable$0: function() {
    this.setCellFormatter$1($.FlexCellFormatter$(this));
    this.setRowFormatter$1($.RowFormatter$());
    this.setColumnFormatter$1($.ColumnFormatter$());
  }
};

$$.FlexCellFormatter = {"": "CellFormatter;_liblib1$_table",
  setColSpan$3: function(row, column, colSpan) {
    this._liblib1$_table.prepareCell$2(row, column);
    $.Dom_setElementPropertyInt(this.getCellElement$3(this._liblib1$_table.bodyElem, row, column), "colSpan", colSpan);
  },
  $isFlexCellFormatter: true
};

$$.FlowPanel = {"": "ComplexPanel;_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    var t1, t2;
    t1 = this._element;
    w.removeFromParent$0();
    t2 = this._children;
    t2.insert$2(t2, w, t2._size);
    $.append$1$x(t1, w.getElement$0());
    w.setParent$1(this);
  },
  FlowPanel$0: function() {
    this.setElement$1($.DivElement_DivElement());
  }
};

$$.FocusPanel = {"": "SimplePanel;widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$tabIndex: function(_) {
    return $.get$FocusPanel_impl().getTabIndex$1(this.getElement$0());
  },
  set$tabIndex: function(_, index) {
    $.get$FocusPanel_impl().setTabIndex$2(this.getElement$0(), index);
  },
  set$focus: function(_, focused) {
    var t1;
    if (focused) {
      t1 = $.get$FocusPanel_impl();
      t1.focus$1(t1, this.getElement$0());
    } else {
      t1 = $.get$FocusPanel_impl();
      t1.blur$1(t1, this.getElement$0());
    }
  },
  $isFocusable: true
};

$$.FocusWidget = {"": "Widget;",
  get$enabled: function(_) {
    return !$.Dom_getElementPropertyBoolean(this.getElement$0(), "disabled");
  },
  set$enabled: function(_, value) {
    $.Dom_setElementPropertyBoolean(this.getElement$0(), "disabled", value !== true);
  },
  get$tabIndex: function(_) {
    return $.get$FocusWidget_impl().getTabIndex$1(this.getElement$0());
  },
  set$tabIndex: function(_, index) {
    $.get$FocusWidget_impl().setTabIndex$2(this.getElement$0(), index);
  },
  set$focus: function(_, focused) {
    var t1;
    if (focused) {
      t1 = $.get$FocusWidget_impl();
      t1.focus$1(t1, this.getElement$0());
    } else {
      t1 = $.get$FocusWidget_impl();
      t1.blur$1(t1, this.getElement$0());
    }
  },
  addClickHandler$1: function(handler) {
    return this.addDomHandler$2(handler, $.get$ClickEvent_TYPE());
  },
  onAttach$0: function() {
    $.Widget.prototype.onAttach$0.call(this);
    if (-1 === this.get$tabIndex(this))
      this.set$tabIndex(this, 0);
  },
  FocusWidget$1: function(element) {
    if (element != null)
      this.setElement$1(element);
  },
  $isFocusable: true
};

$$.Frame = {"": "Widget;eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  setUrl$1: function(url) {
    $.interceptedTypeCast(this._element, "$isIFrameElement").src = url;
  },
  Frame$1: function(url) {
    this.setElement$1($.IFrameElement_IFrameElement());
    this.clearAndSetStyleName$1("dwt-Frame");
    this.setUrl$1(url);
  }
};

$$.Grid = {"": "HtmlTable;numColumns,numRows,bodyElem,cellFormatter,columnFormatter,rowFormatter,tableElem,widgetMap,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getCellCount$1: function(row) {
    return this.numColumns;
  },
  getRowCount$0: function() {
    return this.numRows;
  },
  resize$2: function(_, rows, columns) {
    this.resizeColumns$1(columns);
    this.resizeRows$1(rows);
  },
  resizeColumns$1: function(columns) {
    var t1, i, j, tr, td;
    t1 = this.numColumns;
    if (t1 === columns)
      return;
    if (columns < 0)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot set number of columns to " + columns));
    if (t1 > columns)
      for (i = 0; i < this.numRows; ++i)
        for (j = this.numColumns - 1; j >= columns; --j)
          this.removeCell$2(i, j);
    else
      for (i = 0; i < this.numRows; ++i)
        for (j = this.numColumns; j < columns; ++j) {
          t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
          tr = t1.$index(t1, i);
          td = this.createCell$0();
          $.get$Dom_impl().insertChild$3(tr, td, j);
        }
    this.numColumns = columns;
    this.columnFormatter.resizeColumnGroup$2(columns, false);
  },
  resizeRows$1: function(rows) {
    var t1 = this.numRows;
    if (t1 === rows)
      return;
    if (rows < 0)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot set number of rows to " + rows));
    if (t1 < rows) {
      $.Grid_addRows(this.bodyElem, rows - t1, this.numColumns);
      this.numRows = rows;
    } else
      for (; t1 = this.numRows, t1 > rows;) {
        $.HtmlTable.prototype.removeRow$1.call(this, t1 - 1);
        this.numRows = this.numRows - 1;
      }
  },
  createCell$0: function() {
    var td = $.HtmlTable.prototype.createCell$0.call(this);
    $.set$innerHtml$x(td, "&nbsp;");
    return td;
  },
  prepareCell$2: function(row, column) {
    var t1 = $.getInterceptor$n(row);
    if (t1.$lt(row, 0))
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Cannot access a row with a negative index: " + $.S(row)));
    if (t1.$ge(row, this.numRows))
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + $.S(row) + ", Row size: " + $.S(this.numRows)));
    t1 = $.getInterceptor$n(column);
    if (t1.$lt(column, 0))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot access a column with a negative index: " + $.S(column)));
    if (t1.$ge(column, this.numColumns))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Column index: " + $.S(column) + ", Column size: " + this.numColumns));
  },
  prepareColumn$1: function(column) {
    $.HtmlTable.prototype.prepareColumn$1.call(this, column);
    if ($.$ge$n(column, this.numColumns))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Column index: " + $.S(column) + ", Column size: " + this.numColumns));
  },
  prepareRow$1: function(row) {
    if (row < 0)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot access a row with a negative index: " + row));
    if (row >= this.numRows)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + row + ", Row size: " + $.S(this.numRows)));
  },
  Grid$2: function(rows, columns) {
    this.setCellFormatter$1($.CellFormatter$(this));
    this.setRowFormatter$1($.RowFormatter$());
    this.setColumnFormatter$1($.ColumnFormatter$());
    if (true)
      this.resize$2(this, rows, columns);
  }
};

$$.Hidden = {"": "Widget;_editor,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$name: function(_) {
    return $.get$name$x(this.getInputElement$0());
  },
  set$name: function(_, val) {
    if (val == null)
      throw $.wrapException($.Exception_Exception("Name cannot be null"));
    else if ($.$eq(val, "") === true)
      throw $.wrapException($.Exception_Exception("Name cannot be an empty string."));
    $.set$name$x(this.getInputElement$0(), val);
  },
  getValue$0: function() {
    return $.interceptedTypeCast(this._element, "$isInputElement").value;
  },
  setValue$2: function(value, fireEvents) {
    $.interceptedTypeCast(this._element, "$isInputElement").value = value;
  },
  setValue$1: function(value) {
    return this.setValue$2(value, false);
  },
  getInputElement$0: function() {
    return $.interceptedTypeCast(this._element, "$isInputElement");
  },
  Hidden$2: function($name, value) {
    this.setElement$1($.HiddenInputElement_HiddenInputElement());
    if ($name != null)
      this.set$name(this, $name);
    if (value != null)
      this.setValue$1(value);
  }
};

$$.HorizontalPanel = {"": "CellPanel;_horzAlign,_vertAlign,_tableRow,_spacing,_liblib1$_table,_body,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    var td, t1;
    td = document.createElement("td");
    t1 = this._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = this._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    this._tableRow.appendChild(td);
    w.removeFromParent$0();
    t1 = this._children;
    t1.insert$2(t1, w, t1._size);
    td.appendChild(w.getElement$0());
    w.setParent$1(this);
  },
  setVerticalAlignment$1: function(align) {
    this._vertAlign = align;
  },
  remove$1: function(_, w) {
    var td, removed;
    td = $.get$parent$x(w.getElement$0());
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed)
      this._tableRow.removeChild(td);
    return removed;
  },
  HorizontalPanel$0: function() {
    this._tableRow = $.TableRowElement_TableRowElement();
    $.append$1$x(this.getBody$0(), this._tableRow);
    $.Dom_setElementProperty(this.getTable$0(), "cellSpacing", "0");
    $.Dom_setElementProperty(this.getTable$0(), "cellPadding", "0");
  }
};

$$.HtmlPanel = {"": "ComplexPanel;_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, widget) {
    var t1, t2;
    t1 = this._element;
    widget.removeFromParent$0();
    t2 = this._children;
    t2.insert$2(t2, widget, t2._size);
    $.append$1$x(t1, widget.getElement$0());
    widget.setParent$1(this);
  },
  _attachToDomAndGetElement$1: function(id) {
    var t1, t2, origParent, origSibling, child;
    if ($.HtmlPanel_hiddenDiv == null) {
      $.HtmlPanel_hiddenDiv = document.createElement("div");
      t1 = $.HtmlPanel_hiddenDiv;
      t2 = t1.style;
      $.set$display$x(t2, "none");
      t1 = $.get$attributes$x(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
      document.body.appendChild($.HtmlPanel_hiddenDiv);
    }
    origParent = $.get$parent$x(this._element);
    t1 = this._element;
    origSibling = $.get$nextElementSibling$x(t1);
    $.HtmlPanel_hiddenDiv.appendChild(t1);
    child = document.getElementById(id);
    t1 = this._element;
    if (origParent != null)
      $.insertBefore$2$x(origParent, t1, origSibling);
    else
      $.remove$0$ax(t1);
    return child;
  },
  HtmlPanel$1: function(html) {
    this.setElement$1($.DivElement_DivElement());
    $.set$innerHtml$x(this.getElement$0(), html);
  }
};

$$.HtmlTable = {"": "Panel;",
  iterator$0: function(_) {
    return $._WidgetIterator$(this);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  remove$1: function(_, widget) {
    var elem, t1, t2, index, t3;
    if ($.$eq($.getParent$0$x(widget), this) !== true)
      return false;
    try {
      widget.setParent$1(null);
    } finally {
      elem = widget.getElement$0();
      $.remove$0$ax(elem);
      t1 = this.widgetMap;
      t2 = elem;
      index = $.ElementMapperImpl_getIndex(t2);
      t2 = $.get$dataset$x(t2);
      t3 = t2.$$dom_attributes;
      t3.remove$1(t3, t2._attr$1("uiObjectID"));
      t2 = t1.uiObjectList;
      if (index >>> 0 !== index || index >= t2.length)
        throw $.ioore(index);
      t2[index] = null;
      t1.freeList = $.FreeNode$(index, t1.freeList);
    }
    return true;
  },
  setHtml$3: function(row, column, html) {
    var t1, td;
    this.prepareCell$2(row, column);
    t1 = this.cellFormatter;
    td = t1.getCellElement$3(t1._liblib1$_table.bodyElem, row, column);
    this.internalClearCell$2(td, false);
    $.set$innerHtml$x(td, html);
  },
  setWidget$3: function(row, column, widget) {
    var t1, td;
    this.prepareCell$2(row, column);
    t1 = this.cellFormatter;
    td = t1.getCellElement$3(t1._liblib1$_table.bodyElem, row, column);
    this.internalClearCell$2(td, true);
    widget.removeFromParent$0();
    t1 = this.widgetMap;
    t1.put$1(t1, widget);
    td.appendChild(widget.getElement$0());
    widget.setParent$1(this);
  },
  createCell$0: function() {
    return document.createElement("td");
  },
  getDomCellCount$2: function(row, tableBody) {
    var t1;
    if (tableBody == null) {
      t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
      t1 = $.get$cells$x($.interceptedTypeCast(t1.$index(t1, row), "$isTableRowElement"));
      return t1.get$length(t1);
    } else {
      t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(tableBody), "$isTableElement"));
      t1 = $.get$cells$x($.interceptedTypeCast(t1.$index(t1, row), "$isTableRowElement"));
      return t1.get$length(t1);
    }
  },
  getDomRowCount$1: function(elem) {
    var t1;
    if (elem == null) {
      t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
      return t1.get$length(t1);
    } else {
      t1 = $.get$rows$x($.interceptedTypeCast($.JSNull_methods.get$parent(elem), "$isTableElement"));
      return t1.get$length(t1);
    }
  },
  getDomRowCount$0: function() {
    return this.getDomRowCount$1(null);
  },
  insertRow$1: function(_, beforeRow) {
    var t1, rowSize, tr;
    t1 = $.getInterceptor(beforeRow);
    if (t1.$eq(beforeRow, this.getRowCount$0()) !== true) {
      rowSize = this.getRowCount$0();
      if (t1.$ge(beforeRow, rowSize) || t1.$lt(beforeRow, 0))
        $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + $.S(beforeRow) + ", Row size: " + $.S(rowSize)));
    }
    tr = document.createElement("tr");
    t1 = this.bodyElem;
    $.get$Dom_impl().insertChild$3(t1, tr, beforeRow);
    return beforeRow;
  },
  internalClearCell$2: function(td, clearInnerHTML) {
    var maybeChild, t1, widget;
    maybeChild = td.firstChild;
    if (maybeChild != null && typeof maybeChild === "object" && maybeChild !== null && !!$.getInterceptor(maybeChild).$isElement) {
      t1 = this.widgetMap;
      widget = t1.get$1(t1, $.interceptedTypeCast(maybeChild, "$isElement"));
    } else
      widget = null;
    if (widget != null) {
      this.remove$1(this, widget);
      return true;
    } else {
      if (clearInnerHTML)
        $.set$innerHtml$x(td, "");
      return false;
    }
  },
  prepareColumn$1: function(column) {
    if ($.$lt$n(column, 0))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds. Cannot access a column with a negative index: " + $.S(column)));
  },
  removeCell$2: function(row, column) {
    var rowSize, t1, td;
    rowSize = this.getRowCount$0();
    if (typeof rowSize !== "number")
      return this.removeCell$2$bailout(1, row, column, rowSize);
    if (row >= rowSize || row < 0)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + row + ", Row size: " + $.S(rowSize)));
    if (column < 0)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Column " + column + " must be non-negative: " + column));
    if (this.getCellCount$1(row) <= column)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Column index: " + column + ", Column size: " + this.getCellCount$1(row)));
    t1 = this.cellFormatter;
    td = t1.getCellElement$3(t1._liblib1$_table.bodyElem, row, column);
    this.internalClearCell$2(td, false);
    t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
    t1.$index(t1, row);
    t1 = td.parentNode;
    if (t1 != null)
      t1.removeChild(td);
  },
  removeCell$2$bailout: function(state0, row, column, rowSize) {
    var t1, td;
    if ($.JSInt_methods.$ge(row, rowSize) || row < 0)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Row index: " + row + ", Row size: " + $.S(rowSize)));
    if (column < 0)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Column " + column + " must be non-negative: " + column));
    if (this.getCellCount$1(row) <= column)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds. Column index: " + column + ", Column size: " + this.getCellCount$1(row)));
    t1 = this.cellFormatter;
    td = t1.getCellElement$3(t1._liblib1$_table.bodyElem, row, column);
    this.internalClearCell$2(td, false);
    t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
    t1.$index(t1, row);
    t1 = td.parentNode;
    if (t1 != null)
      t1.removeChild(td);
  },
  removeRow$1: function(row) {
    var columnCount, column, t1;
    columnCount = this.getCellCount$1(row);
    for (column = 0; column < columnCount; ++column) {
      t1 = this.cellFormatter;
      this.internalClearCell$2(t1.getCellElement$3(t1._liblib1$_table.bodyElem, row, column), false);
    }
    t1 = $.get$rows$x($.interceptedTypeCast($.get$parent$x(this.bodyElem), "$isTableElement"));
    $.remove$0$ax(t1.$index(t1, row));
  },
  setCellFormatter$1: function(cellFormatter) {
    this.cellFormatter = cellFormatter;
  },
  setColumnFormatter$1: function(formatter) {
    var t1 = this.columnFormatter;
    if (t1 != null)
      formatter.columnGroup = t1.columnGroup;
    this.columnFormatter = formatter;
    this.columnFormatter._liblib1$_table = this;
    this.columnFormatter.prepareColumnGroup$0();
  },
  setRowFormatter$1: function(rowFormatter) {
    this.rowFormatter = rowFormatter;
    this.rowFormatter._liblib1$_table = this;
  },
  HtmlTable$0: function() {
    this.tableElem = $.TableElement_TableElement();
    this.bodyElem = $.createTBody$0$x(this.tableElem);
    this.tableElem.appendChild(this.bodyElem);
    this.setElement$1(this.tableElem);
  }
};

$$.CellFormatter = {"": "Object;_liblib1$_table",
  setHeight$3: function(row, column, height) {
    var t1;
    this._liblib1$_table.prepareCell$2(row, column);
    t1 = $.get$attributes$x(this.getCellElement$3(this._liblib1$_table.bodyElem, row, column));
    t1.$indexSet(t1, "height", height);
  },
  get$setHeight: function() {
    return new $.BoundClosure$3(this, "setHeight$3");
  },
  setHorizontalAlignment$3: function(row, column, align) {
    var elem, t1, t2;
    this._liblib1$_table.prepareCell$2(row, column);
    elem = this.getCellElement$3(this._liblib1$_table.bodyElem, row, column);
    t1 = align._textAlign;
    t1 = t1.get$value(t1);
    t2 = $.get$attributes$x(elem);
    t2.$indexSet(t2, "align", t1);
  },
  setVerticalAlignment$3: function(row, column, align) {
    this._liblib1$_table.prepareCell$2(row, column);
    $.setProperty$2$x($.get$style$x(this.getCellElement$3(this._liblib1$_table.bodyElem, row, column)), "verticalAlign", align._verticalAlignString);
  },
  setWidth$3: function(row, column, width) {
    var t1;
    this._liblib1$_table.prepareCell$2(row, column);
    t1 = $.get$attributes$x(this.getCellElement$3(this._liblib1$_table.bodyElem, row, column));
    t1.$indexSet(t1, "width", width);
  },
  get$setWidth: function() {
    return new $.BoundClosure$3(this, "setWidth$3");
  },
  getCellElement$3: function(table, row, col) {
    var t1 = $.get$cells$x($.interceptedTypeCast($.$index$asx($.get$rows$x(typeof table !== "object" || table === null || !$.getInterceptor(table).$isTableElement ? $.interceptedTypeCast($.get$parent$x(table), "$isTableElement") : table), row), "$isTableRowElement"))._list;
    if (col >>> 0 !== col || col >= t1.length)
      throw $.ioore(col);
    return t1[col];
  }
};

$$.ColumnFormatter = {"": "Object;columnGroup,_liblib1$_table",
  setWidth$2: function(column, width) {
    var t1;
    this._liblib1$_table.prepareColumn$1(column);
    this.prepareColumnGroup$0();
    this.resizeColumnGroup$2($.$add$ns(column, 1), true);
    t1 = $.get$attributes$x($.$index$asx($.get$children$x(this.columnGroup), column));
    t1.$indexSet(t1, "width", width);
  },
  get$setWidth: function() {
    return new $.BoundClosure$2(this, "setWidth$2");
  },
  resizeColumnGroup$2: function(columns, growOnly) {
    var num, i, t1, t2;
    columns = $.max(columns, 1);
    num = $.get$length$asx($.get$children$x(this.columnGroup));
    if (typeof num !== "number")
      return this.resizeColumnGroup$2$bailout(1, num, growOnly, columns);
    if (num < columns)
      for (i = num; i < columns; ++i)
        $.append$1$x(this.columnGroup, document.createElement("col"));
    else if (!growOnly && num > columns)
      for (i = num; i > columns; --i) {
        t1 = $.get$$$dom_lastChild$x(this.columnGroup);
        t2 = t1.parentNode;
        if (t2 != null)
          t2.removeChild(t1);
      }
  },
  resizeColumnGroup$2$bailout: function(state0, num, growOnly, columns) {
    var t1, i, t2, t3;
    t1 = $.getInterceptor$n(num);
    if (t1.$lt(num, columns))
      for (i = num; t1 = $.getInterceptor$n(i), t1.$lt(i, columns); i = t1.$add(i, 1))
        $.append$1$x(this.columnGroup, document.createElement("col"));
    else if (!growOnly && t1.$gt(num, columns))
      for (i = num; t1 = $.getInterceptor$n(i), t1.$gt(i, columns); i = t1.$sub(i, 1)) {
        t2 = $.get$$$dom_lastChild$x(this.columnGroup);
        t3 = t2.parentNode;
        if (t3 != null)
          t3.removeChild(t2);
      }
  },
  prepareColumnGroup$0: function() {
    var t1, t2;
    if (this.columnGroup == null) {
      this.columnGroup = document.createElement("colgroup");
      t1 = this._liblib1$_table.tableElem;
      t2 = this.columnGroup;
      $.get$Dom_impl().insertChild$3(t1, t2, 0);
      $.append$1$x(this.columnGroup, document.createElement("col"));
    }
  }
};

$$.RowFormatter = {"": "Object;_liblib1$_table"};

$$._WidgetIterator = {"": "Object;_liblib1$_table,widgetList,lastIndex,nextIndex",
  moveNext$0: function() {
    return this.nextIndex < this.widgetList.length;
  },
  get$current: function() {
    return this._getCurrent$0();
  },
  _getCurrent$0: function() {
    var t1, t2, t3, result;
    t1 = this.nextIndex;
    t2 = this.widgetList;
    t3 = t2.length;
    if (!(t1 < t3))
      throw $.wrapException($._ExceptionImplementation$("NoSuchElement"));
    if (t1 >>> 0 !== t1 || t1 >= t3)
      throw $.ioore(t1);
    result = t2[t1];
    this.lastIndex = t1;
    this.findNext$0();
    return result;
  },
  remove$0: function(_) {
    var t1, t2;
    t1 = this.lastIndex;
    if (t1 < 0)
      throw $.wrapException($._ExceptionImplementation$("IllegalState"));
    t2 = this.widgetList;
    if (t1 >>> 0 !== t1 || t1 >= t2.length)
      throw $.ioore(t1);
    t2[t1].removeFromParent$0();
    this.lastIndex = -1;
  },
  findNext$0: function() {
    var t1, t2, t3;
    for (; t1 = this.nextIndex + 1, this.nextIndex = t1, t2 = this.widgetList, t3 = t2.length, t1 < t3;) {
      t1 = this.nextIndex;
      if (t1 >>> 0 !== t1 || t1 >= t3)
        throw $.ioore(t1);
      if (t2[t1] != null)
        return;
    }
  },
  _WidgetIterator$1: function(_table) {
    this.widgetList = this._liblib1$_table.widgetMap.getObjectList$0();
    this.findNext$0();
  },
  $isIterator: true,
  $asIterator: function() { return [$.Widget]; }
};

$$.Hyperlink = {"": "Widget;directionalTextHelper,_anchorElem,_targetHistoryToken,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$4: function(element, text, asHtml, token) {
    var t1 = this._anchorElem;
    if (element == null)
      this._element = t1;
    else {
      this._element = element;
      $.append$1$x(this._element, t1);
    }
    t1 = this.eventsToSink;
    if (t1 === -1)
      $.UiObject.prototype.sinkEvents$1.call(this, t1);
    else
      this.eventsToSink = (t1 | 1) >>> 0;
    this.directionalTextHelper = $.DirectionalTextHelper$(this._anchorElem, true);
    this.directionalTextHelper.setTextOrHtml$2(text, asHtml);
    if (token != null)
      this.set$targetHistoryToken(token);
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-Hyperlink");
  },
  _init$1: function(element) {
    return this._init$4(element, "", false, null);
  },
  get$targetHistoryToken: function() {
    return this._targetHistoryToken;
  },
  set$targetHistoryToken: function(token) {
    this._targetHistoryToken = token;
    $.set$href$x(this._anchorElem, $.JSString_methods.$add("#", $.History_encodeHistoryToken(this._targetHistoryToken)));
  },
  get$text: function(_) {
    return this.directionalTextHelper.getTextOrHtml$1(false);
  },
  set$text: function(_, value) {
    this.directionalTextHelper.setTextOrHtml$2(this.get$text(this), false);
  },
  onBrowserEvent$1: function($event) {
    var t1, t2, t3;
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
    t1 = $.getInterceptor$x($event);
    if ($.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event)) === 1 && $.get$Hyperlink__impl().handleAsClick$1($event)) {
      t2 = this.get$targetHistoryToken();
      $.History_init();
      t3 = $.History__impl;
      if (t3 != null)
        t3.newItem$2(t2, true);
      t1.preventDefault$0($event);
    }
  },
  Hyperlink$fromElement$1: function(element) {
    this._init$1(element);
  },
  Hyperlink$3: function(text, asHtml, targetHistoryToken) {
    this._init$4($.DivElement_DivElement(), text, asHtml, targetHistoryToken);
  }
};

$$.Image = {"": "Widget;_liblib1$_state,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onBrowserEvent$1: function($event) {
    var t1;
    if ($.get$Dom_impl().eventGetTypeInt$1($.get$type$x($event)) === 32768) {
      t1 = this._liblib1$_state;
      if (t1 != null) {
        t1 = $.get$dataset$x(t1.getImageElement$1(this));
        t1.$indexSet(t1, "dwtLastUnhandledEvent", "");
      }
      this._liblib1$_state.onLoadEvent$1(this);
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  onLoad$0: function(_) {
    var t1, t2, queue;
    $.Widget.prototype.onLoad$0.call(this, this);
    t1 = this._liblib1$_state;
    if ("load" === $.get$dataset$x(t1.getImageElement$1(this)).$$dom_attributes._liblib3$_element.getAttribute("data-dwtLastUnhandledEvent")) {
      t1.syntheticEventCommand = $.StateScheduledCommand$(t1, this);
      if ($.SchedulerImpl__instance == null)
        $.SchedulerImpl__instance = $.SchedulerImpl$();
      t2 = $.SchedulerImpl__instance;
      t1 = t1.syntheticEventCommand;
      queue = t2.deferredCommands;
      t1 = $.Task$_internal(t1, false);
      if (queue == null)
        queue = $.SchedulerImpl__createQueue();
      $.add$1$ax(queue, t1);
      t2.deferredCommands = queue;
      t2.maybeSchedulePostEventPumpCommands$0();
    }
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  changeState$1: function(newState) {
    this._liblib1$_state = newState;
  },
  Image$clippedSafe$5: function(url, left, $top, width, height) {
    this.changeState$1($._ClippedState$(this, url, left, $top, width, height));
    this.clearAndSetStyleName$1("dwt-Image");
  },
  Image$fromSafeUriAndMeasure$5: function(url, left, $top, width, height) {
    this.changeState$1($._ClippedState$(this, url, left, $top, width, height));
  },
  Image$fromSafeUri$1: function(url) {
    this.changeState$1($._UnclippedState$(null, this, url));
  }
};

$$._State = {"": "Object;",
  onLoad$1: function(_, image) {
    var t1, t2, queue;
    if ("load" === $.get$dataset$x(this.getImageElement$1(image)).$$dom_attributes._liblib3$_element.getAttribute("data-dwtLastUnhandledEvent")) {
      this.syntheticEventCommand = $.StateScheduledCommand$(this, image);
      if ($.SchedulerImpl__instance == null)
        $.SchedulerImpl__instance = $.SchedulerImpl$();
      t1 = $.SchedulerImpl__instance;
      t2 = this.syntheticEventCommand;
      queue = t1.deferredCommands;
      t2 = $.Task$_internal(t2, false);
      if (queue == null) {
        queue = $.List_List($, $.Task);
        $.setRuntimeTypeInfo(queue, [$.Task]);
      }
      $.add$1$ax(queue, t2);
      t1.deferredCommands = queue;
      t1.maybeSchedulePostEventPumpCommands$0();
    }
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i1(this, "onLoad$1", receiver);
  },
  onLoadEvent$1: function(image) {
  }
};

$$.StateScheduledCommand = {"": "ScheduledCommand;_liblib1$_state,_image",
  execute$0: function() {
    var t1, t2, t3, e;
    t1 = this._image;
    t2 = t1._liblib1$_state;
    t3 = this._liblib1$_state;
    if (t2 !== t3 || this !== t3.syntheticEventCommand)
      return;
    t3.syntheticEventCommand = null;
    if (!t1._attached) {
      t1 = $.get$dataset$x(this._liblib1$_state.getImageElement$1(t1));
      t1.$indexSet(t1, "dwtLastUnhandledEvent", "load");
      return;
    }
    $.get$Dom_impl();
    e = $.document().createEvent("CustomEvent");
    t2 = $.getInterceptor$x(e);
    t2.$$dom_initCustomEvent$4(e, "HTMLEvents", true, true, null);
    t2.$$dom_initCustomEvent$4(e, "load", false, false, null);
    $.dispatchEvent$1$x(this._liblib1$_state.getImageElement$1(t1), e);
  }
};

$$._ClippedState = {"": "_State;height*,left*,pendingNativeLoadEvent,top*,url>,width*,syntheticEventCommand",
  getImageElement$1: function(image) {
    $.get$_ClippedState_impl();
    return $.interceptedTypeCast(image._element, "$isImageElement");
  },
  getWidth$1: function(image) {
    return this.width;
  },
  onLoadEvent$1: function(image) {
    this.pendingNativeLoadEvent = false;
    $._State.prototype.onLoadEvent$1.call(this, image);
  },
  setUrl$2: function(image, url) {
    image._liblib1$_state = $._UnclippedState$(null, image, null);
    image._liblib1$_state.setUrl$2(image, url);
  },
  setUrlAndVisibleRect$6: function(image, url, left, $top, width, height) {
    var t1, t2, queue;
    if ($.$eq(this.url, url) !== true || $.$eq(this.left, left) !== true || $.$eq(this.top, $top) !== true || $.$eq(this.width, width) !== true || $.$eq(this.height, height) !== true) {
      this.url = url;
      this.left = left;
      this.top = $top;
      this.width = width;
      this.height = height;
      $.get$_ClippedState_impl().adjust$6(image._element, url, left, $top, width, height);
      if (!this.pendingNativeLoadEvent) {
        this.syntheticEventCommand = $.StateScheduledCommand$(this, image);
        if ($.SchedulerImpl__instance == null)
          $.SchedulerImpl__instance = $.SchedulerImpl$();
        t1 = $.SchedulerImpl__instance;
        t2 = this.syntheticEventCommand;
        queue = t1.deferredCommands;
        t2 = $.Task$_internal(t2, false);
        if (queue == null) {
          queue = $.List_List($, $.Task);
          $.setRuntimeTypeInfo(queue, [$.Task]);
        }
        $.add$1$ax(queue, t2);
        t1.deferredCommands = queue;
        t1.maybeSchedulePostEventPumpCommands$0();
      }
    }
  },
  setVisibleRect$5: function(image, left, $top, width, height) {
    this.setUrlAndVisibleRect$6(image, this.url, left, $top, width, height);
  },
  _ClippedState$6: function(image, url, left, $top, width, height) {
    this.left = this.left;
    this.top = this.top;
    this.width = this.width;
    this.height = this.height;
    this.url = this.url;
    image.replaceElement$1($.get$_ClippedState_impl().createStructure$5(this.url, this.left, this.top, this.width, this.height));
    image.sinkEvents$1(133333119);
  }
};

$$._UnclippedState = {"": "_State;syntheticEventCommand",
  getImageElement$1: function(image) {
    return $.interceptedTypeCast(image._element, "$isImageElement");
  },
  getWidth$1: function(image) {
    return $.interceptedTypeCast(image._element, "$isImageElement").width;
  },
  setUrl$2: function(image, url) {
    var t1 = image._liblib1$_state;
    if (t1 != null) {
      t1 = $.get$dataset$x(t1.getImageElement$1(image));
      t1.$indexSet(t1, "dwtLastUnhandledEvent", "");
    }
    $.interceptedTypeCast(image._element, "$isImageElement").src = url.asString$0();
  },
  setUrlAndVisibleRect$6: function(image, url, left, $top, width, height) {
    image._liblib1$_state = $._ClippedState$(image, url, left, $top, width, height);
  },
  setVisibleRect$5: function(image, left, $top, width, height) {
    image._liblib1$_state = $._ClippedState$(image, $.SafeUriString$($.interceptedTypeCast(image._element, "$isImageElement").src), left, $top, width, height);
  },
  _UnclippedState$3$element$image$url: function(element, image, url) {
    image.replaceElement$1($.ImageElement_ImageElement(null, null, null));
    $.IEvent_sinkEvents(image.getElement$0(), 32768);
    image.sinkEvents$1(133398655);
    if (url != null)
      this.setUrl$2(image, url);
  }
};

$$.ClippedImageImpl = {"": "Object;clearImage",
  createStructure$5: function(url, left, $top, width, height) {
    var img, t1, style;
    img = $.ImageElement_ImageElement(null, null, null);
    t1 = $.getInterceptor$x(img);
    t1.set$src(img, this.clearImage);
    style = "url(\"" + $.S(url.asString$0()) + "\") no-repeat " + $.S($.$negate$n(left)) + "px " + $.S($.$negate$n($top)) + "px";
    $.set$background$x(t1.get$style(img), style);
    $.set$width$x(t1.get$style(img), $.S(width) + "px");
    $.set$height$x(t1.get$style(img), $.S(height) + "px");
    t1 = t1.get$onLoad(img);
    $._EventStreamSubscription$(t1.get$_target(), t1.get$_eventType(), new $.ClippedImageImpl_createStructure_anon(img), t1.get$_useCapture());
    return img;
  },
  adjust$6: function(img, url, left, $top, width, height) {
    var style, t1;
    style = "url(\"" + $.S(url.asString$0()) + "\") no-repeat -" + $.S(left) + "px -" + $.S($top) + "px";
    t1 = $.getInterceptor$x(img);
    $.set$background$x(t1.get$style(img), style);
    $.set$width$x(t1.get$style(img), $.$add$ns($.toString$0(width), $.Unit_px.get$value($.Unit_px)));
    $.set$height$x(t1.get$style(img), $.$add$ns($.toString$0(height), $.Unit_px.get$value($.Unit_px)));
  }
};

$$.ClippedImageImpl_createStructure_anon = {"": "Closure;img_0",
  call$1: function(evt) {
    var t1 = $.get$dataset$x(this.img_0);
    t1.$indexSet(t1, "dwtLastUnhandledEvent", "load");
  }
};

$$.ClippedImagePrototype = {"": "AbstractImagePrototype;height>,left>,top>,url>,width>"};

$$.ElementMapperImpl = {"": "Object;freeList,uiObjectList",
  get$1: function(_, elem) {
    var index, t1;
    index = $.ElementMapperImpl_getIndex(elem);
    if ($.$lt$n(index, 0))
      return;
    t1 = this.uiObjectList;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  getObjectList$0: function() {
    return this.uiObjectList;
  },
  iterator$0: function(_) {
    return $.JSArray_methods.get$iterator(this.uiObjectList);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  put$1: function(_, uiObject) {
    var t1, t2, index;
    t1 = this.freeList;
    t2 = this.uiObjectList;
    if (t1 == null) {
      index = t2.length;
      t2.push(uiObject);
    } else {
      index = $.get$index$x(t1);
      if (index >>> 0 !== index || index >= t2.length)
        throw $.ioore(index);
      t2[index] = uiObject;
      this.freeList = $.get$next$x(t1);
    }
    $.ElementMapperImpl_setIndex($.propertyTypeCast(uiObject, "$isUiObject").getElement$0(), index);
  }
};

$$.FreeNode = {"": "Object;index>,next>"};

$$.FocusImplDefault = {"": "Object;",
  blur$1: function(_, elem) {
    $.blur$0$x(elem);
  },
  createFocusable$0: function() {
    var div, t1;
    div = document.createElement("div");
    t1 = $.get$attributes$x(div);
    t1.$indexSet(t1, "tabIndex", "0");
    return div;
  },
  focus$1: function(_, elem) {
    $.focus$0$x(elem);
  },
  getTabIndex$1: function(elem) {
    return $.get$tabIndex$x(elem);
  },
  setTabIndex$2: function(elem, index) {
    var t1 = $.get$attributes$x(elem);
    t1.$indexSet(t1, "tabIndex", $.toString$0(index));
  }
};

$$.HistoryImpl = {"": "Object;_handlers",
  fireEvent$1: function($event) {
    this._handlers._doFire$2($event, null);
  },
  init$0: function() {
    var hash, t1;
    hash = $.get$hash$x($.Window_methods.get$location(window));
    t1 = $.getInterceptor$asx(hash);
    $.HistoryImpl__token = $.$gt$n(t1.get$length(hash), 0) ? t1.substring$1(hash, 1) : "";
    t1 = $.Window_methods.get$onHashChange(window);
    $._EventStreamSubscription$(t1._target, t1._eventType, new $.HistoryImpl_init_anon(this), t1._useCapture);
    return true;
  },
  newItem$2: function(historyToken, issueEvent) {
    var t1;
    if (historyToken == null)
      historyToken = "";
    t1 = $.HistoryImpl__token;
    if (historyToken == null ? (t1 == null ? "" : t1) != null : historyToken !== (t1 == null ? "" : t1)) {
      $.HistoryImpl__token = historyToken;
      $.set$hash$x($.Window_methods.get$location(window), historyToken);
      if (issueEvent) {
        $.get$ValueChangeEvent_TYPE();
        this.fireEvent$1($.ValueChangeEvent$(historyToken));
      }
    }
  }
};

$$.HistoryImpl_init_anon = {"": "Closure;this_0",
  call$1: function($event) {
    var hash, t1, token;
    hash = $.get$hash$x($.Window_methods.get$location(window));
    t1 = $.getInterceptor$asx(hash);
    if ($.$gt$n(t1.get$length(hash), 0)) {
      this.this_0;
      token = t1.substring$1(hash, 1);
    } else
      token = "";
    $.HistoryImpl__token = token;
  }
};

$$.HyperlinkImpl = {"": "Object;",
  handleAsClick$1: function($event) {
    var t1, mouseButtons, alt, ctrl, meta, shift, modifiers;
    t1 = $.getInterceptor$x($event);
    mouseButtons = t1.get$button($event);
    alt = t1.get$altKey($event);
    ctrl = t1.get$ctrlKey($event);
    meta = t1.get$metaKey($event);
    shift = t1.get$shiftKey($event);
    modifiers = alt === true || ctrl === true || meta === true || shift === true;
    return !modifiers && mouseButtons !== 1 && mouseButtons !== 2;
  }
};

$$.PopupImpl = {"": "Object;",
  createElement$0: function() {
    return document.createElement("div");
  },
  setVisible$2: function(popup, visible) {
  }
};

$$.ScrollImpl = {"": "Object;"};

$$.InlineHtml = {"": "Html;_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  InlineHtml$1: function(html) {
    this.clearAndSetStyleName$1("dwt-InlineHTML");
    this.set$html(html);
  }
};

$$.InlineHyperlink = {"": "Hyperlink;directionalTextHelper,_anchorElem,_targetHistoryToken,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  InlineHyperlink$3: function(text, asHtml, targetHistoryToken) {
    this.clearAndSetStyleName$1("dwt-InlineHyperlink");
    this.directionalTextHelper.setTextOrHtml$2(text, asHtml);
    this.set$targetHistoryToken(targetHistoryToken);
  }
};

$$.InlineLabel = {"": "Label;_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  InlineLabel$1: function(text) {
    this.clearAndSetStyleName$1("dwt-InlineLabel");
    this.set$text(this, text);
  }
};

$$.IntegerBox = {"": "ValueBox;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element", $asWidget: null, $asUiObject: null, $asFocusable: null};

$$.Label = {"": "LabelBase;_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$text: function(_) {
    return this.directionalTextHelper.getTextOrHtml$1(false);
  },
  set$text: function(_, val) {
    this.directionalTextHelper.setTextOrHtml$2(val, false);
    this.updateHorizontalAlignment$0();
  },
  Label$fromElement$1: function(element) {
    this.clearAndSetStyleName$1("dwt-Label");
  },
  Label$2: function(text, wordWrap) {
    this.clearAndSetStyleName$1("dwt-Label");
    if (text != null)
      this.set$text(this, text);
    if (wordWrap != null)
      this.set$wordWrap(this, wordWrap);
  },
  $asWidget: null,
  $asUiObject: null
};

$$.LabelBase = {"": "Widget;directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  set$wordWrap: function(_, wrap) {
    var t1 = $.get$style$x(this.getElement$0());
    $.set$whiteSpace$x(t1, wrap === true ? $.WhiteSpace_normal.get$value($.WhiteSpace_normal) : $.WhiteSpace_nowrap.get$value($.WhiteSpace_nowrap));
  },
  updateHorizontalAlignment$0: function() {
    var align, t1, t2;
    align = this._autoHorizontalAlignment;
    if (align == null)
      align = null;
    else {
      t1 = this.get$ALIGN_CONTENT_START();
      t2 = this.directionalTextHelper;
      if (align == null ? t1 == null : align === t1) {
        t1 = t2.textDir;
        if (t1 === $.Direction_LTR)
          align = $.HorizontalAlignmentConstant_TextAlign_left;
        else {
          if (t1 === $.Direction_RTL)
            ;
          align = $.HorizontalAlignmentConstant_TextAlign_right;
        }
      } else {
        t1 = t2.textDir;
        if (t1 === $.Direction_LTR)
          align = $.HorizontalAlignmentConstant_TextAlign_right;
        else {
          if (t1 === $.Direction_RTL)
            ;
          align = $.HorizontalAlignmentConstant_TextAlign_left;
        }
      }
    }
    t1 = this._horzAlign;
    if (align == null ? t1 != null : align !== t1) {
      this._horzAlign = align;
      t1 = $.get$style$x(this._element);
      t2 = this._horzAlign;
      $.set$textAlign$x(t1, t2 == null ? "" : t2.getTextAlignString$0());
    }
  },
  LabelBase$_internal$2: function(element, isElementInline) {
    this.setElement$1(element);
    this.directionalTextHelper = $.DirectionalTextHelper$(this.getElement$0(), isElementInline);
  },
  $asWidget: null,
  $asUiObject: null
};

$$.LayoutCommand = {"": "Object;_scheduled,_liblib1$_canceled,_liblib1$_duration,callback,_layout",
  cancel$0: function(_) {
    this._liblib1$_canceled = true;
  },
  execute$0: function() {
    this._scheduled = false;
    if (this._liblib1$_canceled)
      return;
    this.doBeforeLayout$0();
    this._layout.layout$2(this._liblib1$_duration, $.LayoutCommandAnimationCallback$(this));
  },
  schedule$2: function(duration, callback) {
    var t1, queue, t2;
    this._liblib1$_duration = duration;
    this.callback = callback;
    this._liblib1$_canceled = false;
    if (!this._scheduled) {
      this._scheduled = true;
      if ($.SchedulerImpl__instance == null)
        $.SchedulerImpl__instance = $.SchedulerImpl$();
      t1 = $.SchedulerImpl__instance;
      queue = t1.deferredCommands;
      t2 = $.Task$_internal(this, false);
      if (queue == null) {
        queue = $.List_List($, $.Task);
        $.setRuntimeTypeInfo(queue, [$.Task]);
      }
      $.add$1$ax(queue, t2);
      t1.deferredCommands = queue;
      t1.maybeSchedulePostEventPumpCommands$0();
    }
  },
  doBeforeLayout$0: function() {
  }
};

$$.LayoutCommandAnimationCallback = {"": "Object;_liblib1$_command",
  onAnimationComplete$0: function() {
    var t1 = this._liblib1$_command.callback;
    if (t1 != null) {
      t1._panel.doAfterLayout$0();
      t1 = t1._liblib1$_callback;
      if (t1 != null)
        t1.onAnimationComplete$0();
    }
  },
  onLayout$2: function(layer, progress) {
    var child, t1;
    child = $.propertyTypeCast(layer.get$userObject(), "$isWidget");
    if (typeof child === "object" && child !== null && !!$.getInterceptor(child).$isRequiresResize)
      child.onResize$0(child);
    t1 = this._liblib1$_command.callback;
    if (t1 != null) {
      t1 = t1._liblib1$_callback;
      if (t1 != null)
        t1.onLayout$2(layer, progress);
    }
  }
};

$$.LayoutPanel = {"": "ComplexPanel;_layout,_layoutCmd,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, widget) {
    this.insertAt$2(widget, this._children._size);
  },
  insertAt$2: function(widget, beforeIndex) {
    var t1;
    widget.removeFromParent$0();
    t1 = this._children;
    t1.insert$2(t1, widget, beforeIndex);
    widget.setLayoutData$1(this._layout.attachChild$2$userObject(widget.getElement$0(), widget));
    widget.setParent$1(this);
    this._layoutCmd.schedule$2(0, null);
  },
  onResize$0: function(_) {
    var t1, child;
    for (t1 = this._children, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
      child = t1.get$current();
      if (typeof child === "object" && child !== null && !!$.getInterceptor(child).$isRequiresResize)
        child.onResize$0(child);
    }
  },
  remove$1: function(_, w) {
    var removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed)
      this._layout.removeChild$1($.propertyTypeCast(w.getLayoutData$0(), "$isLayer"));
    return removed;
  },
  setWidgetLeftRight$5: function(child, left, leftUnit, right, rightUnit) {
    $.propertyTypeCast(child.getLayoutData$0(), "$isLayer").setLeftRight$4(left, leftUnit, right, rightUnit);
    this._layoutCmd.schedule$2(0, null);
  },
  setWidgetTopBottom$5: function(child, $top, topUnit, bottom, bottomUnit) {
    $.propertyTypeCast(child.getLayoutData$0(), "$isLayer").setTopBottom$4($top, topUnit, bottom, bottomUnit);
    this._layoutCmd.schedule$2(0, null);
  },
  setWidgetTopHeight$5: function(child, $top, topUnit, height, heightUnit) {
    $.propertyTypeCast(child.getLayoutData$0(), "$isLayer").setTopHeight$4($top, topUnit, height, heightUnit);
    this._layoutCmd.schedule$2(0, null);
  },
  setWidgetVerticalPosition$2: function(child, position) {
    $.propertyTypeCast(child.getLayoutData$0(), "$isLayer").setChildVerticalPosition$1(position);
    this._layoutCmd.schedule$2(0, null);
  },
  onAttach$0: function() {
    $.Widget.prototype.onAttach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  onDetach$0: function() {
    $.Widget.prototype.onDetach$0.call(this);
    var t1 = this._layout;
    t1.impl;
    t1.parentElem;
  },
  LayoutPanel$0: function() {
    this.setElement$1($.DivElement_DivElement());
    this._layout = $.Layout$(this.getElement$0());
    this._layoutCmd = $.LayoutCommand$(this._layout);
  },
  $isRequiresResize: true
};

$$.ListBox = {"": "FocusWidget;eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  addChangeHandler$1: function(handler) {
    return this.addDomHandler$2(handler, $.get$ChangeEvent_TYPE());
  },
  set$name: function(_, value) {
    $.set$name$x(this._getSelectElement$0(), value);
  },
  get$name: function(_) {
    return $.get$name$x(this._getSelectElement$0());
  },
  addItem$2: function(item, value) {
    var t1 = $ === value;
    if (t1)
      value = null;
    if (!t1)
      this.insertItem$4(item, null, value, -1);
    else
      this.insertItem$4(item, null, item, -1);
  },
  addItem$1: function(item) {
    return this.addItem$2(item, $);
  },
  insertItem$4: function(item, dir, value, index) {
    var select, option, t1, itemCount;
    select = $.interceptedTypeCast(this._element, "$isSelectElement");
    option = $.OptionElement_OptionElement($, $, $, $);
    if (dir == null) {
      t1 = $.getInterceptor$x(option);
      t1.set$text(option, item);
      t1 = t1.get$attributes(option)._liblib3$_element;
      t1.getAttribute("bidiwrapped");
      t1.removeAttribute("bidiwrapped");
    }
    $.set$value$x(option, value);
    t1 = $.getInterceptor$asx(select);
    itemCount = select.length;
    if (index < 0 || $.JSInt_methods.$gt(index, itemCount))
      index = itemCount;
    if (index == null ? itemCount == null : index === itemCount) {
      t1 = t1.get$children(select);
      t1.add$1(t1, option);
    } else {
      t1 = t1.get$children(select);
      t1.insert$2(t1, index, option);
    }
  },
  removeItem$1: function(_, index) {
    var t1;
    if (index.$lt(index, 0) !== true) {
      t1 = $.get$options$x($.interceptedTypeCast(this._element, "$isSelectElement"));
      t1 = index.$ge(index, t1.get$length(t1)) === true;
    } else
      t1 = true;
    if (t1)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = $.get$options$x($.interceptedTypeCast(this._element, "$isSelectElement"));
    $.remove$0$ax(t1.$index(t1, index));
  },
  setSelectedIndex$1: function(index) {
    $.interceptedTypeCast(this._element, "$isSelectElement").selectedIndex = index;
  },
  getOptionText$1: function(option) {
    var t1, text;
    t1 = $.getInterceptor$x(option);
    text = t1.get$text(option);
    if (t1.get$attributes(option)._liblib3$_element.getAttribute("bidiwrapped") != null && $.$gt$n($.get$length$asx(text), 1)) {
      t1 = $.getInterceptor$asx(text);
      text = t1.substring$2(text, 1, $.$sub$n(t1.get$length(text), 1));
    }
    return text;
  },
  setMultipleSelect$1: function(multiple) {
    $.interceptedTypeCast(this._element, "$isSelectElement").multiple = multiple;
  },
  _getSelectElement$0: function() {
    return $.interceptedTypeCast(this._element, "$isSelectElement");
  },
  ListBox$2: function(isMultipleSelect, element) {
    this.setMultipleSelect$1(isMultipleSelect);
  }
};

$$.MenuBar = {"": "Widget;_allItems,_items,_body,_subMenuIcon,_isAnimationEnabled,_parentMenu<,_popup@,_liblib1$_selectedItem,_shownChildMenu@,_vertical,_autoOpen,_focusOnHover,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  focus$0: function(_) {
    $.get$FocusPanel_impl();
    $.focus$0$x(this._element);
  },
  insertItem$2: function(item, beforeIndex) {
    var t1, t2, itemsIndex, i, t3;
    if (beforeIndex < 0 || beforeIndex > this._allItems.length)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds"));
    t1 = this._allItems;
    $.JSArray_methods.insert$2(t1, beforeIndex, item);
    for (t2 = t1.length, itemsIndex = 0, i = 0; i < beforeIndex; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      if (typeof t3 === "object" && t3 !== null && !!$.getInterceptor(t3).$isMenuItem)
        ++itemsIndex;
    }
    $.JSArray_methods.insert$2(this._items, itemsIndex, item);
    this._addItemElement$2(beforeIndex, item._element);
    item._parentMenu = this;
    t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(item.getStyleElement$0()), "-"), "selected");
    $.UiObject_manageElementStyleName(item.getStyleElement$0(), t1, false);
    this.updateSubmenuIcon$1(item);
    return item;
  },
  insertSeparator$2: function(beforeIndex, separator) {
    if (beforeIndex < 0 || beforeIndex > this._allItems.length)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds"));
    if (separator == null)
      separator = $.MenuItemSeparator$();
    if (this._vertical)
      $.Dom_setElementPropertyInt(separator._element, "colSpan", 2);
    this._addItemElement$2(beforeIndex, separator._element);
    separator._parentMenu = this;
    $.JSArray_methods.insert$2(this._allItems, beforeIndex, separator);
    return separator;
  },
  isAnimationEnabled$0: function() {
    return this._isAnimationEnabled;
  },
  moveSelectionDown$0: function() {
    var t1, t2;
    if (this._selectFirstItemIfNoneSelected$0())
      return;
    if (this._vertical)
      this._selectNextItem$0();
    else {
      t1 = this._liblib1$_selectedItem;
      if (t1.getSubMenu$0() != null)
        if (!$.JSArray_methods.get$isEmpty(t1.getSubMenu$0()._items)) {
          t2 = this._shownChildMenu;
          t2 = t2 == null || t2._liblib1$_selectedItem == null;
        } else
          t2 = false;
      else
        t2 = false;
      if (t2) {
        if (this._shownChildMenu == null)
          this.doItemAction$3(t1, false, true);
        t1 = this._liblib1$_selectedItem.getSubMenu$0();
        $.get$FocusPanel_impl();
        $.focus$0$x(t1._element);
      } else {
        t1 = this._parentMenu;
        if (t1 != null)
          if (t1._vertical)
            t1._selectNextItem$0();
          else
            t1.moveSelectionDown$0();
      }
    }
  },
  moveSelectionUp$0: function() {
    var t1, t2;
    if (this._selectFirstItemIfNoneSelected$0())
      return;
    if (this._shownChildMenu == null && this._vertical)
      this._selectPrevItem$0();
    else {
      t1 = this._parentMenu;
      t2 = t1 != null;
      if (t2 && t1._vertical)
        t1._selectPrevItem$0();
      else if (t2) {
        t1._popup.hide$1(false);
        t1 = this._parentMenu;
        $.get$FocusPanel_impl();
        $.focus$0$x(t1._element);
      }
    }
  },
  onBrowserEvent$1: function($event) {
    var t1, item, t2, t3;
    t1 = $.getInterceptor$x($event);
    item = this._findItem$1(t1.get$target($event));
    switch ($.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event))) {
      case 1:
        $.get$FocusPanel_impl();
        $.focus$0$x(this._element);
        if (item != null)
          this.doItemAction$3(item, true, true);
        break;
      case 16:
        if (item != null)
          this.itemOver$2(item, true);
        break;
      case 32:
        if (item != null)
          this.itemOver$2(null, true);
        break;
      case 2048:
        this._selectFirstItemIfNoneSelected$0();
        break;
      case 128:
        switch ($.get$keyCode$x($.interceptedTypeCast($event, "$isKeyboardEvent"))) {
          case 37:
            $.get$LocaleInfo_instance();
            this._moveToPrevItem$0();
            t1.set$cancelBubble($event, true);
            t1.preventDefault$0($event);
            break;
          case 39:
            $.get$LocaleInfo_instance();
            this._moveToNextItem$0();
            t1.set$cancelBubble($event, true);
            t1.preventDefault$0($event);
            break;
          case 38:
            this.moveSelectionUp$0();
            t1.set$cancelBubble($event, true);
            t1.preventDefault$0($event);
            break;
          case 40:
            this.moveSelectionDown$0();
            t1.set$cancelBubble($event, true);
            t1.preventDefault$0($event);
            break;
          case 27:
            t2 = this._parentMenu;
            t3 = t2 != null;
            if (t3) {
              if (t3)
                t2._popup.hide$1(true);
            } else
              this.selectItem$1(null);
            if (this._parentMenu == null && this._popup != null)
              this._popup.hide$0();
            t1.set$cancelBubble($event, true);
            t1.preventDefault$0($event);
            break;
          case 9:
            t1 = this._parentMenu;
            t2 = t1 != null;
            if (t2) {
              if (t2)
                t1._popup.hide$1(true);
            } else
              this.selectItem$1(null);
            if (this._parentMenu == null && this._popup != null)
              this._popup.hide$0();
            break;
          case 13:
            if (!this._selectFirstItemIfNoneSelected$0()) {
              this.doItemAction$3(this._liblib1$_selectedItem, true, true);
              t1.set$cancelBubble($event, true);
              t1.preventDefault$0($event);
            }
            break;
        }
        break;
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  removeItem$1: function(_, item) {
    if ($.$eq(this._liblib1$_selectedItem, item) === true)
      this.selectItem$1(null);
    if (this._removeItemElement$1(item)) {
      $.Dom_setElementPropertyInt(item._element, "colSpan", 1);
      $.JSArray_methods.remove$1(this._items, item);
      item.setParentMenu$1(null);
    }
  },
  selectItem$1: function(item) {
    var t1, tr, t2;
    if ($.$eq(item, this._liblib1$_selectedItem) === true)
      return;
    t1 = this._liblib1$_selectedItem;
    if (t1 != null) {
      t1.setSelectionStyle$1(false);
      if (this._vertical) {
        tr = $.get$parent$x(this._liblib1$_selectedItem.getElement$0());
        if ($.get$Dom_impl().getChildCount$1(tr) === 2)
          $.UiObject_manageElementStyleName($.get$Dom_impl().getChild$2(tr, 1), "subMenuIcon-selected", false);
      }
    }
    if (item != null) {
      item.setSelectionStyle$1(true);
      if (this._vertical) {
        tr = $.get$parent$x(item.getElement$0());
        t1 = $.getInterceptor$x(tr);
        t2 = $.get$length$asx(t1.get$children(tr));
        if (typeof t2 !== "number")
          return this.selectItem$1$bailout(1, item, tr, t2, t1);
        if (t2 === 2) {
          t1 = t1.get$children(tr);
          if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.getInterceptor(t1).$isJavaScriptIndexingBehavior))
            return this.selectItem$1$bailout(2, item, 0, 0, t1);
          if (1 >= t1.length)
            throw $.ioore(1);
          $.UiObject_manageElementStyleName(t1[1], "subMenuIcon-selected", true);
        }
      }
    }
    this._liblib1$_selectedItem = item;
  },
  selectItem$1$bailout: function(state0, item, tr, t2, t1) {
    switch (state0) {
      case 0:
        if ($.$eq(item, this._liblib1$_selectedItem) === true)
          return;
        t1 = this._liblib1$_selectedItem;
        if (t1 != null) {
          t1.setSelectionStyle$1(false);
          if (this._vertical) {
            tr = $.get$parent$x(this._liblib1$_selectedItem.getElement$0());
            if ($.get$Dom_impl().getChildCount$1(tr) === 2)
              $.UiObject_manageElementStyleName($.get$Dom_impl().getChild$2(tr, 1), "subMenuIcon-selected", false);
          }
        }
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && item != null)
          switch (state0) {
            case 0:
              item.setSelectionStyle$1(true);
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && this._vertical)
                switch (state0) {
                  case 0:
                    tr = $.get$parent$x(item.getElement$0());
                    t1 = $.getInterceptor$x(tr);
                    t2 = $.get$length$asx(t1.get$children(tr));
                  case 1:
                    state0 = 0;
                  case 2:
                    if (state0 === 2 || state0 === 0 && $.$eq(t2, 2) === true)
                      switch (state0) {
                        case 0:
                          t1 = t1.get$children(tr);
                        case 2:
                          state0 = 0;
                          $.UiObject_manageElementStyleName($.$index$asx(t1, 1), "subMenuIcon-selected", true);
                      }
                }
          }
        this._liblib1$_selectedItem = item;
    }
  },
  getSelectedItem$0: function() {
    return this._liblib1$_selectedItem;
  },
  onDetach$0: function() {
    var t1 = this._popup;
    if (t1 != null)
      t1.hide$0();
    $.Widget.prototype.onDetach$0.call(this);
  },
  doItemAction$3: function(item, fireCommand, pFocus) {
    var t1, t2, cmd, queue;
    if ($.get$enabled$x(item) !== true)
      return;
    this.selectItem$1(item);
    if (fireCommand && item.getScheduledCommand$0() != null) {
      t1 = this._parentMenu;
      t2 = t1 != null;
      if (t2) {
        if (t2)
          t1._popup.hide$1(true);
      } else
        this.selectItem$1(null);
      cmd = item.getScheduledCommand$0();
      if ($.SchedulerImpl__instance == null)
        $.SchedulerImpl__instance = $.SchedulerImpl$();
      t1 = $.SchedulerImpl__instance;
      t2 = $._MenuScheduledCommand$(cmd);
      queue = t1.deferredCommands;
      t2 = $.Task$_internal(t2, false);
      if (queue == null) {
        queue = $.List_List($, $.Task);
        $.setRuntimeTypeInfo(queue, [$.Task]);
      }
      $.add$1$ax(queue, t2);
      t1.deferredCommands = queue;
      t1.maybeSchedulePostEventPumpCommands$0();
      t1 = this._shownChildMenu;
      if (t1 != null) {
        t2 = t1._shownChildMenu;
        if (t2 != null) {
          t2._onHide$1(pFocus);
          t1._popup.hide$0();
          if (pFocus) {
            $.get$FocusPanel_impl();
            $.focus$0$x(t1._element);
          }
        }
        this._popup.hide$0();
        this._shownChildMenu = null;
        this.selectItem$1(null);
      }
    } else if (item.getSubMenu$0() != null) {
      t1 = this._shownChildMenu;
      if (t1 == null)
        this._openPopup$1(item);
      else {
        t2 = item.getSubMenu$0();
        if (t2 == null ? t1 != null : t2 !== t1) {
          t2 = t1._shownChildMenu;
          if (t2 != null) {
            t2._onHide$1(pFocus);
            t1._popup.hide$0();
            if (pFocus) {
              $.get$FocusPanel_impl();
              $.focus$0$x(t1._element);
            }
          }
          this._popup.hide$0();
          this._openPopup$1(item);
        } else if (fireCommand && !this._autoOpen) {
          t2 = t1._shownChildMenu;
          if (t2 != null) {
            t2._onHide$1(pFocus);
            t1._popup.hide$0();
            if (pFocus) {
              $.get$FocusPanel_impl();
              $.focus$0$x(t1._element);
            }
          }
          this._popup.hide$0();
          this._shownChildMenu = null;
          this.selectItem$1(item);
        }
      }
    } else if (this._autoOpen && this._shownChildMenu != null) {
      t1 = this._shownChildMenu;
      t2 = t1._shownChildMenu;
      if (t2 != null) {
        t2._onHide$1(pFocus);
        t1._popup.hide$0();
        if (pFocus) {
          $.get$FocusPanel_impl();
          $.focus$0$x(t1._element);
        }
      }
      this._popup.hide$0();
      this._shownChildMenu = null;
    }
  },
  itemOver$2: function(item, pFocus) {
    var t1, t2, t3;
    t1 = item == null;
    if (t1) {
      t2 = this._liblib1$_selectedItem;
      if (t2 != null) {
        t3 = this._shownChildMenu;
        t2 = t2.getSubMenu$0();
        t2 = t3 == null ? t2 == null : t3 === t2;
      } else
        t2 = false;
      if (t2)
        return;
    }
    t1 = !t1;
    if (t1 && $.get$enabled$x(item) !== true)
      return;
    this.selectItem$1(item);
    if (pFocus && this._focusOnHover) {
      $.get$FocusPanel_impl();
      $.focus$0$x(this._element);
    }
    if (t1)
      if (this._shownChildMenu != null || this._parentMenu != null || this._autoOpen)
        this.doItemAction$3(item, false, this._focusOnHover);
  },
  updateSubmenuIcon$1: function(item) {
    var idx, container, tr, tdCount, td, t1;
    if (!this._vertical)
      return;
    idx = $.JSArray_methods.indexOf$1(this._allItems, item);
    if (idx === -1)
      return;
    container = this._getItemContainerElement$0();
    tr = $.get$Dom_impl().getChild$2(container, idx);
    tdCount = $.get$Dom_impl().getChildCount$1(tr);
    if (item._subMenu == null) {
      if (tdCount === 2)
        $.remove$0$ax($.get$Dom_impl().getChild$2(tr, 1));
      $.Dom_setElementPropertyInt(item._element, "colSpan", 2);
    } else if (tdCount === 1) {
      $.Dom_setElementPropertyInt(item._element, "colSpan", 1);
      td = document.createElement("td");
      $.set$verticalAlign$x(td.style, "middle");
      t1 = this._subMenuIcon;
      td.appendChild($.interceptedTypeCast($.get$ClippedImagePrototype__impl().createStructure$5(t1.url, t1.left, t1.top, t1.width, t1.height), "$isImageElement"));
      td.className = "subMenuIcon";
      $.append$1$x(tr, td);
    }
  },
  _addItemElement$2: function(beforeIndex, tdElem) {
    var tr, t1;
    if (this._vertical) {
      tr = document.createElement("tr");
      t1 = this._body;
      $.get$Dom_impl().insertChild$3(t1, tr, beforeIndex);
      tr.appendChild(tdElem);
    } else {
      t1 = this._body;
      tr = $.get$Dom_impl().getChild$2(t1, 0);
      $.get$Dom_impl().insertChild$3(tr, tdElem, beforeIndex);
    }
  },
  _findItem$1: function(hItem) {
    var t1, item, t2;
    for (t1 = $.JSArray_methods.get$iterator(this._items); t1.moveNext$0();) {
      item = t1.get$current();
      t2 = item.getElement$0();
      $.get$Dom_impl();
      if ($.contains$1$asx(t2, hItem) === true)
        return item;
    }
    return;
  },
  _getItemContainerElement$0: function() {
    var t1, t2;
    t1 = this._vertical;
    t2 = this._body;
    if (t1)
      return t2;
    else
      return $.get$Dom_impl().getChild$2(t2, 0);
  },
  _init$2: function(vertical, subMenuIcon) {
    var table, tr, div, t1;
    this._subMenuIcon = subMenuIcon;
    table = document.createElement("table");
    this._body = $.createTBody$0$x(table);
    table.appendChild(this._body);
    if (!vertical) {
      tr = document.createElement("tr");
      $.append$1$x(this._body, tr);
    }
    this._vertical = vertical;
    $.get$FocusPanel_impl();
    div = document.createElement("div");
    t1 = $.get$attributes$x(div);
    t1.$indexSet(t1, "tabIndex", "0");
    div.appendChild(table);
    this._element = div;
    t1 = this.eventsToSink;
    if (t1 === -1)
      $.UiObject.prototype.sinkEvents$1.call(this, t1);
    else
      this.eventsToSink = (t1 | 2225) >>> 0;
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-MenuBar");
    if (this._vertical) {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "vertical");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    } else {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "horizontal");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    }
    $.setProperty$2$x($.get$style$x(this._element), "outline", "0px");
    t1 = $.get$attributes$x(this._element);
    t1.$indexSet(t1, "hideFocus", "true");
    this.addDomHandler$2($.BlurHandlerAdapter$(new $.MenuBar__init_anon(this)), $.get$BlurEvent_TYPE());
  },
  _moveToNextItem$0: function() {
    var t1, t2;
    if (this._selectFirstItemIfNoneSelected$0())
      return;
    if (!this._vertical)
      this._selectNextItem$0();
    else {
      t1 = this._liblib1$_selectedItem;
      if (t1.getSubMenu$0() != null)
        if (!$.JSArray_methods.get$isEmpty(t1.getSubMenu$0()._items)) {
          t2 = this._shownChildMenu;
          t2 = t2 == null || t2._liblib1$_selectedItem == null;
        } else
          t2 = false;
      else
        t2 = false;
      if (t2) {
        if (this._shownChildMenu == null)
          this.doItemAction$3(t1, false, true);
        t1 = this._liblib1$_selectedItem.getSubMenu$0();
        $.get$FocusPanel_impl();
        $.focus$0$x(t1._element);
      } else {
        t1 = this._parentMenu;
        if (t1 != null)
          if (!t1._vertical)
            t1._selectNextItem$0();
          else
            t1._moveToNextItem$0();
      }
    }
  },
  _moveToPrevItem$0: function() {
    var t1, t2;
    if (this._selectFirstItemIfNoneSelected$0())
      return;
    if (!this._vertical)
      this._selectPrevItem$0();
    else {
      t1 = this._parentMenu;
      t2 = t1 != null;
      if (t2 && !t1._vertical)
        t1._selectPrevItem$0();
      else if (t2) {
        t1._popup.hide$1(false);
        t1 = this._parentMenu;
        $.get$FocusPanel_impl();
        $.focus$0$x(t1._element);
      }
    }
  },
  _onHide$1: function(pFocus) {
    var t1 = this._shownChildMenu;
    if (t1 != null) {
      t1._onHide$1(pFocus);
      this._popup.hide$0();
      if (pFocus) {
        $.get$FocusPanel_impl();
        $.focus$0$x(this._element);
      }
    }
  },
  _onShow$0: function() {
    this.selectItem$1(null);
  },
  _openPopup$1: function(item) {
    var t1, t2, primaryStyleName, t3, t4;
    t1 = this._parentMenu;
    if (t1 != null && t1._popup != null)
      t1._popup.previewAllNativeEvents = false;
    this._popup = $._MenuDecoratedPopupPanel$(this, item, true, false, "menuPopup");
    this._popup.animType = $.AnimationType_1;
    this._popup._isAnimationEnabled = this._isAnimationEnabled;
    t1 = this._popup;
    t2 = $.JSString_methods.$add("dwt-MenuBar", "Popup");
    t1.getStyleElement$0().className = t2;
    primaryStyleName = $.UiObject_getElementStylePrimaryName(this.getStyleElement$0());
    if ("dwt-MenuBar" !== primaryStyleName) {
      t1 = this._popup;
      t2 = $.$add$ns(primaryStyleName, "Popup");
      $.UiObject_manageElementStyleName(t1.getStyleElement$0(), t2, true);
    }
    t1 = this._popup;
    t2 = $.CloseHandlerAdapter$(new $.MenuBar__openPopup_anon(this));
    t3 = $.get$CloseEvent_TYPE();
    t4 = t1._eventBus;
    if (t4 == null) {
      t4 = $.SimpleEventBus$(null);
      t1._eventBus = t4;
      t1 = t4;
    } else
      t1 = t4;
    t1._doAdd$3(t3, $.get$SimpleEventBus__emptySource(), t2);
    this._shownChildMenu = item.getSubMenu$0();
    item.getSubMenu$0()._parentMenu = this;
    t2 = this._popup;
    t3 = $._PopupPanelPositionCallback$(this, item);
    t2.set$visible(t2, false);
    t2.show$0(t2);
    t3.setPosition$2(t3, $.UiObject.prototype.getOffsetWidth$0.call(t2), $.UiObject.prototype.getOffsetHeight$0.call(t2));
    t2.set$visible(t2, true);
  },
  _removeItemElement$1: function(item) {
    var t1, idx, container;
    t1 = this._allItems;
    idx = $.JSArray_methods.indexOf$1(t1, item);
    if (idx === -1)
      return false;
    container = this._getItemContainerElement$0();
    $.remove$0$ax($.get$Dom_impl().getChild$2(container, idx));
    $.JSArray_methods.remove$1(t1, idx);
    return true;
  },
  _selectFirstItemIfNoneSelected$0: function() {
    var t1, nextItem;
    if (this._liblib1$_selectedItem == null) {
      for (t1 = $.JSArray_methods.get$iterator(this._items); t1.moveNext$0();) {
        nextItem = t1.get$current();
        if ($.get$enabled$x(nextItem) === true) {
          this.selectItem$1(nextItem);
          break;
        }
      }
      return true;
    }
    return false;
  },
  _selectNextItem$0: function() {
    var t1, t2, index, index0, itemToBeSelected;
    t1 = this._liblib1$_selectedItem;
    if (t1 == null)
      return;
    t2 = this._items;
    index = $.JSArray_methods.indexOf$1(t2, t1);
    if (index !== (index | 0))
      return this._selectNextItem$0$bailout(1, t2, index);
    for (index0 = index, itemToBeSelected = null; true;) {
      ++index0;
      t1 = t2.length;
      if (index0 === t1)
        index0 = 0;
      if (index0 === index) {
        if (index < 0 || index >= t1)
          throw $.ioore(index);
        itemToBeSelected = t2[index];
        break;
      } else {
        if (index0 < 0 || index0 >= t1)
          throw $.ioore(index0);
        itemToBeSelected = t2[index0];
        if ($.get$enabled$x(itemToBeSelected) === true)
          break;
      }
    }
    this.selectItem$1(itemToBeSelected);
    if (this._shownChildMenu != null)
      this.doItemAction$3(itemToBeSelected, false, true);
  },
  _selectNextItem$0$bailout: function(state0, t2, index) {
    var index0, itemToBeSelected, t1;
    for (index0 = index, itemToBeSelected = null; true;) {
      ++index0;
      t1 = t2.length;
      if (index0 === t1)
        index0 = 0;
      if (index0 === index) {
        if (index >>> 0 !== index || index >= t1)
          throw $.ioore(index);
        itemToBeSelected = t2[index];
        break;
      } else {
        if (index0 >>> 0 !== index0 || index0 >= t1)
          throw $.ioore(index0);
        itemToBeSelected = t2[index0];
        if ($.get$enabled$x(itemToBeSelected) === true)
          break;
      }
    }
    this.selectItem$1(itemToBeSelected);
    if (this._shownChildMenu != null)
      this.doItemAction$3(itemToBeSelected, false, true);
  },
  _selectPrevItem$0: function() {
    var t1, t2, index, index0, itemToBeSelected;
    t1 = this._liblib1$_selectedItem;
    if (t1 == null)
      return;
    t2 = this._items;
    index = $.JSArray_methods.indexOf$1(t2, t1);
    if (index !== (index | 0))
      return this._selectPrevItem$0$bailout(1, t2, index);
    for (index0 = index, itemToBeSelected = null; true;) {
      --index0;
      if (index0 < 0)
        index0 = t2.length - 1;
      t1 = t2.length;
      if (index0 === index) {
        if (index < 0 || index >= t1)
          throw $.ioore(index);
        itemToBeSelected = t2[index];
        break;
      } else {
        if (index0 < 0 || index0 >= t1)
          throw $.ioore(index0);
        itemToBeSelected = t2[index0];
        if ($.get$enabled$x(itemToBeSelected) === true)
          break;
      }
    }
    this.selectItem$1(itemToBeSelected);
    if (this._shownChildMenu != null)
      this.doItemAction$3(itemToBeSelected, false, true);
  },
  _selectPrevItem$0$bailout: function(state0, t2, index) {
    var index0, itemToBeSelected, t1;
    for (index0 = index, itemToBeSelected = null; true;) {
      --index0;
      if (index0 < 0)
        index0 = t2.length - 1;
      t1 = t2.length;
      if (index0 === index) {
        if (index >>> 0 !== index || index >= t1)
          throw $.ioore(index);
        itemToBeSelected = t2[index];
        break;
      } else {
        if (index0 >>> 0 !== index0 || index0 >= t1)
          throw $.ioore(index0);
        itemToBeSelected = t2[index0];
        if ($.get$enabled$x(itemToBeSelected) === true)
          break;
      }
    }
    this.selectItem$1(itemToBeSelected);
    if (this._shownChildMenu != null)
      this.doItemAction$3(itemToBeSelected, false, true);
  },
  MenuBar$2: function(vertical, resources) {
    if (resources == null)
      resources = $.MenuResources$();
    this._init$2(vertical, $.AbstractImagePrototype_create(resources.menuBarSubMenuIcon$0()));
  }
};

$$.MenuBar__init_anon = {"": "Closure;this_0",
  call$1: function(evt) {
    var t1 = this.this_0;
    if (t1.get$_shownChildMenu() == null)
      t1.selectItem$1(null);
  }
};

$$.MenuBar__openPopup_anon = {"": "Closure;this_0",
  call$1: function(evt) {
    var t1, t2, t3;
    if (evt.get$autoClosed()) {
      t1 = this.this_0;
      t2 = t1.get$_parentMenu();
      t3 = t2 != null;
      if (t3) {
        if (t3)
          t2._popup.hide$1(true);
      } else
        t1.selectItem$1(null);
    }
    t1 = this.this_0;
    t2 = !evt.get$autoClosed();
    t3 = t1.get$_shownChildMenu();
    if (t3 != null) {
      t3._onHide$1(t2);
      t1.get$_popup().hide$0();
      if (t2) {
        $.get$FocusPanel_impl();
        $.focus$0$x(t1.get$_element());
      }
    }
    t2 = $.get$target$x(evt);
    $.get$CloseEvent_TYPE();
    t1.fireEvent$1($.CloseEvent$(t2, false));
    t1.set$_shownChildMenu(null);
    t1.set$_popup(null);
    t1 = t1.get$_parentMenu();
    if (t1 != null && t1._popup != null)
      t1._popup.previewAllNativeEvents = true;
  }
};

$$.MenuResources = {"": "Object;_resource,MENU_RESOURCE,MENU_RESOURCE_RTL",
  menuBarSubMenuIcon$0: function() {
    if (this._resource == null)
      this._resource = this._getMenuImageResourcePrototype$1(this.MENU_RESOURCE);
    return this._resource;
  },
  _getMenuImageResourcePrototype$1: function($name) {
    return $.ImageResourcePrototype$($name, $.SafeUriString$($.JSString_methods.$add($.JSString_methods.$add("src/packages/dart_web_toolkit/", "resource/images/"), $name)), 0, 0, 5, 9, false, false);
  }
};

$$._MenuDecoratedPopupPanel = {"": "DecoratedPopupPanel;menuBar,item,_decPanel,glassResizer,animType,autoHide,previewAllNativeEvents,modal,showing,autoHideOnHistoryEvents,autoHidePartners,desiredHeight,desiredWidth,glass,glassStyleName,_isGlassEnabled,_isAnimationEnabled,leftPosition,nativePreviewHandlerRegistration,historyHandlerRegistration,resizeAnimation,topPosition,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onPreviewNativeEvent$1: function($event) {
    var t1, target, parentMenuElement;
    if ($event.isCanceled$0() !== true) {
      t1 = $.get$type$x($event.getNativeEvent$0());
      switch ($.get$Dom_impl().eventGetTypeInt$1(t1)) {
        case 4:
          target = $.get$target$x($event.getNativeEvent$0());
          parentMenuElement = this.item.getParentMenu$0()._element;
          $.interceptedTypeCast(target, "$isElement");
          $.get$Dom_impl();
          if ($.contains$1$asx(parentMenuElement, target) === true) {
            $.cancel$0$x($event);
            return;
          }
          $.PopupPanel.prototype.onPreviewNativeEvent$1.call(this, $event);
          if ($event.isCanceled$0() === true)
            this.menuBar.selectItem$1(null);
          return;
      }
    }
    $.PopupPanel.prototype.onPreviewNativeEvent$1.call(this, $event);
  },
  _MenuDecoratedPopupPanel$5: function(menuBar, item, autoHide, modal, prefix) {
    var t1 = this.item;
    this.setWidget$1(t1.getSubMenu$0());
    this.setPreviewingAllNativeEvents$1(true);
    t1.getSubMenu$0()._onShow$0();
  }
};

$$._PopupPanelPositionCallback = {"": "PopupPanelPositionCallback;menuBar,item",
  setPosition$2: function(_, offsetWidth, offsetHeight) {
    var t1, t2, t3, t4;
    $.get$LocaleInfo_instance();
    t1 = this.menuBar;
    t2 = t1._vertical;
    t3 = t1._popup;
    t4 = this.item;
    if (t2) {
      t2 = t1._element;
      t2 = $.get$Dom_impl().getAbsoluteLeft$1(t2);
      t1 = $.get$width$x($.get$offset$x(t1._element));
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t3.setPopupPosition$2(t2 + t1 - 1, t4.getAbsoluteTop$0());
    } else {
      t2 = t4.getAbsoluteLeft$0();
      t4 = t1._element;
      t4 = $.get$Dom_impl().getAbsoluteTop$1(t4);
      t1 = $.get$height$x($.get$offset$x(t1._element));
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t3.setPopupPosition$2(t2, t4 + t1 - 1);
    }
  }
};

$$._MenuScheduledCommand = {"": "ScheduledCommand;_cmd",
  execute$0: function() {
    var t1, t2, t3, t4;
    t1 = this._cmd;
    t2 = window;
    t3 = t1.phrases;
    t4 = t1._curPhrase;
    if (t4 >>> 0 !== t4 || t4 >= t3.length)
      throw $.ioore(t4);
    t2.alert(t3[t4]);
    t1._curPhrase = $.JSNumber_methods.$mod(t1._curPhrase + 1, t3.length);
  }
};

$$.MenuItem = {"": "UiObject;_liblib1$_command,_parentMenu<,_subMenu,_enabled,_element",
  _init$4$cmd$subMenu: function(text, asHtml, cmd, subMenu) {
    var t1, t2;
    this._element = document.createElement("td");
    t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "selected");
    $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
    if (asHtml)
      this.set$html(text);
    else
      this.set$text(this, text);
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-MenuItem");
    t1 = this._element;
    t2 = $.Dom_uniqueId;
    $.Dom_uniqueId = $.$add$ns(t2, 1);
    t2 = "dwt-id-" + $.S(t2);
    t1 = $.get$attributes$x(t1);
    t1.$indexSet(t1, "id", t2);
    if (subMenu != null)
      this.setSubMenu$1(subMenu);
    if (cmd != null)
      this._liblib1$_command = cmd;
  },
  getParentMenu$0: function() {
    return this._parentMenu;
  },
  getScheduledCommand$0: function() {
    return this._liblib1$_command;
  },
  getSubMenu$0: function() {
    return this._subMenu;
  },
  get$text: function(_) {
    return $.get$text$x(this.getElement$0());
  },
  get$enabled: function(_) {
    return this._enabled;
  },
  set$html: function(val) {
    $.set$innerHtml$x(this.getElement$0(), val);
  },
  setSubMenu$1: function(subMenu) {
    var t1;
    this._subMenu = subMenu;
    t1 = this._parentMenu;
    if (t1 != null)
      t1.updateSubmenuIcon$1(this);
    if (subMenu != null) {
      $.get$FocusPanel_impl();
      t1 = $.get$attributes$x(subMenu._element);
      t1.$indexSet(t1, "tabIndex", $.JSInt_methods.toString$0(-1));
    }
  },
  set$text: function(_, val) {
    $.set$text$x(this.getElement$0(), val);
  },
  setSelectionStyle$1: function(selected) {
    var t1;
    if (selected) {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "selected");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    } else {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "selected");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
    }
  },
  MenuItem$4$cmd$subMenu: function(text, asHtml, cmd, subMenu) {
    this._init$4$cmd$subMenu(text, asHtml, cmd, subMenu);
  },
  $isMenuItem: true
};

$$.MenuItemSeparator = {"": "UiObject;_parentMenu<,_element",
  getParentMenu$0: function() {
    return this._parentMenu;
  },
  MenuItemSeparator$0: function() {
    this.setElement$1($.TableCellElement_TableCellElement());
    this.clearAndSetStyleName$1("dwt-MenuItemSeparator");
    var div = $.DivElement_DivElement();
    $.append$1$x(this.getElement$0(), div);
    $.UiObject_setElementStyleName(div, "menuSeparatorInner");
  }
};

$$.NumberLabel = {"": "ValueLabel;_renderer,_liblib1$_value,_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element", $asWidget: null, $asUiObject: null};

$$.Panel = {"": "Widget;",
  add$1: function(_, child) {
    throw $.wrapException($._ExceptionImplementation$("This panel does not support no-arg add()"));
  },
  clear$0: function(_) {
    var it = $.propertyTypeCast(this.iterator$0(this), "$isIterator");
    for (; it.moveNext$0() === true;)
      $.propertyTypeCast(it.get$current(), "$isWidget").removeFromParent$0();
  },
  adopt$1: function(child) {
    child.setParent$1(this);
  },
  doAttachChildren$0: function() {
    $.AttachDetachException_tryCommand(this.iterator$0(this), $.get$AttachDetachException_attachCommand());
  },
  doDetachChildren$0: function() {
    $.AttachDetachException_tryCommand(this.iterator$0(this), $.get$AttachDetachException_detachCommand());
  },
  orphan$1: function(child) {
    child.setParent$1(null);
  },
  $isHasWidgets: true
};

$$.PasswordTextBox = {"": "TextBox;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  PasswordTextBox$fromElement$1: function(element) {
    this.clearAndSetStyleName$1("dwt-PasswordTextBox");
  }
};

$$.PopupPanel = {"": "SimplePanel;glassResizer,animType,autoHide,previewAllNativeEvents,modal,showing,autoHideOnHistoryEvents,autoHidePartners,desiredHeight,desiredWidth,glass,glassStyleName,_isGlassEnabled,_isAnimationEnabled,leftPosition,nativePreviewHandlerRegistration,historyHandlerRegistration,resizeAnimation,topPosition,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  center$0: function() {
    var initiallyShowing, initiallyAnimated, t1, elem, t2, left, $top;
    initiallyShowing = this.showing;
    initiallyAnimated = this._isAnimationEnabled;
    t1 = !initiallyShowing;
    if (t1) {
      this.set$visible(this, false);
      this._isAnimationEnabled = false;
      this.show$0(this);
    }
    elem = this._element;
    t2 = $.getInterceptor$x(elem);
    $.set$left$x(t2.get$style(elem), "0px");
    $.set$top$x(t2.get$style(elem), "0px");
    left = $.JSNumber_methods.$shr($.$sub$n(window.innerWidth, $.UiObject.prototype.getOffsetWidth$0.call(this)), 1);
    $top = $.JSNumber_methods.$shr($.$sub$n(window.innerHeight, $.UiObject.prototype.getOffsetHeight$0.call(this)), 1);
    this.setPopupPosition$2($.max($.$add$ns(document.body.scrollLeft, left), 0), $.max($.$add$ns(document.body.scrollTop, $top), 0));
    if (t1) {
      this._isAnimationEnabled = initiallyAnimated;
      if (initiallyAnimated) {
        $.get$PopupPanel_impl();
        $.set$clip$x($.get$style$x(this._element), "rect(0px, 0px, 0px, 0px)");
        this.set$visible(this, true);
        this.resizeAnimation.run$1(200);
      } else
        this.set$visible(this, true);
    }
  },
  get$center: function() {
    return new $.BoundClosure$0(this, "center$0");
  },
  getOffsetHeight$0: function() {
    return $.UiObject.prototype.getOffsetHeight$0.call(this);
  },
  getOffsetWidth$0: function() {
    return $.UiObject.prototype.getOffsetWidth$0.call(this);
  },
  hide$1: function(autoClosed) {
    if (!this.showing)
      return;
    this.resizeAnimation.setState$2(false, false);
    $.get$CloseEvent_TYPE();
    this.fireEvent$1($.CloseEvent$(this, autoClosed));
  },
  hide$0: function() {
    return this.hide$1(false);
  },
  isAnimationEnabled$0: function() {
    return this._isAnimationEnabled;
  },
  get$visible: function(_) {
    return $.get$visibility$x($.get$style$x(this.getElement$0())) !== "hidden";
  },
  setGlassEnabled$1: function(enabled) {
    this._isGlassEnabled = enabled;
    if (enabled && this.glass == null) {
      this.glass = document.createElement("div");
      this.glass.className = this.glassStyleName;
      $.set$position$x(this.glass.style, $.Position_absolute.get$value($.Position_absolute));
      $.set$left$x(this.glass.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$top$x(this.glass.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    }
  },
  setHeight$1: function(height) {
    this.desiredHeight = height;
    this.maybeUpdateSize$0();
    if ($.$eq($.get$length$asx(height), 0) === true)
      this.desiredHeight = null;
  },
  get$setHeight: function() {
    return new $.BoundClosure$1(this, "setHeight$1");
  },
  setPopupPosition$2: function(left, $top) {
    var elem, t1;
    this.leftPosition = left;
    this.topPosition = $top;
    left = $.$sub$n(left, $.get$offset$x(document.body).left);
    $top = $.$sub$n($top, $.get$offset$x(document.body).top);
    elem = this._element;
    t1 = $.getInterceptor$x(elem);
    $.set$left$x(t1.get$style(elem), $.$add$ns($.toString$0(left), $.Unit_px.get$value($.Unit_px)));
    $.set$top$x(t1.get$style(elem), $.$add$ns($.toString$0($top), $.Unit_px.get$value($.Unit_px)));
  },
  setPreviewingAllNativeEvents$1: function(previewAllNativeEvents) {
    this.previewAllNativeEvents = previewAllNativeEvents;
  },
  set$visible: function(_, vis) {
    var t1, t2;
    t1 = this.getElement$0();
    $.Dom_setStyleAttribute(t1, "visibility", vis ? "visible" : "hidden");
    $.get$PopupPanel_impl().setVisible$2(this.getElement$0(), vis);
    if (this.glass != null) {
      t1 = $.get$PopupPanel_impl();
      t2 = this.glass;
      t1.setVisible$2(t2, vis);
      t2 = t2.style;
      $.set$visibility$x(t2, vis ? "visible" : "hidden");
    }
  },
  setWidget$1: function(w) {
    $.SimplePanel.prototype.setWidget$1.call(this, w);
    this.maybeUpdateSize$0();
  },
  setWidth$1: function(width) {
    this.desiredWidth = width;
    this.maybeUpdateSize$0();
    if ($.$eq($.get$length$asx(width), 0) === true)
      this.desiredWidth = null;
  },
  get$setWidth: function() {
    return new $.BoundClosure$1(this, "setWidth$1");
  },
  show$0: function(_) {
    if (this.showing)
      return;
    else if (this._attached)
      this.removeFromParent$0();
    this.resizeAnimation.setState$2(true, false);
  },
  getContainerElement$0: function() {
    $.get$PopupPanel_impl();
    return $.get$$$dom_firstChild$x($.SimplePanel.prototype.getContainerElement$0.call(this));
  },
  getStyleElement$0: function() {
    $.get$PopupPanel_impl();
    return $.get$$$dom_firstChild$x($.SimplePanel.prototype.getContainerElement$0.call(this)).parentElement;
  },
  onPreviewNativeEvent$1: function($event) {
    if ($event.isFirstHandler$0() === true)
      ;
  },
  onUnload$0: function(_) {
    $.Widget.prototype.onUnload$0.call(this, this);
    if (this.showing)
      this.resizeAnimation.setState$2(false, true);
  },
  maybeUpdateSize$0: function() {
    var w, t1;
    w = $.SimplePanel.prototype.getWidget$0.call(this);
    if (w != null) {
      t1 = this.desiredHeight;
      if (t1 != null)
        w.setHeight$1(t1);
      t1 = this.desiredWidth;
      if (t1 != null)
        w.setWidth$1(t1);
    }
  },
  eventTargetsPartner$1: function($event) {
    var t1, target, elem;
    t1 = this.autoHidePartners;
    if (t1 == null)
      return false;
    target = $.get$target$x($event);
    if (typeof target === "object" && target !== null && !!$.getInterceptor(target).$isElement)
      for (t1 = $.JSNull_methods.get$iterator(t1); t1.moveNext$0() === true;) {
        elem = t1.get$current();
        $.get$Dom_impl();
        if ($.contains$1$asx(elem, target) === true)
          return true;
      }
    return false;
  },
  eventTargetsPopup$1: function($event) {
    var target, t1;
    target = $.get$target$x($event);
    if (typeof target === "object" && target !== null && !!$.getInterceptor(target).$isElement) {
      t1 = this._element;
      $.get$Dom_impl();
      return $.contains$1$asx(t1, target);
    }
    return false;
  },
  previewNativeEvent$1: function($event) {
    var t1, nativeEvent, eventTargetsPopupOrPartner, t2, target;
    if ($event.isCanceled$0() !== true)
      t1 = !this.previewAllNativeEvents && $event.isConsumed$0() === true;
    else
      t1 = true;
    if (t1) {
      if (this.modal)
        $.cancel$0$x($event);
      return;
    }
    this.onPreviewNativeEvent$1($event);
    if ($event.isCanceled$0() === true)
      return;
    nativeEvent = $event.getNativeEvent$0();
    eventTargetsPopupOrPartner = this.eventTargetsPopup$1(nativeEvent) === true || this.eventTargetsPartner$1(nativeEvent);
    if (eventTargetsPopupOrPartner)
      $event.consume$0();
    if (this.modal)
      $.cancel$0$x($event);
    t1 = $.getInterceptor$x(nativeEvent);
    t2 = t1.get$type(nativeEvent);
    switch ($.get$Dom_impl().eventGetTypeInt$1(t2)) {
      case 4:
        if ($.Dom__sCaptureElem != null) {
          $event.consume$0();
          return;
        }
        if (!eventTargetsPopupOrPartner && this.autoHide) {
          this.hide$1(true);
          return;
        }
        break;
      case 8:
      case 64:
      case 1:
      case 2:
        if ($.Dom__sCaptureElem != null) {
          $event.consume$0();
          return;
        }
        break;
      case 2048:
        target = $.interceptedTypeCast(t1.get$target(nativeEvent), "$isElement");
        if (this.modal && !eventTargetsPopupOrPartner && target != null) {
          $.get$blur$x(target);
          t1 = document.body;
          t1 = target == null ? t1 != null : target !== t1;
          if (t1)
            target.blur();
          $.cancel$0$x($event);
          return;
        }
        break;
    }
  },
  updateHandlers$0: function() {
    var t1, t2, t3, t4;
    t1 = this.nativePreviewHandlerRegistration;
    if (t1 != null) {
      t2 = t1._liblib5$_eventBus;
      t3 = t1.type;
      t4 = t1.source;
      t1 = t1.handler;
      if (t2._firingDepth > 0) {
        t1 = $._RemoveCommand$(t2, t3, t4, t1);
        if (t2._deferredDeltas == null) {
          t3 = $.List_List($, $.Command);
          $.setRuntimeTypeInfo(t3, [$.Command]);
          t2._deferredDeltas = t3;
        }
        $.add$1$ax(t2._deferredDeltas, t1);
      } else
        t2._doRemoveNow$3(t3, t4, t1);
      this.nativePreviewHandlerRegistration = null;
    }
    t1 = this.historyHandlerRegistration;
    if (t1 != null) {
      t2 = t1._liblib5$_eventBus;
      t3 = t1.type;
      t4 = t1.source;
      t1 = t1.handler;
      if (t2._firingDepth > 0) {
        t1 = $._RemoveCommand$(t2, t3, t4, t1);
        if (t2._deferredDeltas == null) {
          t3 = $.List_List($, $.Command);
          $.setRuntimeTypeInfo(t3, [$.Command]);
          t2._deferredDeltas = t3;
        }
        $.add$1$ax(t2._deferredDeltas, t1);
      } else
        t2._doRemoveNow$3(t3, t4, t1);
      this.historyHandlerRegistration = null;
    }
    if (this.showing) {
      this.nativePreviewHandlerRegistration = $.IEvent_addNativePreviewHandler($.NativePreviewHandlerAdapter$(new $.PopupPanel_updateHandlers_anon(this)));
      t1 = $.HistoryValueChangeHandler$(this);
      $.History_init();
      t2 = $.History__impl;
      this.historyHandlerRegistration = t2 != null ? t2._handlers._doAdd$3($.get$ValueChangeEvent_TYPE(), $.get$SimpleEventBus__emptySource(), t1) : null;
    }
  },
  PopupPanel$2: function(autoHide, modal) {
    this.glassResizer = $._WindowResizeHandler$(this);
    this.resizeAnimation = $.ResizeAnimation$(this);
    $.append$1$x($.SimplePanel.prototype.getContainerElement$0.call(this), $.get$PopupPanel_impl().createElement$0());
    this.setPopupPosition$2(0, 0);
    this.clearAndSetStyleName$1("dwt-PopupPanel");
    $.UiObject_setElementStyleName(this.getContainerElement$0(), "popupContent");
    this.autoHide = autoHide;
    this.autoHideOnHistoryEvents = autoHide;
    this.modal = modal;
  }
};

$$.PopupPanel_updateHandlers_anon = {"": "Closure;this_0",
  call$1: function($event) {
    this.this_0.previewNativeEvent$1($event);
  }
};

$$.HistoryValueChangeHandler = {"": "Object;_panel",
  onValueChange$1: function($event) {
    var t1 = this._panel;
    if (t1.autoHideOnHistoryEvents)
      t1.hide$0();
  }
};

$$.PopupPanelPositionCallback = {"": "Object;"};

$$.ResizeAnimation = {"": "Animation;curPanel,isUnloading,offsetHeight,offsetWidth,showing,showTimer?,glassShowing,callback,duration,element,running,isStarted,requestHandle,runId,scheduler,startTime,wasStarted",
  setState$2: function(showing, isUnloading) {
    var t1, animate;
    this.isUnloading = isUnloading;
    this.cancel$0(this);
    t1 = this.showTimer;
    if (t1 != null) {
      t1.cancel$0(t1);
      this.showTimer = null;
      this.onComplete$0(this);
    }
    this.curPanel.showing = showing;
    this.curPanel.updateHandlers$0();
    animate = !isUnloading && this.curPanel._isAnimationEnabled;
    if (this.curPanel.animType !== $.AnimationType_0 && !showing)
      animate = false;
    this.showing = showing;
    if (animate)
      if (showing) {
        this.maybeShowGlass$0();
        $.setProperty$2$x($.get$style$x(this.curPanel._element), "position", "absolute");
        if ($.$eq(this.curPanel.topPosition, -1) !== true) {
          t1 = this.curPanel;
          t1.setPopupPosition$2(t1.leftPosition, t1.topPosition);
        }
        $.get$PopupPanel_impl();
        $.set$clip$x($.get$style$x(this.curPanel._element), "rect(0px, 0px, 0px, 0px)");
        $.add$1$ax($.RootPanel_get(null), this.curPanel);
        $.get$PopupPanel_impl();
        this.curPanel._element;
        if (!$.Timer__initialised) {
          $.Timer__initialised = true;
          $.Timer__hookWindowClosing();
        }
        this.showTimer = $.Timer$_internal(new $.ResizeAnimation_setState_anon(this));
        t1 = this.showTimer;
        t1.cancel$0(t1);
        t1.isRepeating = false;
        t1._timer = $.Timer_createTimeout(t1, 1);
        $.get$Timer__timers().push(t1);
      } else
        this.run$1(200);
    else
      this.onInstantaneousRun$0();
  },
  onComplete$0: function(_) {
    if (!this.showing) {
      this.maybeShowGlass$0();
      if (!this.isUnloading)
        $.remove$1$ax($.RootPanel_get(null), this.curPanel);
      $.get$PopupPanel_impl();
      this.curPanel._element;
    }
    $.get$PopupPanel_impl();
    $.set$clip$x($.get$style$x(this.curPanel._element), "rect(auto, auto, auto, auto)");
    $.setProperty$2$x($.get$style$x(this.curPanel._element), "overflow", "visible");
  },
  onStart$0: function(_) {
    this.offsetHeight = $.UiObject.prototype.getOffsetHeight$0.call(this.curPanel);
    this.offsetWidth = $.UiObject.prototype.getOffsetWidth$0.call(this.curPanel);
    $.setProperty$2$x($.get$style$x(this.curPanel._element), "overflow", "hidden");
    $.Animation.prototype.onStart$0.call(this, this);
  },
  onUpdate$1: function(progress) {
    var t1, height, width, $top, left, right, bottom, t2;
    if (!this.showing)
      progress = 1 - progress;
    t1 = this.offsetHeight;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    height = $.JSNumber_methods.toInt$0(progress * t1);
    t1 = this.offsetWidth;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    width = $.JSNumber_methods.toInt$0(progress * t1);
    $top = 0;
    left = 0;
    right = 0;
    bottom = 0;
    switch (this.curPanel.animType) {
      case $.AnimationType_2:
        right = this.offsetWidth;
        bottom = height;
        $top = 0;
        left = 0;
        break;
      case $.AnimationType_0:
        $top = $.$shr$n($.$sub$n(this.offsetHeight, height), 1);
        left = $.$shr$n($.$sub$n(this.offsetWidth, width), 1);
        right = left + width;
        bottom = $top + height;
        break;
      case $.AnimationType_1:
        $.get$LocaleInfo_instance();
        left = 0;
        right = $.$add$ns(left, width);
        bottom = 0 + height;
        $top = 0;
        break;
    }
    $.get$PopupPanel_impl();
    t1 = this.curPanel._element;
    t2 = "rect(" + $top + "px, " + $.S(right) + "px, " + $.S(bottom) + "px, " + $.S(left) + "px)";
    $.set$clip$x($.get$style$x(t1), t2);
  },
  maybeShowGlass$0: function() {
    var t1, t2;
    if (this.showing) {
      t1 = this.curPanel;
      if (t1._isGlassEnabled) {
        document.body.appendChild(t1.glass);
        $.get$PopupPanel_impl();
        t1 = this.curPanel;
        t1.glass;
        t1 = t1.glassResizer;
        t1.onResize$1(t1, null);
        this.glassShowing = true;
      }
    } else if (this.glassShowing) {
      t1 = this.curPanel.glass;
      t2 = t1.parentNode;
      if (t2 != null)
        t2.removeChild(t1);
      $.get$PopupPanel_impl();
      this.curPanel.glass;
      this.glassShowing = false;
    }
  },
  onInstantaneousRun$0: function() {
    this.maybeShowGlass$0();
    if (this.showing) {
      $.setProperty$2$x($.get$style$x(this.curPanel._element), "position", "absolute");
      if ($.$eq(this.curPanel.topPosition, -1) !== true) {
        var t1 = this.curPanel;
        t1.setPopupPosition$2(t1.leftPosition, t1.topPosition);
      }
      $.add$1$ax($.RootPanel_get(null), this.curPanel);
      $.get$PopupPanel_impl();
      this.curPanel._element;
    } else {
      if (!this.isUnloading)
        $.remove$1$ax($.RootPanel_get(null), this.curPanel);
      $.get$PopupPanel_impl();
      this.curPanel._element;
    }
    $.setProperty$2$x($.get$style$x(this.curPanel._element), "overflow", "visible");
  },
  ResizeAnimation$1: function(panel) {
    this.curPanel = panel;
  }
};

$$.ResizeAnimation_setState_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$showTimer(null);
    t1.run$1(200);
  }
};

$$._WindowResizeHandler = {"": "Object;_panel",
  onResize$1: function(_, $event) {
    var winWidth, winHeight, t1, width, height;
    winWidth = window.innerWidth;
    winHeight = window.innerHeight;
    t1 = this._panel;
    $.set$display$x(t1.glass.style, $.Display_none.get$value($.Display_none));
    $.set$width$x(t1.glass.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    $.set$height$x(t1.glass.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
    width = document.body.scrollWidth;
    height = document.body.scrollHeight;
    $.set$width$x(t1.glass.style, $.JSString_methods.$add($.JSNumber_methods.toString$0($.max(width, winWidth)), $.Unit_px.get$value($.Unit_px)));
    $.set$height$x(t1.glass.style, $.JSString_methods.$add($.JSNumber_methods.toString$0($.max(height, winHeight)), $.Unit_px.get$value($.Unit_px)));
    $.set$display$x(t1.glass.style, $.Display_block.get$value($.Display_block));
  }
};

$$.PushButton = {"": "CustomButton;_curFaceElement,_curFace,_up,_down,_downHovering,_upHovering,_upDisabled,_downDisabled,_isCapturing,_isFocusing,_allowClick,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$0: function() {
    $.CustomButton.prototype._init$0.call(this);
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-PushButton");
  },
  onClick$0: function(_) {
    var t1;
    if (this._curFace == null)
      this.setCurrentFace$1(this.getUpFace$0());
    t1 = this._curFace;
    if ((1 & t1.faceID) > 0) {
      if (t1 == null)
        this.setCurrentFace$1(this.getUpFace$0());
      this.setCurrentFace$1(this._getFaceFromID$1((this._curFace.faceID ^ 1) >>> 0));
    }
    $.CustomButton.prototype.onClick$0.call(this, this);
  },
  onClickCancel$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this.getUpFace$0());
    var t1 = this._curFace;
    if ((1 & t1.faceID) > 0) {
      if (t1 == null)
        this.setCurrentFace$1(this.getUpFace$0());
      this.setCurrentFace$1(this._getFaceFromID$1((this._curFace.faceID ^ 1) >>> 0));
    }
  },
  onClickStart$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this.getUpFace$0());
    var t1 = this._curFace;
    if ((1 & t1.faceID) <= 0) {
      if (t1 == null)
        this.setCurrentFace$1(this.getUpFace$0());
      this.setCurrentFace$1(this._getFaceFromID$1((this._curFace.faceID ^ 1) >>> 0));
    }
  }
};

$$.RadioButton = {"": "CheckBox;_oldValue,directionalTextHelper,inputElem,labelElem,editor,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onBrowserEvent$1: function($event) {
    var t1, target, t2, t3;
    t1 = $.getInterceptor$x($event);
    if ($.$eq(t1.get$type($event), "mouseup") === true || $.$eq(t1.get$type($event), "blur") === true || $.$eq(t1.get$type($event), "keydown") === true)
      this._oldValue = this.getValue$0();
    else if ($.$eq(t1.get$type($event), "click") === true) {
      target = $.get$target$x($.interceptedTypeCast($event, "$isMouseEvent"));
      if (typeof target === "object" && target !== null && !!$.getInterceptor(target).$isElement) {
        t1 = this.labelElem;
        $.get$Dom_impl();
        t1 = t1.contains(target) === true;
      } else
        t1 = false;
      if (t1) {
        this._oldValue = this.getValue$0();
        return;
      }
      $.Widget.prototype.onBrowserEvent$1.call(this, $event);
      t1 = this._oldValue;
      t2 = this.getValue$0();
      $.get$ValueChangeEvent_TYPE();
      t3 = $.getInterceptor(t1);
      if (t3.$eq(t1, t2) !== true)
        t1 = t1 == null || t3.$eq(t1, t2) !== true;
      else
        t1 = false;
      if (t1)
        this.fireEvent$1($.ValueChangeEvent$(t2));
      return;
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  set$name: function(_, val) {
    var radio, t1;
    radio = $.InputElement_InputElement(null);
    t1 = $.getInterceptor$x(radio);
    t1.set$type(radio, "radio");
    t1.set$name(radio, this.get$name(this));
    this.replaceInputElement$1(radio);
  },
  sinkEvents$1: function(eventBitsToAdd) {
    var t1, t2, t3;
    if (this.eventsToSink === -1) {
      t1 = this.inputElem;
      t2 = $.get$Dom_impl()._getEventBits$1(t1);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t3.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      t3.sinkEventsImpl$2(t1, (eventBitsToAdd | t2) >>> 0);
      t1 = this.labelElem;
      t2 = $.get$Dom_impl()._getEventBits$1(t1);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t3.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      t3.sinkEventsImpl$2(t1, (eventBitsToAdd | t2) >>> 0);
    } else
      $.CheckBox.prototype.sinkEvents$1.call(this, eventBitsToAdd);
  },
  ensureDomEventHandlers$0: function() {
  },
  RadioButton$3: function($name, label, asHtml) {
    $.set$type$x(this.inputElem, "radio");
    $.set$name$x(this.inputElem, $name);
    this.clearAndSetStyleName$1("dwt-RadioButton");
    if (label != null)
      if (asHtml)
        this.set$html(label);
      else
        this.set$text(this, label);
    this.sinkEvents$1(1);
    this.sinkEvents$1(8);
    this.sinkEvents$1(4096);
    this.sinkEvents$1(128);
  },
  $isRadioButton: true
};

$$.ResizeComposite = {"": "Composite;_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  initWidget$1: function(widget) {
    $.Composite.prototype.initWidget$1.call(this, widget);
  },
  onResize$0: function(_) {
    var t1 = $.propertyTypeCast(this._widget, "$isRequiresResize");
    t1.onResize$0(t1);
  },
  $isRequiresResize: true
};

$$.RootLayoutPanel = {"": "LayoutPanel;_layout,_layoutCmd,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onLoad$0: function(_) {
    var t1 = this._layout;
    t1.impl.fillParent$1(t1.parentElem);
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  RootLayoutPanel$_initial$0: function() {
    $.Window_methods.get$onResize($.window()).listen$1(new $.anon(this));
  }
};

$$.anon = {"": "Closure;this_0",
  call$1: function($event) {
    $.onResize$0$x(this.this_0);
  }
};

$$.RootPanel = {"": "AbsolutePanel;_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  RootPanel$1: function(elem) {
    this.onAttach$0();
  }
};

$$.RootPanel__hookWindowClosing_anon = {"": "Closure;",
  call$1: function($event) {
    $.RootPanel_detachWidgets();
  }
};

$$.DefaultRootPanel = {"": "RootPanel;_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element"};

$$.MaybeDetachExceptionCommand = {"": "Object;",
  execute$1: function(w) {
    if (w.isAttached$0() === true)
      w.onDetach$0();
  }
};

$$.ScrollPanel = {"": "SimplePanel;containerElem,scrollableElem,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onResize$0: function(_) {
    var child = this.widget;
    if (child != null && typeof child === "object" && child !== null && !!$.getInterceptor(child).$isRequiresResize) {
      $.propertyTypeCast(child, "$isRequiresResize");
      child.onResize$0(child);
    }
  },
  setHeight$1: function(height) {
    $.UiObject.prototype.setHeight$1.call(this, height);
  },
  get$setHeight: function() {
    return new $.BoundClosure$1(this, "setHeight$1");
  },
  setSize$2: function(width, height) {
    $.UiObject.prototype.setSize$2.call(this, width, height);
  },
  setTouchScrollingDisabled$1: function(isDisabled) {
    if (!isDisabled)
      return isDisabled;
    return false;
  },
  setWidth$1: function(width) {
    $.UiObject.prototype.setWidth$1.call(this, width);
  },
  get$setWidth: function() {
    return new $.BoundClosure$1(this, "setWidth$1");
  },
  getContainerElement$0: function() {
    return this.containerElem;
  },
  onAttach$0: function() {
    $.Widget.prototype.onAttach$0.call(this);
    var t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this.scrollableElem, this);
  },
  onDetach$0: function() {
    var t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this.scrollableElem, null);
    $.Widget.prototype.onDetach$0.call(this);
  },
  initialize$0: function(_) {
    var t1 = $.get$style$x(this.scrollableElem);
    $.set$overflow$x(t1, $.Overflow_auto.get$value($.Overflow_auto));
    $.set$position$x($.get$style$x(this.scrollableElem), $.Position_relative.get$value($.Position_relative));
    $.set$position$x(this.containerElem.style, $.Position_relative.get$value($.Position_relative));
    $.set$zoom$x($.get$style$x(this.scrollableElem), "1");
    $.set$zoom$x(this.containerElem.style, "1");
    this.setTouchScrollingDisabled$1(false);
    if ($.ScrollImpl_impl == null)
      $.ScrollImpl_impl = $.ScrollImpl$();
  },
  ScrollPanel$1: function(child) {
    this.scrollableElem = this.getElement$0();
    this.containerElem = $.DivElement_DivElement();
    $.append$1$x(this.scrollableElem, this.containerElem);
    this.initialize$0(this);
    this.setWidget$1(child);
  },
  $isRequiresResize: true
};

$$.SimpleCheckBox = {"": "FocusWidget;_editor,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$name: function(_) {
    return $.get$name$x(this._getInputElement$0());
  },
  set$name: function(_, $name) {
    $.set$name$x(this._getInputElement$0(), $name);
  },
  getValue$0: function() {
    var t1, t2;
    t1 = this._attached;
    t2 = this._element;
    if (t1)
      return $.interceptedTypeCast(t2, "$isInputElement").checked;
    else
      return $.interceptedTypeCast(t2, "$isInputElement").defaultChecked;
  },
  onUnload$0: function(_) {
    var value = this.getValue$0();
    if (value == null)
      value = false;
    $.interceptedTypeCast(this._element, "$isInputElement").checked = value;
    $.interceptedTypeCast(this._element, "$isInputElement").defaultChecked = value;
  },
  _getInputElement$0: function() {
    return $.interceptedTypeCast(this._element, "$isInputElement");
  },
  SimpleCheckBox$1: function(element) {
    this.clearAndSetStyleName$1("dwt-SimpleCheckBox");
  }
};

$$.SimplePanel = {"": "Panel;widget<,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getContainerElement$0: function() {
    return this._element;
  },
  add$1: function(_, w) {
    if (this.getWidget$0() != null)
      throw $.wrapException($._ExceptionImplementation$("SimplePanel can only contain one child widget"));
    this.setWidget$1(w);
  },
  iterator$0: function(_) {
    return $.SimplePanelIterator$(this);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  remove$1: function(_, w) {
    if ($.$eq(this.widget, w) !== true)
      return false;
    try {
      w.setParent$1(null);
    } finally {
      $.remove$0$ax(w.getElement$0());
      this.widget = null;
    }
    return true;
  },
  setWidget$1: function(w) {
    var t1, t2;
    if ($.$eq(w, this.widget) === true)
      return;
    t1 = w != null;
    if (t1)
      w.removeFromParent$0();
    t2 = this.widget;
    if (t2 != null)
      this.remove$1(this, t2);
    this.widget = w;
    if (t1) {
      $.append$1$x(this.getContainerElement$0(), this.widget.getElement$0());
      w.setParent$1(this);
    }
  },
  getWidget$0: function() {
    return this.widget;
  },
  SimplePanel$1: function(child) {
    this.setElement$1($.DivElement_DivElement());
    if (child != null)
      this.setWidget$1(child);
  },
  SimplePanel$fromElement$1: function(elem) {
    this.setElement$1(elem);
  },
  $isSimplePanel: true
};

$$.SimplePanelIterator = {"": "Object;hasElement,returned,_panel",
  moveNext$0: function() {
    return this.hasElement;
  },
  get$current: function() {
    return this._getCurrent$0();
  },
  _getCurrent$0: function() {
    if (!this.hasElement || this._panel.widget == null)
      throw $.wrapException($._ExceptionImplementation$("NoSuchElement"));
    this.hasElement = false;
    var t1 = this._panel.widget;
    this.returned = t1;
    return t1;
  },
  remove$0: function(_) {
    var t1, t2;
    t1 = this.returned;
    if (t1 != null) {
      t2 = this._panel;
      t2.remove$1(t2, t1);
    }
  },
  SimplePanelIterator$1: function(_panel) {
    this.hasElement = this._panel.widget != null;
  },
  $isIterator: true,
  $asIterator: function() { return [$.Widget]; }
};

$$.SimpleRadioButton = {"": "SimpleCheckBox;_editor,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  SimpleRadioButton$2: function($name, element) {
    this.set$name(this, $name);
    this.clearAndSetStyleName$1("dwt-SimpleRadioButton");
  }
};

$$.SplitLayoutPanel = {"": "DockLayoutPanel;_splitterSize,_unit,_center,_layout,_layoutCmd,_filledWidth,_filledHeigh,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _insert$4: function(child, direction, size, before) {
    $.DockLayoutPanel.prototype._insert$4.call(this, child, direction, size, before);
    if (direction !== $.DockLayoutConstant_0)
      this._insertSplitter$2(child, before);
  },
  remove$1: function(_, child) {
    var t1, idx, t2;
    t1 = this._children;
    idx = t1.indexOf$1(t1, child);
    if ($.DockLayoutPanel.prototype.remove$1.call(this, this, child)) {
      t1 = this._children;
      t2 = t1._size;
      if (idx < t2) {
        if (idx < 0 || idx >= t2)
          $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
        t1 = t1._liblib1$_array;
        if (idx >>> 0 !== idx || idx >= t1.length)
          throw $.ioore(idx);
        $.DockLayoutPanel.prototype.remove$1.call(this, this, t1[idx]);
      }
      return true;
    }
    return false;
  },
  _insertSplitter$2: function(widget, before) {
    var layout, splitter;
    layout = $.propertyTypeCast(widget.getLayoutData$0(), "$isLayoutData");
    switch (this.getResolvedDirection$1(layout.direction)) {
      case $.DockLayoutConstant_6:
        splitter = $.HSplitter$(this, widget, false);
        break;
      case $.DockLayoutConstant_3:
        splitter = $.HSplitter$(this, widget, true);
        break;
      case $.DockLayoutConstant_4:
        splitter = $.VSplitter$(this, widget, false);
        break;
      case $.DockLayoutConstant_5:
        splitter = $.VSplitter$(this, widget, true);
        break;
      default:
        splitter = null;
        break;
    }
    $.DockLayoutPanel.prototype._insert$4.call(this, splitter, layout.direction, $.JSInt_methods.toDouble$0(this._splitterSize), before);
  },
  SplitLayoutPanel$1: function(_splitterSize) {
    this.clearAndSetStyleName$1("dwt-SplitLayoutPanel");
    if ($.SplitLayoutPanel_glassElem == null) {
      $.SplitLayoutPanel_glassElem = $.DivElement_DivElement();
      $.set$position$x($.SplitLayoutPanel_glassElem.style, $.Position_absolute.get$value($.Position_absolute));
      $.set$top$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$left$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$margin$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$padding$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$borderWidth$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add("0", $.Unit_px.get$value($.Unit_px)));
      $.set$background$x($.SplitLayoutPanel_glassElem.style, "white");
      $.set$opacity$x($.SplitLayoutPanel_glassElem.style, "0.0");
    }
  }
};

$$.Splitter = {"": "Widget;target>",
  onBrowserEvent$1: function($event) {
    var t1, width, height, t2, t3, now, layout, t4, t5, size;
    t1 = $.getInterceptor$x($event);
    switch ($.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event))) {
      case 4:
        this._mouseDown = true;
        width = $.max(window.innerWidth, document.body.scrollWidth);
        height = $.max(window.innerHeight, document.body.scrollHeight);
        $.set$height$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add($.JSNumber_methods.toString$0(height), $.Unit_px.get$value($.Unit_px)));
        $.set$width$x($.SplitLayoutPanel_glassElem.style, $.JSString_methods.$add($.JSNumber_methods.toString$0(width), $.Unit_px.get$value($.Unit_px)));
        document.body.appendChild($.SplitLayoutPanel_glassElem);
        this._liblib1$_offset = $.$sub$n(this.getEventPosition$1($event), this.getAbsolutePosition$0());
        t2 = this._element;
        $.Dom__sCaptureElem = t2;
        t3 = $.get$Dom_impl();
        if (!$.DomImpl_eventSystemIsInitialized) {
          t3.initEventSystem$0();
          $.DomImpl_eventSystemIsInitialized = true;
        }
        t3.captureElem = t2;
        t1.preventDefault$0($event);
        break;
      case 8:
        this._mouseDown = false;
        t2 = $.SplitLayoutPanel_glassElem;
        t3 = t2.parentNode;
        if (t3 != null)
          t3.removeChild(t2);
        if (this._toggleDisplayAllowed) {
          now = $.Duration$(0, 0, 0, 0, 0, 0).get$inMilliseconds();
          if (now - this._lastClick < 500) {
            layout = $.propertyTypeCast(this.target.getLayoutData$0(), "$isLayoutData");
            t2 = layout.size;
            if (t2 === 0)
              this.setAssociatedWidgetSize$1(layout.oldSize);
            else {
              layout.oldSize = t2;
              this.setAssociatedWidgetSize$1(0);
            }
            now = 0;
          }
          this._lastClick = now;
        }
        t2 = this._element;
        t3 = $.Dom__sCaptureElem;
        if (t3 != null && $.$eq(t2, t3) === true)
          $.Dom__sCaptureElem = null;
        t3 = $.get$Dom_impl();
        if (!$.DomImpl_eventSystemIsInitialized) {
          t3.initEventSystem$0();
          $.DomImpl_eventSystemIsInitialized = true;
        }
        if ($.$eq(t2, t3.captureElem) === true)
          t3.captureElem = null;
        t1.preventDefault$0($event);
        break;
      case 64:
        if (this._mouseDown) {
          if (this.reverse) {
            t2 = this.getTargetPosition$0();
            t3 = this.getTargetSize$0();
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t4 = this.getEventPosition$1($event);
            if (typeof t4 !== "number")
              throw $.iae(t4);
            t5 = this._liblib1$_offset;
            if (typeof t5 !== "number")
              throw $.iae(t5);
            size = t2 + t3 - t4 - t5;
          } else
            size = $.$sub$n($.$sub$n(this.getEventPosition$1($event), this.getTargetPosition$0()), this._liblib1$_offset);
          $.propertyTypeCast(this.target.getLayoutData$0(), "$isLayoutData").hidden = false;
          this.setAssociatedWidgetSize$1($.toDouble$0$n(size));
          t1.preventDefault$0($event);
        }
        break;
    }
  },
  getMaxSize$0: function() {
    var newCenterSize = this.getCenterSize$0();
    if (this._syncedCenterSize !== newCenterSize) {
      this._syncedCenterSize = newCenterSize;
      this._centerSize = newCenterSize;
    }
    return $.max($.propertyTypeCast(this.target.getLayoutData$0(), "$isLayoutData").size + this._centerSize, 0);
  },
  setAssociatedWidgetSize$1: function(size) {
    var maxSize, t1, layout, t2, queue;
    maxSize = this.getMaxSize$0();
    if ($.$gt$n(size, maxSize))
      size = maxSize;
    t1 = this._snapClosedSize;
    if (t1 > 0 && $.$lt$n(size, t1))
      size = 0;
    else {
      t1 = this._minSize;
      if ($.$lt$n(size, t1))
        size = $.JSInt_methods.toDouble$0(t1);
    }
    layout = $.propertyTypeCast(this.target.getLayoutData$0(), "$isLayoutData");
    if ($.$eq(size, layout.size) === true)
      return;
    t1 = this._centerSize;
    t2 = layout.size;
    if (typeof size !== "number")
      throw $.iae(size);
    this._centerSize = t1 + (t2 - size);
    layout.size = size;
    if (this._layoutCommand == null) {
      this._layoutCommand = $.SplitterScheduledCommand$(this);
      if ($.SchedulerImpl__instance == null)
        $.SchedulerImpl__instance = $.SchedulerImpl$();
      t1 = $.SchedulerImpl__instance;
      t2 = this._layoutCommand;
      queue = t1.deferredCommands;
      t2 = $.Task$_internal(t2, false);
      if (queue == null) {
        queue = $.List_List($, $.Task);
        $.setRuntimeTypeInfo(queue, [$.Task]);
      }
      $.add$1$ax(queue, t2);
      t1.deferredCommands = queue;
      t1.maybeSchedulePostEventPumpCommands$0();
    }
  },
  Splitter$3: function(_splitLayoutPanel, target, reverse) {
    this.setElement$1($.DivElement_DivElement());
    this.sinkEvents$1(78);
  }
};

$$.HSplitter = {"": "Splitter;target,_liblib1$_offset,_mouseDown,_layoutCommand,reverse,_minSize,_snapClosedSize,_centerSize,_syncedCenterSize,_toggleDisplayAllowed,_lastClick,_splitLayoutPanel,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getAbsolutePosition$0: function() {
    var t1 = this._element;
    return $.get$Dom_impl().getAbsoluteLeft$1(t1);
  },
  getCenterSize$0: function() {
    var t1, t2, t3;
    t1 = this._splitLayoutPanel;
    t2 = $.get$width$x($.get$client$x(t1._element));
    t3 = t1._layout;
    return $.$div$n(t2, t3.impl.getUnitSizeInPixels$3(t3.parentElem, t1._unit, false)) - t1._filledWidth;
  },
  getEventPosition$1: function($event) {
    return $.get$x$x($.get$client$x($event));
  },
  getTargetPosition$0: function() {
    return this.target.getAbsoluteLeft$0();
  },
  getTargetSize$0: function() {
    return this.target.getOffsetWidth$0();
  },
  HSplitter$3: function(splitLayoutPanel, target, reverse) {
    $.set$width$x($.get$style$x(this.getElement$0()), $.JSString_methods.$add($.JSInt_methods.toString$0(this._splitLayoutPanel._splitterSize), $.Unit_px.get$value($.Unit_px)));
    this.clearAndSetStyleName$1("dwt-SplitLayoutPanel-HDragger");
  }
};

$$.VSplitter = {"": "Splitter;target,_liblib1$_offset,_mouseDown,_layoutCommand,reverse,_minSize,_snapClosedSize,_centerSize,_syncedCenterSize,_toggleDisplayAllowed,_lastClick,_splitLayoutPanel,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getAbsolutePosition$0: function() {
    var t1 = this._element;
    return $.get$Dom_impl().getAbsoluteTop$1(t1);
  },
  getCenterSize$0: function() {
    var t1, t2, t3;
    t1 = this._splitLayoutPanel;
    t2 = $.get$height$x($.get$client$x(t1._element));
    t3 = t1._layout;
    return $.$div$n(t2, t3.impl.getUnitSizeInPixels$3(t3.parentElem, t1._unit, true)) - t1._filledHeigh;
  },
  getEventPosition$1: function($event) {
    return $.get$y$x($.get$client$x($event));
  },
  getTargetPosition$0: function() {
    return this.target.getAbsoluteTop$0();
  },
  getTargetSize$0: function() {
    return this.target.getOffsetHeight$0();
  },
  VSplitter$3: function(splitLayoutPanel, target, reverse) {
    $.set$height$x($.get$style$x(this.getElement$0()), $.JSString_methods.$add($.JSInt_methods.toString$0(this._splitLayoutPanel._splitterSize), $.Unit_px.get$value($.Unit_px)));
    this.clearAndSetStyleName$1("dwt-SplitLayoutPanel-VDragger");
  }
};

$$.SplitterScheduledCommand = {"": "ScheduledCommand;_splitter",
  execute$0: function() {
    var t1 = this._splitter;
    t1._layoutCommand = null;
    t1 = t1._splitLayoutPanel;
    t1._layoutCmd._liblib1$_canceled = true;
    t1._doLayout$0();
    t1._layout.layout$0();
    t1.onResize$0(t1);
  }
};

$$.StackLayoutPanel = {"": "ResizeComposite;_animationDuration<,layoutPanel,_unit,_layoutData<,_selectedIndex,_widget,_renderable,eventsToSink,_eventBus,_attached,lib1$Widget$_layoutData,_parent,_element",
  add$1: function(_, w) {
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$SelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  animate$2: function(duration, callback) {
    var t1, t2, t3, $top, i, data, t4, t5, j, bottom;
    t1 = this._layoutData;
    if (t1.length === 0) {
      if (callback != null)
        callback.onAnimationComplete$0();
      return;
    }
    for (t2 = this.layoutPanel, t3 = this._unit, $top = 0, i = 0; i < t1.length; ++i) {
      data = t1[i];
      t4 = data.get$header();
      t5 = data.get$headerSize();
      $.propertyTypeCast(t4.getLayoutData$0(), "$isLayer").setTopHeight$4($top, t3, t5, t3);
      t2._layoutCmd.schedule$2(0, null);
      $top += data.get$headerSize();
      $.propertyTypeCast(data.get$widget().getLayoutData$0(), "$isLayer").setTopHeight$4($top, t3, 0, t3);
      t2._layoutCmd.schedule$2(0, null);
      if (i === this._selectedIndex)
        break;
    }
    for (j = t1.length - 1, bottom = 0; t4 = t1.length, j > i; --j) {
      if (j >= t4)
        throw $.ioore(j);
      data = t1[j];
      t4 = data.get$header();
      t5 = data.get$headerSize();
      $.propertyTypeCast(t4.getLayoutData$0(), "$isLayer").setBottomHeight$4(bottom, t3, t5, t3);
      t2._layoutCmd.schedule$2(0, null);
      $.propertyTypeCast(data.get$widget().getLayoutData$0(), "$isLayer").setBottomHeight$4(bottom, t3, 0, t3);
      t2._layoutCmd.schedule$2(0, null);
      bottom += data.get$headerSize();
    }
    t5 = this._selectedIndex;
    if (t5 !== (t5 | 0))
      return this.animate$2$bailout(1, duration, callback, $top, t1, t5, t4, bottom, t2, t3);
    if (t5 < 0 || t5 >= t4)
      throw $.ioore(t5);
    $.propertyTypeCast(t1[t5].get$widget().getLayoutData$0(), "$isLayer").setTopBottom$4($top, t3, bottom, t3);
    t2._layoutCmd.schedule$2(0, null);
    t2._layoutCmd.schedule$2(duration, callback);
  },
  animate$2$bailout: function(state0, duration, callback, $top, t1, t5, t4, bottom, t2, t3) {
    if (t5 >>> 0 !== t5 || t5 >= t4)
      throw $.ioore(t5);
    $.propertyTypeCast(t1[t5].get$widget().getLayoutData$0(), "$isLayer").setTopBottom$4($top, t3, bottom, t3);
    t2._layoutCmd.schedule$2(0, null);
    t2._layoutCmd.schedule$2(duration, callback);
  },
  animate$1: function(duration) {
    return this.animate$2(duration, null);
  },
  clear$0: function(_) {
    var t1 = this.layoutPanel;
    t1.clear$0(t1);
    $.JSArray_methods.clear$0(this._layoutData);
    this._selectedIndex = -1;
  },
  getWidgetIndex$1: function(child) {
    var t1, index;
    t1 = this.layoutPanel._children;
    index = t1.indexOf$1(t1, child);
    if (index === -1)
      return index;
    return $.JSNumber_methods.$tdiv(index - 1, 2);
  },
  insertAsText$5: function(child, text, asHtml, headerSize, beforeIndex) {
    var contents = $.Html$(null, null);
    if (asHtml)
      contents.set$html(text);
    else
      contents.set$text(contents, text);
    this.insert$4(this, child, $._Header$(contents), headerSize, beforeIndex);
  },
  iterator$0: function(_) {
    return $._Iterator$(this);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  onResize$0: function(_) {
    var t1 = this.layoutPanel;
    t1.onResize$0(t1);
  },
  removeAt$1: function(_, index) {
    var t1, t2;
    t1 = index * 2 + 1;
    t2 = this.layoutPanel._children;
    if (t1 < 0 || t1 >= t2._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t2 = t2._liblib1$_array;
    if (t1 >>> 0 !== t1 || t1 >= t2.length)
      throw $.ioore(t1);
    return this.remove$1(this, t2[t1]);
  },
  remove$1: function(_, child) {
    var t1, t2, i, data, t3;
    t1 = this.layoutPanel;
    if ($.$eq($.getParent$0$x(child), t1) !== true)
      return false;
    for (t2 = this._layoutData, i = 0; i < t2.length; ++i) {
      data = t2[i];
      if ($.$eq(data.get$widget(), child) === true) {
        t3 = data.get$header();
        if ($.ComplexPanel.prototype.remove$1.call(t1, t1, t3))
          t1._layout.removeChild$1($.propertyTypeCast(t3.getLayoutData$0(), "$isLayer"));
        t3 = data.get$widget();
        if ($.ComplexPanel.prototype.remove$1.call(t1, t1, t3))
          t1._layout.removeChild$1($.propertyTypeCast(t3.getLayoutData$0(), "$isLayer"));
        $.UiObject_manageElementStyleName(data.get$header().getStyleElement$0(), "dwt-StackLayoutPanelHeader", false);
        data.get$widget().removeStyleName$1("dwt-StackLayoutPanelContent");
        $.JSArray_methods.removeAt$1(t2, i);
        t1 = this._selectedIndex;
        if (t1 === i) {
          this._selectedIndex = -1;
          if (t2.length > 0)
            this.showWidgetAt$1(this.getWidgetIndex$1($.propertyTypeCast(t2[0], "$is_LayoutData").widget));
        } else {
          if (i <= t1)
            this._selectedIndex = t1 - 1;
          this.animate$1(this._animationDuration);
        }
        return true;
      }
    }
    return false;
  },
  onLoad$0: function(_) {
    this.animate$1(0);
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  insert$4: function(_, child, header, headerSize, beforeIndex) {
    var idx, widgetIndex, t1, data;
    idx = this.getWidgetIndex$1(child);
    if (idx !== -1) {
      this.remove$1(this, child);
      if (idx < beforeIndex)
        --beforeIndex;
    }
    widgetIndex = beforeIndex * 2;
    t1 = this.layoutPanel;
    t1.insertAt$2(child, widgetIndex);
    t1.insertAt$2(header, widgetIndex);
    $.propertyTypeCast(header.getLayoutData$0(), "$isLayer").setLeftRight$4(0, $.Unit_px, 0, $.Unit_px);
    t1._layoutCmd.schedule$2(0, null);
    $.propertyTypeCast(child.getLayoutData$0(), "$isLayer").setLeftRight$4(0, $.Unit_px, 0, $.Unit_px);
    t1._layoutCmd.schedule$2(0, null);
    data = $._LayoutData$(child, header, headerSize);
    t1 = this._layoutData;
    if (beforeIndex < t1.length)
      $.JSArray_methods.insert$2(t1, beforeIndex, data);
    else
      t1.push(data);
    $.UiObject_manageElementStyleName(header.getStyleElement$0(), "dwt-StackLayoutPanelHeader", true);
    $.UiObject_manageElementStyleName(child.getStyleElement$0(), "dwt-StackLayoutPanelContent", true);
    header.addDomHandler$2($.ClickHandlerAdapter$(new $.StackLayoutPanel_insert_anon(this, child)), $.get$ClickEvent_TYPE());
    header.addDomHandler$2($.MouseOutHandlerAdapter$(new $.StackLayoutPanel_insert_anon0(header)), $.get$MouseOutEvent_TYPE());
    header.addDomHandler$2($.MouseOverHandlerAdapter$(new $.StackLayoutPanel_insert_anon1(header)), $.get$MouseOverEvent_TYPE());
    t1 = this._selectedIndex;
    if (t1 === -1)
      this.showWidgetAt$1(0);
    else if (beforeIndex <= t1)
      this._selectedIndex = t1 + 1;
    if (this.isAttached$0() === true)
      this.animate$1(this._animationDuration);
  },
  showWidgetAt$3: function(index, duration, fireEvents) {
    var $event, t1;
    if (typeof duration !== "number")
      return this.showWidgetAt$3$bailout(1, index, duration, fireEvents);
    if (index === this._selectedIndex)
      return;
    if (fireEvents) {
      $event = $.BeforeSelectionEvent_fire(this, index);
      if ($event != null && $event._liblib5$_canceled)
        return;
    }
    this._selectedIndex = index;
    if (this.isAttached$0() === true) {
      t1 = duration;
      this.animate$1(t1);
    }
    if (fireEvents) {
      $.get$SelectionEvent_TYPE();
      this.fireEvent$1($.SelectionEvent$(index));
    }
  },
  showWidgetAt$3$bailout: function(state0, index, duration, fireEvents) {
    var $event;
    if (index === this._selectedIndex)
      return;
    if (fireEvents) {
      $event = $.BeforeSelectionEvent_fire(this, index);
      if ($event != null && $event._liblib5$_canceled)
        return;
    }
    this._selectedIndex = index;
    if (this.isAttached$0() === true)
      this.animate$1(duration == null ? this._animationDuration : duration);
    if (fireEvents) {
      $.get$SelectionEvent_TYPE();
      this.fireEvent$1($.SelectionEvent$(index));
    }
  },
  showWidgetAt$1: function(index) {
    return this.showWidgetAt$3(index, null, false);
  },
  StackLayoutPanel$1: function(_unit) {
    this.initWidget$1(this.layoutPanel);
    this.clearAndSetStyleName$1("dwt-StackLayoutPanel");
  },
  $isHasWidgets: true
};

$$.StackLayoutPanel_insert_anon = {"": "Closure;this_0,child_1",
  call$1: function($event) {
    var t1 = this.this_0;
    t1.showWidgetAt$3(t1.getWidgetIndex$1(this.child_1), t1.get$_animationDuration(), false);
  }
};

$$.StackLayoutPanel_insert_anon0 = {"": "Closure;header_2",
  call$1: function($event) {
    $.UiObject_manageElementStyleName(this.header_2.getStyleElement$0(), "dwt-StackLayoutPanelHeader-hovering", false);
  }
};

$$.StackLayoutPanel_insert_anon1 = {"": "Closure;header_3",
  call$1: function($event) {
    $.UiObject_manageElementStyleName(this.header_3.getStyleElement$0(), "dwt-StackLayoutPanelHeader-hovering", true);
  }
};

$$._Header = {"": "Composite;_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _Header$1: function(child) {
    this.initWidget$1(child);
  }
};

$$._LayoutData = {"": "Object;headerSize<,header<,widget<", $is_LayoutData: true};

$$._Iterator = {"": "Iterator;i,last,_panel",
  moveNext$0: function() {
    var t1 = this.i;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout1(1, t1);
    return t1 < this._panel._layoutData.length;
  },
  moveNext$0$bailout1: function(state0, t1) {
    return $.$lt$n(t1, this._panel._layoutData.length);
  },
  get$current: function() {
    return this._getCurrent$0();
  },
  _getCurrent$0: function() {
    var t1, t2;
    t1 = this.i;
    t2 = this._panel._layoutData;
    if (!$.$lt$n(t1, t2.length))
      throw $.wrapException($._ExceptionImplementation$("NoSuchElement"));
    this.i = $.$add$ns(t1, 1);
    this.last = t1;
    if (t1 >>> 0 !== t1 || t1 >= t2.length)
      throw $.ioore(t1);
    return $.propertyTypeCast(t2[t1], "$is_LayoutData").widget;
  },
  remove$0: function(_) {
    var t1, t2, t3;
    t1 = this.last;
    if ($.$lt$n(t1, 0))
      throw $.wrapException($._ExceptionImplementation$("IllegalState"));
    t2 = this._panel;
    t3 = t2._layoutData;
    if (t1 >>> 0 !== t1 || t1 >= t3.length)
      throw $.ioore(t1);
    t2.remove$1(t2, $.propertyTypeCast(t3[t1], "$is_LayoutData").widget);
    this.i = this.last;
    this.last = -1;
  },
  $asIterator: function() { return [$.Widget]; }
};

$$.StackPanel = {"": "ComplexPanel;_body,_visibleStack,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$3: function(_, w, stackText, asHtml) {
    this.insertWidget$2(w, this._children._size);
    if (stackText != null)
      this.setStackText$3(this._children._size - 1, stackText, asHtml);
  },
  add$1: function($receiver, w) {
    return this.add$3($receiver, w, null, false);
  },
  insertWidget$2: function(w, beforeIndex) {
    var trh, tdh, trb, tdb, effectiveIndex, t1, t2, t3;
    trh = document.createElement("tr");
    tdh = document.createElement("td");
    trh.appendChild(tdh);
    tdh.appendChild(this.createHeaderElem$0());
    trb = document.createElement("tr");
    tdb = document.createElement("td");
    trb.appendChild(tdb);
    beforeIndex = this.adjustIndex$2(w, beforeIndex);
    effectiveIndex = $.$mul$n(beforeIndex, 2);
    t1 = $.getInterceptor$ns(effectiveIndex);
    t2 = $.$lt$n(t1.$add(effectiveIndex, 1), $.get$length$asx($.get$children$x(this._body)));
    t3 = this._body;
    if (t2) {
      $.insert$2$ax($.get$children$x(t3), effectiveIndex, trh);
      $.insert$2$ax($.get$children$x(this._body), t1.$add(effectiveIndex, 1), trb);
    } else {
      $.add$1$ax($.get$children$x(t3), trh);
      $.add$1$ax($.get$children$x(this._body), trb);
    }
    $.UiObject_manageElementStyleName(tdh, "dwt-StackPanelItem", true);
    $.Dom_setElementPropertyInt(tdh, "__owner", this.get$hashCode(this));
    t1 = $.get$attributes$x(tdh);
    t1.$indexSet(t1, "height", "1px");
    $.UiObject_manageElementStyleName(tdb, $.JSString_methods.$add("dwt-StackPanel", "Content"), true);
    t1 = $.getInterceptor$x(tdb);
    t2 = t1.get$attributes(tdb);
    t2.$indexSet(t2, "height", "100%");
    t1 = t1.get$attributes(tdb);
    t1.$indexSet(t1, "vAlign", "top");
    this.insert$4(this, w, tdb, beforeIndex, false);
    this._updateIndicesFrom$1(beforeIndex);
    if ($.$eq(this._visibleStack, -1) === true)
      this.showStack$1(0);
    else {
      this._setStackVisible$2(beforeIndex, false);
      t1 = this._visibleStack;
      if ($.$ge$n(t1, beforeIndex))
        this._visibleStack = $.$add$ns(t1, 1);
      this._setStackVisible$2(this._visibleStack, true);
    }
  },
  onBrowserEvent$1: function($event) {
    var index;
    if ($.get$Dom_impl().eventGetTypeInt$1($.get$type$x($event)) === 1) {
      index = this._findDividerIndex$1($.get$target$x($.interceptedTypeCast($event, "$isMouseEvent")));
      if ($.$eq(index, -1) !== true)
        this.showStack$1(index);
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  removeAt$1: function(_, index) {
    var t1 = this._children;
    if (index < 0 || index >= t1._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = t1._liblib1$_array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return this._liblib1$_remove$2(this, t1[index], index);
  },
  remove$1: function(_, child) {
    var t1 = this._children;
    return this._liblib1$_remove$2(this, child, t1.indexOf$1(t1, child));
  },
  _liblib1$_remove$2: function(_, child, index) {
    var removed, rowIndex, t1, t2;
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, child);
    if (removed) {
      rowIndex = 2 * index;
      $.remove$0$ax($.$index$asx($.get$children$x(this._body), rowIndex));
      $.remove$0$ax($.$index$asx($.get$children$x(this._body), rowIndex));
      if ($.$eq(this._visibleStack, index) === true)
        this._visibleStack = -1;
      else {
        t1 = this._visibleStack;
        t2 = $.getInterceptor$n(t1);
        if (t2.$gt(t1, index))
          this._visibleStack = t2.$sub(t1, 1);
      }
      this._updateIndicesFrom$1(index);
    }
    return removed;
  },
  setStackText$3: function(index, text, asHtml) {
    var headerElem;
    if (index >= this._children._size)
      return;
    headerElem = $.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x($.$index$asx($.get$children$x(this._body), index * 2)), 0));
    if (asHtml)
      $.set$innerHtml$x(this.getHeaderTextElem$1(headerElem), text);
    else
      $.set$text$x(this.getHeaderTextElem$1(headerElem), text);
  },
  showStack$1: function(index) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$ge(index, this._children._size) || t1.$lt(index, 0) || t1.$eq(index, this._visibleStack) === true)
      return;
    t1 = this._visibleStack;
    if ($.$ge$n(t1, 0))
      this._setStackVisible$2(t1, false);
    this._visibleStack = index;
    this._setStackVisible$2(this._visibleStack, true);
  },
  createHeaderElem$0: function() {
    return document.createElement("div");
  },
  getHeaderTextElem$1: function(headerElem) {
    return headerElem;
  },
  _findDividerIndex$1: function(elem) {
    var t1, expando;
    while (true) {
      t1 = $.getInterceptor(elem);
      if (!(elem != null && t1.$eq(elem, this._element) !== true))
        break;
      expando = $.Dom_getElementProperty(elem, "__index");
      if (expando != null)
        if ($.$eq($.Dom_getElementPropertyInt(elem, "__owner"), this.get$hashCode(this)) === true)
          return $.Primitives_parseInt(expando, null, null);
        else
          return -1;
      elem = t1.get$parent(elem);
    }
    return -1;
  },
  _setStackContentVisible$2: function(index, visible) {
    var t1, tr, t2, t3;
    t1 = $.getInterceptor$n(index);
    tr = $.$index$asx($.get$children$x(this._body), $.$add$ns(t1.$mul(index, 2), 1));
    t2 = $.getInterceptor$x(tr);
    t3 = t2.get$style(tr);
    $.set$display$x(t3, visible ? "" : "none");
    t2 = t2.get$attributes(tr);
    t2.$indexSet(t2, "aria-hidden", $.JSBool_methods.toString$0(!visible));
    t2 = this._children;
    if (t1.$lt(index, 0) || t1.$ge(index, t2._size))
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = t2._liblib1$_array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    $.set$visible$x(t1[index], visible);
  },
  _setStackVisible$2: function(index, visible) {
    var t1, tr, nextIndex, trNext;
    t1 = $.getInterceptor$n(index);
    tr = $.$index$asx($.get$children$x(this._body), t1.$mul(index, 2));
    if (tr == null)
      return;
    $.UiObject_manageElementStyleName($.get$$$dom_firstElementChild$x(tr), $.JSString_methods.$add("dwt-StackPanelItem", "-selected"), visible);
    this._setStackContentVisible$2(index, visible);
    nextIndex = $.$mul$n(t1.$add(index, 1), 2);
    if ($.$gt$n($.get$length$asx($.get$children$x(this._body)), nextIndex)) {
      trNext = $.$index$asx($.get$children$x(this._body), nextIndex);
      if (trNext != null)
        $.UiObject_manageElementStyleName($.get$$$dom_firstElementChild$x(trNext), $.JSString_methods.$add("dwt-StackPanelItem", "-below-selected"), visible);
    }
  },
  _updateIndicesFrom$1: function(beforeIndex) {
    var c, t1, i, childTD;
    if (typeof beforeIndex !== "number")
      return this._updateIndicesFrom$1$bailout(1, beforeIndex);
    for (c = this._children._size, t1 = beforeIndex === 0, i = beforeIndex; i < c; ++i) {
      childTD = $.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x(this._body), i * 2));
      $.Dom_setElementPropertyInt(childTD, "__index", i);
      if (t1)
        $.UiObject_manageElementStyleName(childTD, $.JSString_methods.$add("dwt-StackPanelItem", "-first"), true);
      else
        $.UiObject_manageElementStyleName(childTD, $.JSString_methods.$add("dwt-StackPanelItem", "-first"), false);
    }
  },
  _updateIndicesFrom$1$bailout: function(state0, beforeIndex) {
    var c, t1, i, t2, childTD;
    for (c = this._children._size, t1 = $.getInterceptor(beforeIndex), i = beforeIndex; t2 = $.getInterceptor$n(i), t2.$lt(i, c); i = t2.$add(i, 1)) {
      childTD = $.get$$$dom_firstElementChild$x($.$index$asx($.get$children$x(this._body), t2.$mul(i, 2)));
      $.Dom_setElementPropertyInt(childTD, "__index", i);
      if (t1.$eq(beforeIndex, 0) === true)
        $.UiObject_manageElementStyleName(childTD, $.JSString_methods.$add("dwt-StackPanelItem", "-first"), true);
      else
        $.UiObject_manageElementStyleName(childTD, $.JSString_methods.$add("dwt-StackPanelItem", "-first"), false);
    }
  },
  StackPanel$0: function() {
    var table, t1;
    table = $.TableElement_TableElement();
    this.setElement$1(table);
    t1 = $.getInterceptor$x(table);
    this._body = t1.createTBody$0(table);
    t1.append$1(table, this._body);
    $.Dom_setElementPropertyInt(table, "cellSpacing", 0);
    $.Dom_setElementPropertyInt(table, "cellPadding", 0);
    $.Dom_sinkEvents(table, 1);
    this.clearAndSetStyleName$1("dwt-StackPanel");
  }
};

$$.TabBar = {"": "Composite;panel,selectedTab,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  addBeforeSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$BeforeSelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$SelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  insertTabText$3: function(text, beforeIndex, asHtml) {
    var item;
    if (beforeIndex < 0 || beforeIndex > this.panel._children._size - 2)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds"));
    item = asHtml === true ? $.Html$(text, null) : $.Label$(text, null);
    item.set$wordWrap(item, false);
    this._insertTabWidget$2(item, beforeIndex);
  },
  removeTab$1: function(index) {
    var t1, t2, t3, toRemove;
    if (index < -1 || index >= this.panel._children._size - 2)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds"));
    t1 = this.panel;
    t2 = index + 1;
    t3 = t1._children;
    if (t2 < 0 || t2 >= t3._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t3 = t3._liblib1$_array;
    if (t2 >>> 0 !== t2 || t2 >= t3.length)
      throw $.ioore(t2);
    toRemove = t3[t2];
    if ($.$eq(toRemove, this.selectedTab) === true)
      this.selectedTab = null;
    t1.remove$1(t1, toRemove);
  },
  selectTab$2: function(index, fireEvents) {
    var $event, t1, t2;
    if (index < -1 || index >= this.panel._children._size - 2)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds"));
    if (fireEvents) {
      $event = $.BeforeSelectionEvent_fire(this, index);
      if ($event != null && $event._liblib5$_canceled)
        return false;
    }
    this.setSelectionStyle$2(this.selectedTab, false);
    if (index === -1) {
      this.selectedTab = null;
      return true;
    }
    t1 = index + 1;
    t2 = this.panel._children;
    if (t1 < 0 || t1 >= t2._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t2 = t2._liblib1$_array;
    if (t1 < 0 || t1 >= t2.length)
      throw $.ioore(t1);
    this.selectedTab = t2[t1];
    this.setSelectionStyle$2(this.selectedTab, true);
    if (fireEvents) {
      $.get$SelectionEvent_TYPE();
      this.fireEvent$1($.SelectionEvent$(index));
    }
    return true;
  },
  selectTab$1: function(index) {
    return this.selectTab$2(index, true);
  },
  createTabTextWrapper$0: function() {
    return;
  },
  _insertTabWidget$2: function(widget, beforeIndex) {
    var delWidget, t1, t2, td, t3;
    if (beforeIndex < 0 || beforeIndex > this.panel._children._size - 2)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBounds"));
    delWidget = $._ClickDelegatePanel$(this, widget);
    $.set$$$dom_className$x(delWidget.getStyleElement$0(), "dwt-TabBarItem");
    t1 = this.panel;
    t2 = beforeIndex + 1;
    if (t2 < 0 || t2 > t1._children._size)
      $.throwExpression($._ExceptionImplementation$("Index Out Of Bounds Exception"));
    td = document.createElement("td");
    t3 = t1._horzAlign;
    $.set$textAlign$x(td.style, t3.getTextAlignString$0());
    t3 = t1._vertAlign;
    $.set$verticalAlign$x(td.style, t3.getVerticalAlignString$0());
    t3 = t1._tableRow;
    $.get$Dom_impl().insertChild$3(t3, td, t2);
    t1.insert$4(t1, delWidget, td, t2, false);
    $.UiObject_manageElementStyleName($.get$parent$x(delWidget._element), $.JSString_methods.$add("dwt-TabBarItem", "-wrapper"), true);
  },
  selectTabByTabWidget$1: function(tabWidget) {
    var t1, numTabs, i, t2;
    t1 = this.panel;
    numTabs = t1._children._size - 1;
    for (i = 1; i < numTabs; ++i) {
      t2 = t1._children;
      if (i >= t2._size)
        $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
      t2 = t2._liblib1$_array;
      if (i >= t2.length)
        throw $.ioore(i);
      if ($.$eq(t2[i], tabWidget) === true)
        return this.selectTab$1(i - 1);
    }
    return false;
  },
  setSelectionStyle$2: function(item, selected) {
    if (item != null)
      if (selected) {
        item.addStyleName$1("dwt-TabBarItem-selected");
        $.UiObject_manageElementStyleName($.get$parent$x(item.getElement$0()), "dwt-TabBarItem-wrapper-selected", true);
      } else {
        item.removeStyleName$1("dwt-TabBarItem-selected");
        $.UiObject_manageElementStyleName($.get$parent$x(item.getElement$0()), "dwt-TabBarItem-wrapper-selected", false);
      }
  },
  TabBar$0: function() {
    var t1, first, rest;
    t1 = this.panel;
    this.initWidget$1(t1);
    this.sinkEvents$1(1);
    this.clearAndSetStyleName$1("dwt-TabBar");
    t1.setVerticalAlignment$1($.VerticalAlignmentConstant_bottom);
    first = $.Html$("&nbsp;", true);
    rest = $.Html$("&nbsp;", true);
    first.clearAndSetStyleName$1("dwt-TabBarFirst");
    rest.clearAndSetStyleName$1("dwt-TabBarRest");
    first.setHeight$1("100%");
    rest.setHeight$1("100%");
    t1.add$1(t1, first);
    t1.add$1(t1, rest);
    first.setHeight$1("100%");
    t1.setWidgetCellHeight$2(first, "100%");
    t1.setWidgetCellWidth$2(rest, "100%");
    $.UiObject_setElementStyleName($.get$parent$x(first.getElement$0()), "dwt-TabBarFirst-wrapper");
    $.UiObject_setElementStyleName($.get$parent$x(rest.getElement$0()), "dwt-TabBarRest-wrapper");
  }
};

$$._ClickDelegatePanel = {"": "Composite;focusablePanel,enabled>,_tabBar,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  onBrowserEvent$1: function($event) {
    if (!this.enabled)
      return;
    switch ($.get$Dom_impl().eventGetTypeInt$1($.get$type$x($event))) {
      case 1:
        this._tabBar.selectTabByTabWidget$1(this);
        break;
      case 128:
        if ($.get$charCode$x($.interceptedTypeCast($event, "$isKeyboardEvent")) === 13)
          this._tabBar.selectTabByTabWidget$1(this);
        break;
    }
    $.Composite.prototype.onBrowserEvent$1.call(this, $event);
  },
  _ClickDelegatePanel$2: function(_tabBar, child) {
    var wrapperWidget, t1;
    this.focusablePanel = $.SimplePanel$fromElement($.get$FocusPanel_impl().createFocusable$0());
    this.focusablePanel.setWidget$1(child);
    wrapperWidget = this._tabBar.createTabTextWrapper$0();
    t1 = this.focusablePanel;
    if (wrapperWidget == null)
      this.initWidget$1(t1);
    else {
      wrapperWidget.setWidget$1(t1);
      this.initWidget$1(wrapperWidget);
    }
    this.sinkEvents$1(129);
  }
};

$$.TabLayoutPanel = {"": "ResizeComposite;_deckPanel<,_tabBar,_tabs,_selectedIndex,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    throw $.wrapException($._ExceptionImplementation$("A tabText parameter must be specified with add()."));
  },
  addTabText$3: function(child, text, asHtml) {
    var t1, contents;
    t1 = this._deckPanel._children._size;
    contents = asHtml ? $.Html$(text, null) : $.Label$(text, null);
    this._insert$3(child, $._Tab$(this, contents), t1);
  },
  addTabText$2: function(child, text) {
    return this.addTabText$3(child, text, false);
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$SelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  clear$0: function(_) {
    var t1, it;
    t1 = this._deckPanel._children;
    it = $.propertyTypeCast(t1.get$iterator(t1), "$isIterator");
    for (; it.moveNext$0() === true;)
      it.get$current().removeFromParent$0();
  },
  getWidgetIndex$1: function(child) {
    var t1 = this._deckPanel._children;
    return t1.indexOf$1(t1, child);
  },
  insert$4: function(_, child, beforeIndex, text, asHtml) {
    var contents = asHtml ? $.Html$(text, null) : $.Label$(text, null);
    this._insert$3(child, $._Tab$(this, contents), beforeIndex);
  },
  insert$2: function($receiver, child, beforeIndex) {
    return this.insert$4($receiver, child, beforeIndex, "", false);
  },
  iterator$0: function(_) {
    var t1 = this._deckPanel._children;
    return t1.get$iterator(t1);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  removeAt$1: function(_, index) {
    var t1, t2, child;
    t1 = !(index < 0);
    if (index < 0 || index >= this._deckPanel._children._size)
      return false;
    t2 = this._deckPanel._children;
    if (index < 0 || index >= t2._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = t2._liblib1$_array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    child = t1[index];
    t1 = this._tabBar;
    t2 = t1._children;
    if (index >= t2._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t2 = t2._liblib1$_array;
    if (index >= t2.length)
      throw $.ioore(index);
    t1.remove$1(t1, t2[index]);
    t2 = this._deckPanel;
    $.DeckLayoutPanel.prototype.remove$1.call(t2, t2, child);
    child.removeStyleName$1("dwt-TabLayoutPanelContent");
    $.JSArray_methods.removeAt$1(this._tabs, index).getWidget$0().removeFromParent$0();
    t1 = this._selectedIndex;
    if (index === t1) {
      this._selectedIndex = -1;
      if (this._deckPanel._children._size > 0)
        this.selectTab$1(0);
    } else if (index < t1)
      this._selectedIndex = t1 - 1;
    return true;
  },
  remove$1: function(_, w) {
    var t1, index;
    t1 = this._deckPanel._children;
    index = t1.indexOf$1(t1, w);
    if (index === -1)
      return false;
    return this.removeAt$1(this, index);
  },
  selectTab$2: function(index, fireEvents) {
    var $event, t1, t2, t3;
    if (index === this._selectedIndex)
      return;
    if (fireEvents) {
      $event = $.BeforeSelectionEvent_fire(this, index);
      if ($event != null && $event._liblib5$_canceled)
        return;
    }
    t1 = this._selectedIndex;
    if (t1 !== -1) {
      t2 = this._tabs;
      if (t1 >>> 0 !== t1 || t1 >= t2.length)
        throw $.ioore(t1);
      t2[t1].setSelected$1(false);
    }
    t1 = this._deckPanel;
    t2 = !(index < 0);
    if (index < 0 || index >= t1._children._size)
      $.throwExpression($._ExceptionImplementation$("Index Out Of Bounds Exception"));
    t3 = t1._children;
    if (index < 0 || index >= t3._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t2 = t3._liblib1$_array;
    if (index >>> 0 !== index || index >= t2.length)
      throw $.ioore(index);
    t1.showWidget$1(t2[index]);
    t2 = this._tabs;
    if (index >= t2.length)
      throw $.ioore(index);
    t2[index].setSelected$1(true);
    this._selectedIndex = index;
    if (fireEvents) {
      $.get$SelectionEvent_TYPE();
      this.fireEvent$1($.SelectionEvent$(index));
    }
  },
  selectTab$1: function(index) {
    return this.selectTab$2(index, true);
  },
  setAnimationDuration$1: function(duration) {
    this._deckPanel._animationDuration = duration;
  },
  _insert$3: function(child, tab, beforeIndex) {
    var t1, idx;
    t1 = this._deckPanel._children;
    idx = t1.indexOf$1(t1, child);
    if (idx !== -1) {
      this.remove$1(this, child);
      if ($.JSNumber_methods.$lt(idx, beforeIndex))
        beforeIndex = $.$sub$n(beforeIndex, 1);
    }
    $.DeckLayoutPanel.prototype.insertWidget$2.call(this._deckPanel, child, beforeIndex);
    $.JSArray_methods.insert$2(this._tabs, beforeIndex, tab);
    t1 = this._tabBar;
    t1.insert$4(t1, tab, t1._element, beforeIndex, true);
    tab.addDomHandler$2($.ClickHandlerAdapter$(new $.TabLayoutPanel__insert_anon(this, child)), $.get$ClickEvent_TYPE());
    child.addStyleName$1("dwt-TabLayoutPanelContent");
    t1 = this._selectedIndex;
    if (t1 === -1)
      this.selectTab$1(0);
    else if ($.JSNumber_methods.$ge(t1, beforeIndex))
      this._selectedIndex = t1 + 1;
  },
  TabLayoutPanel$2: function(barHeight, barUnit) {
    var panel, t1;
    this._deckPanel = $._TabbedDeckLayoutPanel$(this);
    this._deckPanel.addStyleName$1("dwt-TabLayoutPanelContentContainer");
    panel = $.LayoutPanel$();
    this.initWidget$1(panel);
    t1 = this._tabBar;
    panel.add$1(panel, t1);
    panel.setWidgetLeftRight$5(t1, 0, $.Unit_px, 0, $.Unit_px);
    panel.setWidgetTopHeight$5(t1, 0, $.Unit_px, barHeight, barUnit);
    panel.setWidgetVerticalPosition$2(t1, $.Alignment_END);
    panel.add$1(panel, this._deckPanel);
    panel.setWidgetLeftRight$5(this._deckPanel, 0, $.Unit_px, 0, $.Unit_px);
    panel.setWidgetTopBottom$5(this._deckPanel, barHeight, barUnit, 0, $.Unit_px);
    $.set$width$x($.get$style$x(t1.getElement$0()), $.JSString_methods.$add($.JSInt_methods.toString$0(16384), $.Unit_px.get$value($.Unit_px)));
    t1.clearAndSetStyleName$1("dwt-TabLayoutPanelTabs");
    this.clearAndSetStyleName$1("dwt-TabLayoutPanel");
  },
  $isTabLayoutPanel: true,
  $isHasWidgets: true
};

$$.TabLayoutPanel__insert_anon = {"": "Closure;this_0,child_1",
  call$1: function($event) {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = this.child_1;
    t3 = t1.get$_deckPanel();
    t3 = t3.get$_children(t3);
    t1.selectTab$2(t3.indexOf$1(t3, t2), true);
  }
};

$$._Tab = {"": "SimplePanel;_panel,_inner,_replacingWidget,widget,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  remove$1: function(_, w) {
    var t1, index;
    t1 = this._panel;
    index = $.JSArray_methods.indexOf$1(t1._tabs, this);
    if (this._replacingWidget === true || index < 0)
      return $.SimplePanel.prototype.remove$1.call(this, this, w);
    else
      return t1.removeAt$1(t1, index);
  },
  setSelected$1: function(selected) {
    var t1;
    if (selected) {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "selected");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
    } else {
      t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), "selected");
      $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
    }
  },
  setWidget$1: function(w) {
    this._replacingWidget = true;
    $.SimplePanel.prototype.setWidget$1.call(this, w);
    this._replacingWidget = false;
  },
  getContainerElement$0: function() {
    return this._inner;
  },
  _Tab$2: function(_panel, child) {
    var t1, t2;
    t1 = this.getElement$0();
    t2 = $.DivElement_DivElement();
    this._inner = t2;
    $.append$1$x(t1, t2);
    this.setWidget$1(child);
    this.clearAndSetStyleName$1("dwt-TabLayoutPanelTab");
    $.UiObject_setElementStyleName(this._inner, "dwt-TabLayoutPanelTabInner");
    $.set$position$x($.get$style$x(this.getElement$0()), "relative");
    $.set$display$x($.get$style$x(this.getElement$0()), "inline-block");
  }
};

$$._TabbedDeckLayoutPanel = {"": "DeckLayoutPanel;_panel,_animationDuration,_isAnimationVertical,_hidingWidget,_lastVisibleWidget,_layout,_layoutCmd,_visibleWidget,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    throw $.wrapException($._ExceptionImplementation$("Use TabLayoutPanel.add() to alter the DeckLayoutPanel"));
  },
  clear$0: function(_) {
    throw $.wrapException($._ExceptionImplementation$("Use TabLayoutPanel.clear() to alter the DeckLayoutPanel"));
  },
  insertWidget$2: function(w, beforeIndex) {
    throw $.wrapException($._ExceptionImplementation$("Use TabLayoutPanel.insert() to alter the DeckLayoutPanel"));
  },
  remove$1: function(_, w) {
    var t1 = this._panel;
    return t1.remove$1(t1, w);
  }
};

$$.TabPanel = {"": "Composite;tabBar,deck,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    throw $.wrapException($._ExceptionImplementation$("A tabText parameter must be specified with add()."));
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$SelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  getWidgetIndex$1: function(widget) {
    var t1 = this.deck._children;
    return t1.indexOf$1(t1, widget);
  },
  isAnimationEnabled$0: function() {
    return this.deck._isAnimationEnabled;
  },
  iterator$0: function(_) {
    var t1 = this.deck._children;
    return t1.get$iterator(t1);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  removeAt$1: function(_, index) {
    var t1, t2;
    t1 = this.deck;
    t2 = t1._children;
    if (index < 0 || index >= t2._size)
      $.throwExpression($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t2 = t2._liblib1$_array;
    if (index >>> 0 !== index || index >= t2.length)
      throw $.ioore(index);
    return t1.remove$1(t1, t2[index]);
  },
  remove$1: function(_, widget) {
    var t1 = this.deck;
    return t1.remove$1(t1, widget);
  },
  selectTab$2: function(index, fireEvents) {
    this.tabBar.selectTab$2(index, fireEvents);
  },
  TabPanel$0: function() {
    var panel, _tabListener;
    this.tabBar = $._UnmodifiableTabBar$(this);
    this.deck = $._TabbedDeckPanel$(this.tabBar);
    panel = $.VerticalPanel$();
    panel.add$1(panel, this.tabBar);
    panel.add$1(panel, this.deck);
    panel.setWidgetCellHeight$2(this.deck, "100%");
    this.tabBar.setWidth$1("100%");
    _tabListener = $._TabListener$(this);
    this.tabBar.addBeforeSelectionHandler$1(_tabListener);
    this.tabBar.addSelectionHandler$1(_tabListener);
    this.initWidget$1(panel);
    this.clearAndSetStyleName$1("dwt-TabPanel");
    this.deck.clearAndSetStyleName$1("dwt-TabPanelBottom");
  },
  $isHasWidgets: true
};

$$._TabbedDeckPanel = {"": "DeckPanel;_tabBar,_isAnimationEnabled,_visibleWidget,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    throw $.wrapException($._ExceptionImplementation$("Use TabPanel.add() to alter the DeckPanel"));
  },
  remove$1: function(_, w) {
    var t1, idx;
    t1 = this._children;
    idx = t1.indexOf$1(t1, w);
    if (idx !== -1) {
      $.TabBar.prototype.removeTab$1.call(this._tabBar, idx);
      return $.DeckPanel.prototype.remove$1.call(this, this, w);
    }
    return false;
  },
  insertProtectedTabText$4: function(w, tabText, asHtml, beforeIndex) {
    var t1, idx;
    t1 = this._children;
    idx = t1.indexOf$1(t1, w);
    if (idx !== -1) {
      this.remove$1(this, w);
      if (idx < beforeIndex)
        --beforeIndex;
    }
    $.TabBar.prototype.insertTabText$3.call(this._tabBar, tabText, beforeIndex, asHtml);
    $.DeckPanel.prototype.insertAt$2.call(this, w, beforeIndex);
  }
};

$$._UnmodifiableTabBar = {"": "TabBar;_panel,panel,selectedTab,_widget,_renderable,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  createTabTextWrapper$0: function() {
    return;
  }
};

$$._TabListener = {"": "Object;_tabPanel",
  onBeforeSelection$1: function($event) {
  },
  onSelection$1: function($event) {
    this._tabPanel.deck.showWidgetAt$1($event._selectedItem);
  }
};

$$.TextArea = {"": "TextBoxBase;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  TextArea$fromElement$1: function(element) {
    this.clearAndSetStyleName$1("dwt-TextArea");
  }
};

$$.TextBox = {"": "TextBoxBase;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  TextBox$fromElement$1: function(element) {
    this.clearAndSetStyleName$1("dwt-TextBox");
  }
};

$$.TextBoxBase = {"": "ValueBoxBase;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getValue$0: function() {
    var raw = $.ValueBoxBase.prototype.getValue$0.call(this);
    return raw == null ? "" : raw;
  },
  $asWidget: null,
  $asUiObject: null,
  $asFocusable: null
};

$$.ToggleButton = {"": "CustomButton;_curFaceElement,_curFace,_up,_down,_downHovering,_upHovering,_upDisabled,_downDisabled,_isCapturing,_isFocusing,_allowClick,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  _init$0: function() {
    $.CustomButton.prototype._init$0.call(this);
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-ToggleButton");
  },
  getValue$0: function() {
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    return (1 & this._curFace.faceID) > 0;
  },
  onClick$0: function(_) {
    var t1;
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    this.setCurrentFace$1(this._getFaceFromID$1((this._curFace.faceID ^ 1) >>> 0));
    $.CustomButton.prototype.onClick$0.call(this, this);
    if (this._curFace == null)
      this.setCurrentFace$1(this._up);
    t1 = this._curFace.faceID;
    $.get$ValueChangeEvent_TYPE();
    this.fireEvent$1($.ValueChangeEvent$((1 & t1) > 0));
  }
};

$$.Tree = {"": "Widget;_childWidgets,_curSelection,_focusable,_images,_indentValue,_isAnimationEnabled,_lastWasKeyDown,_root,_useLeafImages,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, widget) {
    var t1, ret;
    t1 = this._root;
    ret = $.TreeItem$(null, false, widget);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    t1.insertItem$2(t1.getChildCount$0(), ret);
  },
  addSelectionHandler$1: function(handler) {
    var t1, t2;
    t1 = $.get$SelectionEvent_TYPE();
    t2 = this._eventBus;
    if (t2 == null) {
      t2 = $.SimpleEventBus$(null);
      this._eventBus = t2;
    }
    return t2._doAdd$3(t1, $.get$SimpleEventBus__emptySource(), handler);
  },
  addTextItem$1: function(itemText) {
    var t1, ret;
    t1 = this._root;
    ret = $.TreeItem$(null, false, $);
    ret.set$text(ret, itemText);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    t1.insertItem$2(t1.getChildCount$0(), ret);
    return ret;
  },
  getSelectedItem$0: function() {
    return this._curSelection;
  },
  get$tabIndex: function(_) {
    return $.get$FocusPanel_impl().getTabIndex$1(this._focusable);
  },
  isAnimationEnabled$0: function() {
    return this._isAnimationEnabled;
  },
  iterator$0: function(_) {
    var t1 = this._childWidgets;
    return $._WidgetsIterator$(this, $.List_List$from(t1.get$keys(t1), true, $.Widget), null);
  },
  get$iterator: function(receiver) {
    return new $.BoundClosure$i0(this, "iterator$0", receiver);
  },
  onBrowserEvent$1: function($event) {
    var t1, eventType, e, t2, chain, item;
    t1 = $.getInterceptor$x($event);
    eventType = $.get$Dom_impl().eventGetTypeInt$1(t1.get$type($event));
    switch (eventType) {
      case 128:
        if (this._curSelection == null) {
          t1 = this._root;
          if (t1.getChildCount$0() > 0)
            this._onSelection$3(t1.getChild$1(0), true, true);
          $.Widget.prototype.onBrowserEvent$1.call(this, $event);
          return;
        }
        break;
      case 256:
      case 512:
        $.interceptedTypeCast($event, "$isKeyboardEvent");
        if ($event.altKey === true || $event.metaKey === true) {
          $.Widget.prototype.onBrowserEvent$1.call(this, $event);
          return;
        }
        break;
    }
    switch (eventType) {
      case 1:
        e = $.interceptedTypeCast(t1.get$target($event), "$isElement");
        if ($.Tree_shouldTreeDelegateFocusToElement(e))
          ;
        else {
          t2 = this._curSelection;
          if (t2 != null) {
            t2 = t2.getContentElem$0();
            $.get$Dom_impl();
            t2 = $.contains$1$asx(t2, e) === true;
          } else
            t2 = false;
          if (t2)
            this.set$focus(this, true);
        }
        break;
      case 4:
        $.interceptedTypeCast($event, "$isMouseEvent");
        if ($.$eq($.get$currentTarget$x($event), this._element) === true && $event.button === 0)
          this._elementClicked$1($.interceptedTypeCast(t1.get$target($event), "$isElement"));
        break;
      case 128:
        this._keyboardNavigation$1($event);
        this._lastWasKeyDown = true;
        break;
      case 256:
        if (!this._lastWasKeyDown)
          this._keyboardNavigation$1($event);
        this._lastWasKeyDown = false;
        break;
      case 512:
        if ($.get$keyCode$x($.interceptedTypeCast($event, "$isKeyboardEvent")) === 9) {
          chain = $.List_List($, $.Element);
          $.setRuntimeTypeInfo(chain, [$.Element]);
          this._collectElementChain$3(chain, this._element, t1.get$target($event));
          item = this._findItemByChain$3(chain, 0, this._root);
          if ($.$eq(item, this._curSelection) !== true)
            this.setSelectedItem$2(item, true);
        }
        this._lastWasKeyDown = false;
        break;
    }
    switch (eventType) {
      case 128:
      case 512:
        if ($.Tree_isArrowKey($.get$keyCode$x($.interceptedTypeCast($event, "$isKeyboardEvent")))) {
          t1.set$cancelBubble($event, true);
          t1.preventDefault$0($event);
          return;
        }
        break;
    }
    $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  remove$1: function(_, w) {
    var t1, item;
    t1 = this._childWidgets;
    item = t1.$index(t1, w);
    if (item == null)
      return false;
    item.setWidget$1(null);
    return true;
  },
  removeItem$1: function(_, item) {
    var t1 = this._root;
    t1.removeItem$1(t1, item);
  },
  removeItems$0: function() {
    var t1, t2;
    for (; t1 = this._root, t1.getChildCount$0() > 0;) {
      t1 = t1.getChild$1(0);
      t2 = this._root;
      t2.removeItem$1(t2, t1);
    }
  },
  setAnimationEnabled$1: function(enable) {
    this._isAnimationEnabled = enable;
  },
  set$focus: function(_, val) {
    var t1;
    if (val) {
      t1 = $.get$FocusPanel_impl();
      t1.focus$1(t1, this._focusable);
    } else {
      t1 = $.get$FocusPanel_impl();
      t1.blur$1(t1, this._focusable);
    }
  },
  setSelectedItem$2: function(item, fireEvents) {
    var t1;
    if (item == null) {
      t1 = this._curSelection;
      if (t1 == null)
        return;
      t1.setSelected$1(false);
      this._curSelection = null;
      return;
    }
    this._onSelection$3(item, fireEvents, true);
  },
  setSelectedItem$1: function(item) {
    return this.setSelectedItem$2(item, true);
  },
  set$tabIndex: function(_, index) {
    $.get$FocusPanel_impl().setTabIndex$2(this._focusable, index);
  },
  doAttachChildren$0: function() {
    try {
      var t1 = this._childWidgets;
      t1 = $._WidgetsIterator$(this, $.List_List$from(t1.get$keys(t1), true, $.Widget), null);
      $.AttachDetachException_tryCommand(t1, $.get$AttachDetachException_attachCommand());
    } finally {
      t1 = $.get$Dom_impl()._listener;
      t1.$indexSet(t1, this._focusable, this);
    }
  },
  doDetachChildren$0: function() {
    try {
      var t1 = this._childWidgets;
      t1 = $._WidgetsIterator$(this, $.List_List$from(t1.get$keys(t1), true, $.Widget), null);
      $.AttachDetachException_tryCommand(t1, $.get$AttachDetachException_detachCommand());
    } finally {
      t1 = $.get$Dom_impl()._listener;
      t1.$indexSet(t1, this._focusable, null);
    }
  },
  onLoad$0: function(_) {
    var t1 = this._root;
    t1.updateStateRecursiveHelper$0();
    t1._liblib1$_tree.maybeUpdateSelection$2(t1, t1._open);
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  adopt$2: function(widget, treeItem) {
    var t1 = this._childWidgets;
    t1.$indexSet(t1, widget, treeItem);
    widget.setParent$1(this);
  },
  fireStateChanged$2: function(item, $open) {
    if ($open) {
      $.get$OpenEvent_TYPE();
      this.fireEvent$1($.OpenEvent$(item));
    } else {
      $.get$CloseEvent_TYPE();
      this.fireEvent$1($.CloseEvent$(item, false));
    }
  },
  maybeUpdateSelection$2: function(itemThatChangedState, isItemOpening) {
    var tempItem;
    if (!isItemOpening) {
      tempItem = this._curSelection;
      for (; tempItem != null;) {
        if ($.$eq(tempItem, itemThatChangedState) === true) {
          this.setSelectedItem$1(itemThatChangedState);
          return;
        }
        tempItem = tempItem.getParentItem$0();
      }
    }
  },
  orphan$1: function(widget) {
    var t1;
    try {
      widget.setParent$1(null);
    } finally {
      t1 = this._childWidgets;
      t1.remove$1(t1, widget);
    }
  },
  showClosedImage$1: function(treeItem) {
    this._showImage$2(treeItem, this._images._treeClosed);
  },
  showLeafImage$1: function(treeItem) {
    var t1;
    if (this._useLeafImages === true || treeItem._imageHolder != null)
      this._showImage$2(treeItem, this._images._treeLeaf);
    else {
      $.get$LocaleInfo_instance();
      t1 = treeItem._element;
      $.set$paddingLeft$x($.get$style$x(t1), this._indentValue);
    }
  },
  showOpenImage$1: function(treeItem) {
    this._showImage$2(treeItem, this._images._treeOpen);
  },
  _collectElementChain$3: function(chain, hRoot, hElem) {
    var t1 = $.getInterceptor(hElem);
    if (hElem == null || t1.$eq(hElem, hRoot) === true)
      return;
    this._collectElementChain$3(chain, hRoot, t1.get$parent(hElem));
    chain.push(hElem);
  },
  _elementClicked$1: function(hElem) {
    var chain, item, t1;
    chain = $.List_List($, $.Element);
    $.setRuntimeTypeInfo(chain, [$.Element]);
    this._collectElementChain$3(chain, this._element, hElem);
    item = this._findItemByChain$3(chain, 0, this._root);
    if (item != null && $.$eq(item, this._root) !== true) {
      if (item.getChildCount$0() > 0) {
        t1 = item.getImageElement$0();
        $.get$Dom_impl();
        t1 = $.contains$1$asx(t1, hElem) === true;
      } else
        t1 = false;
      if (t1) {
        item.setState$2(!item.getState$0(), true);
        return true;
      } else {
        t1 = item.getElement$0();
        $.get$Dom_impl();
        if ($.contains$1$asx(t1, hElem) === true) {
          this._onSelection$3(item, true, !$.Tree_shouldTreeDelegateFocusToElement(hElem));
          return true;
        }
      }
    }
    return false;
  },
  _findDeepestOpenChild$1: function(item) {
    if (!item.getState$0())
      return item;
    return this._findDeepestOpenChild$1(item.getChild$1(item.getChildCount$0() - 1));
  },
  _findItemByChain$3: function(chain, idx, root) {
    var t1, hCurElem, n, i, child, retItem;
    t1 = chain.length;
    if (idx === t1)
      return root;
    if (idx < 0 || idx >= t1)
      throw $.ioore(idx);
    hCurElem = chain[idx];
    for (n = root.getChildCount$0(), i = 0; i < n; ++i) {
      child = root.getChild$1(i);
      if ($.$eq(child.getElement$0(), hCurElem) === true) {
        retItem = this._findItemByChain$3(chain, idx + 1, root.getChild$1(i));
        if (retItem == null)
          return child;
        return retItem;
      }
    }
    return this._findItemByChain$3(chain, idx + 1, root);
  },
  _getTopClosedParent$1: function(item) {
    var $parent, t1, topClosedParent;
    $parent = item.getParentItem$0();
    t1 = this._root;
    topClosedParent = null;
    while (true) {
      if (!($parent != null && ($parent == null ? t1 != null : $parent !== t1)))
        break;
      if (!$parent._open)
        topClosedParent = $parent;
      $parent = $parent._parent;
    }
    return topClosedParent;
  },
  _init$2: function(images, useLeafImages) {
    var div, t1, t2;
    this._setImages$2(images, useLeafImages);
    this._element = document.createElement("div");
    $.set$position$x($.get$style$x(this._element), "relative");
    $.set$zoom$x($.get$style$x(this._element), "1");
    $.get$FocusPanel_impl();
    div = document.createElement("div");
    t1 = $.get$attributes$x(div);
    t1.$indexSet(t1, "tabIndex", "0");
    this._focusable = div;
    $.set$fontSize$x(this._focusable.style, "0");
    $.set$position$x(this._focusable.style, "absolute");
    $.set$outline$x(this._focusable.style, "0px");
    t1 = $.get$attributes$x(this._focusable);
    t1.$indexSet(t1, "hideFocus", "true");
    $.setProperty$2$x(this._focusable.style, "zIndex", $.JSInt_methods.toString$0(-1));
    $.append$1$x(this._element, this._focusable);
    t1 = this.eventsToSink;
    if (t1 === -1)
      $.UiObject.prototype.sinkEvents$1.call(this, t1);
    else
      this.eventsToSink = (t1 | 901) >>> 0;
    t1 = this._focusable;
    t2 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t2.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    t2.sinkEventsImpl$2(t1, 6144);
    this._root = $.TreeItem$(null, true, $);
    this._root.setTree$1(this);
    $.set$$$dom_className$x(this.getStyleElement$0(), "dwt-Tree");
  },
  _keyboardNavigation$1: function($event) {
    var t1 = this._curSelection;
    switch ($.Tree__standardizeKeycode($.get$keyCode$x($.interceptedTypeCast($event, "$isKeyboardEvent")))) {
      case 38:
        this._moveSelectionUp$1(t1);
        break;
      case 40:
        this._moveSelectionDown$2(t1, true);
        break;
      case 37:
        this._maybeCollapseTreeItem$0();
        break;
      case 39:
        this._maybeExpandTreeItem$0();
        break;
      default:
        return;
    }
  },
  _maybeCollapseTreeItem$0: function() {
    var t1, topClosedParent, $parent;
    t1 = this._curSelection;
    topClosedParent = this._getTopClosedParent$1(t1);
    if (topClosedParent != null)
      this.setSelectedItem$1(topClosedParent);
    else if (t1.getState$0())
      t1.setState$1(false);
    else {
      $parent = t1.getParentItem$0();
      if ($parent != null)
        this.setSelectedItem$1($parent);
    }
  },
  _maybeExpandTreeItem$0: function() {
    var t1, topClosedParent;
    t1 = this._curSelection;
    topClosedParent = this._getTopClosedParent$1(t1);
    if (topClosedParent != null)
      this.setSelectedItem$1(topClosedParent);
    else if (!t1.getState$0())
      t1.setState$1(true);
    else if (t1.getChildCount$0() > 0)
      this.setSelectedItem$1(t1.getChild$1(0));
  },
  _moveFocus$0: function() {
    var t1, focusableWidget, selectedElem, containerLeft, containerTop, t2, width, height, t3;
    t1 = this._curSelection;
    focusableWidget = t1.getFocusable$0();
    if (focusableWidget != null) {
      $.set$focus$x(focusableWidget, true);
      $.scrollIntoView$0$x($.propertyTypeCast(focusableWidget, "$isWidget").getElement$0());
    } else {
      selectedElem = t1.getContentElem$0();
      t1 = this._element;
      containerLeft = $.get$Dom_impl().getAbsoluteLeft$1(t1);
      t1 = this._element;
      containerTop = $.get$Dom_impl().getAbsoluteTop$1(t1);
      t1 = $.get$Dom_impl().getAbsoluteLeft$1(selectedElem);
      t2 = $.get$Dom_impl().getAbsoluteTop$1(selectedElem);
      width = $.Dom_getElementPropertyInt(selectedElem, "offsetWidth");
      height = $.Dom_getElementPropertyInt(selectedElem, "offsetHeight");
      if ($.$eq(width, 0) === true || $.$eq(height, 0) === true) {
        $.setProperty$2$x(this._focusable.style, "left", $.JSInt_methods.toString$0(0));
        $.setProperty$2$x(this._focusable.style, "top", $.JSInt_methods.toString$0(0));
        return;
      }
      t3 = this._focusable;
      t1 = $.S(t1 - containerLeft) + "px";
      $.setProperty$2$x(t3.style, "left", t1);
      t1 = this._focusable;
      t2 = $.S(t2 - containerTop) + "px";
      $.setProperty$2$x(t1.style, "top", t2);
      t2 = this._focusable;
      t1 = $.S(width) + "px";
      $.setProperty$2$x(t2.style, "width", t1);
      t1 = this._focusable;
      t2 = $.S(height) + "px";
      $.setProperty$2$x(t1.style, "height", t2);
      $.scrollIntoView$0$x(this._focusable);
      this._updateAriaAttributes$0();
      this.set$focus(this, true);
    }
  },
  _moveSelectionDown$2: function(sel, dig) {
    var topClosedParent, $parent, idx;
    if ($.$eq(sel, this._root) === true)
      return;
    topClosedParent = this._getTopClosedParent$1(sel);
    if (topClosedParent != null) {
      this._moveSelectionDown$2(topClosedParent, false);
      return;
    }
    $parent = sel.getParentItem$0();
    if ($parent == null)
      $parent = this._root;
    idx = $parent.getChildIndex$1(sel);
    if (typeof idx !== "number")
      return this._moveSelectionDown$2$bailout(1, sel, dig, $parent, idx);
    if (!dig || !sel.getState$0())
      if (idx < $parent.getChildCount$0() - 1)
        this._onSelection$3($parent.getChild$1(idx + 1), true, true);
      else
        this._moveSelectionDown$2($parent, false);
    else if (sel.getChildCount$0() > 0)
      this._onSelection$3(sel.getChild$1(0), true, true);
  },
  _moveSelectionDown$2$bailout: function(state0, sel, dig, $parent, idx) {
    var t1;
    if (!dig || !sel.getState$0()) {
      t1 = $.getInterceptor$n(idx);
      if (t1.$lt(idx, $parent.getChildCount$0() - 1))
        this._onSelection$3($parent.getChild$1(t1.$add(idx, 1)), true, true);
      else
        this._moveSelectionDown$2($parent, false);
    } else if (sel.getChildCount$0() > 0)
      this._onSelection$3(sel.getChild$1(0), true, true);
  },
  _moveSelectionUp$1: function(sel) {
    var topClosedParent, $parent, idx, t1;
    topClosedParent = this._getTopClosedParent$1(sel);
    if (topClosedParent != null) {
      this._onSelection$3(topClosedParent, true, true);
      return;
    }
    $parent = sel.getParentItem$0();
    if ($parent == null)
      $parent = this._root;
    idx = $parent.getChildIndex$1(sel);
    t1 = $.getInterceptor$n(idx);
    if (t1.$gt(idx, 0))
      this._onSelection$3(this._findDeepestOpenChild$1($parent.getChild$1(t1.$sub(idx, 1))), true, true);
    else
      this._onSelection$3($parent, true, true);
  },
  _onSelection$3: function(item, fireEvents, moveFocus) {
    var t1;
    if ($.$eq(item, this._root) === true)
      return;
    t1 = this._curSelection;
    if (t1 != null)
      t1.setSelected$1(false);
    this._curSelection = item;
    if (this._curSelection != null) {
      if (moveFocus)
        this._moveFocus$0();
      this._curSelection.setSelected$1(true);
      if (fireEvents) {
        t1 = this._curSelection;
        $.get$SelectionEvent_TYPE();
        this.fireEvent$1($.SelectionEvent$(t1));
      }
    }
  },
  _setImages$2: function(images, useLeafImages) {
    var t1, image, size;
    this._images = images;
    this._useLeafImages = useLeafImages;
    if (!useLeafImages) {
      t1 = images._treeLeaf;
      image = $.Image$fromSafeUriAndMeasure(t1.url, t1.left, t1.top, t1.width, t1.height);
      $.set$visibility$x($.get$style$x(image._element), "hidden");
      $.add$1$ax($.RootPanel_get(null), image);
      size = $.$add$ns(image._liblib1$_state.getWidth$1(image), $.TreeItem_IMAGE_PAD);
      image.removeFromParent$0();
      this._indentValue = $.S(size) + "px";
    }
  },
  _showImage$2: function(treeItem, proto) {
    var holder, child, t1, t2, t3, t4, t5;
    if (treeItem._imageHolder == null)
      $.TreeItem__impl.convertToFullNode$1(treeItem);
    holder = treeItem._imageHolder;
    child = $.interceptedTypeCast(holder.firstElementChild, "$isImageElement");
    t1 = proto.url;
    t2 = proto.width;
    t3 = proto.height;
    t4 = proto.left;
    t5 = proto.top;
    if (child == null)
      holder.appendChild($.interceptedTypeCast($.get$ClippedImagePrototype__impl().createStructure$5(t1, t4, t5, t2, t3), "$isImageElement"));
    else
      $.get$ClippedImagePrototype__impl().adjust$6(child, t1, t4, t5, t2, t3);
  },
  _updateAriaAttributes$0: function() {
    var tempItem, tempItem0, curSelectionLevel, curSelectionParent;
    tempItem = this._curSelection;
    tempItem.getContentElem$0();
    for (tempItem0 = tempItem, curSelectionLevel = -1; tempItem0 != null;) {
      tempItem0 = tempItem0.getParentItem$0();
      ++curSelectionLevel;
    }
    curSelectionParent = tempItem.getParentItem$0();
    (curSelectionParent == null ? this._root : curSelectionParent).getChildIndex$1(tempItem);
  },
  Tree$2: function(resources, useLeafImages) {
    if (resources == null)
      this._init$2($._ImageAdapter$(null), useLeafImages);
    else
      this._init$2($._ImageAdapter$(resources), useLeafImages);
  },
  $isFocusable: true,
  $isHasWidgets: true
};

$$._TreeResources = {"": "Object;_resources,TREE_CLOSED,TREE_LEAF,TREE_OPEN",
  treeClosed$0: function() {
    var t1, t2;
    t1 = this._resources;
    t2 = this.TREE_CLOSED;
    if (t1.containsKey$1(t1, t2) !== true)
      t1.$indexSet(t1, t2, this._getTreeImageResourcePrototype$1(t2));
    return t1.$index(t1, t2);
  },
  treeLeaf$0: function() {
    var t1, t2;
    t1 = this._resources;
    t2 = this.TREE_LEAF;
    if (t1.containsKey$1(t1, t2) !== true)
      t1.$indexSet(t1, t2, this._getTreeImageResourcePrototype$1(t2));
    return t1.$index(t1, t2);
  },
  treeOpen$0: function() {
    var t1, t2;
    t1 = this._resources;
    t2 = this.TREE_OPEN;
    if (t1.containsKey$1(t1, t2) !== true)
      t1.$indexSet(t1, t2, this._getTreeImageResourcePrototype$1(t2));
    return t1.$index(t1, t2);
  },
  _getTreeImageResourcePrototype$1: function($name) {
    return $.ImageResourcePrototype$($name, $.SafeUriString$($.JSString_methods.$add($.JSString_methods.$add("src/packages/dart_web_toolkit/", "resource/images/"), $name)), 0, 0, 16, 16, false, false);
  }
};

$$._TreeSource = {"": "Object;",
  value$0: function(_) {
  },
  get$value: function(receiver) {
    return new $.BoundClosure$i0(this, "value$0", receiver);
  }
};

$$._ImageAdapter = {"": "Object;_treeClosed,_treeLeaf,_treeOpen",
  _ImageAdapter$1: function(resources) {
    if (resources == null)
      resources = $._TreeResources_DEFAULT_RESOURCES();
    this._treeClosed = $.AbstractImagePrototype_create(resources.treeClosed$0());
    this._treeLeaf = $.AbstractImagePrototype_create(resources.treeLeaf$0());
    this._treeOpen = $.AbstractImagePrototype_create(resources.treeOpen$0());
  }
};

$$.TreeItem = {"": "UiObject;_children,_contentElem,_childSpanElem,_imageHolder,isRoot,_open,_parent,_selected,_userObject,_liblib1$_tree,_widget,_element",
  addTextItem$1: function(itemText) {
    var ret = $.TreeItem$(null, false, $);
    ret.set$text(ret, itemText);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    this.insertItem$2(this.getChildCount$0(), ret);
    return ret;
  },
  getChild$1: function(index) {
    var t1;
    if (typeof index !== "number")
      return this.getChild$1$bailout(1, index);
    if (index < 0 || index >= this.getChildCount$0())
      return;
    t1 = this._children;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  getChild$1$bailout: function(state0, index) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, this.getChildCount$0()))
      return;
    t1 = this._children;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  getChildCount$0: function() {
    var t1 = this._children;
    if (t1 == null)
      return 0;
    return t1.length;
  },
  getChildIndex$1: function(child) {
    var t1 = this._children;
    if (t1 == null)
      return -1;
    return $.indexOf$1$asx(t1, child);
  },
  getParentItem$0: function() {
    return this._parent;
  },
  getState$0: function() {
    return this._open;
  },
  get$text: function(_) {
    return $.get$text$x(this._contentElem);
  },
  getTree$0: function() {
    return this._liblib1$_tree;
  },
  getUserObject$0: function() {
    return this._userObject;
  },
  getWidget$0: function() {
    return this._widget;
  },
  insertItem$2: function(beforeIndex, item) {
    var childCount, t1, margin, childContainer, beforeElem;
    if (item.getParentItem$0() != null || item.getTree$0() != null)
      item.remove$0(item);
    childCount = this.getChildCount$0();
    if (beforeIndex < 0 || beforeIndex > childCount)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds"));
    if (this._children == null)
      this.initChildren$0();
    t1 = this.isRoot;
    margin = t1 ? 0 : $.TreeItem__CHILD_MARGIN;
    $.get$LocaleInfo_instance();
    $.set$marginLeft$x($.get$style$x(item.getElement$0()), $.JSString_methods.$add($.JSNumber_methods.toString$0(margin), $.Unit_px.get$value($.Unit_px)));
    childContainer = t1 ? this._liblib1$_tree.getElement$0() : this._childSpanElem;
    if (beforeIndex === childCount)
      $.append$1$x(childContainer, item.getElement$0());
    else {
      beforeElem = this.getChild$1(beforeIndex).getElement$0();
      $.insertBefore$2$x(childContainer, item.getElement$0(), beforeElem);
    }
    item.setParentItem$1(t1 ? null : this);
    $.insert$2$ax(this._children, beforeIndex, item);
    item.setTree$1(this._liblib1$_tree);
    if (!t1 && this._children.length === 1)
      this.updateState$2(false, false);
  },
  remove$0: function(_) {
    var t1 = this._parent;
    if (t1 != null)
      t1.removeItem$1(t1, this);
    else {
      t1 = this._liblib1$_tree;
      if (t1 != null)
        $.removeItem$1$x(t1, this);
    }
  },
  removeItem$1: function(_, item) {
    var t1 = this._children;
    if (t1 == null || !$.contains$1$asx(t1, item))
      return;
    item.setTree$1(null);
    t1 = this.isRoot;
    if (t1)
      $.remove$0$ax(item.getElement$0());
    else
      $.remove$0$ax(item.getElement$0());
    item.setParentItem$1(null);
    $.remove$1$ax(this._children, item);
    if (!t1 && this._children.length === 0)
      this.updateState$2(false, false);
  },
  setSelected$1: function(selected) {
    if (this._selected === selected)
      return;
    this._selected = selected;
    $.UiObject_manageElementStyleName(this._contentElem, "dwt-TreeItem-selected", selected);
  },
  setState$2: function($open, fireEvents) {
    if ($open && this.getChildCount$0() === 0)
      return;
    if (this._open !== $open) {
      this._open = $open;
      this.updateState$2(true, true);
      if (fireEvents && this._liblib1$_tree != null)
        this._liblib1$_tree.fireStateChanged$2(this, $open);
    }
  },
  setState$1: function(open) {
    return this.setState$2(open, true);
  },
  set$text: function(_, val) {
    this.setWidget$1(null);
    $.set$text$x(this._contentElem, val);
  },
  setWidget$1: function(newWidget) {
    var t1, t2, t3;
    t1 = newWidget != null;
    if (t1)
      newWidget.removeFromParent$0();
    t2 = this._widget;
    if (t2 != null)
      try {
        t3 = this._liblib1$_tree;
        if (t3 != null)
          t3.orphan$1(t2);
      } finally {
        $.remove$0$ax(this._widget.getElement$0());
        this._widget = null;
      }
    $.set$innerHtml$x(this._contentElem, "");
    this._widget = newWidget;
    if (t1) {
      $.append$1$x(this._contentElem, newWidget.getElement$0());
      t1 = this._liblib1$_tree;
      if (t1 != null)
        t1.adopt$2(this._widget, this);
      if ($.Tree_shouldTreeDelegateFocusToElement(this._widget.getElement$0()))
        $.set$tabIndex$x(this._widget.getElement$0(), -1);
    }
  },
  getFocusable$0: function() {
    var w = this._widget;
    if (typeof w === "object" && w !== null && !!$.getInterceptor(w).$isFocusable)
      return w;
    return;
  },
  getContentElem$0: function() {
    return this._contentElem;
  },
  getImageElement$0: function() {
    if (this._imageHolder == null)
      $.TreeItem__impl.convertToFullNode$1(this);
    return this._imageHolder.firstElementChild;
  },
  initChildren$0: function() {
    $.TreeItem__impl.convertToFullNode$1(this);
    this._childSpanElem = document.createElement("div");
    $.append$1$x(this._element, this._childSpanElem);
    $.set$whiteSpace$x(this._childSpanElem.style, "nowrap");
    var t1 = $.List_List($, $.TreeItem);
    $.setRuntimeTypeInfo(t1, [$.TreeItem]);
    this._children = t1;
  },
  setParentItem$1: function($parent) {
    this._parent = $parent;
  },
  setTree$1: function(newTree) {
    var t1, n, i;
    if ($.$eq(this._liblib1$_tree, newTree) === true)
      return;
    t1 = this._liblib1$_tree;
    if (t1 != null) {
      if ($.$eq(t1.getSelectedItem$0(), this) === true)
        this._liblib1$_tree.setSelectedItem$1(null);
      t1 = this._widget;
      if (t1 != null)
        this._liblib1$_tree.orphan$1(t1);
    }
    this._liblib1$_tree = newTree;
    for (n = this.getChildCount$0(), i = 0; i < n; ++i) {
      t1 = this._children;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].setTree$1(newTree);
    }
    this.updateState$2(false, true);
    if (newTree != null) {
      t1 = this._widget;
      if (t1 != null)
        newTree.adopt$2(t1, this);
    }
  },
  updateState$2: function(animate, updateTreeSelection) {
    var t1, t2;
    t1 = this._liblib1$_tree;
    if (t1 == null || $.$eq(t1.isAttached$0(), false) === true)
      return;
    if (this.getChildCount$0() === 0) {
      t1 = this._childSpanElem;
      if (t1 != null) {
        t2 = t1.style;
        $.set$display$x(t2, "none");
        t1 = $.get$attributes$x(t1);
        t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
      }
      this._liblib1$_tree.showLeafImage$1(this);
      return;
    }
    if (animate) {
      t1 = this._liblib1$_tree;
      t1 = t1 != null && t1.isAttached$0() === true;
    } else
      t1 = false;
    if (t1)
      $.get$TreeItem__itemAnimation().setItemState$2(this, this._liblib1$_tree.isAnimationEnabled$0());
    else
      $.get$TreeItem__itemAnimation().setItemState$2(this, false);
    t1 = this._open;
    t2 = this._liblib1$_tree;
    if (t1)
      t2.showOpenImage$1(this);
    else
      t2.showClosedImage$1(this);
    if (updateTreeSelection)
      this._liblib1$_tree.maybeUpdateSelection$2(this, this._open);
  },
  updateStateRecursiveHelper$0: function() {
    var n, i, t1;
    this.updateState$2(false, false);
    for (n = this.getChildCount$0(), i = 0; i < n; ++i) {
      t1 = this._children;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].updateStateRecursiveHelper$0();
    }
  },
  TreeItem$3$html$isRoot$widget: function(html, isRoot, widget, widget_check) {
    var elem;
    if ($.TreeItem__impl == null)
      $.TreeItem__impl = $.TreeItemImpl$();
    elem = $.Dom_clone($.TreeItem__BASE_BARE_ELEM, true);
    this.setElement$1(elem);
    this._contentElem = $.Dom_getFirstChild(elem);
    $.Dom_setElementAttribute(this._contentElem, "id", $.Dom_createUniqueId());
    if (this.isRoot)
      this.initChildren$0();
    if (widget_check === true)
      this.setWidget$1(widget);
  }
};

$$.TreeItemImpl = {"": "Object;",
  convertToFullNode$1: function(item) {
    var itemTable, tdImg, tdContent;
    if (item._imageHolder == null) {
      itemTable = $.TreeItem__BASE_INTERNAL_ELEM.cloneNode(true);
      $.append$1$x(item._element, itemTable);
      tdImg = $.get$$$dom_firstElementChild$x(itemTable).firstElementChild.firstElementChild;
      tdContent = tdImg.nextElementSibling;
      $.set$padding$x($.get$style$x(item._element), "0px");
      tdContent.appendChild(item._contentElem);
      item._imageHolder = tdImg;
    }
  },
  initializeClonableElements$0: function() {
    var contentElem, tbody, tr, tdImg, tdContent;
    $.TreeItem__BASE_INTERNAL_ELEM = document.createElement("table");
    contentElem = document.createElement("div");
    tbody = $.createTBody$0$x($.interceptedTypeCast($.TreeItem__BASE_INTERNAL_ELEM, "$isTableElement"));
    tr = document.createElement("tr");
    tdImg = document.createElement("td");
    tdContent = document.createElement("td");
    $.TreeItem__BASE_INTERNAL_ELEM.appendChild(tbody);
    $.append$1$x(tbody, tr);
    tr.appendChild(tdImg);
    tr.appendChild(tdContent);
    $.set$verticalAlign$x(tdImg.style, "middle");
    $.set$verticalAlign$x(tdContent.style, "middle");
    tdContent.appendChild(contentElem);
    $.set$display$x(contentElem.style, "inline");
    contentElem.className = "dwt-TreeItem";
    $.set$whiteSpace$x($.TreeItem__BASE_INTERNAL_ELEM.style, "nowrap");
    $.TreeItem__BASE_BARE_ELEM = document.createElement("div");
    $.set$padding$x($.TreeItem__BASE_BARE_ELEM.style, "3px");
    $.TreeItem__BASE_BARE_ELEM.appendChild(contentElem);
  },
  TreeItemImpl$0: function() {
    this.initializeClonableElements$0();
  }
};

$$.TreeItemAnimation = {"": "Animation;_curItem,_opening,_scrollHeight,callback,duration,element,running,isStarted,requestHandle,runId,scheduler,startTime,wasStarted",
  setItemState$2: function(item, animate) {
    var t1, t2, t3;
    this.cancel$0(this);
    if (animate === true) {
      this._curItem = item;
      this._opening = item._open;
      this.run$1($.min($.TreeItem__ANIMATION_DURATION, $.TreeItem__ANIMATION_DURATION_PER_ITEM * this._curItem.getChildCount$0()));
    } else {
      t1 = item._childSpanElem;
      t2 = item._open;
      t3 = t1.style;
      $.set$display$x(t3, t2 ? "" : "none");
      t1 = $.get$attributes$x(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(!t2));
    }
  },
  onComplete$0: function(_) {
    var t1, t2;
    t1 = this._curItem;
    if (t1 != null) {
      t2 = this._opening;
      t1 = t1._childSpanElem;
      if (t2) {
        t2 = t1.style;
        $.set$display$x(t2, "");
        t1 = $.get$attributes$x(t1);
        t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
        this.onUpdate$1(1);
        $.setProperty$2$x(this._curItem._childSpanElem.style, "height", "auto");
      } else {
        t2 = t1.style;
        $.set$display$x(t2, "none");
        t1 = $.get$attributes$x(t1);
        t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(true));
      }
      $.setProperty$2$x(this._curItem._childSpanElem.style, "overflow", "visible");
      $.setProperty$2$x(this._curItem._childSpanElem.style, "width", "auto");
      this._curItem = null;
    }
  },
  onStart$0: function(_) {
    var t1, t2;
    this._scrollHeight = 0;
    if (!this._opening)
      this._scrollHeight = this._curItem._childSpanElem.scrollHeight;
    $.setProperty$2$x(this._curItem._childSpanElem.style, "overflow", "hidden");
    $.Animation.prototype.onStart$0.call(this, this);
    if (this._opening) {
      t1 = this._curItem._childSpanElem;
      t2 = t1.style;
      $.set$display$x(t2, "");
      t1 = $.get$attributes$x(t1);
      t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(false));
      this._scrollHeight = this._curItem._childSpanElem.scrollHeight;
    }
  },
  onUpdate$1: function(progress) {
    var t1, height, scrollWidth;
    t1 = this._scrollHeight;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    height = $.JSNumber_methods.toInt$0(progress * t1);
    if (!this._opening)
      height = $.$sub$n(this._scrollHeight, height);
    height = $.max(height, 1);
    $.set$height$x(this._curItem._childSpanElem.style, $.S(height) + " px");
    scrollWidth = $.Dom_getElementPropertyInt(this._curItem._childSpanElem, "scrollWidth");
    $.set$width$x(this._curItem._childSpanElem.style, $.S(scrollWidth) + " px");
  }
};

$$.UiObject = {"": "Object;_element<",
  get$visible: function(_) {
    return $.UiObject_isVisible(this.getElement$0());
  },
  set$visible: function(_, visible) {
    $.UiObject_setVisible(this.getElement$0(), visible);
  },
  setElement$1: function(elem) {
    this._element = elem;
  },
  getElement$0: function() {
    return this._element;
  },
  replaceElement$1: function(elem) {
    var t1 = this._element;
    if (t1 != null && $.get$parent$x(t1) != null)
      $.replaceWith$1$x(this._element, elem);
    this._element = elem;
  },
  get$title: function(_) {
    return $.get$title$x(this.getElement$0());
  },
  setHeight$1: function(height) {
    $.setProperty$2$x($.get$style$x(this._element), "height", height);
  },
  get$setHeight: function() {
    return new $.BoundClosure$1(this, "setHeight$1");
  },
  setWidth$1: function(width) {
    $.setProperty$2$x($.get$style$x(this._element), "width", width);
  },
  get$setWidth: function() {
    return new $.BoundClosure$1(this, "setWidth$1");
  },
  setSize$2: function(width, height) {
    this.setWidth$1(width);
    this.setHeight$1(height);
  },
  addStyleDependentName$1: function(styleSuffix) {
    var t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), styleSuffix);
    $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, true);
  },
  addStyleName$1: function(style) {
    $.UiObject_manageElementStyleName(this.getStyleElement$0(), style, true);
  },
  removeStyleDependentName$1: function(styleSuffix) {
    var t1 = $.JSString_methods.$add($.$add$ns($.UiObject_getElementStylePrimaryName(this.getStyleElement$0()), "-"), styleSuffix);
    $.UiObject_manageElementStyleName(this.getStyleElement$0(), t1, false);
  },
  removeStyleName$1: function(style) {
    $.UiObject_manageElementStyleName(this.getStyleElement$0(), style, false);
  },
  clearAndSetStyleName$1: function(style) {
    $.set$$$dom_className$x(this.getStyleElement$0(), style);
  },
  setStylePrimaryName$1: function(style) {
    var t1 = this.getStyleElement$0();
    if (t1 == null)
      $.throwExpression($._ExceptionImplementation$($.UiObject_NULL_HANDLE_MSG));
    style = $.JSString_methods.trim$0(style);
    if (style.length === 0)
      $.throwExpression($._ExceptionImplementation$($.UiObject_EMPTY_STYLENAME_MSG));
    $.UiObject__updatePrimaryAndDependentStyleNames(t1, style);
  },
  getStyleElement$0: function() {
    return this._element;
  },
  getAbsoluteLeft$0: function() {
    var t1 = this._element;
    return $.get$Dom_impl().getAbsoluteLeft$1(t1);
  },
  getAbsoluteTop$0: function() {
    var t1 = this._element;
    return $.get$Dom_impl().getAbsoluteTop$1(t1);
  },
  getOffsetHeight$0: function() {
    return $.get$height$x($.get$offset$x(this._element));
  },
  getOffsetWidth$0: function() {
    return $.get$width$x($.get$offset$x(this._element));
  },
  toString$0: function(_) {
    var t1 = this._element;
    if (t1 == null)
      return "(null handle)";
    return $.toString$0(t1);
  },
  sinkEvents$1: function(eventBitsToAdd) {
    var t1, t2, t3;
    t1 = this._element;
    t2 = $.get$Dom_impl()._getEventBits$1(t1);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = $.get$Dom_impl();
    if (!$.DomImpl_eventSystemIsInitialized) {
      t3.initEventSystem$0();
      $.DomImpl_eventSystemIsInitialized = true;
    }
    t3.sinkEventsImpl$2(t1, (eventBitsToAdd | t2) >>> 0);
  },
  $isUiObject: true
};

$$.ValueBox = {"": "ValueBoxBase;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  ValueBox$fromElement$3: function(element, renderer, parser) {
    this.enableDefaultDirectionEstimator$1(false);
    if ($.LocaleInfo_getCurrentLocale().isRTL$0())
      this.set$direction(this, $.Direction_LTR);
  },
  $asWidget: null,
  $asUiObject: null,
  $asFocusable: null
};

$$.ValueBoxBase = {"": "FocusWidget;_autoDirHandler,_parser,_renderer,_editor,_currentEvent,_valueChangeHandlerInitialized,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  get$direction: function(_) {
    return $.BidiUtils_getDirectionOnElement(this.getElement$0());
  },
  set$direction: function(_, val) {
    $.BidiUtils_setDirectionOnElement(this.getElement$0(), val);
  },
  enableDefaultDirectionEstimator$1: function(enabled) {
    var t1 = this._autoDirHandler;
    t1.setDirectionEstimator$1(enabled ? $.get$WordCountDirectionEstimator_instance() : null);
  },
  get$name: function(_) {
    return $.Dom_getElementProperty(this.getElement$0(), "name");
  },
  set$name: function(_, val) {
    $.Dom_setElementProperty(this.getElement$0(), "name", val);
  },
  get$text: function(_) {
    var t1 = this.getElement$0();
    if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isInputElement)
      return $.interceptedTypeCast(this.getElement$0(), "$isInputElement").value;
    else {
      t1 = this.getElement$0();
      if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isTextAreaElement)
        return $.interceptedTypeCast(this.getElement$0(), "$isTextAreaElement").value;
      else
        return $.Dom_getElementProperty(this.getElement$0(), "value");
    }
  },
  set$text: function(_, val) {
    var t1 = this.getElement$0();
    if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isInputElement) {
      t1 = $.interceptedTypeCast(this.getElement$0(), "$isInputElement");
      t1.value = val != null ? val : "";
    } else {
      t1 = this.getElement$0();
      if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isTextAreaElement) {
        t1 = $.interceptedTypeCast(this.getElement$0(), "$isTextAreaElement");
        t1.value = val != null ? val : "";
      } else {
        t1 = this.getElement$0();
        $.Dom_setElementProperty(t1, "value", val != null ? val : "");
      }
    }
    this._autoDirHandler.refreshDirection$0();
  },
  getValue$0: function() {
    var t1, exception;
    try {
      t1 = this.getValueOrThrow$0();
      return t1;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isException)
        return;
      else
        throw exception;
    }

  },
  getValueOrThrow$0: function() {
    var parseResult = this._parser.parse$1(this.get$text(this));
    if ($.$eq(this.get$text(this), "") === true)
      return;
    return parseResult;
  },
  onBrowserEvent$1: function($event) {
    if (($.get$Dom_impl().eventGetTypeInt$1($.get$type$x($event)) & 896) !== 0) {
      this._currentEvent = $event;
      $.Widget.prototype.onBrowserEvent$1.call(this, $event);
      this._currentEvent = null;
    } else
      $.Widget.prototype.onBrowserEvent$1.call(this, $event);
  },
  onLoad$0: function(_) {
    $.Widget.prototype.onLoad$0.call(this, this);
    this._autoDirHandler.refreshDirection$0();
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  ValueBoxBase$3: function(elem, renderer, parser) {
    this._autoDirHandler = $.AutoDirectionHandler_addToDefault(this, $.BidiPolicy_isBidiEnabled());
    this._renderer = renderer;
    this._parser = parser;
  },
  $asWidget: null,
  $asUiObject: null,
  $asFocusable: null
};

$$.ValueLabel = {"": "LabelBase;_renderer,_liblib1$_value,_editor,directionalTextHelper,_autoHorizontalAlignment,_horzAlign,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  getValue$0: function() {
    return this._liblib1$_value;
  },
  $asWidget: null,
  $asUiObject: null
};

$$.VerticalPanel = {"": "CellPanel;_horzAlign,_vertAlign,_spacing,_liblib1$_table,_body,_children,_orphanCommand,eventsToSink,_eventBus,_attached,_layoutData,_parent,_element",
  add$1: function(_, w) {
    var tr, td, t1;
    tr = document.createElement("tr");
    td = document.createElement("td");
    t1 = this._horzAlign;
    $.set$textAlign$x(td.style, t1.getTextAlignString$0());
    t1 = this._vertAlign;
    $.set$verticalAlign$x(td.style, t1.getVerticalAlignString$0());
    tr.appendChild(td);
    $.append$1$x(this._body, tr);
    w.removeFromParent$0();
    t1 = this._children;
    t1.insert$2(t1, w, t1._size);
    td.appendChild(w.getElement$0());
    w.setParent$1(this);
  },
  remove$1: function(_, w) {
    var td, removed;
    td = $.get$parent$x(w.getElement$0());
    removed = $.ComplexPanel.prototype.remove$1.call(this, this, w);
    if (removed)
      $.$$dom_removeChild$1$x(this._body, $.get$parent$x(td));
    return removed;
  },
  VerticalPanel$0: function() {
    $.Dom_setElementProperty(this.getTable$0(), "cellSpacing", "0");
    $.Dom_setElementProperty(this.getTable$0(), "cellPadding", "0");
  }
};

$$.Widget = {"": "UiObject;eventsToSink,_eventBus,_attached,_layoutData<,_parent,_element",
  onBrowserEvent$1: function($event) {
    var related, t1;
    switch ($.get$Dom_impl().eventGetTypeInt$1($.get$type$x($event))) {
      case 16:
      case 32:
        related = $.interceptedTypeCast($.get$relatedTarget$x($.interceptedTypeCast($event, "$isMouseEvent")), "$isElement");
        if (related != null) {
          t1 = this._element;
          $.get$Dom_impl();
          t1 = $.contains$1$asx(t1, related) === true;
        } else
          t1 = false;
        if (t1)
          return;
        break;
    }
    $.DomEvent_fireNativeEvent($event, this, this._element);
  },
  asWidget$0: function() {
    return this;
  },
  fireEvent$1: function($event) {
    var oldSource, e, t1, t2, exception;
    if (this._eventBus != null) {
      if ($event.get$_dead())
        $event.revive$0();
      oldSource = $.IEvent.prototype.getSource$0.call($event);
      $.IEvent.prototype.setSource$1.call($event, this._element);
      try {
        t1 = this._eventBus;
        t2 = this._element;
        t1._doFire$2($event, t2);
      } catch (exception) {
        t1 = $.unwrapException(exception);
        if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isUmbrellaException) {
          e = t1;
          t1 = $.UmbrellaException$(e.get$causes());
          throw $.wrapException(t1);
        } else
          throw exception;
      }
 finally {
        if (oldSource == null) {
          t1 = $event;
          t1.set$_dead(true);
          t1.set$_source(null);
        } else
          $.IEvent.prototype.setSource$1.call($event, oldSource);
      }
    }
  },
  addDomHandler$2: function(handler, type) {
    var t1, typeInt, t2, t3;
    t1 = type.eventName;
    typeInt = $.get$Dom_impl().eventGetTypeInt$1(t1);
    if (typeInt === -1) {
      t2 = this._element;
      t3 = $.get$Dom_impl();
      if (!$.DomImpl_eventSystemIsInitialized) {
        t3.initEventSystem$0();
        $.DomImpl_eventSystemIsInitialized = true;
      }
      t3._sinkBitlessEventImpl$2(t2, t1);
    } else
      this.sinkEvents$1(typeInt);
    t1 = this._eventBus;
    if (t1 == null) {
      t1 = $.SimpleEventBus$(null);
      this._eventBus = t1;
    }
    return t1._doAdd$3(type, $.get$SimpleEventBus__emptySource(), handler);
  },
  sinkEvents$1: function(eventBitsToAdd) {
    var t1 = this.eventsToSink;
    if (t1 === -1)
      $.UiObject.prototype.sinkEvents$1.call(this, t1);
    else
      this.eventsToSink = (t1 | eventBitsToAdd) >>> 0;
  },
  isAttached$0: function() {
    return this._attached;
  },
  getLayoutData$0: function() {
    return this.get$_layoutData();
  },
  setLayoutData$1: function(value) {
    this._layoutData = value;
  },
  getParent$0: function(_) {
    return this._parent;
  },
  setParent$1: function($parent) {
    var oldParent = this._parent;
    if ($parent == null)
      try {
        if (oldParent != null && oldParent.isAttached$0() === true)
          this.onDetach$0();
      } finally {
        this._parent = null;
      }
    else {
      if (oldParent != null)
        throw $.wrapException($._ExceptionImplementation$("Cannot set a new parent without first clearing the old parent"));
      this._parent = $parent;
      if ($parent.isAttached$0() === true)
        this.onAttach$0();
    }
  },
  removeFromParent$0: function() {
    var t1, t2;
    t1 = this._parent;
    t2 = t1 == null;
    if (t2) {
      t1 = $.get$RootPanel__widgetsToDetach();
      if (t1.contains$1(t1, this) === true)
        $.RootPanel_detachNow(this);
    } else if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isHasWidgets)
      t1.remove$1(t1, this);
    else if (!t2)
      throw $.wrapException($._ExceptionImplementation$("This widget's parent does not implement HasWidgets"));
  },
  replaceElement$1: function(elem) {
    var t1;
    if (this.isAttached$0() === true) {
      t1 = $.get$Dom_impl()._listener;
      t1.$indexSet(t1, this._element, null);
    }
    $.UiObject.prototype.replaceElement$1.call(this, elem);
    if (this.isAttached$0() === true) {
      t1 = $.get$Dom_impl()._listener;
      t1.$indexSet(t1, this._element, this);
    }
  },
  doAttachChildren$0: function() {
  },
  doDetachChildren$0: function() {
  },
  onAttach$0: function() {
    var t1, bitsToAdd;
    if (this.isAttached$0() === true)
      throw $.wrapException($._ExceptionImplementation$("Should only call onAttach when the widget is detached from the browser's document"));
    this._attached = true;
    t1 = $.get$Dom_impl()._listener;
    t1.$indexSet(t1, this._element, this);
    bitsToAdd = this.eventsToSink;
    this.eventsToSink = -1;
    if (bitsToAdd > 0)
      this.sinkEvents$1(bitsToAdd);
    this.doAttachChildren$0();
    this.onLoad$0(this);
    $.get$AttachEvent_TYPE();
    this.fireEvent$1($.AttachEvent$(true));
  },
  onLoad$0: function(_) {
  },
  get$onLoad: function(receiver) {
    return new $.BoundClosure$i0(this, "onLoad$0", receiver);
  },
  onDetach$0: function() {
    if (this.isAttached$0() !== true)
      throw $.wrapException($._ExceptionImplementation$("Should only call onDetach when the widget is attached to the browser's document"));
    try {
      this.onUnload$0(this);
      $.get$AttachEvent_TYPE();
      this.fireEvent$1($.AttachEvent$(false));
    } finally {
      try {
        this.doDetachChildren$0();
      } finally {
        var t1 = $.get$Dom_impl()._listener;
        t1.$indexSet(t1, this._element, null);
        this._attached = false;
      }
    }
  },
  onUnload$0: function(_) {
  },
  $isWidget: true
};

$$.WidgetCollection = {"": "Iterable;_liblib1$_array,_parent,_size",
  add$1: function(_, w) {
    this.insert$2(this, w, this._size);
  },
  contains$1: function(_, w) {
    return this.indexOf$1(this, w) !== -1;
  },
  indexOf$1: function(_, w) {
    var i, t1;
    for (i = 0; i < this._size; ++i) {
      t1 = this._liblib1$_array;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], w) === true)
        return i;
    }
    return -1;
  },
  insert$2: function(_, w, beforeIndex) {
    var t1, newArray, t2, t3, i, t4;
    if (typeof beforeIndex !== "number")
      return this.insert$2$bailout(1, w, beforeIndex);
    if (beforeIndex < 0 || beforeIndex > this._size)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBoundsException"));
    t1 = this._liblib1$_array.length;
    if (this._size === t1) {
      newArray = $.List_List(t1 * 2, $.Widget);
      $.setRuntimeTypeInfo(newArray, [$.Widget]);
      for (t1 = this._liblib1$_array, t2 = t1.length, t3 = newArray.length, i = 0; i < t2; ++i) {
        t4 = t1[i];
        if (i >= t3)
          throw $.ioore(i);
        newArray[i] = t4;
      }
      this._liblib1$_array = newArray;
    }
    this._size = this._size + 1;
    i = this._size - 1;
    if (i !== (i | 0))
      return this.insert$2$bailout(2, w, beforeIndex, i);
    t1 = this._liblib1$_array;
    t2 = t1.length;
    for (; i > beforeIndex; --i) {
      t3 = i - 1;
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t3 = t1[t3];
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1[i] = t3;
    }
    if (beforeIndex >>> 0 !== beforeIndex || beforeIndex >= t2)
      throw $.ioore(beforeIndex);
    t1[beforeIndex] = w;
  },
  insert$2$bailout: function(state0, w, beforeIndex, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$n(beforeIndex);
        if (t1.$lt(beforeIndex, 0) || t1.$gt(beforeIndex, this._size))
          throw $.wrapException($._ExceptionImplementation$("IndexOutOfBoundsException"));
        t1 = this._liblib1$_array.length;
        if (this._size === t1) {
          newArray = $.List_List(t1 * 2, $.Widget);
          $.setRuntimeTypeInfo(newArray, [$.Widget]);
          for (t1 = this._liblib1$_array, t2 = t1.length, t3 = newArray.length, i = 0; i < t2; ++i) {
            t4 = t1[i];
            if (i >= t3)
              throw $.ioore(i);
            newArray[i] = t4;
          }
          this._liblib1$_array = newArray;
        }
        this._size = this._size + 1;
        i = this._size - 1;
      case 2:
        var t1, newArray, t2, t3, t4;
        state0 = 0;
        t1 = this._liblib1$_array;
        t2 = t1.length;
        for (; $.JSNumber_methods.$gt(i, beforeIndex); --i) {
          t3 = i - 1;
          if (t3 >>> 0 !== t3 || t3 >= t2)
            throw $.ioore(t3);
          t3 = t1[t3];
          if (i >>> 0 !== i || i >= t2)
            throw $.ioore(i);
          t1[i] = t3;
        }
        if (beforeIndex >>> 0 !== beforeIndex || beforeIndex >= t2)
          throw $.ioore(beforeIndex);
        t1[beforeIndex] = w;
    }
  },
  get$iterator: function(_) {
    return $.WidgetIterator$(this);
  },
  remove$1: function(_, index) {
    var i, t1, t2, t3;
    if (index !== (index | 0))
      return this.remove$1$bailout(1, index);
    if (index < 0 || index >= this._size)
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds"));
    this._size = this._size - 1;
    for (i = index; t1 = this._size, t2 = this._liblib1$_array, t3 = t2.length, i < t1; ++i) {
      t1 = i + 1;
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t1 = t2[t1];
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      t2[i] = t1;
    }
    if (t1 >>> 0 !== t1 || t1 >= t3)
      throw $.ioore(t1);
    t2[t1] = null;
  },
  remove$1$bailout: function(state0, index) {
    var t1, i, t2, t3, t4;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, this._size))
      throw $.wrapException($._ExceptionImplementation$("IndexOutOfBounds"));
    this._size = this._size - 1;
    for (i = index; t1 = this._size, t2 = $.getInterceptor$n(i), t3 = t2.$lt(i, t1), t4 = this._liblib1$_array, t3; ++i) {
      t1 = t2.$add(i, 1);
      t2 = t4.length;
      if (t1 >>> 0 !== t1 || t1 >= t2)
        throw $.ioore(t1);
      t1 = t4[t1];
      if (i >>> 0 !== i || i >= t2)
        throw $.ioore(i);
      t4[i] = t1;
    }
    if (t1 >>> 0 !== t1 || t1 >= t4.length)
      throw $.ioore(t1);
    t4[t1] = null;
  },
  get$length: function(_) {
    return this._size;
  },
  get$isEmpty: function(_) {
    return this._size === 0;
  },
  forEach$1: function(_, f) {
    var i, t1;
    for (i = 0; i < this._size; ++i) {
      t1 = this._liblib1$_array;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$1(t1[i]);
    }
  },
  toList$1$growable: function(_, growable) {
    throw $.wrapException($.UnsupportedError$(""));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(_, index) {
    throw $.wrapException($.UnsupportedError$(""));
  },
  WidgetCollection$1: function(_parent) {
    var t1;
    this._parent = this._parent;
    t1 = $.List_List($.WidgetCollection__INITIAL_SIZE, $.Widget);
    $.setRuntimeTypeInfo(t1, [$.Widget]);
    this._liblib1$_array = t1;
  },
  $asIterable: function() { return [$.Widget]; }
};

$$.WidgetIterator = {"": "Object;_widgetCollection,index>",
  moveNext$0: function() {
    return this.index < this._widgetCollection._size - 1;
  },
  get$current: function() {
    return this._getCurrent$0();
  },
  _getCurrent$0: function() {
    var t1, t2;
    t1 = this.index;
    t2 = this._widgetCollection;
    if (t1 >= t2._size)
      throw $.wrapException($._ExceptionImplementation$("NoSuchElement"));
    t2 = t2._liblib1$_array;
    ++t1;
    this.index = t1;
    if (t1 >>> 0 !== t1 || t1 >= t2.length)
      throw $.ioore(t1);
    return t2[t1];
  },
  remove$0: function(_) {
    var t1, t2, t3;
    t1 = this.index;
    if (t1 < 0 || t1 >= this._widgetCollection._size)
      throw $.wrapException($._ExceptionImplementation$("IllegalState"));
    t2 = this._widgetCollection;
    t3 = t2._parent;
    t2 = t2._liblib1$_array;
    this.index = t1 - 1;
    if (t1 >>> 0 !== t1 || t1 >= t2.length)
      throw $.ioore(t1);
    t3.remove$1(t3, t2[t1]);
  },
  $isIterator: true,
  $asIterator: function() { return [$.Widget]; }
};

$$._WidgetsIterator = {"": "Object;_liblib1$_container,_contained,index>,last,widgetsWasCopied,widgets",
  _gotoNextIndex$0: function() {
    var t1, t2, t3;
    this.index = this.index + 1;
    for (t1 = this._contained; t2 = this.index, t3 = t1.length, t2 < t3;) {
      if (t2 >>> 0 !== t2 || t2 >= t3)
        throw $.ioore(t2);
      if (t1[t2] != null)
        return;
      this.index = t2 + 1;
    }
  },
  remove$0: function(_) {
    var t1, clone, t2, t3;
    if (this.last < 0)
      throw $.wrapException($._ExceptionImplementation$("IllegalState"));
    if (!this.widgetsWasCopied) {
      t1 = this.widgets;
      clone = $.List_List(t1.length, null);
      $.JSArray_methods.addAll$1(clone, t1);
      this.widgets = clone;
      this.widgetsWasCopied = true;
    }
    t1 = this._liblib1$_container;
    t2 = this._contained;
    t3 = this.last;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t1.remove$1(t1, t2[t3]);
    this.last = -1;
  },
  moveNext$0: function() {
    var t1, t2, result;
    t1 = this.index;
    t2 = this._contained;
    result = t1 < t2.length - 1;
    if (result) {
      if (!result)
        $.throwExpression($._ExceptionImplementation$("NoSuchElement"));
      this.last = t1;
      t1 = this.index;
      if (t1 !== (t1 | 0))
        return this.moveNext$0$bailout(1, t1, result, t2);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      this._gotoNextIndex$0();
    }
    return result;
  },
  moveNext$0$bailout: function(state0, t1, result, t2) {
    switch (state0) {
      case 0:
        t1 = this.index;
        t2 = this._contained;
        result = t1 < t2.length - 1;
      case 1:
        if (state0 === 1 || state0 === 0 && result)
          switch (state0) {
            case 0:
              if (!result)
                $.throwExpression($._ExceptionImplementation$("NoSuchElement"));
              this.last = t1;
              t1 = this.index;
            case 1:
              state0 = 0;
              if (t1 >>> 0 !== t1 || t1 >= t2.length)
                throw $.ioore(t1);
              this._gotoNextIndex$0();
          }
        return result;
    }
  },
  get$current: function() {
    var t1, t2;
    t1 = this._contained;
    t2 = this.index;
    if (t2 !== (t2 | 0))
      return this.get$current$bailout(1, t1, t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  get$current$bailout: function(state0, t1, t2) {
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _WidgetsIterator$2: function(_container, _contained, Widget) {
    this.widgets = this._contained;
    this._gotoNextIndex$0();
  },
  $isIterator: true
};

$$.AnimationType = {"": "Enum;_liblib2$_value"};

$$.Enum = {"": "Object;",
  get$value: function(_) {
    return this._liblib2$_value;
  }
};

$$.DockLayoutConstant = {"": "Enum;_liblib2$_value"};

$$.SafeHtmlString = {"": "Object;_html",
  asString$0: function() {
    return this._html;
  },
  $eq: function(_, obj) {
    if (obj == null)
      return false;
    if (typeof obj !== "object" || obj === null || !$.getInterceptor(obj).$isSafeHtml)
      return false;
    return $.$eq(this._html, obj.asString$0());
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._html);
  },
  SafeHtmlString$1: function(html) {
    if (html == null)
      throw $.wrapException($.Exception_Exception("html is null"));
    this._html = html;
  },
  $isSafeHtml: true
};

$$.SafeUriString = {"": "Object;_uri",
  asString$0: function() {
    return this._uri;
  },
  $eq: function(_, obj) {
    if (obj == null)
      return false;
    if (typeof obj !== "object" || obj === null || !$.getInterceptor(obj).$isSafeUri)
      return false;
    return $.$eq(obj.asString$0(), this._uri);
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._uri);
  },
  SafeUriString$1: function(_uri) {
  },
  $isSafeUri: true
};

$$.Display = {"": "Enum;_liblib2$_value"};

$$.Overflow = {"": "Enum;_liblib2$_value"};

$$.Position = {"": "Enum;_liblib2$_value"};

$$.Unit = {"": "Enum;_liblib2$_value"};

$$.WhiteSpace = {"": "Enum;_liblib2$_value"};

$$.TextAlign = {"": "Enum;_liblib2$_value"};

$$.Timer = {"": "Object;isRepeating,_timer,_liblib2$_callback",
  isRepeating$0: function() {
    return this.isRepeating.call$0();
  },
  _liblib2$_callback$0: function() {
    return this._liblib2$_callback.call$0();
  },
  cancel$0: function(_) {
    var t1, indx;
    t1 = this._timer;
    if (t1 != null) {
      if (this.isRepeating)
        t1.cancel$0(t1);
      else
        t1.cancel$0(t1);
      indx = $.JSArray_methods.indexOf$1($.get$Timer__timers(), this);
      if (indx !== -1)
        $.JSArray_methods.removeAt$1($.get$Timer__timers(), indx);
    }
  },
  fire$0: function() {
    if (!this.isRepeating) {
      var indx = $.JSArray_methods.indexOf$1($.get$Timer__timers(), this);
      if (indx !== -1)
        $.JSArray_methods.removeAt$1($.get$Timer__timers(), indx);
    }
    this._liblib2$_callback$0();
  }
};

$$.Timer_createInterval_anon = {"": "Closure;timer_0",
  call$1: function(t) {
    this.timer_0.fire$0();
  }
};

$$.Timer_createTimeout_anon = {"": "Closure;timer_0",
  call$0: function() {
    this.timer_0.fire$0();
  }
};

$$.Timer__hookWindowClosing_anon = {"": "Closure;",
  call$1: function($event) {
    var t1;
    for (; $.get$Timer__timers().length > 0;) {
      t1 = $.get$Timer__timers();
      if (0 >= t1.length)
        throw $.ioore(0);
      $.cancel$0$x(t1[0]);
    }
  }
};

$$.Cache = {"": "Object;_objectDefinitions,_configuration",
  get$configuration: function() {
    return this._configuration;
  },
  add$2: function(_, id, od) {
    var t1 = this._objectDefinitions;
    if (t1.containsKey$1(t1, id) === true)
      throw $.wrapException($.FoundDuplicateDefinitionException$("Found duplicate '" + $.S(id) + "' for object definition."));
    t1.$indexSet(t1, id, od);
    if ($.$eq(od.scope, "SINGLETON") === true && !od.isLazy)
      od.instance = this.get$configuration().create$2(id, od);
  },
  resolve$2: function(id, params) {
    var t1, od;
    t1 = this._objectDefinitions;
    if (t1.containsKey$1(t1, id) === true) {
      od = t1.$index(t1, id);
      if ($.$eq(od.get$scope(), "SINGLETON") === true) {
        if (od.get$instance() == null)
          od.set$instance(this.get$configuration().create$3(id, od, params));
        return od.get$instance();
      } else
        return this.get$configuration().create$3(id, od, params);
    } else
      throw $.wrapException($.DefinitionNotFoundException$("Object definition by '" + $.S(id) + "' was not found."));
  },
  resolve$1: function(id) {
    return this.resolve$2(id, null);
  }
};

$$.Configuration = {"": "Object;"};

$$.ConfigurationProcessor = {"": "Object;",
  get$configuration: function() {
    return this._configuration;
  },
  add$1: function(_, config) {
    this._process$1(config);
  },
  addAll$1: function(_, configs) {
    $.forEach$1$ax(configs, new $.ConfigurationProcessor_addAll_anon(this));
  }
};

$$.ConfigurationProcessor_addAll_anon = {"": "Closure;this_0",
  call$1: function(config) {
    return this.this_0._process$1(config);
  }
};

$$.Container = {"": "Object;_configuration",
  get$configuration: function() {
    return this._configuration;
  },
  add$1: function(_, config) {
    var t1, t2;
    t1 = this._configuration;
    if (typeof config === "object" && config !== null && !!$.getInterceptor(config).$isInCodeConfiguration) {
      t2 = t1._configurationProcessor;
      t2.$index(t2, t1.IN_CODE_CONFIGURATION)._process$1(config);
    } else
      $.throwExpression($.UnknownConfigurationTypeException$("Unknown configuration type '" + $.S($.toString$0(config))));
  },
  addAll$1: function(_, configs) {
    var t1 = this._configuration;
    t1.addAll$1(t1, configs);
  },
  resolve$2: function(id, params) {
    return this._configuration.get$cache().resolve$2(id, params);
  },
  resolve$1: function(id) {
    return this.resolve$2(id, null);
  },
  Container$1: function(_configuration) {
    if (this._configuration == null)
      this._configuration = $.DefaultContainerConfiguration$();
    this._configuration.set$container(this);
  }
};

$$.ContainerConfiguration = {"": "Object;",
  get$container: function() {
    return this._container;
  },
  set$container: function(value) {
    this._container = value;
    this._initialise$0();
  }
};

$$.DefinitionNotFoundException = {"": "Object;message",
  toString$0: function(_) {
    return "DefinitionNotFoundException: " + this.message;
  },
  $isException: true
};

$$.FoundDuplicateDefinitionException = {"": "Object;message",
  toString$0: function(_) {
    return "FoundDuplicateDefinitionException: " + this.message;
  },
  $isException: true
};

$$.UnknownObjectDefinitionTypeException = {"": "Object;message",
  toString$0: function(_) {
    return "UnknownObjectDefinitionTypeException: " + this.message;
  },
  $isException: true
};

$$.FoundDuplicateConfigurationObjectException = {"": "Object;message",
  toString$0: function(_) {
    return "FoundDuplicateConfigurationObjectException: " + this.message;
  },
  $isException: true
};

$$.ConfigurationObjectNotFoundException = {"": "Object;message",
  toString$0: function(_) {
    return "ConfigurationObjectNotFoundException: " + this.message;
  },
  $isException: true
};

$$.InvalidScopeException = {"": "Object;message",
  toString$0: function(_) {
    return "InvalidScopeException: " + this.message;
  },
  $isException: true
};

$$.UnknownConfigurationTypeException = {"": "Object;message",
  toString$0: function(_) {
    return "UnknownConfigurationTypeException: " + this.message;
  },
  $isException: true
};

$$.DefaultContainerConfiguration = {"": "ContainerConfiguration;IN_CODE_CONFIGURATION<,_configurationProcessor<,_cache,_objectFactories,_container",
  _initialise$0: function() {
    var t1, t2;
    this._configurationProcessor = $.HashMap$($.JSString, $.ConfigurationProcessor);
    t1 = this._configurationProcessor;
    t2 = this.IN_CODE_CONFIGURATION;
    t1.$indexSet(t1, t2, $.InCodeConfigurationProcessor$(this));
    this._cache = $.Cache$(this);
    this._objectFactories = $.HashMap$($.JSString, $.ObjectFactory);
    t1 = this._objectFactories;
    t1.$indexSet(t1, t2, $.InCodeObjectFactory$(this));
  },
  add$1: function(_, config) {
    var t1;
    if (typeof config === "object" && config !== null && !!$.getInterceptor(config).$isInCodeConfiguration) {
      t1 = this._configurationProcessor;
      t1.$index(t1, this.IN_CODE_CONFIGURATION)._process$1(config);
    } else
      throw $.wrapException($.UnknownConfigurationTypeException$("Unknown configuration type '" + $.S($.toString$0(config))));
  },
  addAll$1: function(_, configs) {
    $.forEach$1$ax(configs, new $.DefaultContainerConfiguration_addAll_anon(this));
  },
  get$cache: function() {
    return this._cache;
  },
  create$3: function(id, od, params) {
    var t1;
    if (typeof od === "object" && od !== null && !!$.getInterceptor(od).$isInCodeObjectDefinition) {
      t1 = this._objectFactories;
      return t1.$index(t1, this.IN_CODE_CONFIGURATION).create$3(id, od, params);
    } else
      throw $.wrapException($.UnknownObjectDefinitionTypeException$("Unknown type of ObjectDefinition: " + $.S($.toString$0(od))));
  },
  create$2: function(id, od) {
    return this.create$3(id, od, null);
  }
};

$$.DefaultContainerConfiguration_addAll_anon = {"": "Closure;this_0",
  call$1: function(config) {
    var t1, t2;
    t1 = this.this_0;
    if (typeof config === "object" && config !== null && !!$.getInterceptor(config).$isInCodeConfiguration) {
      t2 = t1.get$_configurationProcessor();
      t2.$index(t2, t1.get$IN_CODE_CONFIGURATION())._process$1(config);
    } else
      $.throwExpression($.UnknownConfigurationTypeException$("Unknown configuration type '" + $.S($.toString$0(config))));
  }
};

$$.InCodeConfiguration = {"": "Configuration;_inConfigs",
  add$5: function(_, id, caller, scope, positionalArguments, namedArguments) {
    var t1 = this._inConfigs;
    if (t1.containsKey$1(t1, id) === true)
      throw $.wrapException($.FoundDuplicateConfigurationObjectException$("Duplicate id '" + id + "'"));
    else if (scope === "SINGLETON" || scope === "PROTOTYPE")
      t1.$indexSet(t1, id, $._InstanceObject$(caller, scope, positionalArguments, namedArguments));
    else
      throw $.wrapException($.InvalidScopeException$("Invalid scope '" + scope + "'"));
  },
  add$2: function($receiver, id, caller) {
    return this.add$5($receiver, id, caller, "SINGLETON", null, null);
  },
  remove$1: function(_, id) {
    var t1 = this._inConfigs;
    if (t1.containsKey$1(t1, id) === true)
      t1.remove$1(t1, id);
    else
      throw $.wrapException($.ConfigurationObjectNotFoundException$("Id '" + $.S(id) + "' not found."));
  },
  get$objects: function() {
    return this._inConfigs;
  },
  $isInCodeConfiguration: true
};

$$._InstanceObject = {"": "Object;instanceFunction<,scope<,positionalArguments,namedArguments",
  instanceFunction$2: function(arg0, arg1) {
    return this.instanceFunction.call$2(arg0, arg1);
  }
};

$$.InCodeConfigurationProcessor = {"": "ConfigurationProcessor;_configuration",
  _process$1: function(config) {
    var t1 = config.get$objects();
    t1.forEach$1(t1, new $.InCodeConfigurationProcessor__process_anon(this));
  }
};

$$.InCodeConfigurationProcessor__process_anon = {"": "Closure;this_0",
  call$2: function(id, value) {
    var od, t1;
    od = $.InCodeObjectDefinition$();
    od.instanceFunction = value.get$instanceFunction();
    od.scope = value.get$scope();
    t1 = this.this_0.get$configuration().get$cache();
    t1.add$2(t1, id, od);
  }
};

$$.InCodeObjectDefinition = {"": "ObjectDefinition;instanceFunction<,namedArguments,scope,isLazy,instance",
  instanceFunction$2: function(arg0, arg1) {
    return this.instanceFunction.call$2(arg0, arg1);
  },
  $isInCodeObjectDefinition: true
};

$$.InCodeObjectFactory = {"": "ObjectFactory;_configuration",
  create$3: function(id, od, params) {
    if (params == null)
      params = $.makeLiteralMap([]);
    return od.instanceFunction$2(this.get$configuration().get$container(), params);
  }
};

$$.ObjectDefinition = {"": "Object;scope<,instance@"};

$$.ObjectFactory = {"": "Object;",
  get$configuration: function() {
    return this._configuration;
  }
};

// Native classes
$$._WorkerStub = {"": "Interceptor;",
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, i) {
    receiver.id = i;
  },
  set$onmessage: function(receiver, f) {
    receiver.onmessage = f;
  },
  postMessage$1: function(receiver, msg) {
    receiver.postMessage(msg);
  },
  terminate$0: function(receiver) {
    receiver.terminate();
  }
};

$$._HTMLElement = {"": "Element;"};

$$.AbstractWorker = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.AnchorElement = {"": "Element;hash%,href},name%,target=,type%",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.AnimationEvent = {"": "Event;"};

$$.ApplicationCache = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.AreaElement = {"": "Element;hash=,href},target="};

$$.Attr = {"": "Node;"};

$$.AudioElement = {"": "MediaElement;"};

$$.AutocompleteErrorEvent = {"": "Event;"};

$$.BRElement = {"": "Element;"};

$$.BarInfo = {"": "Interceptor;visible="};

$$.BaseElement = {"": "Element;href},target="};

$$.BeforeLoadEvent = {"": "Event;url="};

$$.Blob = {"": "Interceptor;type=", $isBlob: true, $asBlob: null};

$$.BodyElement = {"": "Element;",
  get$onBlur: function(receiver) {
    return $.EventStreamProvider_blur.forTarget$1(receiver);
  },
  onBlur$1: function($receiver, arg0) {
    return this.get$onBlur($receiver).call$1(arg0);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  },
  get$onResize: function(receiver) {
    return $.EventStreamProvider_resize.forTarget$1(receiver);
  },
  onResize$0: function($receiver) {
    return this.get$onResize($receiver).call$0();
  },
  $isBodyElement: true,
  $asBodyElement: null
};

$$.ButtonElement = {"": "Element;disabled%,name%,type%,value%"};

$$.CDataSection = {"": "Text;"};

$$.CanvasElement = {"": "Element;height%,width%"};

$$.CanvasGradient = {"": "Interceptor;"};

$$.CanvasPattern = {"": "Interceptor;"};

$$.CanvasProxy = {"": "Interceptor;"};

$$.CanvasRenderingContext = {"": "Interceptor;"};

$$.CanvasRenderingContext2D = {"": "CanvasRenderingContext;textAlign}"};

$$.CharacterData = {"": "Node;length="};

$$.CloseEvent0 = {"": "Event;"};

$$.Comment = {"": "CharacterData;"};

$$.CompositionEvent = {"": "UIEvent;"};

$$.ContentElement = {"": "Element;"};

$$.Coordinates = {"": "Interceptor;"};

$$.Crypto = {"": "Interceptor;"};

$$.CssCharsetRule = {"": "CssRule;"};

$$.CssFontFaceLoadEvent = {"": "Event;"};

$$.CssFontFaceRule = {"": "CssRule;style="};

$$.CssHostRule = {"": "CssRule;"};

$$.CssImportRule = {"": "CssRule;"};

$$.CssKeyframeRule = {"": "CssRule;style="};

$$.CssKeyframesRule = {"": "CssRule;name%"};

$$.CssMediaRule = {"": "CssRule;"};

$$.CssPageRule = {"": "CssRule;style="};

$$.CssRule = {"": "Interceptor;type="};

$$.CssStyleDeclaration = {"": "Interceptor;length=",
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = receiver.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      $.unwrapException(exception);
    }

  },
  setProperty$2: function($receiver, propertyName, value) {
    return this.setProperty$3($receiver, propertyName, value, null);
  },
  set$alignContent: function(receiver, value) {
    this.setProperty$3(receiver, $.S($.Device_cssPrefix()) + "align-content", value, "");
  },
  set$background: function(receiver, value) {
    this.setProperty$3(receiver, "background", value, "");
  },
  set$backgroundColor: function(receiver, value) {
    this.setProperty$3(receiver, "background-color", value, "");
  },
  set$border: function(receiver, value) {
    this.setProperty$3(receiver, "border", value, "");
  },
  set$borderStyle: function(receiver, value) {
    this.setProperty$3(receiver, "border-style", value, "");
  },
  set$borderWidth: function(receiver, value) {
    this.setProperty$3(receiver, "border-width", value, "");
  },
  get$bottom: function(receiver) {
    return this.getPropertyValue$1(receiver, "bottom");
  },
  set$bottom: function(receiver, value) {
    this.setProperty$3(receiver, "bottom", value, "");
  },
  set$clip: function(receiver, value) {
    this.setProperty$3(receiver, "clip", value, "");
  },
  get$display: function(receiver) {
    return this.getPropertyValue$1(receiver, "display");
  },
  set$display: function(receiver, value) {
    this.setProperty$3(receiver, "display", value, "");
  },
  set$fontSize: function(receiver, value) {
    this.setProperty$3(receiver, "font-size", value, "");
  },
  get$height: function(receiver) {
    return this.getPropertyValue$1(receiver, "height");
  },
  set$height: function(receiver, value) {
    this.setProperty$3(receiver, "height", value, "");
  },
  get$left: function(receiver) {
    return this.getPropertyValue$1(receiver, "left");
  },
  set$left: function(receiver, value) {
    this.setProperty$3(receiver, "left", value, "");
  },
  set$margin: function(receiver, value) {
    this.setProperty$3(receiver, "margin", value, "");
  },
  set$marginBottom: function(receiver, value) {
    this.setProperty$3(receiver, "margin-bottom", value, "");
  },
  set$marginLeft: function(receiver, value) {
    this.setProperty$3(receiver, "margin-left", value, "");
  },
  set$opacity: function(receiver, value) {
    this.setProperty$3(receiver, "opacity", value, "");
  },
  set$outline: function(receiver, value) {
    this.setProperty$3(receiver, "outline", value, "");
  },
  set$overflow: function(receiver, value) {
    this.setProperty$3(receiver, "overflow", value, "");
  },
  set$padding: function(receiver, value) {
    this.setProperty$3(receiver, "padding", value, "");
  },
  set$paddingLeft: function(receiver, value) {
    this.setProperty$3(receiver, "padding-left", value, "");
  },
  set$position: function(receiver, value) {
    this.setProperty$3(receiver, "position", value, "");
  },
  get$right: function(receiver) {
    return this.getPropertyValue$1(receiver, "right");
  },
  set$right: function(receiver, value) {
    this.setProperty$3(receiver, "right", value, "");
  },
  set$src: function(receiver, value) {
    this.setProperty$3(receiver, "src", value, "");
  },
  set$textAlign: function(receiver, value) {
    this.setProperty$3(receiver, "text-align", value, "");
  },
  get$top: function(receiver) {
    return this.getPropertyValue$1(receiver, "top");
  },
  set$top: function(receiver, value) {
    this.setProperty$3(receiver, "top", value, "");
  },
  set$verticalAlign: function(receiver, value) {
    this.setProperty$3(receiver, "vertical-align", value, "");
  },
  get$visibility: function(receiver) {
    return this.getPropertyValue$1(receiver, "visibility");
  },
  set$visibility: function(receiver, value) {
    this.setProperty$3(receiver, "visibility", value, "");
  },
  set$whiteSpace: function(receiver, value) {
    this.setProperty$3(receiver, "white-space", value, "");
  },
  get$width: function(receiver) {
    return this.getPropertyValue$1(receiver, "width");
  },
  set$width: function(receiver, value) {
    this.setProperty$3(receiver, "width", value, "");
  },
  set$zIndex: function(receiver, value) {
    this.setProperty$3(receiver, "z-index", value, "");
  },
  set$zoom: function(receiver, value) {
    this.setProperty$3(receiver, "zoom", value, "");
  }
};

$$.CssStyleRule = {"": "CssRule;style="};

$$.CssStyleSheet = {"": "StyleSheet;"};

$$.CssUnknownRule = {"": "CssRule;"};

$$.CustomElementConstructor = {"": "Interceptor;"};

$$.CustomEvent = {"": "Event;",
  $$dom_initCustomEvent$4: function(receiver, typeArg, canBubbleArg, cancelableArg, detailArg) {
    return receiver.initCustomEvent(typeArg, canBubbleArg, cancelableArg, detailArg);
  }
};

$$.DListElement = {"": "Element;"};

$$.DataListElement = {"": "Element;"};

$$.DataTransfer = {"": "Interceptor;"};

$$.DataTransferItem = {"": "Interceptor;type="};

$$.DataTransferItemList = {"": "Interceptor;length=",
  add$2: function(receiver, data_OR_file, type) {
    return receiver.add(data_OR_file, type);
  },
  add$1: function($receiver, data_OR_file) {
    return $receiver.add(data_OR_file);
  }
};

$$.DetailsElement = {"": "Element;"};

$$.DeviceAcceleration = {"": "Interceptor;x=,y="};

$$.DeviceMotionEvent = {"": "Event;"};

$$.DeviceOrientationEvent = {"": "Event;"};

$$.DeviceRotationRate = {"": "Interceptor;"};

$$.DialogElement = {"": "Element;"};

$$.DirectoryEntry = {"": "Entry;"};

$$.DirectoryReader = {"": "Interceptor;"};

$$.DivElement = {"": "Element;"};

$$.Document = {"": "Node;",
  register$2: function(receiver, $name, options) {
    var t1 = $ === options;
    if (t1)
      options = null;
    if (!t1)
      return receiver.webkitRegister($name, $.convertDartToNative_Dictionary(options));
    return receiver.webkitRegister($name);
  },
  get$onBlur: function(receiver) {
    return $.EventStreamProvider_blur.forTarget$1(receiver);
  },
  onBlur$1: function($receiver, arg0) {
    return this.get$onBlur($receiver).call$1(arg0);
  },
  get$onChange: function(receiver) {
    return $.EventStreamProvider_change.forTarget$1(receiver);
  },
  onChange$1: function($receiver, arg0) {
    return this.get$onChange($receiver).call$1(arg0);
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  onClick$1: function($receiver, arg0) {
    return this.get$onClick($receiver).call$1(arg0);
  },
  get$onDrag: function(receiver) {
    return $.EventStreamProvider_drag.forTarget$1(receiver);
  },
  get$onDragEnd: function(receiver) {
    return $.EventStreamProvider_dragend.forTarget$1(receiver);
  },
  get$onDragEnter: function(receiver) {
    return $.EventStreamProvider_dragenter.forTarget$1(receiver);
  },
  get$onDragLeave: function(receiver) {
    return $.EventStreamProvider_dragleave.forTarget$1(receiver);
  },
  get$onDragOver: function(receiver) {
    return $.EventStreamProvider_dragover.forTarget$1(receiver);
  },
  get$onDragStart: function(receiver) {
    return $.EventStreamProvider_dragstart.forTarget$1(receiver);
  },
  get$onDrop: function(receiver) {
    return $.EventStreamProvider_drop.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  onMouseDown$1: function($receiver, arg0) {
    return this.get$onMouseDown($receiver).call$1(arg0);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  onMouseMove$1: function($receiver, arg0) {
    return this.get$onMouseMove($receiver).call$1(arg0);
  },
  get$onMouseOut: function(receiver) {
    return $.EventStreamProvider_mouseout.forTarget$1(receiver);
  },
  onMouseOut$1: function($receiver, arg0) {
    return this.get$onMouseOut($receiver).call$1(arg0);
  },
  get$onMouseOver: function(receiver) {
    return $.EventStreamProvider_mouseover.forTarget$1(receiver);
  },
  onMouseOver$1: function($receiver, arg0) {
    return this.get$onMouseOver($receiver).call$1(arg0);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  },
  onMouseUp$1: function($receiver, arg0) {
    return this.get$onMouseUp($receiver).call$1(arg0);
  }
};

$$.DocumentFragment = {"": "Node;",
  get$children: function(receiver) {
    if (receiver._children == null)
      receiver._children = $.FilteredElementList$(receiver, null);
    return receiver._children;
  },
  get$innerHtml: function(receiver) {
    var e, t1;
    e = $.Element_Element$tag("div");
    t1 = $.getInterceptor$x(e);
    t1.append$1(e, this.clone$1(receiver, true));
    return t1.get$innerHtml(e);
  },
  set$innerHtml: function(receiver, value) {
    var t1, e, nodes;
    t1 = this.get$nodes(receiver);
    t1.clear$0(t1);
    e = $.Element_Element$tag("div");
    t1 = $.getInterceptor$x(e);
    t1.set$innerHtml(e, value);
    nodes = $.List_List$from(t1.get$nodes(e), true, null);
    t1 = this.get$nodes(receiver);
    t1.addAll$1(t1, nodes);
  }
};

$$.DocumentType = {"": "Node;"};

$$.DomError = {"": "Interceptor;name="};

$$.DomException = {"": "Interceptor;",
  get$name: function(receiver) {
    var errorName = receiver.name;
    if ($.Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.DomImplementation = {"": "Interceptor;"};

$$.DomMimeType = {"": "Interceptor;type="};

$$.DomMimeTypeArray = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.DomMimeType);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.DomMimeType);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.DomMimeType]; },
  $isIterable: true,
  $asIterable: function() { return [$.DomMimeType]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.DomNamedFlowCollection = {"": "Interceptor;length="};

$$.DomParser = {"": "Interceptor;"};

$$.DomPath = {"": "Interceptor;"};

$$.DomPlugin = {"": "Interceptor;length=,name="};

$$.DomPluginArray = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.DomPlugin);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.DomPlugin);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.DomPlugin]; },
  $isIterable: true,
  $asIterable: function() { return [$.DomPlugin]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.DomSecurityPolicy = {"": "Interceptor;"};

$$.DomSelection = {"": "Interceptor;type=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.DomSettableTokenList = {"": "DomTokenList;value%"};

$$.DomStringList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSString);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSString);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  contains$1: function(receiver, string) {
    return receiver.contains(string);
  },
  $isList: true,
  $asList: function() { return [$.JSString]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSString]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.DomTokenList = {"": "Interceptor;length=",
  contains$1: function(receiver, token) {
    return receiver.contains(token);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.Element = {"": "Node;$$dom_children:children=,dir%,id%,innerHtml:innerHTML%,tabIndex%,title=,$$dom_className:className%,$$dom_firstElementChild:firstElementChild=,nextElementSibling=,offsetParent=,scrollLeft=,scrollTop=,style=,tagName=",
  get$attributes: function(receiver) {
    return $._ElementAttributeMap$(receiver);
  },
  get$children: function(receiver) {
    return $._ChildrenElementList$_wrap(receiver);
  },
  get$dataset: function(receiver) {
    return $._DataAttributeMap$(this.get$attributes(receiver));
  },
  get$client: function(receiver) {
    return $.Rect$(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight);
  },
  get$offset: function(receiver) {
    return $.Rect$(receiver.offsetLeft, receiver.offsetTop, receiver.offsetWidth, receiver.offsetHeight);
  },
  scrollIntoView$1: function(receiver, alignment) {
    var hasScrollIntoViewIfNeeded = !!receiver.scrollIntoViewIfNeeded;
    if (hasScrollIntoViewIfNeeded)
      receiver.scrollIntoViewIfNeeded();
    else
      receiver.scrollIntoView();
  },
  scrollIntoView$0: function($receiver) {
    return this.scrollIntoView$1($receiver, null);
  },
  blur$0: function(receiver) {
    return receiver.blur();
  },
  get$blur: function(receiver) {
    return new $.BoundClosure$i0(this, "blur$0", receiver);
  },
  focus$0: function(receiver) {
    return receiver.focus();
  },
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  get$onBlur: function(receiver) {
    return $.EventStreamProvider_blur.forTarget$1(receiver);
  },
  onBlur$1: function($receiver, arg0) {
    return this.get$onBlur($receiver).call$1(arg0);
  },
  get$onChange: function(receiver) {
    return $.EventStreamProvider_change.forTarget$1(receiver);
  },
  onChange$1: function($receiver, arg0) {
    return this.get$onChange($receiver).call$1(arg0);
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  onClick$1: function($receiver, arg0) {
    return this.get$onClick($receiver).call$1(arg0);
  },
  get$onDrag: function(receiver) {
    return $.EventStreamProvider_drag.forTarget$1(receiver);
  },
  get$onDragEnd: function(receiver) {
    return $.EventStreamProvider_dragend.forTarget$1(receiver);
  },
  get$onDragEnter: function(receiver) {
    return $.EventStreamProvider_dragenter.forTarget$1(receiver);
  },
  get$onDragLeave: function(receiver) {
    return $.EventStreamProvider_dragleave.forTarget$1(receiver);
  },
  get$onDragOver: function(receiver) {
    return $.EventStreamProvider_dragover.forTarget$1(receiver);
  },
  get$onDragStart: function(receiver) {
    return $.EventStreamProvider_dragstart.forTarget$1(receiver);
  },
  get$onDrop: function(receiver) {
    return $.EventStreamProvider_drop.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  onMouseDown$1: function($receiver, arg0) {
    return this.get$onMouseDown($receiver).call$1(arg0);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  onMouseMove$1: function($receiver, arg0) {
    return this.get$onMouseMove($receiver).call$1(arg0);
  },
  get$onMouseOut: function(receiver) {
    return $.EventStreamProvider_mouseout.forTarget$1(receiver);
  },
  onMouseOut$1: function($receiver, arg0) {
    return this.get$onMouseOut($receiver).call$1(arg0);
  },
  get$onMouseOver: function(receiver) {
    return $.EventStreamProvider_mouseover.forTarget$1(receiver);
  },
  onMouseOver$1: function($receiver, arg0) {
    return this.get$onMouseOver($receiver).call$1(arg0);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  },
  onMouseUp$1: function($receiver, arg0) {
    return this.get$onMouseUp($receiver).call$1(arg0);
  },
  $isElement: true,
  $asElement: null
};

$$.EmbedElement = {"": "Element;height%,name%,src},type%,width%"};

$$.Entry = {"": "Interceptor;name=",
  _getParent$2: function(receiver, successCallback, errorCallback) {
    return receiver.getParent($.convertDartClosureToJS(successCallback, 1), $.convertDartClosureToJS(errorCallback, 1));
  },
  getParent$0: function(receiver) {
    var completer = $._CompleterImpl$();
    this._getParent$2(receiver, new $.Entry_getParent_anon(completer), new $.Entry_getParent_anon0(completer));
    return completer.future;
  },
  _remove$2: function(receiver, successCallback, errorCallback) {
    return receiver.remove($.convertDartClosureToJS(successCallback, 0), $.convertDartClosureToJS(errorCallback, 1));
  },
  remove$0: function(receiver) {
    var completer = $._CompleterImpl$();
    this._remove$2(receiver, new $.Entry_remove_anon(completer), new $.Entry_remove_anon0(completer));
    return completer.future;
  }
};

$$.ErrorEvent = {"": "Event;"};

$$.Event = {"": "Interceptor;cancelBubble},type=",
  get$currentTarget: function(receiver) {
    return $._convertNativeToDart_EventTarget(receiver.currentTarget);
  },
  get$target: function(receiver) {
    return $._convertNativeToDart_EventTarget(receiver.target);
  },
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  },
  stopPropagation$0: function(receiver) {
    return receiver.stopPropagation();
  }
};

$$.EventException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.EventSource = {"": "EventTarget;url=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onOpen: function(receiver) {
    return $.EventStreamProvider_open.forTarget$1(receiver);
  },
  onOpen$1: function($receiver, arg0) {
    return this.get$onOpen($receiver).call$1(arg0);
  }
};

$$.EventTarget = {"": "Interceptor;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.FieldSetElement = {"": "Element;disabled%,name%,type=", $isFieldSetElement: true, $asFieldSetElement: null};

$$.File = {"": "Blob;name=", $isFile: true, $asFile: null};

$$.FileEntry = {"": "Entry;"};

$$.FileError = {"": "Interceptor;"};

$$.FileException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.FileList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.File);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.File);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isFileList: true,
  $asFileList: null,
  $isList: true,
  $asList: function() { return [$.File]; },
  $isIterable: true,
  $asIterable: function() { return [$.File]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.FileReader = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  }
};

$$.FileSystem = {"": "Interceptor;name="};

$$.FileWriter = {"": "EventTarget;length=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  write$1: function(receiver, data) {
    return receiver.write(data);
  }
};

$$.FocusEvent = {"": "UIEvent;"};

$$.FontLoader = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  }
};

$$.FormData = {"": "Interceptor;"};

$$.FormElement = {"": "Element;length=,name%,target="};

$$.Gamepad = {"": "Interceptor;id=,index="};

$$.Geolocation = {"": "Interceptor;"};

$$.Geoposition = {"": "Interceptor;"};

$$.HRElement = {"": "Element;"};

$$.HashChangeEvent = {"": "Event;"};

$$.HeadElement = {"": "Element;"};

$$.HeadingElement = {"": "Element;"};

$$.History = {"": "Interceptor;length="};

$$.HtmlAllCollection = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Node);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.HtmlCollection = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Node);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.HtmlDocument = {"": "Document;",
  get$title: function(receiver) {
    return receiver.title;
  }
};

$$.HtmlElement = {"": "Element;"};

$$.HtmlFormControlsCollection = {"": "HtmlCollection;"};

$$.HtmlOptionsCollection = {"": "HtmlCollection;"};

$$.HttpRequest = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  send$1: function(receiver, data) {
    return receiver.send(data);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  }
};

$$.HttpRequestException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.HttpRequestProgressEvent = {"": "ProgressEvent;"};

$$.HttpRequestUpload = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  }
};

$$.IFrameElement = {"": "Element;height%,name%,src},width%", $isIFrameElement: true, $asIFrameElement: null};

$$.ImageData = {"": "Interceptor;height=,width=", $isImageData: true, $asImageData: null};

$$.ImageElement = {"": "Element;border},height%,src},width%,x=,y=", $isImageElement: true, $asImageElement: null};

$$.InputElement = {"": "Element;checked%,defaultChecked%,disabled%,height%,name%,src},type%,value%,width%", $isInputElement: true, $asInputElement: null, $isElement: true, $asElement: null, $isNode: true, $asNode: null};

$$.KeyboardEvent = {"": "UIEvent;altKey=,ctrlKey=,metaKey=,shiftKey=",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  },
  get$charCode: function(receiver) {
    return receiver.charCode;
  },
  $isKeyboardEvent: true,
  $asKeyboardEvent: null
};

$$.KeygenElement = {"": "Element;disabled%,name%,type="};

$$.LIElement = {"": "Element;type%,value%"};

$$.LabelElement = {"": "Element;htmlFor}"};

$$.LegendElement = {"": "Element;"};

$$.LinkElement = {"": "Element;disabled%,href},type%"};

$$.LocalMediaStream = {"": "MediaStream;"};

$$.Location = {"": "Interceptor;hash%",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  $isLocation: true,
  $asLocation: null
};

$$.MapElement = {"": "Element;name%"};

$$.MediaController = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaElement = {"": "Element;src}"};

$$.MediaError = {"": "Interceptor;"};

$$.MediaKeyError = {"": "Interceptor;"};

$$.MediaKeyEvent = {"": "Event;"};

$$.MediaList = {"": "Interceptor;length="};

$$.MediaQueryList = {"": "Interceptor;"};

$$.MediaSource = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStream = {"": "EventTarget;id=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStreamEvent = {"": "Event;"};

$$.MediaStreamTrack = {"": "EventTarget;enabled=,id=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStreamTrackEvent = {"": "Event;"};

$$.MemoryInfo = {"": "Interceptor;"};

$$.MenuElement = {"": "Element;"};

$$.MessageChannel = {"": "Interceptor;"};

$$.MessageEvent = {"": "Event;"};

$$.MessagePort = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  postMessage$2: function(receiver, message, messagePorts) {
    var t1 = $ === messagePorts;
    if (t1)
      messagePorts = null;
    if (!t1) {
      receiver.postMessage($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
      return;
    }
    receiver.postMessage($._convertDartToNative_PrepareForStructuredClone(message));
    return;
  },
  postMessage$1: function($receiver, message) {
    return this.postMessage$2($receiver, message, $);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MetaElement = {"": "Element;name%"};

$$.Metadata = {"": "Interceptor;"};

$$.MeterElement = {"": "Element;value%"};

$$.ModElement = {"": "Element;"};

$$.MouseEvent = {"": "UIEvent;altKey=,button=,ctrlKey=,metaKey=,shiftKey=",
  get$relatedTarget: function(receiver) {
    return $._convertNativeToDart_EventTarget(receiver.relatedTarget);
  },
  get$client: function(receiver) {
    return $.Point$(receiver.clientX, receiver.clientY);
  },
  get$offset: function(receiver) {
    var target, t1;
    if (!!receiver.offsetX)
      return $.Point$(receiver.offsetX, receiver.offsetY);
    else {
      target = this.get$target(receiver);
      if (typeof target !== "object" || target === null || !$.getInterceptor(target).$isElement)
        throw $.wrapException($.UnsupportedError$("offsetX is only supported on elements"));
      t1 = this.get$client(receiver);
      t1 = t1.$sub(t1, $.get$topLeft$x($.getBoundingClientRect$0$x(this.get$target(receiver))));
      return t1.toInt$0(t1);
    }
  },
  $isMouseEvent: true,
  $asMouseEvent: null
};

$$.MutationEvent = {"": "Event;"};

$$.MutationObserver = {"": "Interceptor;"};

$$.MutationRecord = {"": "Interceptor;target=,type="};

$$.NamedFlow = {"": "EventTarget;name=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.Navigator = {"": "Interceptor;"};

$$.NavigatorUserMediaError = {"": "Interceptor;"};

$$.Node = {"": "EventTarget;$$dom_firstChild:firstChild=,$$dom_lastChild:lastChild=,nodeType=,document:ownerDocument=,parent:parentElement=,parentNode=,text:textContent%",
  get$nodes: function(receiver) {
    return $._ChildNodeListLazy$(receiver);
  },
  remove$0: function(receiver) {
    var t1 = receiver.parentNode;
    if (t1 != null)
      t1.removeChild(receiver);
  },
  replaceWith$1: function(receiver, otherNode) {
    var $parent, exception;
    try {
      $parent = receiver.parentNode;
      $.$$dom_replaceChild$2$x($parent, otherNode, receiver);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return receiver;
  },
  toString$0: function(receiver) {
    var t1 = receiver.localName;
    if (t1 == null) {
      t1 = receiver.nodeValue;
      if (t1 == null)
        t1 = $.Interceptor.prototype.toString$0.call(this, receiver);
    }
    return t1;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  append$1: function(receiver, newChild) {
    return receiver.appendChild(newChild);
  },
  clone$1: function(receiver, deep) {
    return receiver.cloneNode(deep);
  },
  contains$1: function(receiver, other) {
    return receiver.contains(other);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  insertBefore$2: function(receiver, newChild, refChild) {
    return receiver.insertBefore(newChild, refChild);
  },
  $$dom_removeChild$1: function(receiver, oldChild) {
    return receiver.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild, oldChild);
  },
  $isNode: true,
  $asNode: null
};

$$.NodeFilter = {"": "Interceptor;"};

$$.NodeIterator = {"": "Interceptor;"};

$$.NodeList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Node);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Notation = {"": "Node;"};

$$.Notification = {"": "EventTarget;dir%",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  cancel$0: function(receiver) {
    return receiver.cancel();
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  onClick$1: function($receiver, arg0) {
    return this.get$onClick($receiver).call$1(arg0);
  },
  get$onClose: function(receiver) {
    return $.EventStreamProvider_close.forTarget$1(receiver);
  },
  onClose$1: function($receiver, arg0) {
    return this.get$onClose($receiver).call$1(arg0);
  }
};

$$.NotificationCenter = {"": "Interceptor;"};

$$.OListElement = {"": "Element;type%"};

$$.ObjectElement = {"": "Element;height%,name%,type%,width%"};

$$.OptGroupElement = {"": "Element;disabled%"};

$$.OptionElement = {"": "Element;disabled%,index=,value%", $isOptionElement: true, $asOptionElement: null};

$$.OutputElement = {"": "Element;name%,type=,value%"};

$$.OverflowEvent = {"": "Event;"};

$$.PageTransitionEvent = {"": "Event;"};

$$.ParagraphElement = {"": "Element;"};

$$.ParamElement = {"": "Element;name%,value%"};

$$.Performance = {"": "EventTarget;"};

$$.PerformanceEntry = {"": "Interceptor;name="};

$$.PerformanceEntryList = {"": "Interceptor;length="};

$$.PerformanceMark = {"": "PerformanceEntry;"};

$$.PerformanceMeasure = {"": "PerformanceEntry;"};

$$.PerformanceNavigation = {"": "Interceptor;type="};

$$.PerformanceResourceTiming = {"": "PerformanceEntry;"};

$$.PerformanceTiming = {"": "Interceptor;"};

$$.PopStateEvent = {"": "Event;"};

$$.PositionError = {"": "Interceptor;"};

$$.PreElement = {"": "Element;"};

$$.ProcessingInstruction = {"": "Node;target="};

$$.ProgressElement = {"": "Element;value%"};

$$.ProgressEvent = {"": "Event;"};

$$.QuoteElement = {"": "Element;"};

$$.Range = {"": "Interceptor;",
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.RangeException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.RtcDataChannel = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  send$1: function(receiver, data) {
    return receiver.send(data);
  },
  get$onClose: function(receiver) {
    return $.EventStreamProvider_close.forTarget$1(receiver);
  },
  onClose$1: function($receiver, arg0) {
    return this.get$onClose($receiver).call$1(arg0);
  },
  get$onOpen: function(receiver) {
    return $.EventStreamProvider_open.forTarget$1(receiver);
  },
  onOpen$1: function($receiver, arg0) {
    return this.get$onOpen($receiver).call$1(arg0);
  }
};

$$.RtcDataChannelEvent = {"": "Event;"};

$$.RtcDtmfSender = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.RtcDtmfToneChangeEvent = {"": "Event;"};

$$.RtcIceCandidate = {"": "Interceptor;"};

$$.RtcIceCandidateEvent = {"": "Event;"};

$$.RtcPeerConnection = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.RtcSessionDescription = {"": "Interceptor;type%"};

$$.RtcStatsReport = {"": "Interceptor;id=,type="};

$$.RtcStatsResponse = {"": "Interceptor;"};

$$.Screen = {"": "Interceptor;height=,width=",
  get$available: function(receiver) {
    return $.Rect$(receiver.availLeft, receiver.availTop, receiver.availWidth, receiver.availHeight);
  }
};

$$.ScriptElement = {"": "Element;htmlFor},src},type%"};

$$.ScriptProfile = {"": "Interceptor;title="};

$$.ScriptProfileNode = {"": "Interceptor;url=,visible=",
  children$0: function(receiver) {
    return receiver.children();
  },
  get$children: function(receiver) {
    return new $.BoundClosure$i0(this, "children$0", receiver);
  }
};

$$.SecurityPolicyViolationEvent = {"": "Event;"};

$$.SelectElement = {"": "Element;disabled%,length=,name%,type=,value%",
  get$options: function(receiver) {
    var t1 = this.get$children(receiver);
    t1 = t1.where$1(t1, new $.SelectElement_options_anon());
    return $.UnmodifiableListView$(t1.toList$0(t1), null);
  },
  $isSelectElement: true,
  $asSelectElement: null
};

$$.ShadowElement = {"": "Element;"};

$$.ShadowRoot = {"": "DocumentFragment;innerHtml:innerHTML%",
  clone$1: function(receiver, deep) {
    return receiver.cloneNode(deep);
  }
};

$$.SourceBuffer = {"": "Interceptor;",
  append$1: function(receiver, data) {
    return receiver.append(data);
  }
};

$$.SourceBufferList = {"": "EventTarget;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.SourceBuffer);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.SourceBuffer);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isList: true,
  $asList: function() { return [$.SourceBuffer]; },
  $isIterable: true,
  $asIterable: function() { return [$.SourceBuffer]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SourceElement = {"": "Element;src},type%"};

$$.SpanElement = {"": "Element;"};

$$.SpeechGrammar = {"": "Interceptor;src}"};

$$.SpeechGrammarList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.SpeechGrammar);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.SpeechGrammar);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.SpeechGrammar]; },
  $isIterable: true,
  $asIterable: function() { return [$.SpeechGrammar]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SpeechInputEvent = {"": "Event;"};

$$.SpeechInputResult = {"": "Interceptor;"};

$$.SpeechRecognition = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.SpeechRecognitionAlternative = {"": "Interceptor;"};

$$.SpeechRecognitionError = {"": "Event;"};

$$.SpeechRecognitionEvent = {"": "Event;"};

$$.SpeechRecognitionResult = {"": "Interceptor;length="};

$$.Storage = {"": "Interceptor;",
  containsKey$1: function(receiver, key) {
    return receiver.getItem(key) != null;
  },
  $index: function(receiver, key) {
    return receiver.getItem(key);
  },
  $indexSet: function(receiver, key, value) {
    receiver.setItem(key, value);
  },
  remove$1: function(receiver, key) {
    var value = receiver.getItem(key);
    receiver.removeItem(key);
    return value;
  },
  forEach$1: function(receiver, f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = receiver.key(i);
      if (key == null)
        return;
      f.call$2(key, receiver.getItem(key));
    }
  },
  get$keys: function(receiver) {
    var keys = [];
    this.forEach$1(receiver, new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function(receiver) {
    var values = [];
    this.forEach$1(receiver, new $.Storage_values_anon(values));
    return values;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  get$isEmpty: function(receiver) {
    return receiver.key(0) == null;
  },
  $isMap: true,
  $asMap: function() { return [$.JSString, $.JSString]; }
};

$$.StorageEvent = {"": "Event;url="};

$$.StorageInfo = {"": "Interceptor;"};

$$.StorageQuota = {"": "Interceptor;"};

$$.StyleElement = {"": "Element;disabled%,type%"};

$$.StyleMedia = {"": "Interceptor;type="};

$$.StyleSheet = {"": "Interceptor;disabled%,title=,type="};

$$.TableCaptionElement = {"": "Element;"};

$$.TableCellElement = {"": "Element;"};

$$.TableColElement = {"": "Element;"};

$$.TableElement = {"": "Element;border}",
  get$rows: function(receiver) {
    return $._WrappedList$(receiver.rows, $.TableRowElement);
  },
  createTBody$0: function(receiver) {
    return this.$$dom_createTBody$0(receiver);
  },
  $$dom_createTBody$0: function(receiver) {
    var tbody;
    if (!!receiver.createTBody)
      return receiver.createTBody();
    tbody = document.createElement("tbody");
    this.get$children(receiver)._liblib3$_element.appendChild(tbody);
    return tbody;
  },
  $isTableElement: true,
  $asTableElement: null
};

$$.TableRowElement = {"": "Element;",
  get$cells: function(receiver) {
    return $._WrappedList$(receiver.cells, $.TableCellElement);
  },
  $isTableRowElement: true,
  $asTableRowElement: null
};

$$.TableSectionElement = {"": "Element;",
  get$rows: function(receiver) {
    return $._WrappedList$(receiver.rows, $.TableRowElement);
  }
};

$$.TemplateElement = {"": "Element;"};

$$.Text = {"": "CharacterData;"};

$$.TextAreaElement = {"": "Element;disabled%,name%,rows=,type=,value%", $isTextAreaElement: true, $asTextAreaElement: null};

$$.TextEvent = {"": "UIEvent;"};

$$.TextMetrics = {"": "Interceptor;width="};

$$.TextTrack = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.TextTrackCue = {"": "EventTarget;id%,position},text%",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.TextTrackCueList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.TextTrackCue);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.TextTrackCue);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $asList: function() { return [$.TextTrackCue]; },
  $isIterable: true,
  $asIterable: function() { return [$.TextTrackCue]; }
};

$$.TextTrackList = {"": "EventTarget;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.TextTrack);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.TextTrack);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isList: true,
  $asList: function() { return [$.TextTrack]; },
  $isIterable: true,
  $asIterable: function() { return [$.TextTrack]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.TimeRanges = {"": "Interceptor;length="};

$$.TitleElement = {"": "Element;"};

$$.Touch = {"": "Interceptor;",
  get$target: function(receiver) {
    return $._convertNativeToDart_EventTarget(receiver.target);
  },
  get$client: function(receiver) {
    return $.Point$(receiver.clientX, receiver.clientY);
  }
};

$$.TouchEvent = {"": "UIEvent;altKey=,ctrlKey=,metaKey=,shiftKey="};

$$.TouchList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Touch);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Touch);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Touch]; },
  $isIterable: true,
  $asIterable: function() { return [$.Touch]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.TrackElement = {"": "Element;src}"};

$$.TrackEvent = {"": "Event;"};

$$.TransitionEvent = {"": "Event;"};

$$.TreeWalker = {"": "Interceptor;",
  parentNode$0: function(receiver) {
    return receiver.parentNode();
  },
  get$parentNode: function(receiver) {
    return new $.BoundClosure$i0(this, "parentNode$0", receiver);
  }
};

$$.UIEvent = {"": "Event;"};

$$.UListElement = {"": "Element;"};

$$.UnknownElement = {"": "Element;"};

$$.Url = {"": "Interceptor;"};

$$.ValidityState = {"": "Interceptor;"};

$$.VideoElement = {"": "MediaElement;height%,width%"};

$$.WebKitCssFilterRule = {"": "CssRule;style="};

$$.WebKitCssRegionRule = {"": "CssRule;"};

$$.WebSocket = {"": "EventTarget;url=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  send$1: function(receiver, data) {
    return receiver.send(data);
  },
  get$onClose: function(receiver) {
    return $.EventStreamProvider_close.forTarget$1(receiver);
  },
  onClose$1: function($receiver, arg0) {
    return this.get$onClose($receiver).call$1(arg0);
  },
  get$onOpen: function(receiver) {
    return $.EventStreamProvider_open.forTarget$1(receiver);
  },
  onOpen$1: function($receiver, arg0) {
    return this.get$onOpen($receiver).call$1(arg0);
  }
};

$$.WheelEvent = {"": "MouseEvent;"};

$$.Window = {"": "EventTarget;name%",
  get$document: function(receiver) {
    return receiver.document;
  },
  get$location: function(receiver) {
    var result = this.get$_location(receiver);
    if ($.Window__isDartLocation(result) === true)
      return result;
    if (null == receiver._location_wrapper)
      receiver._location_wrapper = $._LocationWrapper$(result);
    return receiver._location_wrapper;
  },
  get$_location: function(receiver) {
    return receiver.location;
  },
  requestAnimationFrame$1: function(receiver, callback) {
    this._ensureRequestAnimationFrame$0(receiver);
    return this._requestAnimationFrame$1(receiver, callback);
  },
  get$requestAnimationFrame: function(receiver) {
    return new $.BoundClosure$i1(this, "requestAnimationFrame$1", receiver);
  },
  cancelAnimationFrame$1: function(receiver, id) {
    this._ensureRequestAnimationFrame$0(receiver);
    receiver.cancelAnimationFrame(id);
  },
  get$cancelAnimationFrame: function(receiver) {
    return new $.BoundClosure$i1(this, "cancelAnimationFrame$1", receiver);
  },
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  get$parent: function(receiver) {
    return $._convertNativeToDart_Window(receiver.parent);
  },
  get$top: function(receiver) {
    return $._convertNativeToDart_Window(receiver.top);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  get$onBlur: function(receiver) {
    return $.EventStreamProvider_blur.forTarget$1(receiver);
  },
  onBlur$1: function($receiver, arg0) {
    return this.get$onBlur($receiver).call$1(arg0);
  },
  get$onChange: function(receiver) {
    return $.EventStreamProvider_change.forTarget$1(receiver);
  },
  onChange$1: function($receiver, arg0) {
    return this.get$onChange($receiver).call$1(arg0);
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  onClick$1: function($receiver, arg0) {
    return this.get$onClick($receiver).call$1(arg0);
  },
  get$onDrag: function(receiver) {
    return $.EventStreamProvider_drag.forTarget$1(receiver);
  },
  get$onDragEnd: function(receiver) {
    return $.EventStreamProvider_dragend.forTarget$1(receiver);
  },
  get$onDragEnter: function(receiver) {
    return $.EventStreamProvider_dragenter.forTarget$1(receiver);
  },
  get$onDragLeave: function(receiver) {
    return $.EventStreamProvider_dragleave.forTarget$1(receiver);
  },
  get$onDragOver: function(receiver) {
    return $.EventStreamProvider_dragover.forTarget$1(receiver);
  },
  get$onDragStart: function(receiver) {
    return $.EventStreamProvider_dragstart.forTarget$1(receiver);
  },
  get$onDrop: function(receiver) {
    return $.EventStreamProvider_drop.forTarget$1(receiver);
  },
  get$onHashChange: function(receiver) {
    return $.EventStreamProvider_hashchange.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  onMouseDown$1: function($receiver, arg0) {
    return this.get$onMouseDown($receiver).call$1(arg0);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  onMouseMove$1: function($receiver, arg0) {
    return this.get$onMouseMove($receiver).call$1(arg0);
  },
  get$onMouseOut: function(receiver) {
    return $.EventStreamProvider_mouseout.forTarget$1(receiver);
  },
  onMouseOut$1: function($receiver, arg0) {
    return this.get$onMouseOut($receiver).call$1(arg0);
  },
  get$onMouseOver: function(receiver) {
    return $.EventStreamProvider_mouseover.forTarget$1(receiver);
  },
  onMouseOver$1: function($receiver, arg0) {
    return this.get$onMouseOver($receiver).call$1(arg0);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  },
  onMouseUp$1: function($receiver, arg0) {
    return this.get$onMouseUp($receiver).call$1(arg0);
  },
  get$onResize: function(receiver) {
    return $.EventStreamProvider_resize.forTarget$1(receiver);
  },
  onResize$0: function($receiver) {
    return this.get$onResize($receiver).call$0();
  },
  get$onUnload: function(receiver) {
    return $.EventStreamProvider_unload.forTarget$1(receiver);
  }
};

$$.Worker = {"": "AbstractWorker;",
  postMessage$2: function(receiver, message, messagePorts) {
    return receiver.postMessage(message, messagePorts);
  },
  postMessage$1: function($receiver, message) {
    return $receiver.postMessage(message);
  },
  terminate$0: function(receiver) {
    return receiver.terminate();
  }
};

$$.XPathEvaluator = {"": "Interceptor;"};

$$.XPathException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.XPathExpression = {"": "Interceptor;"};

$$.XPathNSResolver = {"": "Interceptor;"};

$$.XPathResult = {"": "Interceptor;"};

$$.XmlSerializer = {"": "Interceptor;"};

$$.XsltProcessor = {"": "Interceptor;"};

$$._CSSValue = {"": "Interceptor;"};

$$._ClientRect = {"": "Interceptor;bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(receiver.left) + ", " + $.S(receiver.top) + ", " + $.S(receiver.width) + ", " + $.S(receiver.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = receiver.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = receiver.top;
      t3 = t2.get$top(other);
      if (t1 == null ? t3 == null : t1 === t3) {
        t1 = receiver.width;
        t3 = t2.get$width(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = receiver.height;
          t2 = t2.get$height(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  toInt$0: function(receiver) {
    return $.Rect$($.toInt$0$nx(receiver.left), $.toInt$0$nx(receiver.top), $.toInt$0$nx(receiver.width), $.toInt$0$nx(receiver.height));
  },
  get$topLeft: function(receiver) {
    return $.Point$(receiver.left, receiver.top);
  },
  $isRect: true,
  $asRect: null
};

$$._ClientRectList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Rect);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Rect);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Rect]; },
  $isIterable: true,
  $asIterable: function() { return [$.Rect]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._CssRuleList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.CssRule);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.CssRule);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.CssRule]; },
  $isIterable: true,
  $asIterable: function() { return [$.CssRule]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._CssValueList = {"": "_CSSValue;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $._CSSValue);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $._CSSValue);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$._CSSValue]; },
  $isIterable: true,
  $asIterable: function() { return [$._CSSValue]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._DomPoint = {"": "Interceptor;x=,y="};

$$._EntryArray = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Entry);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Entry);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Entry]; },
  $isIterable: true,
  $asIterable: function() { return [$.Entry]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._EntryArraySync = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $._EntrySync);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $._EntrySync);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$._EntrySync]; },
  $isIterable: true,
  $asIterable: function() { return [$._EntrySync]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._EntrySync = {"": "Interceptor;"};

$$._GamepadList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Gamepad);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Gamepad);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Gamepad]; },
  $isIterable: true,
  $asIterable: function() { return [$.Gamepad]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._NamedNodeMap = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Node);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._SpeechInputResultList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.SpeechInputResult);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.SpeechInputResult);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.SpeechInputResult]; },
  $isIterable: true,
  $asIterable: function() { return [$.SpeechInputResult]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._SpeechRecognitionResultList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.SpeechRecognitionResult);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.SpeechRecognitionResult);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.SpeechRecognitionResult]; },
  $isIterable: true,
  $asIterable: function() { return [$.SpeechRecognitionResult]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._StyleSheetList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.StyleSheet);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.StyleSheet);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.StyleSheet]; },
  $isIterable: true,
  $asIterable: function() { return [$.StyleSheet]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Cursor = {"": "Interceptor;",
  next$1: function(receiver, key) {
    return receiver.continue(key);
  },
  get$next: function(receiver) {
    return new $.Bound_next_Cursor(this, "next$1", receiver);
  }
};

$$.CursorWithValue = {"": "Cursor;",
  get$value: function(receiver) {
    return $._convertNativeToDart_IDBAny(receiver.value);
  }
};

$$.Database = {"": "EventTarget;name=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.IdbFactory = {"": "Interceptor;"};

$$.Index = {"": "Interceptor;name="};

$$.KeyRange = {"": "Interceptor;"};

$$.ObjectStore = {"": "Interceptor;name=",
  add$2: function(receiver, value, key) {
    var request, e, stacktrace, t1, exception;
    try {
      request = null;
      if (key != null)
        request = this.$$dom_add$2(receiver, value, key);
      else
        request = this.$$dom_add$1(receiver, value);
      t1 = $._completeRequest(request);
      return t1;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      stacktrace = $.getTraceFromException(exception);
      return $._FutureImpl$immediateError(e, stacktrace);
    }

  },
  add$1: function($receiver, value) {
    return this.add$2($receiver, value, null);
  },
  $$dom_add$2: function(receiver, value, key) {
    var t1 = $ === key;
    if (t1)
      key = null;
    if (!t1)
      return receiver.add($._convertDartToNative_PrepareForStructuredClone(value), $._convertDartToNative_PrepareForStructuredClone(key));
    return receiver.add($._convertDartToNative_PrepareForStructuredClone(value));
  },
  $$dom_add$1: function($receiver, value) {
    return this.$$dom_add$2($receiver, value, $);
  },
  index$1: function(receiver, $name) {
    return receiver.index($name);
  },
  get$index: function(receiver) {
    return new $.BoundClosure$i1(this, "index$1", receiver);
  }
};

$$.OpenDBRequest = {"": "Request;"};

$$.Request = {"": "EventTarget;",
  get$result: function(receiver) {
    return $._convertNativeToDart_IDBAny(receiver.result);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onError: function(receiver) {
    return $.EventStreamProvider_error.forTarget$1(receiver);
  },
  get$onSuccess: function(receiver) {
    return $.EventStreamProvider_success.forTarget$1(receiver);
  }
};

$$.Transaction = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.VersionChangeEvent = {"": "Event;"};

$$.AElement = {"": "StyledElement;target="};

$$.AltGlyphElement = {"": "TextPositioningElement;",
  format$1: function($receiver, arg0) {
    return this.format.call$1(arg0);
  }
};

$$.Angle = {"": "Interceptor;value%"};

$$.AnimateElement = {"": "AnimationElement;"};

$$.AnimateMotionElement = {"": "AnimationElement;"};

$$.AnimateTransformElement = {"": "AnimationElement;"};

$$.AnimatedAngle = {"": "Interceptor;"};

$$.AnimatedBoolean = {"": "Interceptor;"};

$$.AnimatedEnumeration = {"": "Interceptor;"};

$$.AnimatedInteger = {"": "Interceptor;"};

$$.AnimatedLength = {"": "Interceptor;"};

$$.AnimatedLengthList = {"": "Interceptor;"};

$$.AnimatedNumber = {"": "Interceptor;"};

$$.AnimatedNumberList = {"": "Interceptor;"};

$$.AnimatedPreserveAspectRatio = {"": "Interceptor;"};

$$.AnimatedRect = {"": "Interceptor;"};

$$.AnimatedString = {"": "Interceptor;"};

$$.AnimatedTransformList = {"": "Interceptor;"};

$$.AnimationElement = {"": "SvgElement;"};

$$.CircleElement = {"": "StyledElement;"};

$$.ClipPathElement = {"": "StyledElement;"};

$$.DefsElement = {"": "StyledElement;"};

$$.DescElement = {"": "StyledElement;"};

$$.ElementInstance = {"": "EventTarget;parentNode=",
  get$onBlur: function(receiver) {
    return $.EventStreamProvider_blur.forTarget$1(receiver);
  },
  onBlur$1: function($receiver, arg0) {
    return this.get$onBlur($receiver).call$1(arg0);
  },
  get$onChange: function(receiver) {
    return $.EventStreamProvider_change.forTarget$1(receiver);
  },
  onChange$1: function($receiver, arg0) {
    return this.get$onChange($receiver).call$1(arg0);
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  onClick$1: function($receiver, arg0) {
    return this.get$onClick($receiver).call$1(arg0);
  },
  get$onDrag: function(receiver) {
    return $.EventStreamProvider_drag.forTarget$1(receiver);
  },
  get$onDragEnd: function(receiver) {
    return $.EventStreamProvider_dragend.forTarget$1(receiver);
  },
  get$onDragEnter: function(receiver) {
    return $.EventStreamProvider_dragenter.forTarget$1(receiver);
  },
  get$onDragLeave: function(receiver) {
    return $.EventStreamProvider_dragleave.forTarget$1(receiver);
  },
  get$onDragOver: function(receiver) {
    return $.EventStreamProvider_dragover.forTarget$1(receiver);
  },
  get$onDragStart: function(receiver) {
    return $.EventStreamProvider_dragstart.forTarget$1(receiver);
  },
  get$onDrop: function(receiver) {
    return $.EventStreamProvider_drop.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  onMouseDown$1: function($receiver, arg0) {
    return this.get$onMouseDown($receiver).call$1(arg0);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  onMouseMove$1: function($receiver, arg0) {
    return this.get$onMouseMove($receiver).call$1(arg0);
  },
  get$onMouseOut: function(receiver) {
    return $.EventStreamProvider_mouseout.forTarget$1(receiver);
  },
  onMouseOut$1: function($receiver, arg0) {
    return this.get$onMouseOut($receiver).call$1(arg0);
  },
  get$onMouseOver: function(receiver) {
    return $.EventStreamProvider_mouseover.forTarget$1(receiver);
  },
  onMouseOver$1: function($receiver, arg0) {
    return this.get$onMouseOver($receiver).call$1(arg0);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  },
  onMouseUp$1: function($receiver, arg0) {
    return this.get$onMouseUp($receiver).call$1(arg0);
  },
  get$onResize: function(receiver) {
    return $.EventStreamProvider_resize.forTarget$1(receiver);
  },
  onResize$0: function($receiver) {
    return this.get$onResize($receiver).call$0();
  }
};

$$.EllipseElement = {"": "StyledElement;"};

$$.FEBlendElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEColorMatrixElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FEComponentTransferElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FECompositeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEConvolveMatrixElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDiffuseLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDisplacementMapElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDistantLightElement = {"": "SvgElement;"};

$$.FEFloodElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEFuncAElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncBElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncGElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncRElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEGaussianBlurElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEImageElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeNodeElement = {"": "SvgElement;"};

$$.FEMorphologyElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEOffsetElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEPointLightElement = {"": "SvgElement;x=,y="};

$$.FESpecularLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FESpotLightElement = {"": "SvgElement;x=,y="};

$$.FETileElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FETurbulenceElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FilterElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ForeignObjectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.GElement = {"": "StyledElement;"};

$$.ImageElement0 = {"": "StyledElement;height=,width=,x=,y="};

$$.Length = {"": "Interceptor;value%"};

$$.LengthList = {"": "Interceptor;",
  $index: function(receiver, index) {
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Length);
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Length);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  },
  $isList: true,
  $asList: function() { return [$.Length]; },
  $isIterable: true,
  $asIterable: function() { return [$.Length]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.LineElement = {"": "StyledElement;"};

$$.LinearGradientElement = {"": "_GradientElement;"};

$$.MarkerElement = {"": "StyledElement;"};

$$.MaskElement = {"": "StyledElement;height=,width=,x=,y="};

$$.Matrix = {"": "Interceptor;"};

$$.MetadataElement = {"": "SvgElement;"};

$$.Number = {"": "Interceptor;value%"};

$$.NumberList = {"": "Interceptor;",
  $index: function(receiver, index) {
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Number);
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Number);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  },
  $isList: true,
  $asList: function() { return [$.Number]; },
  $isIterable: true,
  $asIterable: function() { return [$.Number]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.PathElement = {"": "StyledElement;"};

$$.PathSeg = {"": "Interceptor;"};

$$.PathSegArcAbs = {"": "PathSeg;x=,y="};

$$.PathSegArcRel = {"": "PathSeg;x=,y="};

$$.PathSegClosePath = {"": "PathSeg;"};

$$.PathSegCurvetoCubicAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicSmoothAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicSmoothRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticSmoothAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticSmoothRel = {"": "PathSeg;x=,y="};

$$.PathSegLinetoAbs = {"": "PathSeg;x=,y="};

$$.PathSegLinetoHorizontalAbs = {"": "PathSeg;x="};

$$.PathSegLinetoHorizontalRel = {"": "PathSeg;x="};

$$.PathSegLinetoRel = {"": "PathSeg;x=,y="};

$$.PathSegLinetoVerticalAbs = {"": "PathSeg;y="};

$$.PathSegLinetoVerticalRel = {"": "PathSeg;y="};

$$.PathSegList = {"": "Interceptor;",
  $index: function(receiver, index) {
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.PathSeg);
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.PathSeg);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  },
  $isList: true,
  $asList: function() { return [$.PathSeg]; },
  $isIterable: true,
  $asIterable: function() { return [$.PathSeg]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.PathSegMovetoAbs = {"": "PathSeg;x=,y="};

$$.PathSegMovetoRel = {"": "PathSeg;x=,y="};

$$.PatternElement = {"": "StyledElement;height=,width=,x=,y="};

$$.Point0 = {"": "Interceptor;x=,y="};

$$.PointList = {"": "Interceptor;",
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  }
};

$$.PolygonElement = {"": "StyledElement;"};

$$.PolylineElement = {"": "StyledElement;"};

$$.PreserveAspectRatio = {"": "Interceptor;"};

$$.RadialGradientElement = {"": "_GradientElement;"};

$$.Rect0 = {"": "Interceptor;height%,width%,x=,y="};

$$.RectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.RenderingIntent = {"": "Interceptor;"};

$$.ScriptElement0 = {"": "SvgElement;type%"};

$$.SetElement = {"": "AnimationElement;"};

$$.StopElement = {"": "StyledElement;"};

$$.StringList = {"": "Interceptor;",
  $index: function(receiver, index) {
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSString);
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSString);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  },
  $isList: true,
  $asList: function() { return [$.JSString]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSString]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.StyleElement0 = {"": "SvgElement;disabled%,type%",
  get$title: function(receiver) {
    return receiver.title;
  }
};

$$.StyledElement = {"": "SvgElement;"};

$$.SvgDocument = {"": "Document;"};

$$.SvgElement = {"": "Element;",
  get$children: function(receiver) {
    return $.FilteredElementList$(receiver, null);
  },
  set$children: function(receiver, value) {
    var children = this.get$children(receiver);
    children.clear$0(children);
    children.addAll$1(children, value);
  },
  get$innerHtml: function(receiver) {
    var container, cloned, t1;
    container = $.Element_Element$tag("div");
    cloned = receiver.cloneNode(true);
    t1 = $.getInterceptor$x(container);
    $.addAll$1$ax(t1.get$children(container), $.get$children$x(cloned));
    return t1.get$innerHtml(container);
  },
  set$innerHtml: function(receiver, svg) {
    var container, t1;
    container = $.Element_Element$tag("div");
    t1 = $.getInterceptor$x(container);
    t1.set$innerHtml(container, "<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    this.set$children(receiver, $.get$children$x($.$index$asx(t1.get$children(container), 0)));
  },
  get$$$dom_children: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, value) {
    receiver.id = value;
  }
};

$$.SvgException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.SvgSvgElement = {"": "StyledElement;height=,width=,x=,y="};

$$.SwitchElement = {"": "StyledElement;"};

$$.SymbolElement = {"": "StyledElement;"};

$$.TSpanElement = {"": "TextPositioningElement;"};

$$.TextContentElement = {"": "StyledElement;"};

$$.TextElement = {"": "TextPositioningElement;"};

$$.TextPathElement = {"": "TextContentElement;"};

$$.TextPositioningElement = {"": "TextContentElement;x=,y="};

$$.TitleElement0 = {"": "StyledElement;"};

$$.Transform = {"": "Interceptor;type="};

$$.TransformList = {"": "Interceptor;",
  $index: function(receiver, index) {
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Transform);
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Transform);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  removeItem$1: function(receiver, index) {
    return receiver.removeItem(index);
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $asList: function() { return [$.Transform]; },
  $isIterable: true,
  $asIterable: function() { return [$.Transform]; }
};

$$.UnitTypes = {"": "Interceptor;"};

$$.UseElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ViewElement = {"": "SvgElement;"};

$$.ViewSpec = {"": "Interceptor;"};

$$.ZoomEvent = {"": "UIEvent;"};

$$._ElementInstanceList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver.item(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.ElementInstance);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.ElementInstance);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.ElementInstance]; },
  $isIterable: true,
  $asIterable: function() { return [$.ElementInstance]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._GradientElement = {"": "StyledElement;"};

$$._SVGColor = {"": "Interceptor;"};

$$._SVGComponentTransferFunctionElement = {"": "SvgElement;"};

$$.ByteBuffer = {"": "Interceptor;", $isByteBuffer: true, $asByteBuffer: null};

$$.TypedData = {"": "Interceptor;", $isTypedData: true, $asTypedData: null};

$$.ByteData = {"": "TypedData;"};

$$.Float32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSNumber);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSNumber);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Float64List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSNumber);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSNumber);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int16List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int8List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint16List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8ClampedList = {"": "Uint8List;",
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout1(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout1: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout1(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout1: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression($.RangeError$range(index, 0, t1));
      else
        $.throwExpression($.ArgumentError$("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.JSInt);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.JSInt);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.AnalyserNode = {"": "AudioNode;"};

$$.AudioBuffer = {"": "Interceptor;length="};

$$.AudioBufferSourceNode = {"": "AudioSourceNode;"};

$$.AudioContext = {"": "EventTarget;"};

$$.AudioDestinationNode = {"": "AudioNode;"};

$$.AudioListener = {"": "Interceptor;"};

$$.AudioNode = {"": "Interceptor;"};

$$.AudioParam = {"": "Interceptor;name=,value%"};

$$.AudioProcessingEvent = {"": "Event;"};

$$.AudioSourceNode = {"": "AudioNode;"};

$$.BiquadFilterNode = {"": "AudioNode;type%"};

$$.ChannelMergerNode = {"": "AudioNode;"};

$$.ChannelSplitterNode = {"": "AudioNode;"};

$$.ConvolverNode = {"": "AudioNode;"};

$$.DelayNode = {"": "AudioNode;"};

$$.DynamicsCompressorNode = {"": "AudioNode;"};

$$.GainNode = {"": "AudioNode;"};

$$.MediaElementAudioSourceNode = {"": "AudioSourceNode;"};

$$.MediaStreamAudioDestinationNode = {"": "AudioSourceNode;"};

$$.MediaStreamAudioSourceNode = {"": "AudioSourceNode;"};

$$.OfflineAudioCompletionEvent = {"": "Event;"};

$$.OfflineAudioContext = {"": "AudioContext;"};

$$.OscillatorNode = {"": "AudioSourceNode;type%"};

$$.PannerNode = {"": "AudioNode;"};

$$.ScriptProcessorNode = {"": "AudioNode;"};

$$.WaveShaperNode = {"": "AudioNode;"};

$$.WaveTable = {"": "Interceptor;"};

$$.ActiveInfo = {"": "Interceptor;name=,type="};

$$.Buffer = {"": "Interceptor;"};

$$.CompressedTextureAtc = {"": "Interceptor;"};

$$.CompressedTexturePvrtc = {"": "Interceptor;"};

$$.CompressedTextureS3TC = {"": "Interceptor;"};

$$.ContextAttributes = {"": "Interceptor;"};

$$.ContextEvent = {"": "Event;"};

$$.DebugRendererInfo = {"": "Interceptor;"};

$$.DebugShaders = {"": "Interceptor;"};

$$.DepthTexture = {"": "Interceptor;"};

$$.ExtDrawBuffers = {"": "Interceptor;"};

$$.ExtTextureFilterAnisotropic = {"": "Interceptor;"};

$$.Framebuffer = {"": "Interceptor;"};

$$.LoseContext = {"": "Interceptor;"};

$$.OesElementIndexUint = {"": "Interceptor;"};

$$.OesStandardDerivatives = {"": "Interceptor;"};

$$.OesTextureFloat = {"": "Interceptor;"};

$$.OesTextureHalfFloat = {"": "Interceptor;"};

$$.OesVertexArrayObject = {"": "Interceptor;"};

$$.Program = {"": "Interceptor;"};

$$.Renderbuffer = {"": "Interceptor;"};

$$.RenderingContext = {"": "CanvasRenderingContext;"};

$$.Shader = {"": "Interceptor;"};

$$.ShaderPrecisionFormat = {"": "Interceptor;"};

$$.Texture = {"": "Interceptor;"};

$$.UniformLocation = {"": "Interceptor;"};

$$.VertexArrayObject = {"": "Interceptor;"};

$$.SqlDatabase = {"": "Interceptor;"};

$$.SqlError = {"": "Interceptor;"};

$$.SqlException = {"": "Interceptor;"};

$$.SqlResultSet = {"": "Interceptor;rows="};

$$.SqlResultSetRowList = {"": "Interceptor;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return $.convertNativeToDart_Dictionary(receiver.item(index));
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver, $.Map);
  },
  contains$1: function(receiver, element) {
    return $.IterableMixinWorkaround_contains(receiver, element);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Map);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  skip$1: function(receiver, n) {
    return $.SubListIterable$(receiver, n, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  insert$2: function(receiver, index, element) {
    throw $.wrapException($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = receiver.length;
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  toString$0: function(receiver) {
    var buffer = $.StringBuffer$("[");
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.Map]; },
  $isIterable: true,
  $asIterable: function() { return [$.Map]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SqlTransaction = {"": "Interceptor;"};

// Bound closures
$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};

$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};

$$.BoundClosure$i0 = {"": "Closure;self,target,receiver",
  call$0: function() {
    return this.self[this.target](this.receiver);
  }
};

$$.BoundClosure$3 = {"": "Closure;self,target",
  call$3: function(p0, p1, p2) {
    return this.self[this.target](p0, p1, p2);
  }
};

$$.BoundClosure$2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};

$$.BoundClosure$i1 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};

$$.Bound_next_Cursor = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  },
  call$0: function() {
    return this.call$1(null);
  }
};

Isolate.$finishClasses($$, $, null);
$$ = null;

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !$.getInterceptor(src).$isJavaScriptIndexingBehavior))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !$.getInterceptor(dst).$isJavaScriptIndexingBehavior)
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dstStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i >>> 0 !== i || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j >>> 0 !== j || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i >>> 0 !== i || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j >>> 0 !== j || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if ($.JSNumber_methods.$lt(srcStart, dstStart))
    for (i = srcStart + count - 1, j = $.$sub$n($.$add$ns(dstStart, count), 1), t1 = $.getInterceptor$asx(src); i >= srcStart; --i, j = $.$sub$n(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t1 = $.getInterceptor$asx(src), j = dstStart, i = srcStart; i < srcStart + count; ++i, j = $.$add$ns(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.SubListIterable$ = function(_iterable, _start, _endOrLength, E) {
  var t1 = new $.SubListIterable(_iterable, _start, _endOrLength);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.ListIterator$ = function(iterable, E) {
  var t1 = new $.ListIterator(iterable, $.get$length$asx(iterable), 0, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.MappedIterable$ = function(_iterable, _f, S, T) {
  var t1 = new $.MappedIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.MappedIterator$ = function(_iterator, _f, S, T) {
  var t1 = new $.MappedIterator(null, _iterator, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.WhereIterable$ = function(_iterable, _f, E) {
  var t1 = new $.WhereIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.WhereIterator$ = function(_iterator, _f, E) {
  var t1 = new $.WhereIterator(_iterator, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.SkipIterator$ = function(_iterator, _skipCount, E) {
  var t1 = new $.SkipIterator(_iterator, _skipCount);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.SkipIterator$2(_iterator, _skipCount, E);
  return t1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.get$iterator$ax(iterable), t2 = $.getInterceptor(element); t1.moveNext$0();)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.get$iterator$ax(iterable); t1.moveNext$0() === true;)
    f.call$1(t1.get$current());
};

$.IterableMixinWorkaround__rangeCheck = function(list, start, end) {
  var t1 = $.getInterceptor$n(start);
  if (t1.$lt(start, 0) || t1.$gt(start, list.length))
    throw $.wrapException($.RangeError$range(start, 0, list.length));
  t1 = $.getInterceptor$n(end);
  if (t1.$lt(end, start) || t1.$gt(end, list.length))
    throw $.wrapException($.RangeError$range(end, start, list.length));
};

$.IterableMixinWorkaround_setRangeList = function(list, start, end, from, skipCount) {
  var $length, otherStart, otherList, t1;
  $.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = $.$sub$n(end, start);
  if ($.$eq($length, 0) === true)
    return;
  if (skipCount < 0)
    throw $.wrapException($.ArgumentError$(skipCount));
  if (typeof from === "object" && from !== null && (from.constructor === Array || !!$.getInterceptor(from).$isList)) {
    otherStart = skipCount;
    otherList = from;
  } else {
    t1 = $.skip$1$ax(from, skipCount);
    otherList = t1.toList$1$growable(t1, false);
    otherStart = 0;
  }
  if (typeof $length !== "number")
    throw $.iae($length);
  if ($.JSNumber_methods.$gt(otherStart + $length, $.get$length$asx(otherList)))
    throw $.wrapException($.StateError$("Not enough elements"));
  $.Arrays_copy(otherList, otherStart, list, start, $length);
};

$.ToString__emitValue = function(i, result, visiting) {
  var t1, isList, t2, t3, first, e;
  t1 = $.getInterceptor$ax(visiting);
  t1.add$1(visiting, i);
  isList = typeof i === "object" && i !== null && (i.constructor === Array || !!$.getInterceptor(i).$isList);
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$x(result);
  t3.write$1(result, t2);
  for (t2 = $.get$iterator$ax(i), first = true; t2.moveNext$0() === true; first = false) {
    e = t2.get$current();
    if (!first)
      t3.write$1(result, ", ");
    $.ToString__emitObject(e, result, visiting);
  }
  t3.write$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isIterable)) {
    o;
    if ($.ToString__containsRef(visiting, o))
      $.write$1$x(result, typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isList) ? "[...]" : "{...}");
    else
      $.ToString__emitValue(o, result, visiting);
  } else if (typeof o === "object" && o !== null && !!$.getInterceptor(o).$isMap)
    if ($.ToString__containsRef(visiting, o))
      $.write$1$x(result, "{...}");
    else
      $.ToString__emitPair(o, result, visiting);
  else
    $.write$1$x(result, o);
};

$.ToString__containsRef = function(i, ref) {
  var t1;
  for (t1 = $.get$iterator$ax(i); t1.moveNext$0() === true;)
    if (t1.get$current() === ref)
      return true;
  return false;
};

$.ToString__emitPair = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$ax(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$x(result);
  t3.write$1(result, "{");
  t1.first_0 = true;
  $.forEach$1$ax(m, new $.ToString__emitPair_anon(t1, result, visiting));
  t3.write$1(result, "}");
  t2.removeLast$0(visiting);
};

$.HashMap__findBucketIndex = function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; i += 2)
    if ($.$eq(bucket[i], key) === true)
      return i;
  return -1;
};

$.HashMapKeyIterable$ = function(_map, E) {
  var t1 = new $.HashMapKeyIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.HashMapKeyIterator$ = function(_map, _keys, E) {
  var t1 = new $.HashMapKeyIterator(_map, _keys, 0, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.LinkedHashMap__findBucketIndex = function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i].get$_key(), key) === true)
      return i;
  return -1;
};

$.LinkedHashMapCell$ = function(_key, _value) {
  return new $.LinkedHashMapCell(_key, _value, null, null);
};

$.LinkedHashMapKeyIterable$ = function(_map, E) {
  var t1 = new $.LinkedHashMapKeyIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.LinkedHashMapKeyIterator$ = function(_map, _modifications, E) {
  var t1 = new $.LinkedHashMapKeyIterator(_map, _modifications, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.LinkedHashMapKeyIterator$2(_map, _modifications, E);
  return t1;
};

$.HashSet__findBucketIndex = function(bucket, element) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i], element) === true)
      return i;
  return -1;
};

$.HashSetIterator$ = function(_set, _elements, E) {
  var t1 = new $.HashSetIterator(_set, _elements, 0, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.getInterceptor = function(object) {
};

$.getDispatchProperty = function(object) {
  return object[$.dispatchPropertyName];
};

$.setDispatchProperty = function(object, value) {
  object[$.dispatchPropertyName] = value;
};

$.getNativeInterceptor = function(object) {
  var record, proto, objectProto;
  record = $.getDispatchProperty(object);
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  $.setDispatchProperty(Object.getPrototypeOf(object), record);
  return $.getNativeInterceptor(object);
};

$.initializeDispatchProperty = function(setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  if (typeof rootProperty !== "string")
    return $.initializeDispatchProperty$bailout(1, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor);
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    if (i > 0)
      property = rootProperty + "_" + i;
    else
      property = rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, {i: jsObjectInterceptor, p: objectProto, e: null});
      return;
    }
  }
};

$.initializeDispatchProperty$bailout = function(state0, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    property = i > 0 ? rootProperty + "_" + i : rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, {i: jsObjectInterceptor, p: objectProto, e: null});
      return;
    }
  }
};

$.JsIsolateSink$fromPort = function(_port) {
  return new $.JsIsolateSink(false, _port);
};

$._callInIsolate = function(isolate, $function) {
  var result = isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
  return result;
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue($._IsolateEvent), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.wrapException($.UnsupportedError$("Cannot extract URI from \"" + $.S(stack) + "\""));
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, entryPoint, replyTo, context, t2;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      t1 = $globalState.topEventLoop.events;
      t1._add$1(t1, $._IsolateEvent$(context, new $.IsolateNatives__processWorkerMessage_anon(entryPoint, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        $.send$2$x(t1.$index(msg, "port"), t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      t1 = $globalState.managers;
      t2 = $.getInterceptor$x(sender);
      t1.remove$1(t1, t2.get$id(sender));
      t2.terminate$0(sender);
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        $globalState;
        t1 = $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg]));
        $.get$globalThis().postMessage(t1);
      } else
        $.Primitives_printString($.toString$0(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.wrapException(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, t1, exception;
  if ($globalState.isWorker === true) {
    $globalState;
    t1 = $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg]));
    $.get$globalThis().postMessage(t1);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.wrapException($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  $._WorkerStub_methods.set$onmessage(worker, function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  $._WorkerStub_methods.set$id(worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.TimerImpl$periodic = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$periodic$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return $.get$globalThis().setTimeout != null;
};

$.checkGrowable = function(list, reason) {
  if (!!list.fixed$length)
    throw $.wrapException($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$add$ns($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.wrapException($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (typeof source !== "string")
    $.throwExpression($.ArgumentError$(source));
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    if (match != null) {
      t1 = match.length;
      if (2 >= t1)
        throw $.ioore(2);
      if (match[2] != null)
        return parseInt(source, 16);
      if (3 >= t1)
        throw $.ioore(3);
      if (match[3] != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    throw $.wrapException($.ArgumentError$("Radix is not an integer"));
    if ($.JSNull_methods.$lt(radix, 2) || $.JSNull_methods.$gt(radix, 36))
      throw $.wrapException($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    if (match != null) {
      t1 = false;
      if (t1)
        return parseInt(source, 10);
      if (!$.JSNull_methods.$lt(radix, 10)) {
        if (3 >= match.length)
          throw $.ioore(3);
        t1 = match[3] == null;
      } else
        t1 = true;
      if (t1) {
        if ($.JSNull_methods.$le(radix, 10)) {
          if (typeof radix !== "number")
            throw $.iae(radix);
          maxCharCode = 48 + radix - 1;
        } else {
          if (typeof radix !== "number")
            throw $.iae(radix);
          maxCharCode = 97 + radix - 10 - 1;
        }
        if (1 >= match.length)
          throw $.ioore(1);
        digitsPart = $.toLowerCase$0$s(match[1]);
        for (i = 0; i < digitsPart.length; ++i)
          if ($.JSString_methods.codeUnitAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
      }
    }
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  if (typeof source !== "string")
    $.throwExpression($.ArgumentError$(source));
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.JSNumber_methods.get$isNaN(result) && $.$eq(source, "NaN") !== true)
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.codeUnitAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, i;
  a = [];
  for (t1 = $.JSArray_methods.get$iterator(codePoints); t1.moveNext$0();) {
    i = t1.get$current();
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException($.ArgumentError$(i));
    else
      i;
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + ($.JSNumber_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw $.wrapException($.ArgumentError$(i));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, i;
  for (t1 = $.JSArray_methods.get$iterator(charCodes); t1.moveNext$0();) {
    i = t1.get$current();
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException($.ArgumentError$(i));
    else
      i;
    if (i < 0)
      throw $.wrapException($.ArgumentError$(i));
    if (i > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCFullYear() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getFullYear() + 0;
  }
  return t1;
};

$.Primitives_getMonth = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCMonth() + 1;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getMonth() + 1;
  }
  return t1;
};

$.Primitives_getDay = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCDate() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getDate() + 0;
  }
  return t1;
};

$.Primitives_getHours = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCHours() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getHours() + 0;
  }
  return t1;
};

$.Primitives_getMinutes = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCMinutes() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getMinutes() + 0;
  }
  return t1;
};

$.Primitives_getSeconds = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCSeconds() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getSeconds() + 0;
  }
  return t1;
};

$.Primitives_getMilliseconds = function(receiver) {
  var t1;
  if (receiver.isUtc === true) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getUTCMilliseconds() + 0;
  } else {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    t1 = receiver.date.getMilliseconds() + 0;
  }
  return t1;
};

$.Primitives_getProperty = function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  return object[key];
};

$.Primitives_setProperty = function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  object[key] = value;
};

$.iae = function(argument) {
  throw $.wrapException($.ArgumentError$(argument));
};

$.ioore = function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.throwExpression($.ArgumentError$(index));
  throw $.wrapException($.RangeError$value(index));
};

$.wrapException = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.C_NullThrownError;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.wrapException);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.throwExpression = function(ex) {
  throw $.wrapException(ex);
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number >> 16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1) {
      message;
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $._StackTrace$(exception.stack);
};

$._StackTrace$ = function(_stack) {
  return new $._StackTrace(_stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.JSArray_methods.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$(null, null);
  for (; iterator.moveNext$0();) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.wrapException($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($._currentIsolate(), $.invokeClosure.call$5);
  closure.$identity = $function;
  return $function;
};

$.stringTypeCast = function(value) {
  if (typeof value === "string" || value == null)
    return value;
  throw $.wrapException($.CastErrorImplementation$($.Primitives_objectTypeName(value), "String"));
};

$.propertyTypeCast = function(value, property) {
  var t1;
  if (value == null || !!value[property])
    return value;
  t1 = $.getInterceptor$asx(property);
  $.throwExpression($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.interceptedTypeCast = function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && $.getInterceptor(value)[property];
  else
    t1 = true;
  if (t1)
    return value;
  t1 = $.getInterceptor$asx(property);
  $.throwExpression($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + $.S(actualType) + " to incompatible type " + expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.wrapException($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  target.$builtinTypeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  return target.$builtinTypeInfo;
};

$.getRuntimeTypeArgument = function(target, substitution, index) {
  var $arguments = $.getRuntimeTypeInfo(target);
  if (substitution != null && substitution.constructor === Array)
    $arguments = substitution;
  else if (typeof substitution == "function")
    $arguments = substitution.apply(null, $arguments);
  return $arguments == null ? null : $arguments[index];
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  return $.constructorNameFallback(obj);
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.name;
    if (typeof $name === "string") {
      $name;
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    } else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.getFunctionForTypeNameOf = function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.toStringForNativeObject = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return "Instance of " + $._getTypeNameOf.call$1(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.defineNativeMethods = function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, true);
};

$.defineNativeMethodsNonleaf = function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
};

$.defineNativeMethodsCommon = function(tags, interceptorClass, isLeaf) {
  var methods, tagsList, i, tag;
  methods = interceptorClass.prototype;
  if ($.interceptorsByTag == null)
    $.interceptorsByTag = {};
  if ($.leafTags == null)
    $.leafTags = {};
  tagsList = tags.split("|");
  for (i = 0; i < tagsList.length; ++i) {
    tag = tagsList[i];
    $.interceptorsByTag[tag] = methods;
    $.leafTags[tag] = isLeaf;
  }
};

$.defineNativeMethodsFinish = function() {
};

$.lookupDispatchRecord = function(obj) {
  var hasOwnPropertyFunction, tag, map, interceptor, secondTag;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  tag = $._getTypeNameOf.call$1(obj);
  map = $.interceptorsByTag;
  interceptor = hasOwnPropertyFunction.call(map, tag) ? map[tag] : null;
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null) {
      map = $.interceptorsByTag;
      interceptor = hasOwnPropertyFunction.call(map, secondTag) ? map[secondTag] : null;
    }
  }
  if (interceptor == null)
    interceptor = {__what: "interceptor not found", __tag: tag};
  if (true === $.leafTags[tag])
    return {i: interceptor, p: false, e: null};
  else
    return {i: interceptor, p: Object.getPrototypeOf(obj), e: null};
};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive, $.JSSyntaxRegExp_makeNative(pattern, multiLine, caseSensitive, false));
};

$.JSSyntaxRegExp$_globalVersionOf = function(other) {
  var t1, t2, t3;
  t1 = other.get$pattern(other);
  t2 = other.get$isMultiLine();
  t3 = other.get$isCaseSensitive();
  return new $.JSSyntaxRegExp(t1, t2, t3, $.JSSyntaxRegExp_makeNative(t1, t2, t3, true));
};

$.JSSyntaxRegExp_makeNative = function(pattern, multiLine, caseSensitive, global) {
  var m, i, g, regexp, errorMessage;
  if (typeof pattern !== "string")
    $.throwExpression($.ArgumentError$(pattern));
  m = multiLine === true ? "m" : "";
  i = caseSensitive === true ? "" : "i";
  g = global ? "g" : "";
  regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
  if (regexp instanceof RegExp)
    return regexp;
  errorMessage = String(regexp);
  throw $.wrapException($.FormatException$("Illegal RegExp pattern: " + $.S(pattern) + ", " + errorMessage));
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp$_globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, $length, patternLength, startIndex, position, endIndex;
  result = $.List_List($, $.Match);
  $.setRuntimeTypeInfo(result, [$.Match]);
  $length = haystack.length;
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.JSString_methods.indexOf$2(haystack, needle, startIndex);
    if (position === -1)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = position + patternLength;
    if (endIndex === $length)
      break;
    else
      startIndex = position === endIndex ? startIndex + 1 : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
  else if (typeof other === "object" && other !== null && !!$.getInterceptor(other).$isJSSyntaxRegExp)
    return other.hasMatch$1($.JSString_methods.substring$1(receiver, startIndex));
  else
    return $.get$iterator$ax($.allMatches$1$s(other, $.JSString_methods.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i, t1;
  if (typeof from === "string")
    if (from === "")
      if (receiver === "")
        return to;
      else {
        result = $.StringBuffer$("");
        $length = receiver.length;
        result._contents = result._contents + to;
        for (i = 0; i < $length; ++i) {
          t1 = receiver[i];
          result._contents = result._contents + t1;
          result._contents = result._contents + to;
        }
        return result._contents;
      }
    else
      return receiver.replace(new RegExp(from.replace(new RegExp("[-[\\]{}()*+?.,\\\\^$|#\\s]", 'g'), "\\$&"), 'g'), to.replace("$", "$$$$"));
  else if (typeof from === "object" && from !== null && !!$.getInterceptor(from).$isJSSyntaxRegExp)
    return receiver.replace($.JSSyntaxRegExp$_globalVersionOf(from)._nativeRegExp, to.replace("$", "$$$$"));
  else
    throw $.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
};

$._attachStackTrace = function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
};

$.getAttachedStackTrace = function(o) {
  var t1, values;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  values = $.Primitives_getProperty(o, "expando$values");
  return values == null ? null : $.Primitives_getProperty(values, t1._getKey$0());
};

$._asyncRunCallback = function() {
  var callbacks, i, callback, remainingCallbacks, newCallbacks, exception;
  for (; !$.JSArray_methods.get$isEmpty($.get$_asyncCallbacks());) {
    callbacks = $.get$_asyncCallbacks();
    $._asyncCallbacks = [];
    for (i = 0; $.$lt$n(i, $.get$length$asx(callbacks)); i = $.$add$ns(i, 1)) {
      callback = $.$index$asx(callbacks, i);
      $.$indexSet$ax(callbacks, i, null);
      try {
        callback.call$0();
      } catch (exception) {
        $.unwrapException(exception);
        i = $.$add$ns(i, 1);
        remainingCallbacks = $.sublist$1$ax(callbacks, i);
        newCallbacks = $.get$_asyncCallbacks();
        $._asyncCallbacks = [];
        $.JSArray_methods.addAll$1($.get$_asyncCallbacks(), remainingCallbacks);
        $.JSArray_methods.addAll$1($.get$_asyncCallbacks(), newCallbacks);
        $.Timer_run($._asyncRunCallback);
        throw exception;
      }

    }
  }
  $._callbacksAreEnqueued = false;
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl$immediateError = function(error, stackTrace) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediateError$2(error, stackTrace);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, future, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.JSArray_methods.get$iterator(futures); t3.moveNext$0();) {
    future = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    future.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.List_empty);
  t1.values_1 = $.List_List(t1.remaining_2, null);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.future;
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._throwDelayed = function(error, stackTrace) {
  $.get$_asyncCallbacks().push(new $._throwDelayed_anon(error, stackTrace));
  if (!$._callbacksAreEnqueued) {
    $.Timer_run($._asyncRunCallback);
    $._callbacksAreEnqueued = true;
  }
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  $._throwDelayed(error, null);
};

$._nullDoneHandler = function() {
};

$._asyncError = function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if ($.getAttachedStackTrace(error) != null)
    return error;
  $._attachStackTrace(error, stackTrace);
  return error;
};

$._runUserCode = function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = $.getTraceFromException(exception);
    onError.call$1($._asyncError(e, s));
  }

};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, onData, onError, onDone, _cancelOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _cancelOnError, null, onData, onError, onDone);
  t1._BaseStreamSubscription$3(onData, onError, onDone);
  t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, _cancelOnError);
  return t1;
};

$.Timer_run = function(callback) {
  var milliseconds;
  $.get$Timer__runCallbacks().push(callback);
  if ($.get$Timer__runCallbacks().length === 1) {
    milliseconds = $.Duration_0.get$inMilliseconds();
    if (milliseconds < 0)
      milliseconds = 0;
    $.TimerImpl$(milliseconds, new $.Timer_run_anon());
  }
};

$.UnmodifiableListView$ = function(source, E) {
  var t1 = new $.UnmodifiableListView(source);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.HashMap$ = function(K, V) {
  var t1 = new $.HashMap(0, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$.HashSet$ = function(E) {
  var t1 = new $.HashSet(0, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.LinkedHashMap$ = function(K, V) {
  var t1 = new $.LinkedHashMap(0, null, null, null, null, null, 0);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$.Queue_Queue = function(E) {
  return $.ListQueue$(null, E);
};

$.ListQueue$ = function(initialCapacity, E) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.ListQueue$1(initialCapacity, E);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  return $.JSNull_methods.$and(number, $.JSNull_methods.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var nextNumber;
  number = $.$shl$n(number, 2) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue, E) {
  var t1 = new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Duration$ = function(days, hours, microseconds, milliseconds, minutes, seconds) {
  var t1 = $.$mul$n(milliseconds, 1000);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  if (typeof microseconds !== "number")
    throw $.iae(microseconds);
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + t1 + microseconds);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string")
    return "\"" + $.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"") + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.Expando$ = function($name) {
  return new $.Expando($name);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length, E) {
  var t1, result;
  t1 = $ === $length;
  if (t1)
    $length = null;
  if (t1)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw $.wrapException($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.List_List$from = function(other, growable, E) {
  var list, t1, $length, fixedList, t2, i, t3;
  list = $.List_List($, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = $.List_List($length, E);
  $.setRuntimeTypeInfo(fixedList, [E]);
  for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    t3 = list[i];
    if (i >= t2)
      throw $.ioore(i);
    fixedList[i] = t3;
  }
  return fixedList;
};

$.Map_Map = function(K, V) {
  return $.HashMap$(K, V);
};

$.Object$ = function() {
  return new $.Object();
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.Set_Set = function(E) {
  return $.HashSet$(E);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!(charCodes.constructor === Array))
    charCodes = $.List_List$from(charCodes, true, null);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.AnchorElement_AnchorElement = function(href) {
  var e = document.createElement("a");
  if (href != null)
    $.set$href$x(e, href);
  return e;
};

$.ButtonElement_ButtonElement = function() {
  return document.createElement("button");
};

$.DivElement_DivElement = function() {
  return document.createElement("div");
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, $.get$$$dom_children$x(element));
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$.FieldSetElement_FieldSetElement = function() {
  return document.createElement("fieldset");
};

$.IFrameElement_IFrameElement = function() {
  return document.createElement("iframe");
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = document.createElement("img");
  if (src != null)
    $.set$src$x(e, src);
  if (width != null)
    $.set$width$x(e, width);
  if (height != null)
    $.set$height$x(e, height);
  return e;
};

$.InputElement_InputElement = function(type) {
  var e, exception;
  e = document.createElement("input");
  if (type != null)
    try {
      $.set$type$x(e, type);
    } catch (exception) {
      $.unwrapException(exception);
    }

  return e;
};

$.HiddenInputElement_HiddenInputElement = function() {
  return $.InputElement_InputElement("hidden");
};

$.TextInputElement_TextInputElement = function() {
  return $.InputElement_InputElement("text");
};

$.PasswordInputElement_PasswordInputElement = function() {
  return $.InputElement_InputElement("password");
};

$.LegendElement_LegendElement = function() {
  return document.createElement("legend");
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.OptionElement_OptionElement = function(data, value, defaultSelected, selected) {
  var t1, t2, t3, t4;
  t1 = $ === data;
  if (t1)
    data = null;
  t2 = $ === value;
  if (t2)
    value = null;
  t3 = $ === defaultSelected;
  if (t3)
    defaultSelected = null;
  t4 = $ === selected;
  if (t4)
    selected = null;
  if (!t4)
    return new Option(data, value, defaultSelected, selected);
  if (!t3)
    return new Option(data, value, defaultSelected);
  if (!t2)
    return new Option(data, value);
  if (!t1)
    return new Option(data);
  return new Option();
};

$.SelectElement_SelectElement = function() {
  return document.createElement("select");
};

$.SpanElement_SpanElement = function() {
  return document.createElement("span");
};

$.TableCellElement_TableCellElement = function() {
  return document.createElement("td");
};

$.TableElement_TableElement = function() {
  return document.createElement("table");
};

$.TableRowElement_TableRowElement = function() {
  return document.createElement("tr");
};

$.TextAreaElement_TextAreaElement = function() {
  return document.createElement("textarea");
};

$.Window__isDartLocation = function(thing) {
  var t1, exception;
  try {
    t1 = thing;
    return typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isLocation;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Rect$ = function(left, $top, width, height) {
  return new $.Rect(left, $top, width, height);
};

$._WrappedList$ = function(_list, E) {
  var t1 = new $._WrappedList(_list);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._WrappedIterator$ = function(_iterator, E) {
  var t1 = new $._WrappedIterator(_iterator);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$._LocationWrapper__set = function(p, m, v) {
  return p[m] = v;
};

$.FixedSizeListIterator$ = function(array, T) {
  var t1 = new $.FixedSizeListIterator(array, array.length, -1, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.convertNativeToDart_Dictionary = function(object) {
  var dict, t1, key;
  if (object == null)
    return;
  dict = $.makeLiteralMap([]);
  for (t1 = $.JSArray_methods.get$iterator(Object.getOwnPropertyNames(object)); t1.moveNext$0();) {
    key = t1.get$current();
    dict.$indexSet(dict, key, object[key]);
  }
  return dict;
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  dict.forEach$1(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var copies, copy;
  copies = [];
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(new $._convertDartToNative_PrepareForStructuredClone_findSlot([], copies), new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies), new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies)).call$1(value);
  new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots().call$0();
  return copy;
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.Device_userAgent = function() {
  return $.window().navigator.userAgent;
};

$.Device_isOpera = function() {
  if ($.Device__isOpera == null)
    $.Device__isOpera = $.contains$2$asx($.Device_userAgent(), "Opera", 0);
  return $.Device__isOpera;
};

$.Device_isIE = function() {
  if ($.Device__isIE == null)
    $.Device__isIE = $.Device_isOpera() !== true && $.contains$2$asx($.Device_userAgent(), "MSIE", 0) === true;
  return $.Device__isIE;
};

$.Device_isFirefox = function() {
  if ($.Device__isFirefox == null)
    $.Device__isFirefox = $.contains$2$asx($.Device_userAgent(), "Firefox", 0);
  return $.Device__isFirefox;
};

$.Device_isWebKit = function() {
  if ($.Device__isWebKit == null)
    $.Device__isWebKit = $.Device_isOpera() !== true && $.contains$2$asx($.Device_userAgent(), "WebKit", 0) === true;
  return $.Device__isWebKit;
};

$.Device_cssPrefix = function() {
  if ($.Device__cachedCssPrefix == null)
    if ($.Device_isFirefox() === true)
      $.Device__cachedCssPrefix = "-moz-";
    else if ($.Device_isIE() === true)
      $.Device__cachedCssPrefix = "-ms-";
    else if ($.Device_isOpera() === true)
      $.Device__cachedCssPrefix = "-o-";
    else
      $.Device__cachedCssPrefix = "-webkit-";
  return $.Device__cachedCssPrefix;
};

$.FilteredElementList$ = function(node, T) {
  var t1 = new $.FilteredElementList(node, $.get$nodes$x(node));
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, end, accumulator) {
  var i;
  if (start !== (start | 0))
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (typeof end !== "number")
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (start < 0)
    throw $.wrapException($.RangeError$value(start));
  if (end < start)
    throw $.wrapException($.RangeError$value(end));
  if (end > a.length)
    throw $.wrapException($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, end, accumulator) {
  var t1, i;
  if ($.$lt$n(start, 0))
    throw $.wrapException($.RangeError$value(start));
  t1 = $.getInterceptor$n(end);
  if (t1.$lt(end, start))
    throw $.wrapException($.RangeError$value(end));
  if (t1.$gt(end, a.length))
    throw $.wrapException($.RangeError$value(end));
  for (i = start; $.$lt$n(i, end); ++i) {
    if (i >>> 0 !== i || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._convertNativeToDart_IDBAny = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, false);
};

$._completeRequest = function(request) {
  var completer, t1, t2;
  completer = $._CompleterImpl$();
  t1 = $.getInterceptor$x(request);
  t2 = t1.get$onSuccess(request);
  $._EventStreamSubscription$(t2._target, t2._eventType, new $._completeRequest_anon(request, completer), t2._useCapture);
  t1 = t1.get$onError(request);
  $._EventStreamSubscription$(t1._target, t1._eventType, new $._completeRequest_anon0(completer), t1._useCapture);
  return completer.future;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.min = function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof b === "number") {
    b;
    if (typeof a === "number") {
      a;
      if (a === 0)
        return (a + b) * a * b;
    }
    if (a === 0 && $.JSInt_methods.get$isNegative(b) || $.JSInt_methods.get$isNaN(b))
      return b;
    return a;
  }
  return a;
  throw $.wrapException($.ArgumentError$(b));
  throw $.wrapException($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    a;
    if (typeof b === "number") {
      b;
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        b;
        if (typeof a === "number") {
          a;
          if (a === 0)
            return a + b;
        }
        if ($.JSDouble_methods.get$isNaN(b))
          return b;
        return a;
      }
      if (b === 0 && $.JSNumber_methods.get$isNegative(a))
        return b;
      return a;
    }
    throw $.wrapException($.ArgumentError$(b));
  }
  throw $.wrapException($.ArgumentError$(a));
};

$.main = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, app;
  t1 = $.get$Context__container();
  t2 = $.AppConfiguration$();
  t3 = $.HomeConfiguration$();
  t4 = $.ComponentConfiguration$();
  t5 = $.WidgetComponentConfiguration$();
  t6 = $.PopupComponentConfiguration$();
  t7 = $.PanelComponentConfiguration$();
  t8 = $.LayoutComponentConfiguration$();
  t1 = t1._configuration;
  t1.addAll$1(t1, [t2, t3, t4, t5, t6, t7, t8]);
  app = $.get$Context__container()._configuration.get$cache().resolve$2("AppPresenter", null);
  if ($.RootLayoutPanel__singleton == null) {
    $.RootLayoutPanel__singleton = $.RootLayoutPanel$_initial();
    $.add$1$ax($.RootPanel_get(null), $.RootLayoutPanel__singleton);
  }
  app.addViewTo$1($.RootLayoutPanel__singleton);
};

$.AppPresenter$ = function() {
  return new $.AppPresenter(null);
};

$.AppView$ = function() {
  var t1 = new $.AppView(null, null, null, null, 0, null, false, null, null, null);
  t1.AppView$0();
  return t1;
};

$.StyleChooserComponent$ = function(label, defaultStyle) {
  var t1 = new $.StyleChooserComponent(["clean", "chrome", "dark", "standard"], null, null, 0, null, false, null, null, null);
  t1.StyleChooserComponent$2(label, defaultStyle);
  return t1;
};

$.ComponentPresenter$ = function() {
  return new $.ComponentPresenter(null, null);
};

$.ComponentPreview$ = function() {
  var t1 = new $.ComponentPreview(null, null, null, null, null, null, null, null, null, null);
  t1.ComponentPreview$0();
  return t1;
};

$.ComponentTreeView$ = function() {
  var t1 = new $.ComponentTreeView(null);
  t1.ComponentTreeView$0();
  return t1;
};

$.ComponentView$ = function() {
  return new $.ComponentView(null, null);
};

$.DockLayoutPanelModel$ = function() {
  return new $.DockLayoutPanelModel();
};

$.LayoutPanelModel$ = function() {
  return new $.LayoutPanelModel();
};

$.SplitLayoutPanelModel$ = function() {
  return new $.SplitLayoutPanelModel();
};

$.StackLayoutPanelModel$ = function() {
  return new $.StackLayoutPanelModel();
};

$.TabLayoutPanelModel$ = function() {
  return new $.TabLayoutPanelModel();
};

$.AbsolutePanelModel$ = function() {
  return new $.AbsolutePanelModel();
};

$.CaptionPanelModel$ = function() {
  return new $.CaptionPanelModel();
};

$.DeckPanelModel$ = function() {
  return new $.DeckPanelModel();
};

$.DecoratedStackPanelModel$ = function() {
  return new $.DecoratedStackPanelModel();
};

$.DecoratedTabBarModel$ = function() {
  return new $.DecoratedTabBarModel();
};

$.DecoratedTabPanelModel$ = function() {
  return new $.DecoratedTabPanelModel();
};

$.DecoratorPanelModel$ = function() {
  return new $.DecoratorPanelModel();
};

$.DisclosurePanelModel$ = function() {
  return new $.DisclosurePanelModel();
};

$.DockPanelModel$ = function() {
  return new $.DockPanelModel();
};

$.FlexTableModel$ = function() {
  return new $.FlexTableModel();
};

$.FlowPanelModel$ = function() {
  return new $.FlowPanelModel();
};

$.FocusPanelModel$ = function() {
  return new $.FocusPanelModel();
};

$.FormPanelModel$ = function() {
  return new $.FormPanelModel();
};

$.FrameModel$ = function() {
  return new $.FrameModel();
};

$.GridModel$ = function() {
  return new $.GridModel();
};

$.HorizontalPanelModel$ = function() {
  return new $.HorizontalPanelModel();
};

$.HorizontalSplitPanelModel$ = function() {
  return new $.HorizontalSplitPanelModel();
};

$.HtmlPanelModel$ = function() {
  return new $.HtmlPanelModel();
};

$.NamedFrameModel$ = function() {
  return new $.NamedFrameModel();
};

$.ScrolledPanelModel$ = function() {
  return new $.ScrolledPanelModel();
};

$.SimplePanelModel$ = function() {
  return new $.SimplePanelModel();
};

$.StackPanelModel$ = function() {
  return new $.StackPanelModel();
};

$.TabBarModel$ = function() {
  return new $.TabBarModel();
};

$.TabPanelModel$ = function() {
  return new $.TabPanelModel();
};

$.VerticalPanelModel$ = function() {
  return new $.VerticalPanelModel();
};

$.VerticalSplitPanelModel$ = function() {
  return new $.VerticalSplitPanelModel();
};

$.DialogBoxModel$ = function() {
  return new $.DialogBoxModel();
};

$._createDialogBox = function() {
  var dialogBox, dialogContents, details, td, image, closeButton;
  dialogBox = $.DialogBox$(false, true, null);
  dialogBox.set$text(dialogBox, "Sample DialogBox");
  dialogContents = $.VerticalPanel$();
  dialogContents.set$spacing(dialogContents, 4);
  dialogBox._decPanel.setWidget$1(dialogContents);
  dialogBox.maybeUpdateSize$0();
  details = $.Html$("This is an example of a standard dialog box component.", null);
  dialogContents.add$1(dialogContents, details);
  td = dialogContents.getWidgetTd$1(details);
  if (td != null)
    $.set$textAlign$x($.get$style$x(td), $.HorizontalAlignmentConstant_TextAlign_center.getTextAlignString$0());
  image = $.Image$("img/lights.png");
  dialogContents.add$1(dialogContents, image);
  td = dialogContents.getWidgetTd$1(image);
  if (td != null)
    $.set$textAlign$x($.get$style$x(td), $.HorizontalAlignmentConstant_TextAlign_center.getTextAlignString$0());
  closeButton = $.Button$("Close", $.ClickHandlerAdapter$(new $._createDialogBox_anon(dialogBox)));
  dialogContents.add$1(dialogContents, closeButton);
  $.get$LocaleInfo_instance();
  td = dialogContents.getWidgetTd$1(closeButton);
  if (td != null)
    $.set$textAlign$x($.get$style$x(td), $.HorizontalAlignmentConstant_TextAlign_right.getTextAlignString$0());
  return dialogBox;
};

$.PopupPanelModel$ = function() {
  return new $.PopupPanelModel();
};

$.ButtonModel$ = function() {
  return new $.ButtonModel();
};

$.CheckBoxModel$ = function() {
  return new $.CheckBoxModel();
};

$.CompositeModel$ = function() {
  return new $.CompositeModel();
};

$._DisplayBox$ = function(header, data) {
  var t1 = new $._DisplayBox(null, null, 0, null, false, null, null, null);
  t1._DisplayBox$2(header, data);
  return t1;
};

$.DateBoxModel$ = function() {
  return new $.DateBoxModel();
};

$.DatePickerModel$ = function() {
  return new $.DatePickerModel();
};

$.DoubleBoxModel$ = function() {
  return new $.DoubleBoxModel();
};

$.FileUploadModel$ = function() {
  return new $.FileUploadModel();
};

$.HiddenModel$ = function() {
  return new $.HiddenModel();
};

$.HtmlModel$ = function() {
  return new $.HtmlModel();
};

$.HyperlinkModel$ = function() {
  return new $.HyperlinkModel();
};

$.ImageModel$ = function() {
  return new $.ImageModel();
};

$.InlineHtmlModel$ = function() {
  return new $.InlineHtmlModel();
};

$.InlineHyperlinkModel$ = function() {
  return new $.InlineHyperlinkModel();
};

$.InlineLabelModel$ = function() {
  return new $.InlineLabelModel();
};

$.IntegerBoxModel$ = function() {
  return new $.IntegerBoxModel();
};

$.LabelModel$ = function() {
  return new $.LabelModel();
};

$.ListBoxModel$ = function() {
  return new $.ListBoxModel();
};

$.MenuBoxModel$ = function() {
  return new $.MenuBoxModel();
};

$._MenuCommand$ = function() {
  return new $._MenuCommand(0, ["Thank you for selecting a menu item", "A fine selection indeed", "Don't you have anything better to do than select menu items?", "Try something else", "this is just a menu!, Another wasted click"]);
};

$.NumberLabelModel$ = function() {
  return new $.NumberLabelModel();
};

$.PasswordTextBoxModel$ = function() {
  return new $.PasswordTextBoxModel();
};

$.PushButtonModel$ = function() {
  return new $.PushButtonModel();
};

$.RadioButtonModel$ = function() {
  return new $.RadioButtonModel();
};

$.RichTextAreaModel$ = function() {
  return new $.RichTextAreaModel();
};

$.SimpleCheckBoxModel$ = function() {
  return new $.SimpleCheckBoxModel();
};

$.SimpleRadioButtonModel$ = function() {
  return new $.SimpleRadioButtonModel();
};

$.SuggestBoxModel$ = function() {
  return new $.SuggestBoxModel();
};

$.TextAreaModel$ = function() {
  return new $.TextAreaModel();
};

$.TextBoxModel$ = function() {
  return new $.TextBoxModel();
};

$.ToggleButtonModel$ = function() {
  return new $.ToggleButtonModel();
};

$.TreeModel$ = function() {
  return new $.TreeModel();
};

$._createStaticTree = function() {
  var composers, staticTree, t1, t2, ret;
  composers = ["Beethoven", "Brahms", "Mozart"];
  staticTree = $.Tree$(null, false);
  if (0 >= composers.length)
    throw $.ioore(0);
  t1 = composers[0];
  t2 = staticTree._root;
  ret = $.TreeItem$(null, false, $);
  ret.set$text(ret, t1);
  if (ret.getParentItem$0() != null || ret.getTree$0() != null)
    ret.remove$0(ret);
  t2.insertItem$2(t2.getChildCount$0(), ret);
  $._addMusicSection(ret, "Concertos", ["No. 1 - C", "No. 2 - B-Flat Major", "No. 3 - C Minor", "No. 4 - G Major", "No. 5 - E-Flat Major"]);
  $._addMusicSection(ret, "Quartets", ["Six String Quartets", "Three String Quartets", "Grosse Fugue for String Quartets"]);
  $._addMusicSection(ret, "Sonatas", ["Sonata in A Minor", "Sonata in F Major"]);
  $._addMusicSection(ret, "Symphonies", ["No. 2 - D Major", "No. 2 - D Major", "No. 3 - E-Flat Major", "No. 4 - B-Flat Major", "No. 5 - C Minor", "No. 6 - F Major", "No. 7 - A Major", "No. 8 - F Major", "No. 9 - D Minor"]);
  if (1 >= composers.length)
    throw $.ioore(1);
  t1 = composers[1];
  t2 = staticTree._root;
  ret = $.TreeItem$(null, false, $);
  ret.set$text(ret, t1);
  if (ret.getParentItem$0() != null || ret.getTree$0() != null)
    ret.remove$0(ret);
  t2.insertItem$2(t2.getChildCount$0(), ret);
  $._addMusicSection(ret, "Concertos", ["Violin Concerto", "Double Concerto - A Minor", "Piano Concerto No. 1 - D Minor", "Piano Concerto No. 2 - B-Flat Major"]);
  $._addMusicSection(ret, "Quartets", ["Piano Quartet No. 1 - G Minor", "Piano Quartet No. 2 - A Major", "Piano Quartet No. 3 - C Minor", "String Quartet No. 3 - B-Flat Minor"]);
  $._addMusicSection(ret, "Sonatas", ["Two Sonatas for Clarinet - F Minor", "Two Sonatas for Clarinet - E-Flat Major"]);
  $._addMusicSection(ret, "Symphonies", ["No. 1 - C Minor", "No. 2 - D Minor", "No. 3 - F Major", "No. 4 - E Minor"]);
  if (2 >= composers.length)
    throw $.ioore(2);
  t1 = composers[2];
  t2 = staticTree._root;
  ret = $.TreeItem$(null, false, $);
  ret.set$text(ret, t1);
  if (ret.getParentItem$0() != null || ret.getTree$0() != null)
    ret.remove$0(ret);
  t2.insertItem$2(t2.getChildCount$0(), ret);
  $._addMusicSection(ret, "Concertos", ["Piano Concerto No. 12", "Piano Concerto No. 17", "Clarinet Concerto", "Violin Concerto No. 5", "Violin Concerto No. 4"]);
  return staticTree;
};

$._addMusicSection = function($parent, label, composerWorks) {
  var ret, t1, work, ret0;
  ret = $.TreeItem$(null, false, $);
  ret.set$text(ret, label);
  if (ret.getParentItem$0() != null || ret.getTree$0() != null)
    ret.remove$0(ret);
  $parent.insertItem$2($parent.getChildCount$0(), ret);
  for (t1 = $.JSArray_methods.get$iterator(composerWorks); t1.moveNext$0();) {
    work = t1.get$current();
    ret0 = $.TreeItem$(null, false, $);
    ret0.set$text(ret0, work);
    if (ret0.getParentItem$0() != null || ret0.getTree$0() != null)
      ret0.remove$0(ret0);
    ret.insertItem$2(ret.getChildCount$0(), ret0);
  }
};

$._createDynamicTree = function() {
  var dynamicTree, i, t1, t2, ret, ret0, t3;
  dynamicTree = $.Tree$(null, false);
  for (i = 0; i < 5; ++i) {
    t1 = "Item " + i;
    t2 = dynamicTree._root;
    ret = $.TreeItem$(null, false, $);
    ret.set$text(ret, t1);
    if (ret.getParentItem$0() != null || ret.getTree$0() != null)
      ret.remove$0(ret);
    t2.insertItem$2(t2.getChildCount$0(), ret);
    ret0 = $.TreeItem$(null, false, $);
    ret0.set$text(ret0, "");
    if (ret0.getParentItem$0() != null || ret0.getTree$0() != null)
      ret0.remove$0(ret0);
    ret.insertItem$2(ret.getChildCount$0(), ret0);
  }
  t1 = $.OpenHandlerAdapter$(new $._createDynamicTree_anon($.C__Random));
  t2 = $.get$OpenEvent_TYPE();
  t3 = dynamicTree._eventBus;
  if (t3 == null) {
    t3 = $.SimpleEventBus$(null);
    dynamicTree._eventBus = t3;
  }
  t3._doAdd$3(t2, $.get$SimpleEventBus__emptySource(), t1);
  return dynamicTree;
};

$.HomePresenter$ = function() {
  return new $.HomePresenter(null);
};

$.HomeView$ = function() {
  return new $.HomeView();
};

$.AppConfiguration$ = function() {
  var t1 = new $.AppConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.AppConfiguration$0();
  return t1;
};

$.ComponentConfiguration$ = function() {
  var t1 = new $.ComponentConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.ComponentConfiguration$0();
  return t1;
};

$.HomeConfiguration$ = function() {
  var t1 = new $.HomeConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.HomeConfiguration$0();
  return t1;
};

$.LayoutComponentConfiguration$ = function() {
  var t1 = new $.LayoutComponentConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.LayoutComponentConfiguration$0();
  return t1;
};

$.PanelComponentConfiguration$ = function() {
  var t1 = new $.PanelComponentConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.PanelComponentConfiguration$0();
  return t1;
};

$.PopupComponentConfiguration$ = function() {
  var t1 = new $.PopupComponentConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.PopupComponentConfiguration$0();
  return t1;
};

$.WidgetComponentConfiguration$ = function() {
  var t1 = new $.WidgetComponentConfiguration($.Map_Map($.JSString, $._InstanceObject));
  t1.WidgetComponentConfiguration$0();
  return t1;
};

$.AnimationCallback2$ = function(_animation) {
  return new $.AnimationCallback2(_animation);
};

$.AnimationScheduler_AnimationScheduler$Instance = function() {
  return $.AnimationSchedulerImpl_AnimationSchedulerImpl$Instance();
};

$.AnimationSchedulerImpl_AnimationSchedulerImpl$Instance = function() {
  $.AnimationSchedulerImpl_impl = $.AnimationSchedulerImplWebkit$();
  var t1 = $.AnimationSchedulerImpl_impl;
  if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isAnimationSchedulerImpl)
    if (!t1.isNativelySupported$0())
      $.AnimationSchedulerImpl_impl = $.AnimationSchedulerImplTimer$();
  return $.AnimationSchedulerImpl_impl;
};

$.AnimationSchedulerImplTimer$ = function() {
  var t1 = $.List_List($, $.AnimationHandleImplTimer);
  $.setRuntimeTypeInfo(t1, [$.AnimationHandleImplTimer]);
  t1 = new $.AnimationSchedulerImplTimer(t1, null);
  t1.AnimationSchedulerImplTimer$0();
  return t1;
};

$.AnimationHandleImplTimer$ = function(callback, _impl) {
  return new $.AnimationHandleImplTimer(callback, _impl);
};

$.AnimationSchedulerImplWebkit$ = function() {
  return new $.AnimationSchedulerImplWebkit();
};

$.AnimationHandleImplWebkit$ = function(requestId, impl) {
  return new $.AnimationHandleImplWebkit(requestId, impl);
};

$.DWT_getModuleBaseURL = function() {
  return "src/packages/dart_web_toolkit/";
};

$.DWT_majorVersion = function() {
  return "0.3";
};

$.DWT_minorVersion = function() {
  return "10";
};

$.AllMouseHandlersAdapter$ = function(callback) {
  return new $.AllMouseHandlersAdapter(callback);
};

$.BlurHandlerAdapter$ = function(callback) {
  return new $.BlurHandlerAdapter(callback);
};

$.ChangeHandlerAdapter$ = function(callback) {
  return new $.ChangeHandlerAdapter(callback);
};

$.ClickHandlerAdapter$ = function(callback) {
  return new $.ClickHandlerAdapter(callback);
};

$.CloseHandlerAdapter$ = function(callback) {
  return new $.CloseHandlerAdapter(callback);
};

$.KeyUpHandlerAdapter$ = function(callback) {
  return new $.KeyUpHandlerAdapter(callback);
};

$.MouseDownHandlerAdapter$ = function(callback) {
  return new $.MouseDownHandlerAdapter(callback);
};

$.MouseMoveHandlerAdapter$ = function(callback) {
  return new $.MouseMoveHandlerAdapter(callback);
};

$.MouseOutHandlerAdapter$ = function(callback) {
  return new $.MouseOutHandlerAdapter(callback);
};

$.MouseOverHandlerAdapter$ = function(callback) {
  return new $.MouseOverHandlerAdapter(callback);
};

$.MouseUpHandlerAdapter$ = function(callback) {
  return new $.MouseUpHandlerAdapter(callback);
};

$.NativePreviewHandlerAdapter$ = function(callback) {
  return new $.NativePreviewHandlerAdapter(callback);
};

$.OpenHandlerAdapter$ = function(callback) {
  return new $.OpenHandlerAdapter(callback);
};

$.SelectionHandlerAdapter$ = function(callback) {
  return new $.SelectionHandlerAdapter(callback);
};

$.ValueChangeHandlerAdapter$ = function(callback) {
  return new $.ValueChangeHandlerAdapter(callback);
};

$.AttachEvent$ = function(_attached) {
  return new $.AttachEvent(_attached, false, null);
};

$.BeforeSelectionEvent_fire = function(source, item) {
  var $event;
  $.get$BeforeSelectionEvent_TYPE();
  $event = $.BeforeSelectionEvent$();
  $event._item = item;
  source.fireEvent$1($event);
  return $event;
  return;
};

$.BeforeSelectionEvent$ = function() {
  return new $.BeforeSelectionEvent(null, false, false, null);
};

$.BlurEvent$ = function() {
  return new $.BlurEvent(null, null, false, null);
};

$.ChangeEvent$ = function() {
  return new $.ChangeEvent(null, null, false, null);
};

$.ClickEvent$ = function() {
  return new $.ClickEvent(null, null, false, null);
};

$.CloseEvent$ = function(target, autoClosed) {
  return new $.CloseEvent(target, autoClosed, false, null);
};

$.Dom_getElementProperty = function(elem, prop) {
  var eProp = $.get$attributes$x(elem)._liblib3$_element.getAttribute(prop);
  return eProp == null ? null : eProp;
};

$.Dom_getElementPropertyInt = function(elem, prop) {
  var eProp, intProp, t1;
  eProp = $.Dom_getElementProperty(elem, prop);
  if (eProp == null)
    return 0;
  else {
    intProp = $.Primitives_parseInt(eProp, null, null);
    if (typeof intProp !== "number")
      return $.Dom_getElementPropertyInt$bailout(1, intProp);
    t1 = intProp;
    return t1;
  }
};

$.Dom_getElementPropertyInt$bailout = function(state0, intProp) {
  switch (state0) {
    case 0:
      eProp = $.Dom_getElementProperty(elem, prop);
    case 1:
      var eProp;
      if (state0 === 0 && eProp == null)
        return 0;
      else
        switch (state0) {
          case 0:
            intProp = $.Primitives_parseInt(eProp, null, null);
          case 1:
            state0 = 0;
            return intProp != null ? intProp : 0;
        }
  }
};

$.Dom_getElementPropertyBoolean = function(elem, prop) {
  return $.Dom_getElementProperty(elem, prop) === "true";
};

$.Dom_setElementPropertyBoolean = function(elem, prop, value) {
  var t1 = $.get$attributes$x(elem);
  t1.$indexSet(t1, prop, $.JSBool_methods.toString$0(value));
};

$.Dom_setElementProperty = function(elem, prop, value) {
  var t1 = $.get$attributes$x(elem);
  t1.$indexSet(t1, prop, value);
};

$.Dom_setElementPropertyInt = function(elem, prop, value) {
  var t1 = $.get$attributes$x(elem);
  t1.$indexSet(t1, prop, $.toString$0(value));
};

$.Dom_setElementAttribute = function(elem, attr, value) {
  var t1 = $.get$attributes$x(elem);
  t1.$indexSet(t1, attr, value);
};

$.Dom_setStyleAttribute = function(elem, attr, value) {
  $.setProperty$2$x($.get$style$x(elem), attr, value);
};

$.Dom_createUniqueId = function() {
  var t1 = $.Dom_uniqueId;
  $.Dom_uniqueId = $.$add$ns(t1, 1);
  return "dwt-id-" + $.S(t1);
};

$.Dom_getFirstChild = function(elem) {
  return $.get$$$dom_firstElementChild$x(elem);
};

$.Dom_getClientWidth = function() {
  return window.innerWidth;
};

$.Dom_clone = function(elem, deep) {
  return elem.cloneNode(deep);
};

$.Dom_sinkEvents = function(elem, eventBits) {
  var t1 = $.get$Dom_impl();
  if (!$.DomImpl_eventSystemIsInitialized) {
    t1.initEventSystem$0();
    $.DomImpl_eventSystemIsInitialized = true;
  }
  t1.sinkEventsImpl$2(elem, eventBits);
};

$.Dom_previewEvent = function(evt) {
  var ret, t1;
  ret = $.NativePreviewEvent_fire($.IEvent_handlers, evt);
  if (!ret && evt != null) {
    t1 = $.getInterceptor$x(evt);
    t1.set$cancelBubble(evt, true);
    t1.preventDefault$0(evt);
  }
  return ret;
};

$.DomEvent_getRegistered = function() {
  if ($.DomEvent__registered == null)
    $.DomEvent__registered = $.HashMap$($.JSString, $.DomEventType);
  return $.DomEvent__registered;
};

$.DomEvent_fireNativeEvent = function(nativeEvent, handlerSource, relativeElem) {
  var t1, typeKey, currentNative, currentRelativeElem;
  t1 = $.DomEvent__registered;
  if (t1 != null) {
    typeKey = t1.$index(t1, $.get$type$x(nativeEvent));
    if (typeKey != null) {
      t1 = typeKey.get$flyweight();
      currentNative = t1._nativeEvent;
      currentRelativeElem = t1._relativeElem;
      t1._nativeEvent = nativeEvent;
      typeKey.get$flyweight()._relativeElem = relativeElem;
      handlerSource.fireEvent$1(typeKey.get$flyweight());
      typeKey.get$flyweight()._nativeEvent = currentNative;
      typeKey.get$flyweight()._relativeElem = currentRelativeElem;
    }
  }
};

$.DomEventType$ = function(eventName, flyweight) {
  var t1 = new $.DomEventType(eventName, flyweight);
  t1.DomEventType$2(eventName, flyweight);
  return t1;
};

$.IEvent_addNativePreviewHandler = function(handler) {
  var t1 = $.get$Dom_impl();
  if (!$.DomImpl_eventSystemIsInitialized) {
    t1.initEventSystem$0();
    $.DomImpl_eventSystemIsInitialized = true;
  }
  if ($.IEvent_handlers == null) {
    $.IEvent_handlers = $.SimpleEventBus$(null);
    $.NativePreviewEvent_singleton = $.NativePreviewEvent$();
  }
  return $.IEvent_handlers._doAdd$3($.get$NativePreviewEvent_TYPE(), $.get$SimpleEventBus__emptySource(), handler);
};

$.IEvent_sinkEvents = function(elem, eventBits) {
  var t1 = $.get$Dom_impl();
  if (!$.DomImpl_eventSystemIsInitialized) {
    t1.initEventSystem$0();
    $.DomImpl_eventSystemIsInitialized = true;
  }
  t1.sinkEventsImpl$2(elem, eventBits);
};

$.EventType$ = function() {
  return new $.EventType();
};

$.DomImpl_DomImpl$browserDependent = function() {
  return $.DomImplStandard$();
};

$.DomImplStandard$ = function() {
  return new $.DomImplStandard($.Map_Map($.Element, $.EventListener), null, $.Map_Map($.JSString, $.StreamSubscription));
};

$.KeyUpEvent$ = function() {
  return new $.KeyUpEvent(null, null, false, null);
};

$.MouseDownEvent$ = function() {
  return new $.MouseDownEvent(null, null, false, null);
};

$.MouseMoveEvent$ = function() {
  return new $.MouseMoveEvent(null, null, false, null);
};

$.MouseOutEvent$ = function() {
  return new $.MouseOutEvent(null, null, false, null);
};

$.MouseOverEvent$ = function() {
  return new $.MouseOverEvent(null, null, false, null);
};

$.MouseUpEvent$ = function() {
  return new $.MouseUpEvent(null, null, false, null);
};

$.NativePreviewEvent$ = function() {
  return new $.NativePreviewEvent(false, false, false, null, false, null);
};

$.NativePreviewEvent_fire = function(handlers, nativeEvent) {
  var t1, lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, t2;
  $.get$NativePreviewEvent_TYPE();
  if (handlers != null) {
    t1 = $.NativePreviewEvent_singleton;
    lastIsCanceled = t1._isCanceled;
    lastIsConsumed = t1._isConsumed;
    lastIsFirstHandler = t1._isFirstHandler;
    lastNativeEvent = t1._nativeEvent;
    $.DwtEvent.prototype.revive$0.call(t1);
    t1._isCanceled = false;
    t1._isConsumed = false;
    t1._isFirstHandler = true;
    t1._nativeEvent = null;
    t1._nativeEvent = nativeEvent;
    handlers._doFire$2(t1, null);
    t1 = $.NativePreviewEvent_singleton;
    t2 = t1._isCanceled === true && t1._isConsumed !== true;
    t1._isCanceled = lastIsCanceled;
    t1._isConsumed = lastIsConsumed;
    t1._isFirstHandler = lastIsFirstHandler;
    t1._nativeEvent = lastNativeEvent;
    return !t2;
  }
  return true;
};

$.OpenEvent$ = function(_target) {
  return new $.OpenEvent(_target, false, null);
};

$.SelectionEvent$ = function(selectedItem) {
  var t1 = new $.SelectionEvent(null, false, null);
  t1.SelectionEvent$1(selectedItem);
  return t1;
};

$.SimpleEventBus$ = function(H) {
  var t1 = new $.SimpleEventBus($.Map_Map($.EventType, [$.Map, $.Object, $.JSArray]), 0, null);
  $.setRuntimeTypeInfo(t1, [H]);
  return t1;
};

$._HandlerRegistration$ = function(_eventBus, type, source, handler) {
  return new $._HandlerRegistration(_eventBus, type, source, handler);
};

$._EmptySource$ = function() {
  return new $._EmptySource();
};

$._AddCommand$ = function(_eventBus, type, source, handler) {
  return new $._AddCommand(_eventBus, type, source, handler);
};

$._RemoveCommand$ = function(_eventBus, type, source, handler) {
  return new $._RemoveCommand(_eventBus, type, source, handler);
};

$.UmbrellaException$ = function(_causes) {
  var t1 = new $.UmbrellaException(_causes);
  t1.UmbrellaException$1(_causes);
  return t1;
};

$.UmbrellaException_makeMessage = function(causes) {
  var t1, b, t, str;
  t1 = $.getInterceptor$asx(causes);
  if ($.$eq(t1.get$length(causes), 0) === true)
    return;
  b = $.StringBuffer$("");
  for (t1 = t1.get$iterator(causes); t1.moveNext$0() === true;) {
    t = t1.get$current();
    if (b.get$length(b) > 0)
      b._contents = b._contents + "; ";
    str = $.toString$0(t);
    str = typeof str === "string" ? str : $.S(str);
    b._contents = b._contents + str;
  }
  return b._contents;
};

$.UmbrellaException_makeCause = function(causes) {
  var iterator = $.get$iterator$ax(causes);
  if (iterator.moveNext$0() !== true)
    return;
  return iterator.get$current();
};

$.ValueChangeEvent$ = function(_value) {
  return new $.ValueChangeEvent(_value, false, null);
};

$.AutoDirectionHandler_addToDefault = function(target, enabled) {
  var t1 = enabled ? $.get$WordCountDirectionEstimator_instance() : null;
  return $.AutoDirectionHandler$(target, t1);
};

$.AutoDirectionHandler$ = function(target, directionEstimator) {
  var t1 = new $.AutoDirectionHandler(null, null, null);
  t1.AutoDirectionHandler$2(target, directionEstimator);
  return t1;
};

$.BidiFormatter$ = function(contextDir, alwaysSpan) {
  return new $.BidiFormatter(alwaysSpan, contextDir);
};

$.BidiPolicy_isBidiEnabled = function() {
  $.get$BidiPolicy_impl();
  $.get$LocaleInfo_instance();
  return false;
};

$.BidiPolicyImpl$ = function() {
  return new $.BidiPolicyImpl();
};

$.BidiUtils$ = function() {
  return new $.BidiUtils();
};

$.BidiUtils_getDirectionOnElement = function(elem) {
  var dirPropertyValue, t1;
  dirPropertyValue = $.get$dir$x(elem);
  t1 = $.getInterceptor$s(dirPropertyValue);
  if ("rtl" === t1.toLowerCase$0(dirPropertyValue))
    return $.Direction_RTL;
  else if ("ltr" === t1.toLowerCase$0(dirPropertyValue))
    return $.Direction_LTR;
  return $.Direction_DEFAULT;
};

$.BidiUtils_setDirectionOnElement = function(elem, direction) {
  switch (direction) {
    case $.Direction_RTL:
      $.set$dir$x(elem, "rtl");
      break;
    case $.Direction_LTR:
      $.set$dir$x(elem, "ltr");
      break;
    case $.Direction_DEFAULT:
      if ($.BidiUtils_getDirectionOnElement(elem) !== $.Direction_DEFAULT)
        $.set$dir$x(elem, "");
      break;
  }
};

$.DirectionalTextHelper$ = function(element, isElementInline) {
  var t1 = new $.DirectionalTextHelper(null, false, false, null, null, false, null);
  t1.DirectionalTextHelper$2(element, isElementInline);
  return t1;
};

$.LocaleInfoImpl$ = function() {
  return new $.LocaleInfoImpl();
};

$.LocaleInfo_getCurrentLocale = function() {
  return $.get$LocaleInfo_instance();
};

$.LocaleInfo$ = function(infoImpl) {
  return new $.LocaleInfo(infoImpl, null, null);
};

$.NumberFormat_getDecimalFormat = function() {
  if ($.NumberFormat__cachedDecimalFormat == null)
    $.NumberFormat__cachedDecimalFormat = $.NumberFormat$_internal();
  return $.NumberFormat__cachedDecimalFormat;
};

$.NumberFormat$_internal = function() {
  return new $.NumberFormat();
};

$.WordCountDirectionEstimator$ = function() {
  return new $.WordCountDirectionEstimator();
};

$.LayoutImpl_LayoutImpl$browserDependent = function() {
  if (!$.LayoutImpl__initialised) {
    $.LayoutImpl__initialised = true;
    $.LayoutImpl_fixedRuler = $.LayoutImpl_createRuler($.Unit_cm, $.Unit_cm);
    document.body.appendChild($.LayoutImpl_fixedRuler);
  }
  return $.LayoutImpl$_internal();
};

$.LayoutImpl_createRuler = function(widthUnit, heightUnit) {
  var ruler = document.createElement("div");
  $.set$innerHtml$x(ruler, "&nbsp;");
  $.set$position$x(ruler.style, $.Position_absolute.get$value($.Position_absolute));
  $.set$zIndex$x(ruler.style, "-32767");
  $.set$top$x(ruler.style, $.JSString_methods.$add("-20", heightUnit.get$value(heightUnit)));
  $.set$width$x(ruler.style, $.JSString_methods.$add("10", widthUnit.get$value(widthUnit)));
  $.set$height$x(ruler.style, $.JSString_methods.$add("10", heightUnit.get$value(heightUnit)));
  return ruler;
};

$.LayoutImpl$_internal = function() {
  return new $.LayoutImpl(null);
};

$.Layout$ = function($parent) {
  var t1, t2;
  t1 = $.LayoutImpl_LayoutImpl$browserDependent();
  t2 = $.List_List($, $.Layer);
  $.setRuntimeTypeInfo(t2, [$.Layer]);
  t2 = new $.Layout(t1, t2, null, null);
  t2.Layout$1($parent);
  return t2;
};

$.Layer$ = function(container, child, userObject) {
  var t1 = new $.Layer(null, null, null, false, false, false, false, false, false, true, true, true, true, false, false, null, null, null, null, null, null, $.Unit_px, $.Unit_px, $.Unit_px, $.Unit_px, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $.Alignment_STRETCH, $.Alignment_STRETCH, true);
  t1.Layer$3(container, child, userObject);
  return t1;
};

$.LayoutAnimation$ = function(_layout, _callback) {
  var t1 = new $.LayoutAnimation(_layout, _callback, null, -1, null, false, false, null, -1, null, -1, false);
  t1.Animation$1(null);
  return t1;
};

$.ImageResourcePrototype$ = function($name, url, left, $top, width, height, animated, lossy) {
  return new $.ImageResourcePrototype(animated, lossy, $name, url, left, $top, width, height);
};

$.AriaValueAttribute$ = function($name, defaultValue) {
  var t1 = new $.AriaValueAttribute($name, null);
  t1.Attribute$2($name, defaultValue);
  return t1;
};

$.ButtonRoleImpl$ = function(roleName) {
  var t1 = new $.ButtonRoleImpl(null);
  t1.Role$1(roleName);
  return t1;
};

$.Flusher$ = function(_schedulerImpl) {
  return new $.Flusher(_schedulerImpl);
};

$.Rescuer$ = function(_schedulerImpl) {
  return new $.Rescuer(_schedulerImpl);
};

$.SchedulerImpl__createQueue = function() {
  var t1 = $.List_List($, $.Task);
  $.setRuntimeTypeInfo(t1, [$.Task]);
  return t1;
};

$.SchedulerImpl__scheduleFixedDelayImpl = function(cmd, delayMs) {
  var caleer, t1, t2, milliseconds;
  caleer = $.Caleer$();
  caleer.timeoutHandler = new $.SchedulerImpl__scheduleFixedDelayImpl_anon(cmd, delayMs, caleer);
  t1 = $.Duration$(0, 0, 0, delayMs, 0, 0);
  t2 = caleer.timeoutHandler;
  milliseconds = t1.get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  caleer.handle = $.TimerImpl$(milliseconds, t2);
};

$.SchedulerImpl$ = function() {
  return new $.SchedulerImpl(null, null, null, null, null, null, false, false);
};

$.SchedulerImpl__runRepeatingTasks = function(tasks) {
  var $length, start, canceledSomeTasks, i, t, newTasks, t1;
  if (typeof tasks !== "object" || tasks === null || (tasks.constructor !== Array || !!tasks.immutable$list) && !$.getInterceptor(tasks).$isJavaScriptIndexingBehavior)
    return $.SchedulerImpl__runRepeatingTasks$bailout(1, tasks);
  $length = tasks.length;
  if ($length === 0)
    return;
  start = $.DateTime$_now().get$millisecond();
  for (canceledSomeTasks = false; $.DateTime$_now().get$millisecond() - start < $.SchedulerImpl__TIME_SLICE;)
    for (i = 0; i < $length; ++i) {
      if (i >= tasks.length)
        throw $.ioore(i);
      t = tasks[i];
      if (t == null)
        continue;
      if (t.executeRepeating$0() !== true) {
        if (i >= tasks.length)
          throw $.ioore(i);
        tasks[i] = null;
        canceledSomeTasks = true;
      }
    }
  if (canceledSomeTasks) {
    newTasks = $.List_List($, $.Task);
    $.setRuntimeTypeInfo(newTasks, [$.Task]);
    for (i = 0; i < $length; ++i) {
      if (i >= tasks.length)
        throw $.ioore(i);
      t1 = tasks[i];
      if (t1 != null)
        newTasks.push(t1);
    }
    return newTasks.length === 0 ? null : newTasks;
  } else
    return tasks;
};

$.SchedulerImpl__runRepeatingTasks$bailout = function(state0, tasks) {
  var t1, $length, start, canceledSomeTasks, i, t, newTasks;
  t1 = $.getInterceptor$asx(tasks);
  $length = t1.get$length(tasks);
  if ($.$eq($length, 0) === true)
    return;
  start = $.DateTime$_now().get$millisecond();
  for (canceledSomeTasks = false; $.DateTime$_now().get$millisecond() - start < $.SchedulerImpl__TIME_SLICE;)
    for (i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      t = t1.$index(tasks, i);
      if (t == null)
        continue;
      if (t.executeRepeating$0() !== true) {
        t1.$indexSet(tasks, i, null);
        canceledSomeTasks = true;
      }
    }
  if (canceledSomeTasks) {
    newTasks = $.List_List($, $.Task);
    $.setRuntimeTypeInfo(newTasks, [$.Task]);
    for (i = 0; $.JSNumber_methods.$lt(i, $length); ++i)
      if (t1.$index(tasks, i) != null)
        newTasks.push(t1.$index(tasks, i));
    return newTasks.length === 0 ? null : newTasks;
  } else
    return tasks;
};

$.SchedulerImpl__runScheduledTasks = function(tasks, rescheduled) {
  var t, e, t1, j, i, queue, exception, t2;
  for (t1 = $.getInterceptor$asx(tasks), j = t1.get$length(tasks), i = 0; $.JSNumber_methods.$lt(i, j); ++i) {
    t = t1.$index(tasks, i);
    try {
      if (t.isRepeating$0() === true) {
        if (t.executeRepeating$0() === true) {
          queue = rescheduled;
          if (queue == null) {
            queue = $.List_List($, $.Task);
            $.setRuntimeTypeInfo(queue, [$.Task]);
          }
          $.add$1$ax(queue, t);
          rescheduled = queue;
        }
      } else
        t.executeScheduled$0();
    } catch (exception) {
      t2 = $.unwrapException(exception);
      if (typeof t2 === "object" && t2 !== null && !!$.getInterceptor(t2).$isException) {
        e = t2;
        $.Primitives_printString($.toString$0(e));
      } else
        throw exception;
    }

  }
  return rescheduled;
};

$.Caleer$ = function() {
  return new $.Caleer(null, null);
};

$.Task$_internal = function(_command, _repeating) {
  return new $.Task(_command, _repeating);
};

$.DoubleParser_DoubleParser$instance = function() {
  if ($.DoubleParser__INSTANCE == null)
    $.DoubleParser__INSTANCE = $.DoubleParser$();
  return $.DoubleParser__INSTANCE;
};

$.DoubleParser$ = function() {
  return new $.DoubleParser();
};

$.DoubleRenderer_DoubleRenderer$instance = function() {
  if ($.DoubleRenderer__INSTANCE == null)
    $.DoubleRenderer__INSTANCE = $.DoubleRenderer$();
  return $.DoubleRenderer__INSTANCE;
};

$.DoubleRenderer$ = function() {
  return new $.DoubleRenderer();
};

$.IntegerParser_IntegerParser$instance = function() {
  if ($.IntegerParser__INSTANCE == null)
    $.IntegerParser__INSTANCE = $.IntegerParser$();
  return $.IntegerParser__INSTANCE;
};

$.IntegerParser$ = function() {
  return new $.IntegerParser();
};

$.IntegerRenderer_IntegerRenderer$instance = function() {
  if ($.IntegerRenderer__INSTANCE == null)
    $.IntegerRenderer__INSTANCE = $.IntegerRenderer$();
  return $.IntegerRenderer__INSTANCE;
};

$.IntegerRenderer$ = function() {
  return new $.IntegerRenderer();
};

$.NumberFormatRenderer$ = function(format) {
  var t1 = new $.NumberFormatRenderer(null);
  t1.NumberFormatRenderer$1(format);
  return t1;
};

$.PassthroughParser_PassthroughParser$instance = function() {
  if ($.PassthroughParser__instance == null)
    $.PassthroughParser__instance = $.PassthroughParser$();
  return $.PassthroughParser__instance;
};

$.PassthroughParser$ = function() {
  return new $.PassthroughParser();
};

$.PassthroughRenderer_PassthroughRenderer$instance = function() {
  if ($.PassthroughRenderer__instance == null)
    $.PassthroughRenderer__instance = $.PassthroughRenderer$();
  return $.PassthroughRenderer__instance;
};

$.PassthroughRenderer$ = function() {
  return new $.PassthroughRenderer();
};

$.Html$ = function(html, wordWrap) {
  var t1, t2;
  t1 = $.DivElement_DivElement();
  t2 = new $.Html(null, null, null, null, 0, null, false, null, null, null);
  t2.LabelBase$_internal$2(t1, false);
  t2.Label$2(null, null);
  t2.Html$2(html, wordWrap);
  return t2;
};

$.AbsolutePanel$ = function(elem) {
  var t1 = new $.AbsolutePanel(null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.AbsolutePanel$1(elem);
  return t1;
};

$.AbstractImagePrototype_create = function(resource) {
  var t1 = $.getInterceptor$x(resource);
  return $.ClippedImagePrototype$(t1.get$url(resource), t1.get$left(resource), t1.get$top(resource), t1.get$width(resource), t1.get$height(resource));
};

$.AttachDetachException_tryCommand = function(hasWidgets, c) {
  var caught, w, e, exception, t1;
  caught = null;
  for (; hasWidgets.moveNext$0() === true;) {
    w = hasWidgets.get$current();
    try {
      c.execute$1(w);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!$.getInterceptor(t1).$isException) {
        e = t1;
        if (caught == null)
          caught = $.HashSet$($.Exception);
        $.add$1$ax(caught, e);
      } else
        throw exception;
    }

  }
  if (caught != null)
    throw $.wrapException($.AttachDetachException$(caught));
};

$.AttachDetachException$ = function(causes) {
  var t1 = new $.AttachDetachException(causes);
  t1.UmbrellaException$1(causes);
  return t1;
};

$.AttachExceptionCommand$ = function() {
  return new $.AttachExceptionCommand();
};

$.DetachExceptionCommand$ = function() {
  return new $.DetachExceptionCommand();
};

$.Button$ = function(html, handler) {
  var t1 = new $.Button(0, null, false, null, null, null);
  t1.FocusWidget$1($.ButtonElement_ButtonElement());
  t1.Button$2(html, handler);
  return t1;
};

$.CaptionPanel$ = function(caption, asHtml) {
  var t1 = new $.CaptionPanel(null, null, null, 0, null, false, null, null, null);
  t1.CaptionPanel$2(caption, asHtml);
  return t1;
};

$.CaptionPanelImpl_CaptionPanelImpl$browserDependant = function() {
  return $.CaptionPanelImpl$();
};

$.CaptionPanelImpl$ = function() {
  return new $.CaptionPanelImpl();
};

$.CheckBox$ = function(label, asHtml) {
  var t1 = new $.CheckBox(null, null, null, null, false, 0, null, false, null, null, null);
  t1.FocusWidget$1($.SpanElement_SpanElement());
  t1.CheckBox$2(label, asHtml);
  return t1;
};

$.SimpleFace$ = function(customButton, delegateTo, $name, faceID) {
  return new $.SimpleFace($name, faceID, delegateTo, null, customButton);
};

$._DeckAnimateCommand$ = function(_panel, layout) {
  return new $._DeckAnimateCommand(_panel, false, false, 0, null, layout);
};

$._LayoutCommandAnimationCallback$ = function(_panel, _callback) {
  return new $._LayoutCommandAnimationCallback(_panel, _callback);
};

$.DeckPanel$ = function() {
  var t1 = new $.DeckPanel(false, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.DeckPanel$0();
  return t1;
};

$._SlideAnimation$ = function(_deckPanel, scheduler) {
  var t1 = new $._SlideAnimation(_deckPanel, null, null, false, -1, null, null, -1, null, false, false, null, -1, null, -1, false);
  t1.Animation$1(scheduler);
  return t1;
};

$.DecoratedPopupPanel$ = function(autoHide, modal, prefix) {
  var t1 = new $.DecoratedPopupPanel(null, null, $.AnimationType_0, false, false, false, false, false, null, null, null, null, "dwt-PopupPanelGlass", false, false, -1, null, null, null, -1, null, 0, null, false, null, null, null);
  t1.SimplePanel$1(null);
  t1.PopupPanel$2(autoHide, modal);
  t1.DecoratedPopupPanel$3(autoHide, modal, prefix);
  return t1;
};

$.DecoratedStackPanel$ = function() {
  var t1 = new $.DecoratedStackPanel(null, -1, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.StackPanel$0();
  t1.DecoratedStackPanel$0();
  return t1;
};

$.DecoratorPanel_createTR = function(styleName) {
  var trElem, t1, t2;
  trElem = document.createElement("tr");
  trElem.className = styleName;
  $.get$LocaleInfo_instance();
  t1 = $.getInterceptor$ns(styleName);
  t2 = t1.$add(styleName, "Left");
  if (typeof t2 !== "number")
    return $.DecoratorPanel_createTR$bailout(4, t1, styleName, trElem, t2);
  trElem.appendChild($.DecoratorPanel_createTD(t2));
  t2 = t1.$add(styleName, "Center");
  if (typeof t2 !== "number")
    return $.DecoratorPanel_createTR$bailout(5, t1, styleName, trElem, t2);
  trElem.appendChild($.DecoratorPanel_createTD(t2));
  t1 = t1.$add(styleName, "Right");
  if (typeof t1 !== "number")
    return $.DecoratorPanel_createTR$bailout(6, t1, 0, trElem);
  trElem.appendChild($.DecoratorPanel_createTD(t1));
  return trElem;
};

$.DecoratorPanel_createTR$bailout = function(state0, t1, styleName, trElem, t2) {
  switch (state0) {
    case 0:
      trElem = document.createElement("tr");
      trElem.className = styleName;
      $.get$LocaleInfo_instance();
      t1 = $.getInterceptor$ns(styleName);
      t2 = t1.$add(styleName, "Left");
    case 4:
      state0 = 0;
      trElem.appendChild($.DecoratorPanel_createTD(t2));
      t2 = t1.$add(styleName, "Center");
    case 5:
      state0 = 0;
      trElem.appendChild($.DecoratorPanel_createTD(t2));
      t1 = t1.$add(styleName, "Right");
    case 6:
      state0 = 0;
      trElem.appendChild($.DecoratorPanel_createTD(t1));
      return trElem;
  }
};

$.DecoratorPanel_createTD = function(styleName) {
  var tdElem, inner;
  tdElem = document.createElement("td");
  inner = document.createElement("div");
  tdElem.appendChild(inner);
  tdElem.className = styleName;
  inner.className = $.$add$ns(styleName, "Inner");
  return tdElem;
};

$.DecoratorPanel$ = function(rowStyles, containerIndex) {
  var t1 = new $.DecoratorPanel(null, null, null, 0, null, false, null, null, null);
  t1.SimplePanel$fromElement$1($.TableElement_TableElement());
  t1.DecoratorPanel$2(rowStyles, containerIndex);
  return t1;
};

$.DialogBox$ = function(autoHide, modal, captionWidget) {
  var t1 = new $.DialogBox(null, false, null, null, null, null, null, null, null, null, $.AnimationType_0, false, false, false, false, false, null, null, null, null, "dwt-PopupPanelGlass", false, false, -1, null, null, null, -1, null, 0, null, false, null, null, null);
  t1.SimplePanel$1(null);
  t1.PopupPanel$2(autoHide, modal);
  t1.DecoratedPopupPanel$3(autoHide, modal, "dialog");
  t1.DialogBox$3(autoHide, modal, captionWidget);
  return t1;
};

$.DialogBoxCaptionImpl$ = function() {
  var t1, t2;
  t1 = $.DivElement_DivElement();
  t2 = new $.DialogBoxCaptionImpl(null, null, null, null, 0, null, false, null, null, null);
  t2.LabelBase$_internal$2(t1, false);
  t2.Label$2(null, null);
  t2.Html$2(null, null);
  t2.DialogBoxCaptionImpl$0();
  return t2;
};

$.DisclosurePanel$fromText = function(headerText) {
  var t1;
  $.VerticalPanel$();
  $.SimplePanel$(null);
  t1 = new $.DisclosurePanel($.VerticalPanel$(), $.SimplePanel$(null), null, false, false, null, null, 0, null, false, null, null, null);
  t1.DisclosurePanel$fromImageResources$3($.get$DisclosurePanel_DEFAULT_IMAGES().disclosurePanelOpen$0(), $.get$DisclosurePanel_DEFAULT_IMAGES().disclosurePanelClosed$0(), headerText);
  return t1;
};

$._DefaultImages$ = function() {
  return new $._DefaultImages($.Map_Map($.JSString, $.ImageResource), "disclosurePanelClosed.png", "disclosurePanelClosed_rtl.png", "disclosurePanelOpen.png");
};

$._ClickableHeader$ = function(_panel) {
  var t1 = new $._ClickableHeader(_panel, null, 0, null, false, null, null, null);
  t1.SimplePanel$fromElement$1($.AnchorElement_AnchorElement(null));
  t1._ClickableHeader$1(_panel);
  return t1;
};

$._ContentAnimation$ = function() {
  var t1 = new $._ContentAnimation(null, null, null, -1, null, false, false, null, -1, null, -1, false);
  t1.Animation$1(null);
  return t1;
};

$._ImageResourceImager$ = function(openImage, closedImage) {
  return new $._ImageResourceImager(openImage, closedImage);
};

$._DefaultHeader$fromImageResources = function(panel, openImage, closedImage, text) {
  var t1 = new $._DefaultHeader(panel, null, null, null, 0, null, false, null, null, null);
  t1._DefaultHeader$3(panel, $._ImageResourceImager$(openImage, closedImage), text);
  return t1;
};

$.DockLayoutPanel$ = function(_unit) {
  var t1 = new $.DockLayoutPanel(_unit, null, null, null, 0, 0, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.DockLayoutPanel$1(_unit);
  return t1;
};

$.LayoutData$ = function(direction, size, layer) {
  return new $.LayoutData(direction, null, size, null, false, layer);
};

$._DockAnimateCommand$ = function(_panel, layout) {
  return new $._DockAnimateCommand(_panel, false, false, 0, null, layout);
};

$.DockPanel$ = function() {
  var t1 = new $.DockPanel($.HorizontalAlignmentConstant_TextAlign_right, $.VerticalAlignmentConstant_top, null, null, null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.CellPanel$0();
  t1.DockPanel$0();
  return t1;
};

$.DockPanelLayoutData$ = function(dir) {
  var t1 = new $.DockPanelLayoutData(null, $.HorizontalAlignmentConstant_TextAlign_right.getTextAlignString$0(), "", null, $.VerticalAlignmentConstant_top.getVerticalAlignString$0(), "");
  t1.DockPanelLayoutData$1(dir);
  return t1;
};

$.TmpRow$ = function() {
  return new $.TmpRow(0, null);
};

$.DoubleBox$ = function() {
  var t1, t2, t3, t4;
  t1 = $.TextInputElement_TextInputElement();
  t2 = $.DoubleRenderer_DoubleRenderer$instance();
  t3 = $.DoubleParser_DoubleParser$instance();
  t4 = new $.DoubleBox(null, null, null, null, null, false, 0, null, false, null, null, null);
  t4.FocusWidget$1(t1);
  t4.ValueBoxBase$3(t1, t2, t3);
  t4.ValueBox$fromElement$3(t1, t2, t3);
  return t4;
};

$.FileUpload$ = function(element) {
  var t1, t2;
  t1 = $ === element;
  if (t1)
    element = null;
  t2 = new $.FileUpload(null, 0, null, false, null, null, null);
  t2.FileUpload$1(element, !t1);
  return t2;
};

$.FileUploadImpl_FileUploadImpl$browserDependent = function() {
  return $.FileUploadImpl$_internal();
};

$.FileUploadImpl$_internal = function() {
  return new $.FileUploadImpl();
};

$.FlexTable_addCells = function(table, row, num) {
  var rowElem, t1, i;
  if (typeof num !== "number")
    return $.FlexTable_addCells$bailout(1, table, row, num);
  rowElem = $.$index$asx($.get$rows$x(typeof table !== "object" || table === null || !$.getInterceptor(table).$isTableElement ? $.interceptedTypeCast($.get$parent$x(table), "$isTableElement") : table), row);
  for (t1 = $.getInterceptor$x(rowElem), i = 0; i < num; ++i)
    t1.append$1(rowElem, document.createElement("td"));
};

$.FlexTable_addCells$bailout = function(state0, table, row, num) {
  var rowElem, t1, i;
  rowElem = $.$index$asx($.get$rows$x(typeof table !== "object" || table === null || !$.getInterceptor(table).$isTableElement ? $.interceptedTypeCast($.get$parent$x(table), "$isTableElement") : table), row);
  for (t1 = $.getInterceptor$x(rowElem), i = 0; $.JSNumber_methods.$lt(i, num); ++i)
    t1.append$1(rowElem, document.createElement("td"));
};

$.FlexTable$ = function() {
  var t1 = new $.FlexTable(null, null, null, null, null, $.ElementMapperImpl$($.Widget), 0, null, false, null, null, null);
  t1.HtmlTable$0();
  t1.FlexTable$0();
  return t1;
};

$.FlexCellFormatter$ = function(table) {
  return new $.FlexCellFormatter(table);
};

$.FlowPanel$ = function() {
  var t1 = new $.FlowPanel(null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.FlowPanel$0();
  return t1;
};

$.FocusPanel$ = function(child) {
  var t1 = new $.FocusPanel(null, 0, null, false, null, null, null);
  t1.SimplePanel$1(child);
  return t1;
};

$.Frame$ = function(url) {
  var t1 = new $.Frame(0, null, false, null, null, null);
  t1.Frame$1(url);
  return t1;
};

$.Grid_addRows = function(table, rows, columns) {
  var td, row, cellNum, t1, rowNum;
  td = document.createElement("td");
  $.set$innerHtml$x(td, "&nbsp;");
  row = document.createElement("tr");
  for (cellNum = 0; cellNum < columns; ++cellNum)
    row.appendChild(td.cloneNode(true));
  t1 = $.getInterceptor$x(table);
  t1.append$1(table, row);
  for (rowNum = 1; rowNum < rows; ++rowNum)
    t1.append$1(table, row.cloneNode(true));
};

$.Grid$ = function(rows, columns) {
  var t1 = new $.Grid(0, 0, null, null, null, null, null, $.ElementMapperImpl$($.Widget), 0, null, false, null, null, null);
  t1.HtmlTable$0();
  t1.Grid$2(rows, columns);
  return t1;
};

$.Hidden$ = function($name, value) {
  var t1 = new $.Hidden(null, 0, null, false, null, null, null);
  t1.Hidden$2($name, value);
  return t1;
};

$.History_init = function() {
  if (!$.History__initialized) {
    $.History__initialized = true;
    $.History__impl = $.HistoryImpl$();
    if (!$.History__impl.init$0()) {
      $.History__impl = null;
      $.Primitives_printString("Unable to initialise the history subsystem; did you\ninclude the history frame in you host page? Try  \n<iframe src=\"javascript:''\" id='__dwt_historyFrame' \nstyle='position:absolute;width:0'height:0;border:0'>\n</iframe>\n");
    }
  }
};

$.History_encodeHistoryToken = function(historyToken) {
  $.History_init();
  if ($.History__impl != null)
    ;
  return historyToken;
};

$.HorizontalPanel$ = function() {
  var t1 = new $.HorizontalPanel($.HorizontalAlignmentConstant_TextAlign_right, $.VerticalAlignmentConstant_top, null, null, null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.CellPanel$0();
  t1.HorizontalPanel$0();
  return t1;
};

$.HtmlPanel$ = function(html) {
  var t1 = new $.HtmlPanel(null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.HtmlPanel$1(html);
  return t1;
};

$.CellFormatter$ = function(_table) {
  return new $.CellFormatter(_table);
};

$.ColumnFormatter$ = function() {
  return new $.ColumnFormatter(null, null);
};

$.RowFormatter$ = function() {
  return new $.RowFormatter(null);
};

$._WidgetIterator$ = function(_table) {
  var t1 = new $._WidgetIterator(_table, null, -1, -1);
  t1._WidgetIterator$1(_table);
  return t1;
};

$.Hyperlink$ = function(text, asHtml, targetHistoryToken) {
  var t1 = new $.Hyperlink(null, $.AnchorElement_AnchorElement(null), null, 0, null, false, null, null, null);
  t1.Hyperlink$3(text, asHtml, targetHistoryToken);
  return t1;
};

$.Image$ = function(url) {
  var t1 = new $.Image(null, 0, null, false, null, null, null);
  t1.Image$fromSafeUri$1($.UriUtils_unsafeCastFromUntrustedString(url));
  return t1;
};

$.Image$fromSafeUriAndMeasure = function(url, left, $top, width, height) {
  var t1 = new $.Image(null, 0, null, false, null, null, null);
  t1.Image$fromSafeUriAndMeasure$5(url, left, $top, width, height);
  return t1;
};

$.Image$fromImageResource = function(resource) {
  var t1, t2;
  t1 = $.getInterceptor$x(resource);
  t2 = new $.Image(null, 0, null, false, null, null, null);
  t2.Image$clippedSafe$5(t1.get$url(resource), t1.get$left(resource), t1.get$top(resource), t1.get$width(resource), t1.get$height(resource));
  return t2;
};

$.StateScheduledCommand$ = function(_state, _image) {
  return new $.StateScheduledCommand(_state, _image);
};

$._ClippedState$ = function(image, url, left, $top, width, height) {
  var t1 = new $._ClippedState(height, left, true, $top, url, width, null);
  t1._ClippedState$6(image, url, left, $top, width, height);
  return t1;
};

$._UnclippedState$ = function(element, image, url) {
  var t1 = new $._UnclippedState(null);
  t1._UnclippedState$3$element$image$url(element, image, url);
  return t1;
};

$.ClippedImageImpl$ = function() {
  return new $.ClippedImageImpl($.JSString_methods.$add($.DWT_getModuleBaseURL(), "resource/images/clear.gif"));
};

$.ClippedImagePrototype$ = function(url, left, $top, width, height) {
  return new $.ClippedImagePrototype(height, left, $top, url, width);
};

$.ElementMapperImpl$ = function(T) {
  var t1 = $.List_List($, T);
  $.setRuntimeTypeInfo(t1, [T]);
  t1 = new $.ElementMapperImpl(null, t1);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.ElementMapperImpl_getIndex = function(elem) {
  var t1 = $.getInterceptor$x(elem);
  if (t1.get$dataset(elem).$$dom_attributes._liblib3$_element.hasAttribute("data-uiObjectID") === true)
    return $.Primitives_parseInt(t1.get$dataset(elem).$$dom_attributes._liblib3$_element.getAttribute("data-uiObjectID"), null, null);
  else
    return -1;
};

$.ElementMapperImpl_setIndex = function(elem, index) {
  var t1 = $.get$dataset$x(elem);
  t1.$indexSet(t1, "uiObjectID", $.toString$0(index));
};

$.FreeNode$ = function(index, next) {
  return new $.FreeNode(index, next);
};

$.FocusImpl_getFocusImplForPanel = function() {
  if ($.FocusImpl_implPanel == null)
    $.FocusImpl_implPanel = $.FocusImplDefault$();
  return $.FocusImpl_implPanel;
};

$.FocusImpl_getFocusImplForWidget = function() {
  if ($.FocusImpl_implWidget == null)
    $.FocusImpl_implWidget = $.FocusImplDefault$();
  return $.FocusImpl_implWidget;
};

$.FocusImplDefault$ = function() {
  return new $.FocusImplDefault();
};

$.HistoryImpl$ = function() {
  return new $.HistoryImpl($.SimpleEventBus$(null));
};

$.HyperlinkImpl$ = function() {
  return new $.HyperlinkImpl();
};

$.PopupImpl$ = function() {
  return new $.PopupImpl();
};

$.ScrollImpl$ = function() {
  return new $.ScrollImpl();
};

$.InlineHtml$ = function(html) {
  var t1, t2;
  t1 = $.SpanElement_SpanElement();
  t2 = new $.InlineHtml(null, null, null, null, 0, null, false, null, null, null);
  t2.LabelBase$_internal$2(t1, "span" === $.toLowerCase$0$s($.get$tagName$x(t1)));
  t2.Label$fromElement$1(t1);
  t2.Html$fromElement$1(t1);
  t2.InlineHtml$1(html);
  return t2;
};

$.InlineHyperlink$ = function(text, asHtml, targetHistoryToken) {
  var t1 = new $.InlineHyperlink(null, $.AnchorElement_AnchorElement(null), null, 0, null, false, null, null, null);
  t1.Hyperlink$fromElement$1(null);
  t1.InlineHyperlink$3(text, asHtml, targetHistoryToken);
  return t1;
};

$.InlineLabel$ = function(text) {
  var t1, t2;
  t1 = $.SpanElement_SpanElement();
  t2 = new $.InlineLabel(null, null, null, null, 0, null, false, null, null, null);
  t2.LabelBase$_internal$2(t1, "span" === $.toLowerCase$0$s($.get$tagName$x(t1)));
  t2.Label$fromElement$1(t1);
  t2.InlineLabel$1(text);
  return t2;
};

$.IntegerBox$ = function() {
  var t1, t2, t3, t4;
  t1 = $.TextInputElement_TextInputElement();
  t2 = $.IntegerRenderer_IntegerRenderer$instance();
  t3 = $.IntegerParser_IntegerParser$instance();
  t4 = new $.IntegerBox(null, null, null, null, null, false, 0, null, false, null, null, null);
  t4.FocusWidget$1(t1);
  t4.ValueBoxBase$3(t1, t2, t3);
  t4.ValueBox$fromElement$3(t1, t2, t3);
  return t4;
};

$.Label$ = function(text, wordWrap) {
  var t1, t2;
  t1 = $.DivElement_DivElement();
  t2 = new $.Label(null, null, null, null, 0, null, false, null, null, null);
  t2.LabelBase$_internal$2(t1, false);
  t2.Label$2(text, wordWrap);
  return t2;
};

$.LayoutCommand$ = function(_layout) {
  return new $.LayoutCommand(false, false, 0, null, _layout);
};

$.LayoutCommandAnimationCallback$ = function(_command) {
  return new $.LayoutCommandAnimationCallback(_command);
};

$.LayoutPanel$ = function() {
  var t1 = new $.LayoutPanel(null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.LayoutPanel$0();
  return t1;
};

$.ListBox$ = function(isMultipleSelect, element) {
  var t1, t2;
  t1 = element == null ? $.SelectElement_SelectElement() : element;
  t2 = new $.ListBox(0, null, false, null, null, null);
  t2.FocusWidget$1(t1);
  t2.ListBox$2(isMultipleSelect, element);
  return t2;
};

$.MenuBar$ = function(vertical, resources) {
  var t1, t2;
  t1 = $.List_List($, $.UiObject);
  $.setRuntimeTypeInfo(t1, [$.UiObject]);
  t2 = $.List_List($, $.MenuItem);
  $.setRuntimeTypeInfo(t2, [$.MenuItem]);
  t2 = new $.MenuBar(t1, t2, null, null, false, null, null, null, null, false, false, true, 0, null, false, null, null, null);
  t2.MenuBar$2(vertical, resources);
  return t2;
};

$.MenuResources$ = function() {
  return new $.MenuResources(null, "menuBarSubMenuIcon.gif", "menuBarSubMenuIcon_rtl.gif");
};

$._MenuDecoratedPopupPanel$ = function(menuBar, item, autoHide, modal, prefix) {
  var t1 = new $._MenuDecoratedPopupPanel(menuBar, item, null, null, $.AnimationType_0, false, false, false, false, false, null, null, null, null, "dwt-PopupPanelGlass", false, false, -1, null, null, null, -1, null, 0, null, false, null, null, null);
  t1.SimplePanel$1(null);
  t1.PopupPanel$2(autoHide, modal);
  t1.DecoratedPopupPanel$3(autoHide, modal, prefix);
  t1._MenuDecoratedPopupPanel$5(menuBar, item, autoHide, modal, prefix);
  return t1;
};

$._PopupPanelPositionCallback$ = function(menuBar, item) {
  return new $._PopupPanelPositionCallback(menuBar, item);
};

$._MenuScheduledCommand$ = function(_cmd) {
  return new $._MenuScheduledCommand(_cmd);
};

$.MenuItem$ = function(text, asHtml, cmd, subMenu) {
  var t1 = new $.MenuItem(null, null, null, true, null);
  t1.MenuItem$4$cmd$subMenu(text, asHtml, cmd, subMenu);
  return t1;
};

$.MenuItemSeparator$ = function() {
  var t1 = new $.MenuItemSeparator(null, null);
  t1.MenuItemSeparator$0();
  return t1;
};

$.NumberLabel$ = function(format) {
  var t1, t2;
  t1 = $.NumberFormatRenderer$(format);
  t2 = $.SpanElement_SpanElement();
  t1 = new $.NumberLabel(t1, null, null, null, null, null, 0, null, false, null, null, null);
  t1.LabelBase$_internal$2(t2, true);
  return t1;
};

$.PasswordTextBox$ = function() {
  var t1, t2, t3, t4;
  t1 = $.PasswordInputElement_PasswordInputElement();
  t2 = $.PassthroughRenderer_PassthroughRenderer$instance();
  t3 = $.PassthroughParser_PassthroughParser$instance();
  t4 = new $.PasswordTextBox(null, null, null, null, null, false, 0, null, false, null, null, null);
  t4.FocusWidget$1(t1);
  t4.ValueBoxBase$3(t1, t2, t3);
  t4.TextBox$fromElement$1(t1);
  t4.PasswordTextBox$fromElement$1(t1);
  return t4;
};

$.HistoryValueChangeHandler$ = function(_panel) {
  return new $.HistoryValueChangeHandler(_panel);
};

$.ResizeAnimation$ = function(panel) {
  var t1 = new $.ResizeAnimation(null, false, null, -1, false, null, false, null, -1, null, false, false, null, -1, null, -1, false);
  t1.Animation$1(null);
  t1.ResizeAnimation$1(panel);
  return t1;
};

$._WindowResizeHandler$ = function(_panel) {
  return new $._WindowResizeHandler(_panel);
};

$.PushButton$fromImage = function(upImage, downImage, handler) {
  var t1 = new $.PushButton(null, null, null, null, null, null, null, null, false, false, false, 0, null, false, null, null, null);
  t1.FocusWidget$1($.get$FocusPanel_impl().createFocusable$0());
  t1.CustomButton$fromImage$3$downImage$handler(upImage, downImage, handler);
  return t1;
};

$.RadioButton$ = function($name, label, asHtml) {
  var t1, t2;
  t1 = $.InputElement_InputElement(null);
  t2 = new $.RadioButton(null, null, null, null, null, false, 0, null, false, null, null, null);
  t2.FocusWidget$1($.SpanElement_SpanElement());
  t2.CheckBox$fromElement$1(t1);
  t2.RadioButton$3($name, label, asHtml);
  return t2;
};

$.RootLayoutPanel$_initial = function() {
  var t1 = new $.RootLayoutPanel(null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.LayoutPanel$0();
  t1.RootLayoutPanel$_initial$0();
  return t1;
};

$.RootPanel_detachNow = function(widget) {
  var t1;
  try {
    widget.onDetach$0();
  } finally {
    t1 = $.get$RootPanel__widgetsToDetach();
    t1.remove$1(t1, widget);
  }
};

$.RootPanel_get = function(id) {
  var t1, elem, rp;
  t1 = id == null;
  if (!t1) {
    elem = document.getElementById(id);
    if (null == elem)
      return;
  } else
    elem = null;
  if (t1)
    id = $.RootPanel_DEFAULT_ID;
  t1 = $.get$RootPanel__rootPanels();
  rp = t1.$index(t1, id);
  if (rp != null)
    if (elem == null || $.$eq(rp.getElement$0(), elem) === true)
      return rp;
  t1 = $.get$RootPanel__rootPanels();
  if (t1.get$length(t1) === 0) {
    $.RootPanel__hookWindowClosing();
    $.get$LocaleInfo_instance();
  }
  rp = elem == null ? $.DefaultRootPanel$() : $.RootPanel$(elem);
  t1 = $.get$RootPanel__rootPanels();
  t1.$indexSet(t1, id, rp);
  t1 = $.get$RootPanel__widgetsToDetach();
  t1.add$1(t1, rp);
  return rp;
};

$.RootPanel_getBodyElement = function() {
  return document.body;
};

$.RootPanel_detachWidgets = function() {
  try {
    var t1 = $.get$RootPanel__widgetsToDetach();
    $.AttachDetachException_tryCommand(t1.get$iterator(t1), $.get$RootPanel__maybeDetachCommand());
  } finally {
    t1 = $.get$RootPanel__widgetsToDetach();
    if (t1._liblib0$_length > 0) {
      t1._elements = null;
      t1._rest = null;
      t1._nums = null;
      t1._strings = null;
      t1._liblib0$_length = 0;
    }
    t1 = $.get$RootPanel__rootPanels();
    if (t1._liblib0$_length > 0) {
      t1._keys = null;
      t1._rest = null;
      t1._nums = null;
      t1._strings = null;
      t1._liblib0$_length = 0;
    }
  }
};

$.RootPanel__hookWindowClosing = function() {
  $.Window_methods.get$onUnload(window).listen$1(new $.RootPanel__hookWindowClosing_anon());
};

$.RootPanel$ = function(elem) {
  var t1 = new $.RootPanel(null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.AbsolutePanel$1(elem);
  t1.RootPanel$1(elem);
  return t1;
};

$.DefaultRootPanel$ = function() {
  var t1, t2;
  t1 = $.RootPanel_getBodyElement();
  t2 = new $.DefaultRootPanel(null, null, 0, null, false, null, null, null);
  t2.ComplexPanel$0();
  t2.AbsolutePanel$1(t1);
  t2.RootPanel$1(t1);
  return t2;
};

$.MaybeDetachExceptionCommand$ = function() {
  return new $.MaybeDetachExceptionCommand();
};

$.ScrollPanel$ = function(child) {
  var t1 = new $.ScrollPanel(null, null, null, 0, null, false, null, null, null);
  t1.SimplePanel$1(null);
  t1.ScrollPanel$1(child);
  return t1;
};

$.SimpleCheckBox$ = function(element) {
  var t1, t2;
  t1 = element == null ? $.InputElement_InputElement("checkbox") : element;
  t2 = new $.SimpleCheckBox(null, 0, null, false, null, null, null);
  t2.FocusWidget$1(t1);
  t2.SimpleCheckBox$1(element);
  return t2;
};

$.SimplePanel$ = function(child) {
  var t1 = new $.SimplePanel(null, 0, null, false, null, null, null);
  t1.SimplePanel$1(child);
  return t1;
};

$.SimplePanel$fromElement = function(elem) {
  var t1 = new $.SimplePanel(null, 0, null, false, null, null, null);
  t1.SimplePanel$fromElement$1(elem);
  return t1;
};

$.SimplePanelIterator$ = function(_panel) {
  var t1 = new $.SimplePanelIterator(false, null, _panel);
  t1.SimplePanelIterator$1(_panel);
  return t1;
};

$.SimpleRadioButton$ = function($name, element) {
  var t1, t2, t3;
  t1 = element == null ? $.InputElement_InputElement("radio") : element;
  t2 = t1 == null ? $.InputElement_InputElement("checkbox") : t1;
  t3 = new $.SimpleRadioButton(null, 0, null, false, null, null, null);
  t3.FocusWidget$1(t2);
  t3.SimpleCheckBox$1(t1);
  t3.SimpleRadioButton$2($name, element);
  return t3;
};

$.SplitLayoutPanel$ = function(_splitterSize) {
  var t1 = new $.SplitLayoutPanel(_splitterSize, $.Unit_px, null, null, null, 0, 0, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.DockLayoutPanel$1($.Unit_px);
  t1.SplitLayoutPanel$1(_splitterSize);
  return t1;
};

$.HSplitter$ = function(splitLayoutPanel, target, reverse) {
  var t1 = new $.HSplitter(target, 0, false, null, reverse, 0, -1, 0, 0, false, 0, splitLayoutPanel, 0, null, false, null, null, null);
  t1.Splitter$3(splitLayoutPanel, target, reverse);
  t1.HSplitter$3(splitLayoutPanel, target, reverse);
  return t1;
};

$.VSplitter$ = function(splitLayoutPanel, target, reverse) {
  var t1 = new $.VSplitter(target, 0, false, null, reverse, 0, -1, 0, 0, false, 0, splitLayoutPanel, 0, null, false, null, null, null);
  t1.Splitter$3(splitLayoutPanel, target, reverse);
  t1.VSplitter$3(splitLayoutPanel, target, reverse);
  return t1;
};

$.SplitterScheduledCommand$ = function(_splitter) {
  return new $.SplitterScheduledCommand(_splitter);
};

$.StackLayoutPanel$ = function(_unit) {
  var t1 = $.List_List($, $._LayoutData);
  $.setRuntimeTypeInfo(t1, [$._LayoutData]);
  t1 = new $.StackLayoutPanel(250, $.LayoutPanel$(), _unit, t1, -1, null, null, 0, null, false, null, null, null);
  t1.StackLayoutPanel$1(_unit);
  return t1;
};

$._Header$ = function(child) {
  var t1 = new $._Header(null, null, 0, null, false, null, null, null);
  t1._Header$1(child);
  return t1;
};

$._LayoutData$ = function(widget, header, headerSize) {
  return new $._LayoutData(headerSize, header, widget);
};

$._Iterator$ = function(_panel) {
  return new $._Iterator(0, -1, _panel);
};

$.StackPanel$ = function() {
  var t1 = new $.StackPanel(null, -1, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.StackPanel$0();
  return t1;
};

$.TabBar$ = function() {
  var t1 = new $.TabBar($.HorizontalPanel$(), null, null, null, 0, null, false, null, null, null);
  t1.TabBar$0();
  return t1;
};

$._ClickDelegatePanel$ = function(_tabBar, child) {
  var t1 = new $._ClickDelegatePanel(null, true, _tabBar, null, null, 0, null, false, null, null, null);
  t1._ClickDelegatePanel$2(_tabBar, child);
  return t1;
};

$.TabLayoutPanel$ = function(barHeight, barUnit) {
  var t1, t2;
  t1 = $.FlowPanel$();
  t2 = $.List_List($, $._Tab);
  $.setRuntimeTypeInfo(t2, [$._Tab]);
  t2 = new $.TabLayoutPanel(null, t1, t2, -1, null, null, 0, null, false, null, null, null);
  t2.TabLayoutPanel$2(barHeight, barUnit);
  return t2;
};

$._Tab$ = function(_panel, child) {
  var t1 = new $._Tab(_panel, null, null, null, 0, null, false, null, null, null);
  t1.SimplePanel$fromElement$1($.DivElement_DivElement());
  t1._Tab$2(_panel, child);
  return t1;
};

$._TabbedDeckLayoutPanel$ = function(_panel) {
  var t1 = new $._TabbedDeckLayoutPanel(_panel, 0, false, null, null, null, null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.DeckLayoutPanel$0();
  return t1;
};

$.TabPanel$ = function() {
  var t1 = new $.TabPanel(null, null, null, null, 0, null, false, null, null, null);
  t1.TabPanel$0();
  return t1;
};

$._TabbedDeckPanel$ = function(_tabBar) {
  var t1 = new $._TabbedDeckPanel(_tabBar, false, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.DeckPanel$0();
  return t1;
};

$._UnmodifiableTabBar$ = function(_panel) {
  var t1 = new $._UnmodifiableTabBar(_panel, $.HorizontalPanel$(), null, null, null, 0, null, false, null, null, null);
  t1.TabBar$0();
  return t1;
};

$._TabListener$ = function(_tabPanel) {
  return new $._TabListener(_tabPanel);
};

$.TextArea$ = function() {
  var t1, t2, t3, t4;
  t1 = $.TextAreaElement_TextAreaElement();
  t2 = $.PassthroughRenderer_PassthroughRenderer$instance();
  t3 = $.PassthroughParser_PassthroughParser$instance();
  t4 = new $.TextArea(null, null, null, null, null, false, 0, null, false, null, null, null);
  t4.FocusWidget$1(t1);
  t4.ValueBoxBase$3(t1, t2, t3);
  t4.TextArea$fromElement$1(t1);
  return t4;
};

$.TextBox$ = function() {
  var t1, t2, t3, t4;
  t1 = $.InputElement_InputElement(null);
  t2 = $.PassthroughRenderer_PassthroughRenderer$instance();
  t3 = $.PassthroughParser_PassthroughParser$instance();
  t4 = new $.TextBox(null, null, null, null, null, false, 0, null, false, null, null, null);
  t4.FocusWidget$1(t1);
  t4.ValueBoxBase$3(t1, t2, t3);
  t4.TextBox$fromElement$1(t1);
  return t4;
};

$.ToggleButton$fromImage = function(upImage, downImage, handler) {
  var t1 = new $.ToggleButton(null, null, null, null, null, null, null, null, false, false, false, 0, null, false, null, null, null);
  t1.FocusWidget$1($.get$FocusPanel_impl().createFocusable$0());
  t1.CustomButton$fromImage$3$downImage$handler(upImage, downImage, handler);
  return t1;
};

$.Tree_shouldTreeDelegateFocusToElement = function(elem) {
  return false;
};

$.Tree_isArrowKey = function(code) {
  switch (code) {
    case 63233:
    case 63235:
    case 63232:
    case 63234:
    case 40:
    case 39:
    case 38:
    case 37:
      return true;
    default:
      return false;
  }
};

$.Tree__standardizeKeycode = function(code) {
  switch (code) {
    case 63233:
      code = 40;
      break;
    case 63235:
      code = 39;
      break;
    case 63232:
      code = 38;
      break;
    case 63234:
      code = 37;
      break;
  }
  $.get$LocaleInfo_instance();
  return code;
};

$.Tree$ = function(resources, useLeafImages) {
  var t1 = new $.Tree($.Map_Map($.Widget, $.TreeItem), null, null, null, "", false, false, null, null, 0, null, false, null, null, null);
  t1.Tree$2(resources, useLeafImages);
  return t1;
};

$._TreeResources$ = function() {
  return new $._TreeResources($.Map_Map($.JSString, $.ImageResource), "treeClosed.gif", "treeLeaf.gif", "treeOpen.gif");
};

$._TreeResources_DEFAULT_RESOURCES = function() {
  if ($._TreeResources__instance == null)
    $._TreeResources__instance = $._TreeResources$();
  return $._TreeResources__instance;
};

$._ImageAdapter$ = function(resources) {
  var t1 = new $._ImageAdapter(null, null, null);
  t1._ImageAdapter$1(resources);
  return t1;
};

$.TreeItem$ = function(html, isRoot, widget) {
  var t1, t2;
  t1 = $ === widget;
  if (t1)
    widget = null;
  t2 = new $.TreeItem(null, null, null, null, isRoot, false, null, false, null, null, null, null);
  t2.TreeItem$3$html$isRoot$widget(html, isRoot, widget, !t1);
  return t2;
};

$.TreeItemImpl$ = function() {
  var t1 = new $.TreeItemImpl();
  t1.TreeItemImpl$0();
  return t1;
};

$.TreeItemAnimation$ = function(scheduler) {
  var t1 = new $.TreeItemAnimation(null, true, 0, null, -1, null, false, false, null, -1, null, -1, false);
  t1.Animation$1(scheduler);
  return t1;
};

$.UiObject_isVisible = function(elem) {
  return $.get$display$x($.get$style$x(elem)) !== "none";
};

$.UiObject_setVisible = function(elem, visible) {
  var t1, t2;
  t1 = $.getInterceptor$x(elem);
  t2 = t1.get$style(elem);
  $.set$display$x(t2, visible ? "" : "none");
  t1 = t1.get$attributes(elem);
  t1.$indexSet(t1, "aria-hidden", $.JSBool_methods.toString$0(!visible));
};

$.UiObject_setElementStyleName = function(elem, styleName) {
  $.set$$$dom_className$x(elem, styleName);
};

$.UiObject_getElementStylePrimaryName = function(elem) {
  var fullClassName, t1, spaceIdx;
  fullClassName = $.get$$$dom_className$x(elem);
  t1 = $.getInterceptor$asx(fullClassName);
  spaceIdx = t1.indexOf$1(fullClassName, " ");
  if (spaceIdx >= 0)
    return t1.substring$2(fullClassName, 0, spaceIdx);
  return fullClassName;
};

$.UiObject_manageElementStyleName = function(elem, style, add) {
  var t1, t2, old, t3, idx, t4, t5, last, lastPos, begin, end, newClassName;
  t1 = $.getInterceptor(elem);
  if (elem == null)
    throw $.wrapException($._ExceptionImplementation$($.UiObject_NULL_HANDLE_MSG));
  style = $.JSString_methods.trim$0(style);
  t2 = style.length;
  if (t2 === 0)
    throw $.wrapException($._ExceptionImplementation$($.UiObject_EMPTY_STYLENAME_MSG));
  old = t1.get$$$dom_className(elem);
  t3 = $.getInterceptor$asx(old);
  if (add) {
    idx = t3.indexOf$1(old, style);
    for (; t4 = idx === -1, !t4;) {
      if (idx !== 0) {
        t5 = idx - 1;
        if (t5 !== (t5 | 0))
          return $.UiObject_manageElementStyleName$bailout(1, elem, style, old, t3, t1, t2, t4, idx, t5);
        if (t5 < 0 || t5 >= old.length)
          throw $.ioore(t5);
        t5 = old[t5] === " ";
      } else
        t5 = true;
      if (t5) {
        last = idx + t2;
        if (last !== (last | 0))
          return $.UiObject_manageElementStyleName$bailout(2, elem, style, old, t3, t1, t2, t4, idx, 0, last);
        lastPos = old.length;
        if (last !== lastPos)
          if (last < lastPos) {
            if (last < 0)
              throw $.ioore(last);
            t5 = old[last] === " ";
          } else
            t5 = false;
        else
          t5 = true;
        if (t5)
          break;
      }
      idx = t3.indexOf$2(old, style, idx + 1);
    }
    if (t4)
      t1.set$$$dom_className(elem, $.$add$ns(old.length > 0 ? t3.$add(old, " ") : old, style));
  } else {
    idx = t3.indexOf$1(old, style);
    for (; t4 = idx !== -1, t4;) {
      if (idx !== 0) {
        t5 = idx - 1;
        if (t5 !== (t5 | 0))
          return $.UiObject_manageElementStyleName$bailout(3, elem, style, old, t3, t1, t2, t4, idx, t5);
        if (t5 < 0 || t5 >= old.length)
          throw $.ioore(t5);
        t5 = old[t5] === " ";
      } else
        t5 = true;
      if (t5) {
        last = idx + t2;
        if (last !== (last | 0))
          return $.UiObject_manageElementStyleName$bailout(4, elem, style, old, t3, t1, t2, t4, idx, 0, last);
        lastPos = old.length;
        if (last !== lastPos)
          if (last < lastPos) {
            if (last < 0)
              throw $.ioore(last);
            t5 = old[last] === " ";
          } else
            t5 = false;
        else
          t5 = true;
        if (t5)
          break;
      }
      idx = t3.indexOf$2(old, style, idx + 1);
    }
    if (t4) {
      begin = $.JSString_methods.trim$0(t3.substring$2(old, 0, idx));
      end = $.JSString_methods.trim$0(t3.substring$1(old, idx + t2));
      if (begin.length === 0)
        newClassName = end;
      else
        newClassName = end.length === 0 ? begin : $.JSString_methods.$add($.JSString_methods.$add(begin, " "), end);
      t1.set$$$dom_className(elem, newClassName);
    }
  }
};

$.UiObject_manageElementStyleName$bailout = function(state0, elem, style, old, t3, t1, t2, t4, idx, t5, last) {
  switch (state0) {
    case 0:
      t1 = $.getInterceptor(elem);
      if (elem == null)
        throw $.wrapException($._ExceptionImplementation$($.UiObject_NULL_HANDLE_MSG));
      style = $.JSString_methods.trim$0(style);
      t2 = style.length;
      if (t2 === 0)
        throw $.wrapException($._ExceptionImplementation$($.UiObject_EMPTY_STYLENAME_MSG));
      old = t1.get$$$dom_className(elem);
      t3 = $.getInterceptor$asx(old);
    default:
      var lastPos, begin, end, newClassName;
      if (state0 === 2 || state0 === 1 || state0 === 0 && add)
        switch (state0) {
          case 0:
            idx = t3.indexOf$1(old, style);
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t4 = idx === -1;
                    if (!!t4)
                      break L0;
                  case 1:
                    if (state0 === 1 || state0 === 0 && idx !== 0)
                      switch (state0) {
                        case 0:
                          t5 = idx - 1;
                        case 1:
                          state0 = 0;
                          if (t5 >>> 0 !== t5 || t5 >= old.length)
                            throw $.ioore(t5);
                          t5 = old[t5] === " ";
                      }
                    else
                      t5 = true;
                  case 2:
                    if (state0 === 2 || state0 === 0 && t5)
                      switch (state0) {
                        case 0:
                          last = idx + t2;
                        case 2:
                          state0 = 0;
                          lastPos = old.length;
                          if (last !== lastPos)
                            if (last < lastPos) {
                              if (last >>> 0 !== last || last >= lastPos)
                                throw $.ioore(last);
                              t5 = old[last] === " ";
                            } else
                              t5 = false;
                          else
                            t5 = true;
                          if (t5)
                            break L0;
                      }
                    idx = t3.indexOf$2(old, style, idx + 1);
                }
            if (t4)
              t1.set$$$dom_className(elem, $.$add$ns(old.length > 0 ? t3.$add(old, " ") : old, style));
        }
      else
        switch (state0) {
          case 0:
            idx = t3.indexOf$1(old, style);
          default:
            L1:
              while (true)
                switch (state0) {
                  case 0:
                    t4 = idx !== -1;
                    if (!t4)
                      break L1;
                  case 3:
                    if (state0 === 3 || state0 === 0 && idx !== 0)
                      switch (state0) {
                        case 0:
                          t5 = idx - 1;
                        case 3:
                          state0 = 0;
                          if (t5 >>> 0 !== t5 || t5 >= old.length)
                            throw $.ioore(t5);
                          t5 = old[t5] === " ";
                      }
                    else
                      t5 = true;
                  case 4:
                    if (state0 === 4 || state0 === 0 && t5)
                      switch (state0) {
                        case 0:
                          last = idx + t2;
                        case 4:
                          state0 = 0;
                          lastPos = old.length;
                          if (last !== lastPos)
                            if (last < lastPos) {
                              if (last >>> 0 !== last || last >= lastPos)
                                throw $.ioore(last);
                              t5 = old[last] === " ";
                            } else
                              t5 = false;
                          else
                            t5 = true;
                          if (t5)
                            break L1;
                      }
                    idx = t3.indexOf$2(old, style, idx + 1);
                }
            if (t4) {
              begin = $.JSString_methods.trim$0(t3.substring$2(old, 0, idx));
              end = $.JSString_methods.trim$0(t3.substring$1(old, idx + t2));
              if (begin.length === 0)
                newClassName = end;
              else
                newClassName = end.length === 0 ? begin : $.JSString_methods.$add($.JSString_methods.$add(begin, " "), end);
              t1.set$$$dom_className(elem, newClassName);
            }
        }
  }
};

$.UiObject__updatePrimaryAndDependentStyleNames = function(elem, newPrimaryStyle) {
  var t1, classes, i, className, t2, tmp, oldPrimaryStyle, oldPrimaryStyleLen, $name, t3;
  t1 = $.getInterceptor$x(elem);
  classes = $.split$1$s(t1.get$$$dom_className(elem), $.JSSyntaxRegExp$("s+", true, false));
  if (typeof classes !== "object" || classes === null || (classes.constructor !== Array || !!classes.immutable$list) && !$.getInterceptor(classes).$isJavaScriptIndexingBehavior)
    return $.UiObject__updatePrimaryAndDependentStyleNames$bailout(1, elem, newPrimaryStyle, t1, classes);
  if (classes.length === 0)
    return;
  for (i = 0; i < classes.length; ++i) {
    className = classes[i];
    if ($.startsWith$1$s(className, "dwt")) {
      t2 = classes.length;
      if (0 >= t2)
        throw $.ioore(0);
      tmp = classes[0];
      classes[0] = className;
      if (i >= t2)
        throw $.ioore(i);
      classes[i] = tmp;
      break;
    }
  }
  if (0 >= classes.length)
    throw $.ioore(0);
  oldPrimaryStyle = classes[0];
  oldPrimaryStyleLen = $.get$length$asx(oldPrimaryStyle);
  if (typeof oldPrimaryStyleLen !== "number")
    return $.UiObject__updatePrimaryAndDependentStyleNames$bailout(2, elem, newPrimaryStyle, t1, classes, oldPrimaryStyle, oldPrimaryStyleLen);
  t2 = classes.length;
  if (0 >= t2)
    throw $.ioore(0);
  classes[0] = newPrimaryStyle;
  for (i = 1; i < t2; ++i) {
    if (i >= classes.length)
      throw $.ioore(i);
    $name = classes[i];
    t3 = $.getInterceptor$asx($name);
    if ($.$gt$n(t3.get$length($name), oldPrimaryStyleLen) && $.$eq(t3.$index($name, oldPrimaryStyleLen), "-") === true && t3.indexOf$1($name, oldPrimaryStyle) === 0) {
      t3 = $.JSString_methods.$add(newPrimaryStyle, t3.substring$1($name, oldPrimaryStyleLen));
      if (i >= classes.length)
        throw $.ioore(i);
      classes[i] = t3;
    }
  }
  t1.set$$$dom_className(elem, $.JSArray_methods.join$1(classes, " "));
};

$.UiObject__updatePrimaryAndDependentStyleNames$bailout = function(state0, elem, newPrimaryStyle, t1, classes, oldPrimaryStyle, oldPrimaryStyleLen) {
  switch (state0) {
    case 0:
      t1 = $.getInterceptor$x(elem);
      classes = $.split$1$s(t1.get$$$dom_className(elem), $.JSSyntaxRegExp$("s+", true, false));
    case 1:
      state0 = 0;
      if (classes.length === 0)
        return;
      for (i = 0; i < classes.length; ++i) {
        className = classes[i];
        if ($.startsWith$1$s(className, "dwt")) {
          if (0 >= classes.length)
            throw $.ioore(0);
          tmp = classes[0];
          $.JSArray_methods.$indexSet(classes, 0, className);
          $.JSArray_methods.$indexSet(classes, i, tmp);
          break;
        }
      }
      if (0 >= classes.length)
        throw $.ioore(0);
      oldPrimaryStyle = classes[0];
      oldPrimaryStyleLen = $.get$length$asx(oldPrimaryStyle);
    case 2:
      var i, className, tmp, n, $name, t2;
      state0 = 0;
      $.JSArray_methods.$indexSet(classes, 0, newPrimaryStyle);
      for (n = classes.length, i = 1; i < n; ++i) {
        if (i >= classes.length)
          throw $.ioore(i);
        $name = classes[i];
        t2 = $.getInterceptor$asx($name);
        if ($.$gt$n(t2.get$length($name), oldPrimaryStyleLen) && $.$eq(t2.$index($name, oldPrimaryStyleLen), "-") === true && t2.indexOf$1($name, oldPrimaryStyle) === 0)
          $.JSArray_methods.$indexSet(classes, i, $.JSString_methods.$add(newPrimaryStyle, t2.substring$1($name, oldPrimaryStyleLen)));
      }
      t1.set$$$dom_className(elem, $.JSArray_methods.join$1(classes, " "));
  }
};

$.VerticalPanel$ = function() {
  var t1 = new $.VerticalPanel($.HorizontalAlignmentConstant_TextAlign_right, $.VerticalAlignmentConstant_top, null, null, null, null, null, 0, null, false, null, null, null);
  t1.ComplexPanel$0();
  t1.CellPanel$0();
  t1.VerticalPanel$0();
  return t1;
};

$.WidgetCollection$ = function(_parent) {
  var t1 = new $.WidgetCollection(null, _parent, 0);
  t1.WidgetCollection$1(_parent);
  return t1;
};

$.WidgetIterator$ = function(_widgetCollection) {
  return new $.WidgetIterator(_widgetCollection, -1);
};

$._WidgetsIterator$ = function(_container, _contained, Widget) {
  var t1 = new $._WidgetsIterator(_container, _contained, -1, -1, false, null);
  $.setRuntimeTypeInfo(t1, [Widget]);
  t1._WidgetsIterator$2(_container, _contained, Widget);
  return t1;
};

$.SafeHtmlString$ = function(html) {
  var t1 = new $.SafeHtmlString(null);
  t1.SafeHtmlString$1(html);
  return t1;
};

$.SafeUriString$ = function(_uri) {
  var t1 = new $.SafeUriString(_uri);
  t1.SafeUriString$1(_uri);
  return t1;
};

$.Timer_createInterval = function(timer, period) {
  var milliseconds = $.Duration$(0, 0, 0, period, 0, 0).get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  return $.TimerImpl$periodic(milliseconds, new $.Timer_createInterval_anon(timer));
};

$.Timer_createTimeout = function(timer, delay) {
  var milliseconds = $.Duration$(0, 0, 0, delay, 0, 0).get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  return $.TimerImpl$(milliseconds, new $.Timer_createTimeout_anon(timer));
};

$.Timer__hookWindowClosing = function() {
  $.Window_methods.get$onUnload(window).listen$1(new $.Timer__hookWindowClosing_anon());
};

$.Timer_Timer$get = function(_callback) {
  if (!$.Timer__initialised) {
    $.Timer__initialised = true;
    $.Timer__hookWindowClosing();
  }
  return $.Timer$_internal(_callback);
};

$.Timer$_internal = function(_callback) {
  return new $.Timer(false, null, _callback);
};

$.UriUtils_unsafeCastFromUntrustedString = function(s) {
  return $.SafeUriString$(s);
};

$.Cache$ = function(_configuration) {
  return new $.Cache($.makeLiteralMap([]), _configuration);
};

$.Container$ = function(_configuration) {
  var t1 = new $.Container(_configuration);
  t1.Container$1(_configuration);
  return t1;
};

$.DefinitionNotFoundException$ = function(message) {
  return new $.DefinitionNotFoundException(message);
};

$.FoundDuplicateDefinitionException$ = function(message) {
  return new $.FoundDuplicateDefinitionException(message);
};

$.UnknownObjectDefinitionTypeException$ = function(message) {
  return new $.UnknownObjectDefinitionTypeException(message);
};

$.FoundDuplicateConfigurationObjectException$ = function(message) {
  return new $.FoundDuplicateConfigurationObjectException(message);
};

$.ConfigurationObjectNotFoundException$ = function(message) {
  return new $.ConfigurationObjectNotFoundException(message);
};

$.InvalidScopeException$ = function(message) {
  return new $.InvalidScopeException(message);
};

$.UnknownConfigurationTypeException$ = function(message) {
  return new $.UnknownConfigurationTypeException(message);
};

$.DefaultContainerConfiguration$ = function() {
  return new $.DefaultContainerConfiguration("InCodeConfiguration", null, null, null, null);
};

$._InstanceObject$ = function(instanceFunction, scope, positionalArguments, namedArguments) {
  return new $._InstanceObject(instanceFunction, scope, positionalArguments, namedArguments);
};

$.InCodeConfigurationProcessor$ = function(configuration) {
  return new $.InCodeConfigurationProcessor(configuration);
};

$.InCodeObjectDefinition$ = function() {
  return new $.InCodeObjectDefinition(null, null, "SINGLETON", true, null);
};

$.InCodeObjectFactory$ = function(configuration) {
  return new $.InCodeObjectFactory(configuration);
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.wrapException.call$1 = $.wrapException;
$.wrapException.$name = "wrapException";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$._asyncRunCallback.call$0 = $._asyncRunCallback;
$._asyncRunCallback.$name = "_asyncRunCallback";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
$.DisclosurePanel.$isWidget = true;
$.DisclosurePanel.$isWidget = true;
$._Tab.$isWidget = true;
$._Tab.$isWidget = true;
$.PopupPanel.$isWidget = true;
$.PopupPanel.$isWidget = true;
$.Widget.$isWidget = true;
$.Widget.$isWidget = true;
$.RootPanel.$isWidget = true;
$.RootPanel.$isWidget = true;
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.List_empty = Isolate.makeConstantList([]);
$.Unit_pc = new $.Unit("pc");
$.EventStreamProvider_drag = new $.EventStreamProvider("drag");
$.PressedValue_2 = new $.PressedValue(2);
$.PressedValue_3 = new $.PressedValue(3);
$.PressedValue_0 = new $.PressedValue(0);
$.PressedValue_1 = new $.PressedValue(1);
$.EventStreamProvider_keypress = new $.EventStreamProvider("keypress");
$.EventStreamProvider_touchstart = new $.EventStreamProvider("touchstart");
$.Unit_aNe = new $.Unit("%");
$.Duration_0 = new $.Duration(0);
$.EventStreamProvider_contextmenu = new $.EventStreamProvider("contextmenu");
$.EventStreamProvider_change = new $.EventStreamProvider("change");
$.JSBool_methods = $.JSBool.prototype;
$.C_NullThrownError = new $.NullThrownError();
$.EventStreamProvider_error = new $.EventStreamProvider("error");
$.EventStreamProvider_blur = new $.EventStreamProvider("blur");
$.ScrollAlignment_TOP = new $.ScrollAlignment("TOP");
$.EventStreamProvider_drop = new $.EventStreamProvider("drop");
$.ScrollAlignment_BOTTOM = new $.ScrollAlignment("BOTTOM");
$.EventStreamProvider_scroll = new $.EventStreamProvider("scroll");
$.EventStreamProvider_hashchange = new $.EventStreamProvider("hashchange");
$.TextAlign_left = new $.TextAlign("left");
$.HorizontalAlignmentConstant_TextAlign_left = new $.HorizontalAlignmentConstant($.TextAlign_left);
$.Display_none = new $.Display("none");
$.Direction_RTL = new $.Direction("RTL");
$.EventStreamProvider_touchmove = new $.EventStreamProvider("touchmove");
$.Overflow_scroll = new $.Overflow("scroll");
$.Window_methods = $.Window.prototype;
$.Alignment_BEGIN = new $.Alignment("BEGIN");
$.VerticalAlignmentConstant_middle = new $.VerticalAlignmentConstant("middle");
$.TextAlign_right = new $.TextAlign("right");
$.HorizontalAlignmentConstant_TextAlign_right = new $.HorizontalAlignmentConstant($.TextAlign_right);
$.EventStreamProvider_paste = new $.EventStreamProvider("paste");
$.JSNull_methods = $.JSNull.prototype;
$.Alignment_STRETCH = new $.Alignment("STRETCH");
$.DomMimeTypeArray_methods = $.DomMimeTypeArray.prototype;
$.TextAlign_center = new $.TextAlign("center");
$.VerticalAlignmentConstant_top = new $.VerticalAlignmentConstant("top");
$.EventStreamProvider_mouseover = new $.EventStreamProvider("mouseover");
$.Unit_ex = new $.Unit("ex");
$.EventStreamProvider_resize = new $.EventStreamProvider("resize");
$.EventStreamProvider_success = new $.EventStreamProvider("success");
$.VerticalAlignmentConstant_bottom = new $.VerticalAlignmentConstant("bottom");
$.EventStreamProvider_dragend = new $.EventStreamProvider("dragend");
$.EventStreamProvider_focus = new $.EventStreamProvider("focus");
$.EventStreamProvider_dragover = new $.EventStreamProvider("dragover");
$._WorkerStub_methods = $._WorkerStub.prototype;
$._CustomEventStreamProvider__determineMouseWheelEventType = new $._CustomEventStreamProvider($.Element__determineMouseWheelEventType);
$.JSNumber_methods = $.JSNumber.prototype;
$.EventStreamProvider_keyup = new $.EventStreamProvider("keyup");
$.Direction_LTR = new $.Direction("LTR");
$.Unit_px = new $.Unit("px");
$.EventStreamProvider_load = new $.EventStreamProvider("load");
$.EventStreamProvider_dblclick = new $.EventStreamProvider("dblclick");
$.WhiteSpace_nowrap = new $.WhiteSpace("nowrap");
$.ScrollAlignment_CENTER = new $.ScrollAlignment("CENTER");
$.JSArray_methods = $.JSArray.prototype;
$.EventStreamProvider_dragleave = new $.EventStreamProvider("dragleave");
$.EventStreamProvider_open = new $.EventStreamProvider("open");
$.HorizontalAlignmentConstant_TextAlign_center = new $.HorizontalAlignmentConstant($.TextAlign_center);
$.EventStreamProvider_unload = new $.EventStreamProvider("unload");
$.JSInt_methods = $.JSInt.prototype;
$.Position_absolute = new $.Position("absolute");
$.Unit_mm = new $.Unit("mm");
$.EventStreamProvider_keydown = new $.EventStreamProvider("keydown");
$.WhiteSpace_normal = new $.WhiteSpace("normal");
$.DockLayoutConstant_5 = new $.DockLayoutConstant(5);
$.DockLayoutConstant_4 = new $.DockLayoutConstant(4);
$.Position_relative = new $.Position("relative");
$.C_CloseToken = new $.CloseToken();
$.EventStreamProvider_mousedown = new $.EventStreamProvider("mousedown");
$.EventStreamProvider_click = new $.EventStreamProvider("click");
$.Direction_DEFAULT = new $.Direction("DEFAULT");
$.DockLayoutConstant_3 = new $.DockLayoutConstant(3);
$.DockLayoutConstant_0 = new $.DockLayoutConstant(0);
$.Alignment_END = new $.Alignment("END");
$.EventStreamProvider_dragenter = new $.EventStreamProvider("dragenter");
$.List_top_middle_bottom = Isolate.makeConstantList(["top", "middle", "bottom"]);
$.DockLayoutConstant_2 = new $.DockLayoutConstant(2);
$.DockLayoutConstant_1 = new $.DockLayoutConstant(1);
$.Unit_em = new $.Unit("em");
$.EventStreamProvider_progress = new $.EventStreamProvider("progress");
$.AnimationType_1 = new $.AnimationType(1);
$.DockLayoutConstant_6 = new $.DockLayoutConstant(6);
$.AnimationType_2 = new $.AnimationType(2);
$.AnimationType_0 = new $.AnimationType(0);
$.EventStreamProvider_canplaythrough = new $.EventStreamProvider("canplaythrough");
$.EventStreamProvider_dragstart = new $.EventStreamProvider("dragstart");
$.JSDouble_methods = $.JSDouble.prototype;
$.Unit_cm = new $.Unit("cm");
$.EventStreamProvider_mousemove = new $.EventStreamProvider("mousemove");
$.EventStreamProvider_mouseup = new $.EventStreamProvider("mouseup");
$.EventStreamProvider_mouseout = new $.EventStreamProvider("mouseout");
$.Overflow_hidden = new $.Overflow("hidden");
$.EventStreamProvider_ended = new $.EventStreamProvider("ended");
$.Overflow_auto = new $.Overflow("auto");
$.Unit_pt = new $.Unit("pt");
$.C__Random = new $._Random();
$.Display_block = new $.Display("block");
$.EventStreamProvider_close = new $.EventStreamProvider("close");
$.Unit_in = new $.Unit("in");
$.EventStreamProvider_touchcancel = new $.EventStreamProvider("touchcancel");
$.NodeList_methods = $.NodeList.prototype;
$.JSString_methods = $.JSString.prototype;
$.EventStreamProvider_touchend = new $.EventStreamProvider("touchend");
$.Expando__keyCount = 0;
$.dispatchPropertyName = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$.interceptorsByTag = null;
$.leafTags = null;
$._callbacksAreEnqueued = false;
$.Device__isOpera = null;
$.Device__isIE = null;
$.Device__isFirefox = null;
$.Device__isWebKit = null;
$.Device__cachedCssPrefix = null;
$.AnimationSchedulerImpl_impl = null;
$.AnimationSchedulerImplTimer_DEFAULT_FRAME_DELAY = 16;
$.AnimationSchedulerImplTimer_MIN_FRAME_DELAY = 5;
$.Dom__sCaptureElem = null;
$.Dom__currentEvent = null;
$.Dom_uniqueId = 0;
$.DomEvent__registered = null;
$.IEvent_handlers = null;
$.DomImpl_eventSystemIsInitialized = false;
$.DomImplStandard_dispatchCapturedEvent = null;
$.DomImplStandard_dispatchCapturedMouseEvent = null;
$.DomImplStandard_dispatchDragEvent = null;
$.DomImplStandard_dispatchEvent = null;
$.DomImplStandard_dispatchUnhandledEvent = null;
$.NativePreviewEvent_singleton = null;
$.BidiUtils_LTR_CHARS = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff\u2c00-\ufb1c\ufdfe-\ufe6f\ufefd-\uffff";
$.BidiUtils_RTL_CHARS = "\u0591-\u07ff\ufb1d-\ufdfd\ufe70-\ufefc";
$.NumberFormat__cachedDecimalFormat = null;
$.LayoutImpl_fixedRuler = null;
$.LayoutImpl__initialised = false;
$.SchedulerImpl__TIME_SLICE = 100;
$.SchedulerImpl__instance = null;
$.DoubleParser__INSTANCE = null;
$.DoubleRenderer__INSTANCE = null;
$.IntegerParser__INSTANCE = null;
$.IntegerRenderer__INSTANCE = null;
$.PassthroughParser__instance = null;
$.PassthroughRenderer__instance = null;
$.CustomButton__STYLENAME_DEFAULT = "dwt-CustomButton";
$.Face_STYLENAME_HTML_FACE = "html-face";
$.DeckPanel__slideAnimation = null;
$.DisclosurePanel__contentAnimation = null;
$.History__impl = null;
$.History__initialized = false;
$.HtmlPanel_hiddenDiv = null;
$.FocusImpl_implPanel = null;
$.FocusImpl_implWidget = null;
$.HistoryImpl__token = "";
$.ScrollImpl_impl = null;
$.RootLayoutPanel__singleton = null;
$.RootPanel_DEFAULT_ID = "__id__";
$.SplitLayoutPanel_glassElem = null;
$._TreeResources__instance = null;
$.TreeItem__CHILD_MARGIN = 16;
$.TreeItem_IMAGE_PAD = 7;
$.TreeItem__ANIMATION_DURATION = 200;
$.TreeItem__ANIMATION_DURATION_PER_ITEM = 75;
$.TreeItem__BASE_INTERNAL_ELEM = null;
$.TreeItem__BASE_BARE_ELEM = null;
$.TreeItem__impl = null;
$.UiObject_EMPTY_STYLENAME_MSG = "Style names cannot be empty";
$.UiObject_NULL_HANDLE_MSG = "Null widget handle. If you are creating a composite, ensure that initWidget() has been called.";
$.WidgetCollection__INITIAL_SIZE = 4;
$.Timer__initialised = false;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_initCustomEvent$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).$$dom_initCustomEvent$4(receiver, a0, a1, a2, a3);
};
$.$$dom_removeChild$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_removeChild$1(receiver, a0);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_replaceChild$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_replaceChild$2(receiver, a0, a1);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return $.getInterceptor$n(receiver).$and(receiver, a0);
};
$.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return $.getInterceptor$n(receiver).$negate(receiver);
};
$.$shl$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shl(receiver, a0);
};
$.$shr$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shr(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return $.getInterceptor$n(receiver).$xor(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).add$1(receiver, a0);
};
$.addAll$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
$.allMatches$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).allMatches$1(receiver, a0);
};
$.append$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).append$1(receiver, a0);
};
$.blur$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).blur$0(receiver);
};
$.cancel$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).cancel$0(receiver);
};
$.contains$1$asx = function(receiver, a0) {
  return $.getInterceptor$asx(receiver).contains$1(receiver, a0);
};
$.contains$2$asx = function(receiver, a0, a1) {
  return $.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
$.containsKey$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).containsKey$1(receiver, a0);
};
$.createTBody$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createTBody$0(receiver);
};
$.dispatchEvent$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).dispatchEvent$1(receiver, a0);
};
$.elementAt$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
$.focus$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).focus$0(receiver);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.format$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).format$1(receiver, a0);
};
$.get$$$dom_children$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_children(receiver);
};
$.get$$$dom_className$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_className(receiver);
};
$.get$$$dom_firstChild$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_firstChild(receiver);
};
$.get$$$dom_firstElementChild$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_firstElementChild(receiver);
};
$.get$$$dom_lastChild$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_lastChild(receiver);
};
$.get$attributes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$attributes(receiver);
};
$.get$available$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$available(receiver);
};
$.get$blur$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$blur(receiver);
};
$.get$cells$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$cells(receiver);
};
$.get$charCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$charCode(receiver);
};
$.get$checked$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$checked(receiver);
};
$.get$children$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$children(receiver);
};
$.get$client$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$client(receiver);
};
$.get$currentTarget$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$currentTarget(receiver);
};
$.get$dataset$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$dataset(receiver);
};
$.get$defaultChecked$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$defaultChecked(receiver);
};
$.get$dir$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$dir(receiver);
};
$.get$disabled$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$disabled(receiver);
};
$.get$display$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$display(receiver);
};
$.get$enabled$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$enabled(receiver);
};
$.get$hash$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$hash(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$height$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$height(receiver);
};
$.get$id$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$id(receiver);
};
$.get$index$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$index(receiver);
};
$.get$innerHtml$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$innerHtml(receiver);
};
$.get$isEmpty$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$keyCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$keyCode(receiver);
};
$.get$left$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$left(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$name$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$name(receiver);
};
$.get$next$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$next(receiver);
};
$.get$nextElementSibling$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$nextElementSibling(receiver);
};
$.get$nodes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$nodes(receiver);
};
$.get$offset$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$offset(receiver);
};
$.get$offsetParent$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$offsetParent(receiver);
};
$.get$onDrag$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDrag(receiver);
};
$.get$onDragEnd$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragEnd(receiver);
};
$.get$onDragEnter$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragEnter(receiver);
};
$.get$onDragLeave$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragLeave(receiver);
};
$.get$onDragOver$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragOver(receiver);
};
$.get$onDragStart$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragStart(receiver);
};
$.get$onDrop$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDrop(receiver);
};
$.get$options$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$options(receiver);
};
$.get$parent$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$parent(receiver);
};
$.get$parentNode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$parentNode(receiver);
};
$.get$relatedTarget$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$relatedTarget(receiver);
};
$.get$result$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$result(receiver);
};
$.get$rows$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$rows(receiver);
};
$.get$style$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$style(receiver);
};
$.get$tabIndex$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$tabIndex(receiver);
};
$.get$tagName$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$tagName(receiver);
};
$.get$target$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$target(receiver);
};
$.get$text$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$text(receiver);
};
$.get$title$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$title(receiver);
};
$.get$top$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$top(receiver);
};
$.get$topLeft$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$topLeft(receiver);
};
$.get$type$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$type(receiver);
};
$.get$value$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$value(receiver);
};
$.get$values$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$values(receiver);
};
$.get$visibility$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$visibility(receiver);
};
$.get$width$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$width(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.getBoundingClientRect$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).getBoundingClientRect$0(receiver);
};
$.getParent$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).getParent$0(receiver);
};
$.indexOf$1$asx = function(receiver, a0) {
  return $.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
};
$.insert$2$ax = function(receiver, a0, a1) {
  return $.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
};
$.insertBefore$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
};
$.onBlur$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onBlur$1(receiver, a0);
};
$.onChange$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onChange$1(receiver, a0);
};
$.onClick$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onClick$1(receiver, a0);
};
$.onClose$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onClose$1(receiver, a0);
};
$.onKeyUp$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onKeyUp$1(receiver, a0);
};
$.onMouseDown$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onMouseDown$1(receiver, a0);
};
$.onMouseMove$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onMouseMove$1(receiver, a0);
};
$.onMouseOut$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onMouseOut$1(receiver, a0);
};
$.onMouseOver$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onMouseOver$1(receiver, a0);
};
$.onMouseUp$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onMouseUp$1(receiver, a0);
};
$.onOpen$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).onOpen$1(receiver, a0);
};
$.onResize$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).onResize$0(receiver);
};
$.postMessage$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).postMessage$1(receiver, a0);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.register$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).register$2(receiver, a0, a1);
};
$.remove$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).remove$0(receiver);
};
$.remove$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).remove$1(receiver, a0);
};
$.removeItem$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).removeItem$1(receiver, a0);
};
$.replaceAll$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
$.replaceWith$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
$.requestAnimationFrame$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).requestAnimationFrame$2(receiver, a0, a1);
};
$.scrollIntoView$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).scrollIntoView$0(receiver);
};
$.send$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).send$1(receiver, a0);
};
$.send$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).send$2(receiver, a0, a1);
};
$.set$$$dom_className$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$$$dom_className(receiver, value);
};
$.set$alignContent$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$alignContent(receiver, value);
};
$.set$background$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$background(receiver, value);
};
$.set$backgroundColor$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$backgroundColor(receiver, value);
};
$.set$border$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$border(receiver, value);
};
$.set$borderStyle$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$borderStyle(receiver, value);
};
$.set$borderWidth$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$borderWidth(receiver, value);
};
$.set$bottom$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$bottom(receiver, value);
};
$.set$checked$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$checked(receiver, value);
};
$.set$clip$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$clip(receiver, value);
};
$.set$defaultChecked$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$defaultChecked(receiver, value);
};
$.set$dir$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$dir(receiver, value);
};
$.set$disabled$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$disabled(receiver, value);
};
$.set$display$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$display(receiver, value);
};
$.set$focus$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$focus(receiver, value);
};
$.set$fontSize$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$fontSize(receiver, value);
};
$.set$hash$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$hash(receiver, value);
};
$.set$height$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$height(receiver, value);
};
$.set$href$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$href(receiver, value);
};
$.set$htmlFor$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$htmlFor(receiver, value);
};
$.set$id$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$id(receiver, value);
};
$.set$innerHtml$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$innerHtml(receiver, value);
};
$.set$left$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$left(receiver, value);
};
$.set$length$asx = function(receiver, value) {
  return $.getInterceptor$asx(receiver).set$length(receiver, value);
};
$.set$margin$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$margin(receiver, value);
};
$.set$marginBottom$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$marginBottom(receiver, value);
};
$.set$marginLeft$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$marginLeft(receiver, value);
};
$.set$name$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$name(receiver, value);
};
$.set$opacity$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$opacity(receiver, value);
};
$.set$outline$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$outline(receiver, value);
};
$.set$overflow$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$overflow(receiver, value);
};
$.set$padding$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$padding(receiver, value);
};
$.set$paddingLeft$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$paddingLeft(receiver, value);
};
$.set$position$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$position(receiver, value);
};
$.set$right$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$right(receiver, value);
};
$.set$src$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$src(receiver, value);
};
$.set$tabIndex$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$tabIndex(receiver, value);
};
$.set$text$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$text(receiver, value);
};
$.set$textAlign$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$textAlign(receiver, value);
};
$.set$top$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$top(receiver, value);
};
$.set$type$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$type(receiver, value);
};
$.set$value$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$value(receiver, value);
};
$.set$verticalAlign$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$verticalAlign(receiver, value);
};
$.set$visibility$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$visibility(receiver, value);
};
$.set$visible$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$visible(receiver, value);
};
$.set$whiteSpace$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$whiteSpace(receiver, value);
};
$.set$width$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$width(receiver, value);
};
$.set$zIndex$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$zIndex(receiver, value);
};
$.set$zoom$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$zoom(receiver, value);
};
$.setData$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).setData$1(receiver, a0);
};
$.setProperty$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).setProperty$2(receiver, a0, a1);
};
$.skip$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).skip$1(receiver, a0);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.startsWith$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).startsWith$1(receiver, a0);
};
$.stopPropagation$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).stopPropagation$0(receiver);
};
$.sublist$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).sublist$1(receiver, a0);
};
$.toDouble$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).toDouble$0(receiver);
};
$.toInt$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).toInt$0(receiver);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toLowerCase$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.write$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).write$1(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return $.Expando$("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return [];
});
Isolate.$lazy($, "_runCallbacks", "Timer__runCallbacks", "get$Timer__runCallbacks", function() {
  return [];
});
Isolate.$lazy($, "_container", "Context__container", "get$Context__container", function() {
  return $.Container$(null);
});
Isolate.$lazy($, "TYPE", "AttachEvent_TYPE", "get$AttachEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "TYPE", "BeforeSelectionEvent_TYPE", "get$BeforeSelectionEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "TYPE", "BlurEvent_TYPE", "get$BlurEvent_TYPE", function() {
  return $.DomEventType$("blur", $.BlurEvent$());
});
Isolate.$lazy($, "TYPE", "ChangeEvent_TYPE", "get$ChangeEvent_TYPE", function() {
  return $.DomEventType$("change", $.ChangeEvent$());
});
Isolate.$lazy($, "TYPE", "ClickEvent_TYPE", "get$ClickEvent_TYPE", function() {
  return $.DomEventType$("click", $.ClickEvent$());
});
Isolate.$lazy($, "TYPE", "CloseEvent_TYPE", "get$CloseEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "impl", "Dom_impl", "get$Dom_impl", function() {
  return $.DomImpl_DomImpl$browserDependent();
});
Isolate.$lazy($, "TYPE", "DomEvent_TYPE", "get$DomEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "TYPE", "KeyUpEvent_TYPE", "get$KeyUpEvent_TYPE", function() {
  return $.DomEventType$("keyup", $.KeyUpEvent$());
});
Isolate.$lazy($, "TYPE", "MouseDownEvent_TYPE", "get$MouseDownEvent_TYPE", function() {
  return $.DomEventType$("mousedown", $.MouseDownEvent$());
});
Isolate.$lazy($, "TYPE", "MouseMoveEvent_TYPE", "get$MouseMoveEvent_TYPE", function() {
  return $.DomEventType$("mousemove", $.MouseMoveEvent$());
});
Isolate.$lazy($, "TYPE", "MouseOutEvent_TYPE", "get$MouseOutEvent_TYPE", function() {
  return $.DomEventType$("mouseout", $.MouseOutEvent$());
});
Isolate.$lazy($, "TYPE", "MouseOverEvent_TYPE", "get$MouseOverEvent_TYPE", function() {
  return $.DomEventType$("mouseover", $.MouseOverEvent$());
});
Isolate.$lazy($, "TYPE", "MouseUpEvent_TYPE", "get$MouseUpEvent_TYPE", function() {
  return $.DomEventType$("mouseup", $.MouseUpEvent$());
});
Isolate.$lazy($, "TYPE", "NativePreviewEvent_TYPE", "get$NativePreviewEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "TYPE", "OpenEvent_TYPE", "get$OpenEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "TYPE", "SelectionEvent_TYPE", "get$SelectionEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "_emptySource", "SimpleEventBus__emptySource", "get$SimpleEventBus__emptySource", function() {
  return $._EmptySource$();
});
Isolate.$lazy($, "TYPE", "ValueChangeEvent_TYPE", "get$ValueChangeEvent_TYPE", function() {
  return $.EventType$();
});
Isolate.$lazy($, "LRM", "Format_LRM", "get$Format_LRM", function() {
  return $.int_parse("\u200e", null, null);
});
Isolate.$lazy($, "LRM_STRING", "Format_LRM_STRING", "get$Format_LRM_STRING", function() {
  return $.String_String$fromCharCodes([$.get$Format_LRM()]);
});
Isolate.$lazy($, "RLM", "Format_RLM", "get$Format_RLM", function() {
  return $.int_parse("\u200f", null, null);
});
Isolate.$lazy($, "RLM_STRING", "Format_RLM_STRING", "get$Format_RLM_STRING", function() {
  return $.String_String$fromCharCodes([$.get$Format_RLM()]);
});
Isolate.$lazy($, "impl", "BidiPolicy_impl", "get$BidiPolicy_impl", function() {
  return $.BidiPolicyImpl$();
});
Isolate.$lazy($, "_INSTANCE", "BidiUtils__INSTANCE", "get$BidiUtils__INSTANCE", function() {
  return $.BidiUtils$();
});
Isolate.$lazy($, "SKIP_HTML_RE", "BidiUtils_SKIP_HTML_RE", "get$BidiUtils_SKIP_HTML_RE", function() {
  return $.RegExp_RegExp("<[^>]*>|&[^;]+;", true, true);
});
Isolate.$lazy($, "LAST_STRONG_IS_RTL_RE", "BidiUtils_LAST_STRONG_IS_RTL_RE", "get$BidiUtils_LAST_STRONG_IS_RTL_RE", function() {
  return $.RegExp_RegExp("[" + $.BidiUtils_RTL_CHARS + "][^" + $.BidiUtils_LTR_CHARS + "]*", true, false);
});
Isolate.$lazy($, "LAST_STRONG_IS_LTR_RE", "BidiUtils_LAST_STRONG_IS_LTR_RE", "get$BidiUtils_LAST_STRONG_IS_LTR_RE", function() {
  return $.RegExp_RegExp("[" + $.BidiUtils_LTR_CHARS + "][^" + $.BidiUtils_RTL_CHARS + "]*", true, false);
});
Isolate.$lazy($, "FIRST_STRONG_IS_RTL_RE", "BidiUtils_FIRST_STRONG_IS_RTL_RE", "get$BidiUtils_FIRST_STRONG_IS_RTL_RE", function() {
  return $.RegExp_RegExp("^[^" + $.BidiUtils_LTR_CHARS + "]*[" + $.BidiUtils_RTL_CHARS + "]", true, false);
});
Isolate.$lazy($, "IS_REQUIRED_LTR_RE", "BidiUtils_IS_REQUIRED_LTR_RE", "get$BidiUtils_IS_REQUIRED_LTR_RE", function() {
  return $.RegExp_RegExp("^http://.*", true, false);
});
Isolate.$lazy($, "HAS_NUMERALS_RE", "BidiUtils_HAS_NUMERALS_RE", "get$BidiUtils_HAS_NUMERALS_RE", function() {
  return $.RegExp_RegExp("\\d", true, false);
});
Isolate.$lazy($, "HAS_ANY_LTR_RE", "BidiUtils_HAS_ANY_LTR_RE", "get$BidiUtils_HAS_ANY_LTR_RE", function() {
  return $.RegExp_RegExp("[" + $.BidiUtils_LTR_CHARS + "]", true, false);
});
Isolate.$lazy($, "WORD_SEPARATOR_RE", "BidiUtils_WORD_SEPARATOR_RE", "get$BidiUtils_WORD_SEPARATOR_RE", function() {
  return $.RegExp_RegExp("\\s+", true, false);
});
Isolate.$lazy($, "instance", "LocaleInfo_instance", "get$LocaleInfo_instance", function() {
  return $.LocaleInfo$($.LocaleInfoImpl$());
});
Isolate.$lazy($, "instance", "WordCountDirectionEstimator_instance", "get$WordCountDirectionEstimator_instance", function() {
  return $.WordCountDirectionEstimator$();
});
Isolate.$lazy($, "BUTTON", "Roles_BUTTON", "get$Roles_BUTTON", function() {
  return $.ButtonRoleImpl$("button");
});
Isolate.$lazy($, "PRESSED", "State_PRESSED", "get$State_PRESSED", function() {
  return $.AriaValueAttribute$("aria-pressed", "undefined");
});
Isolate.$lazy($, "attachCommand", "AttachDetachException_attachCommand", "get$AttachDetachException_attachCommand", function() {
  return $.AttachExceptionCommand$();
});
Isolate.$lazy($, "detachCommand", "AttachDetachException_detachCommand", "get$AttachDetachException_detachCommand", function() {
  return $.DetachExceptionCommand$();
});
Isolate.$lazy($, "impl", "CaptionPanel_impl", "get$CaptionPanel_impl", function() {
  return $.CaptionPanelImpl_CaptionPanelImpl$browserDependant();
});
Isolate.$lazy($, "_DEFAULT_ROW_STYLENAMES", "DecoratedStackPanel__DEFAULT_ROW_STYLENAMES", "get$DecoratedStackPanel__DEFAULT_ROW_STYLENAMES", function() {
  return ["stackItemTop", "stackItemMiddle"];
});
Isolate.$lazy($, "DEFAULT_IMAGES", "DisclosurePanel_DEFAULT_IMAGES", "get$DisclosurePanel_DEFAULT_IMAGES", function() {
  return $._DefaultImages$();
});
Isolate.$lazy($, "impl", "FocusPanel_impl", "get$FocusPanel_impl", function() {
  return $.FocusImpl_getFocusImplForPanel();
});
Isolate.$lazy($, "impl", "FocusWidget_impl", "get$FocusWidget_impl", function() {
  return $.FocusImpl_getFocusImplForWidget();
});
Isolate.$lazy($, "_impl", "Hyperlink__impl", "get$Hyperlink__impl", function() {
  return $.HyperlinkImpl$();
});
Isolate.$lazy($, "impl", "_ClippedState_impl", "get$_ClippedState_impl", function() {
  return $.ClippedImageImpl$();
});
Isolate.$lazy($, "_impl", "ClippedImagePrototype__impl", "get$ClippedImagePrototype__impl", function() {
  return $.ClippedImageImpl$();
});
Isolate.$lazy($, "impl", "PopupPanel_impl", "get$PopupPanel_impl", function() {
  return $.PopupImpl$();
});
Isolate.$lazy($, "_maybeDetachCommand", "RootPanel__maybeDetachCommand", "get$RootPanel__maybeDetachCommand", function() {
  return $.MaybeDetachExceptionCommand$();
});
Isolate.$lazy($, "_rootPanels", "RootPanel__rootPanels", "get$RootPanel__rootPanels", function() {
  return $.Map_Map($.JSString, $.RootPanel);
});
Isolate.$lazy($, "_widgetsToDetach", "RootPanel__widgetsToDetach", "get$RootPanel__widgetsToDetach", function() {
  return $.Set_Set($.Widget);
});
Isolate.$lazy($, "_itemAnimation", "TreeItem__itemAnimation", "get$TreeItem__itemAnimation", function() {
  return $.TreeItemAnimation$(null);
});
Isolate.$lazy($, "_timers", "Timer__timers", "get$Timer__timers", function() {
  var t1 = $.List_List($, $.Timer);
  $.setRuntimeTypeInfo(t1, [$.Timer]);
  return t1;
});
// Native classes
$.defineNativeMethods("Worker", $._WorkerStub);

$.defineNativeMethodsNonleaf("HTMLElement", $._HTMLElement);

$.defineNativeMethodsNonleaf("AbstractWorker", $.AbstractWorker);

$.defineNativeMethods("HTMLAnchorElement", $.AnchorElement);

$.defineNativeMethods("WebKitAnimationEvent", $.AnimationEvent);

$.defineNativeMethods("ApplicationCache|DOMApplicationCache|OfflineResourceList", $.ApplicationCache);

$.defineNativeMethods("HTMLAreaElement", $.AreaElement);

$.defineNativeMethods("Attr", $.Attr);

$.defineNativeMethods("HTMLAudioElement", $.AudioElement);

$.defineNativeMethods("AutocompleteErrorEvent", $.AutocompleteErrorEvent);

$.defineNativeMethods("HTMLBRElement", $.BRElement);

$.defineNativeMethods("BarInfo", $.BarInfo);

$.defineNativeMethods("HTMLBaseElement", $.BaseElement);

$.defineNativeMethods("BeforeLoadEvent", $.BeforeLoadEvent);

$.defineNativeMethodsNonleaf("Blob", $.Blob);

$.defineNativeMethods("HTMLBodyElement", $.BodyElement);

$.defineNativeMethods("HTMLButtonElement", $.ButtonElement);

$.defineNativeMethods("CDATASection", $.CDataSection);

$.defineNativeMethods("HTMLCanvasElement", $.CanvasElement);

$.defineNativeMethods("CanvasGradient", $.CanvasGradient);

$.defineNativeMethods("CanvasPattern", $.CanvasPattern);

$.defineNativeMethods("CanvasProxy", $.CanvasProxy);

$.defineNativeMethodsNonleaf("CanvasRenderingContext", $.CanvasRenderingContext);

$.defineNativeMethods("CanvasRenderingContext2D", $.CanvasRenderingContext2D);

$.defineNativeMethodsNonleaf("CharacterData", $.CharacterData);

$.defineNativeMethods("CloseEvent", $.CloseEvent0);

$.defineNativeMethods("Comment", $.Comment);

$.defineNativeMethods("CompositionEvent", $.CompositionEvent);

$.defineNativeMethods("HTMLContentElement", $.ContentElement);

$.defineNativeMethods("Coordinates", $.Coordinates);

$.defineNativeMethods("Crypto", $.Crypto);

$.defineNativeMethods("CSSCharsetRule", $.CssCharsetRule);

$.defineNativeMethods("CSSFontFaceLoadEvent", $.CssFontFaceLoadEvent);

$.defineNativeMethods("CSSFontFaceRule", $.CssFontFaceRule);

$.defineNativeMethods("CSSHostRule", $.CssHostRule);

$.defineNativeMethods("CSSImportRule", $.CssImportRule);

$.defineNativeMethods("WebKitCSSKeyframeRule", $.CssKeyframeRule);

$.defineNativeMethods("WebKitCSSKeyframesRule", $.CssKeyframesRule);

$.defineNativeMethods("CSSMediaRule", $.CssMediaRule);

$.defineNativeMethods("CSSPageRule", $.CssPageRule);

$.defineNativeMethodsNonleaf("CSSRule", $.CssRule);

$.defineNativeMethods("CSSStyleDeclaration", $.CssStyleDeclaration);

$.defineNativeMethods("CSSStyleRule", $.CssStyleRule);

$.defineNativeMethods("CSSStyleSheet", $.CssStyleSheet);

$.defineNativeMethods("CSSUnknownRule", $.CssUnknownRule);

$.defineNativeMethods("CustomElementConstructor", $.CustomElementConstructor);

$.defineNativeMethods("CustomEvent", $.CustomEvent);

$.defineNativeMethods("HTMLDListElement", $.DListElement);

$.defineNativeMethods("HTMLDataListElement", $.DataListElement);

$.defineNativeMethods("Clipboard", $.DataTransfer);

$.defineNativeMethods("DataTransferItem", $.DataTransferItem);

$.defineNativeMethods("DataTransferItemList", $.DataTransferItemList);

$.defineNativeMethods("HTMLDetailsElement", $.DetailsElement);

$.defineNativeMethods("DeviceAcceleration", $.DeviceAcceleration);

$.defineNativeMethods("DeviceMotionEvent", $.DeviceMotionEvent);

$.defineNativeMethods("DeviceOrientationEvent", $.DeviceOrientationEvent);

$.defineNativeMethods("DeviceRotationRate", $.DeviceRotationRate);

$.defineNativeMethods("HTMLDialogElement", $.DialogElement);

$.defineNativeMethods("DirectoryEntry", $.DirectoryEntry);

$.defineNativeMethods("DirectoryReader", $.DirectoryReader);

$.defineNativeMethods("HTMLDivElement", $.DivElement);

$.defineNativeMethodsNonleaf("Document", $.Document);

$.defineNativeMethodsNonleaf("DocumentFragment", $.DocumentFragment);

$.defineNativeMethods("DocumentType", $.DocumentType);

$.defineNativeMethods("DOMError", $.DomError);

$.defineNativeMethods("DOMException", $.DomException);

$.defineNativeMethods("DOMImplementation", $.DomImplementation);

$.defineNativeMethods("MimeType", $.DomMimeType);

$.defineNativeMethods("MimeTypeArray", $.DomMimeTypeArray);

$.defineNativeMethods("WebKitNamedFlowCollection", $.DomNamedFlowCollection);

$.defineNativeMethods("DOMParser", $.DomParser);

$.defineNativeMethods("Path", $.DomPath);

$.defineNativeMethods("Plugin", $.DomPlugin);

$.defineNativeMethods("PluginArray", $.DomPluginArray);

$.defineNativeMethods("SecurityPolicy", $.DomSecurityPolicy);

$.defineNativeMethods("Selection", $.DomSelection);

$.defineNativeMethods("DOMSettableTokenList", $.DomSettableTokenList);

$.defineNativeMethods("DOMStringList", $.DomStringList);

$.defineNativeMethodsNonleaf("DOMTokenList", $.DomTokenList);

$.defineNativeMethodsNonleaf("Element", $.Element);

$.defineNativeMethods("HTMLEmbedElement", $.EmbedElement);

$.defineNativeMethodsNonleaf("Entry", $.Entry);

$.defineNativeMethods("ErrorEvent", $.ErrorEvent);

$.defineNativeMethodsNonleaf("Event", $.Event);

$.defineNativeMethods("EventException", $.EventException);

$.defineNativeMethods("EventSource", $.EventSource);

$.defineNativeMethodsNonleaf("EventTarget", $.EventTarget);

$.defineNativeMethods("HTMLFieldSetElement", $.FieldSetElement);

$.defineNativeMethods("File", $.File);

$.defineNativeMethods("FileEntry", $.FileEntry);

$.defineNativeMethods("FileError", $.FileError);

$.defineNativeMethods("FileException", $.FileException);

$.defineNativeMethods("FileList", $.FileList);

$.defineNativeMethods("FileReader", $.FileReader);

$.defineNativeMethods("DOMFileSystem", $.FileSystem);

$.defineNativeMethods("FileWriter", $.FileWriter);

$.defineNativeMethods("FocusEvent", $.FocusEvent);

$.defineNativeMethods("FontLoader", $.FontLoader);

$.defineNativeMethods("FormData", $.FormData);

$.defineNativeMethods("HTMLFormElement", $.FormElement);

$.defineNativeMethods("Gamepad", $.Gamepad);

$.defineNativeMethods("Geolocation", $.Geolocation);

$.defineNativeMethods("Geoposition", $.Geoposition);

$.defineNativeMethods("HTMLHRElement", $.HRElement);

$.defineNativeMethods("HashChangeEvent", $.HashChangeEvent);

$.defineNativeMethods("HTMLHeadElement", $.HeadElement);

$.defineNativeMethods("HTMLHeadingElement", $.HeadingElement);

$.defineNativeMethods("History", $.History);

$.defineNativeMethods("HTMLAllCollection", $.HtmlAllCollection);

$.defineNativeMethodsNonleaf("HTMLCollection", $.HtmlCollection);

$.defineNativeMethods("HTMLDocument", $.HtmlDocument);

$.defineNativeMethods("HTMLHtmlElement", $.HtmlElement);

$.defineNativeMethods("HTMLFormControlsCollection", $.HtmlFormControlsCollection);

$.defineNativeMethods("HTMLOptionsCollection", $.HtmlOptionsCollection);

$.defineNativeMethods("XMLHttpRequest", $.HttpRequest);

$.defineNativeMethods("XMLHttpRequestException", $.HttpRequestException);

$.defineNativeMethods("XMLHttpRequestProgressEvent", $.HttpRequestProgressEvent);

$.defineNativeMethods("XMLHttpRequestUpload", $.HttpRequestUpload);

$.defineNativeMethods("HTMLIFrameElement", $.IFrameElement);

$.defineNativeMethods("ImageData", $.ImageData);

$.defineNativeMethods("HTMLImageElement", $.ImageElement);

$.defineNativeMethods("HTMLInputElement", $.InputElement);

$.defineNativeMethods("KeyboardEvent", $.KeyboardEvent);

$.defineNativeMethods("HTMLKeygenElement", $.KeygenElement);

$.defineNativeMethods("HTMLLIElement", $.LIElement);

$.defineNativeMethods("HTMLLabelElement", $.LabelElement);

$.defineNativeMethods("HTMLLegendElement", $.LegendElement);

$.defineNativeMethods("HTMLLinkElement", $.LinkElement);

$.defineNativeMethods("LocalMediaStream", $.LocalMediaStream);

$.defineNativeMethods("Location", $.Location);

$.defineNativeMethods("HTMLMapElement", $.MapElement);

$.defineNativeMethods("MediaController", $.MediaController);

$.defineNativeMethodsNonleaf("HTMLMediaElement", $.MediaElement);

$.defineNativeMethods("MediaError", $.MediaError);

$.defineNativeMethods("MediaKeyError", $.MediaKeyError);

$.defineNativeMethods("MediaKeyEvent", $.MediaKeyEvent);

$.defineNativeMethods("MediaList", $.MediaList);

$.defineNativeMethods("MediaQueryList", $.MediaQueryList);

$.defineNativeMethods("MediaSource", $.MediaSource);

$.defineNativeMethodsNonleaf("MediaStream", $.MediaStream);

$.defineNativeMethods("MediaStreamEvent", $.MediaStreamEvent);

$.defineNativeMethods("MediaStreamTrack", $.MediaStreamTrack);

$.defineNativeMethods("MediaStreamTrackEvent", $.MediaStreamTrackEvent);

$.defineNativeMethods("MemoryInfo", $.MemoryInfo);

$.defineNativeMethods("HTMLMenuElement", $.MenuElement);

$.defineNativeMethods("MessageChannel", $.MessageChannel);

$.defineNativeMethods("MessageEvent", $.MessageEvent);

$.defineNativeMethods("MessagePort", $.MessagePort);

$.defineNativeMethods("HTMLMetaElement", $.MetaElement);

$.defineNativeMethods("Metadata", $.Metadata);

$.defineNativeMethods("HTMLMeterElement", $.MeterElement);

$.defineNativeMethods("HTMLModElement", $.ModElement);

$.defineNativeMethodsNonleaf("MouseEvent", $.MouseEvent);

$.defineNativeMethods("MutationEvent", $.MutationEvent);

$.defineNativeMethods("MutationObserver|WebKitMutationObserver", $.MutationObserver);

$.defineNativeMethods("MutationRecord", $.MutationRecord);

$.defineNativeMethods("WebKitNamedFlow", $.NamedFlow);

$.defineNativeMethods("Navigator", $.Navigator);

$.defineNativeMethods("NavigatorUserMediaError", $.NavigatorUserMediaError);

$.defineNativeMethodsNonleaf("Node", $.Node);

$.defineNativeMethods("NodeFilter", $.NodeFilter);

$.defineNativeMethods("NodeIterator", $.NodeIterator);

$.defineNativeMethods("NodeList|RadioNodeList", $.NodeList);

$.defineNativeMethods("Notation", $.Notation);

$.defineNativeMethods("Notification", $.Notification);

$.defineNativeMethods("NotificationCenter", $.NotificationCenter);

$.defineNativeMethods("HTMLOListElement", $.OListElement);

$.defineNativeMethods("HTMLObjectElement", $.ObjectElement);

$.defineNativeMethods("HTMLOptGroupElement", $.OptGroupElement);

$.defineNativeMethods("HTMLOptionElement", $.OptionElement);

$.defineNativeMethods("HTMLOutputElement", $.OutputElement);

$.defineNativeMethods("OverflowEvent", $.OverflowEvent);

$.defineNativeMethods("PageTransitionEvent", $.PageTransitionEvent);

$.defineNativeMethods("HTMLParagraphElement", $.ParagraphElement);

$.defineNativeMethods("HTMLParamElement", $.ParamElement);

$.defineNativeMethods("Performance", $.Performance);

$.defineNativeMethodsNonleaf("PerformanceEntry", $.PerformanceEntry);

$.defineNativeMethods("PerformanceEntryList", $.PerformanceEntryList);

$.defineNativeMethods("PerformanceMark", $.PerformanceMark);

$.defineNativeMethods("PerformanceMeasure", $.PerformanceMeasure);

$.defineNativeMethods("PerformanceNavigation", $.PerformanceNavigation);

$.defineNativeMethods("PerformanceResourceTiming", $.PerformanceResourceTiming);

$.defineNativeMethods("PerformanceTiming", $.PerformanceTiming);

$.defineNativeMethods("PopStateEvent", $.PopStateEvent);

$.defineNativeMethods("PositionError", $.PositionError);

$.defineNativeMethods("HTMLPreElement", $.PreElement);

$.defineNativeMethods("ProcessingInstruction", $.ProcessingInstruction);

$.defineNativeMethods("HTMLProgressElement", $.ProgressElement);

$.defineNativeMethodsNonleaf("ProgressEvent", $.ProgressEvent);

$.defineNativeMethods("HTMLQuoteElement", $.QuoteElement);

$.defineNativeMethods("Range", $.Range);

$.defineNativeMethods("RangeException", $.RangeException);

$.defineNativeMethods("RTCDataChannel", $.RtcDataChannel);

$.defineNativeMethods("RTCDataChannelEvent", $.RtcDataChannelEvent);

$.defineNativeMethods("RTCDTMFSender", $.RtcDtmfSender);

$.defineNativeMethods("RTCDTMFToneChangeEvent", $.RtcDtmfToneChangeEvent);

$.defineNativeMethods("RTCIceCandidate", $.RtcIceCandidate);

$.defineNativeMethods("RTCIceCandidateEvent", $.RtcIceCandidateEvent);

$.defineNativeMethods("RTCPeerConnection", $.RtcPeerConnection);

$.defineNativeMethods("RTCSessionDescription", $.RtcSessionDescription);

$.defineNativeMethods("RTCStatsReport", $.RtcStatsReport);

$.defineNativeMethods("RTCStatsResponse", $.RtcStatsResponse);

$.defineNativeMethods("Screen", $.Screen);

$.defineNativeMethods("HTMLScriptElement", $.ScriptElement);

$.defineNativeMethods("ScriptProfile", $.ScriptProfile);

$.defineNativeMethods("ScriptProfileNode", $.ScriptProfileNode);

$.defineNativeMethods("SecurityPolicyViolationEvent", $.SecurityPolicyViolationEvent);

$.defineNativeMethods("HTMLSelectElement", $.SelectElement);

$.defineNativeMethods("HTMLShadowElement", $.ShadowElement);

$.defineNativeMethods("ShadowRoot", $.ShadowRoot);

$.defineNativeMethods("SourceBuffer", $.SourceBuffer);

$.defineNativeMethods("SourceBufferList", $.SourceBufferList);

$.defineNativeMethods("HTMLSourceElement", $.SourceElement);

$.defineNativeMethods("HTMLSpanElement", $.SpanElement);

$.defineNativeMethods("SpeechGrammar", $.SpeechGrammar);

$.defineNativeMethods("SpeechGrammarList", $.SpeechGrammarList);

$.defineNativeMethods("SpeechInputEvent", $.SpeechInputEvent);

$.defineNativeMethods("SpeechInputResult", $.SpeechInputResult);

$.defineNativeMethods("SpeechRecognition", $.SpeechRecognition);

$.defineNativeMethods("SpeechRecognitionAlternative", $.SpeechRecognitionAlternative);

$.defineNativeMethods("SpeechRecognitionError", $.SpeechRecognitionError);

$.defineNativeMethods("SpeechRecognitionEvent", $.SpeechRecognitionEvent);

$.defineNativeMethods("SpeechRecognitionResult", $.SpeechRecognitionResult);

$.defineNativeMethods("Storage", $.Storage);

$.defineNativeMethods("StorageEvent", $.StorageEvent);

$.defineNativeMethods("StorageInfo", $.StorageInfo);

$.defineNativeMethods("StorageQuota", $.StorageQuota);

$.defineNativeMethods("HTMLStyleElement", $.StyleElement);

$.defineNativeMethods("StyleMedia", $.StyleMedia);

$.defineNativeMethodsNonleaf("StyleSheet", $.StyleSheet);

$.defineNativeMethods("HTMLTableCaptionElement", $.TableCaptionElement);

$.defineNativeMethods("HTMLTableCellElement", $.TableCellElement);

$.defineNativeMethods("HTMLTableColElement", $.TableColElement);

$.defineNativeMethods("HTMLTableElement", $.TableElement);

$.defineNativeMethods("HTMLTableRowElement", $.TableRowElement);

$.defineNativeMethods("HTMLTableSectionElement", $.TableSectionElement);

$.defineNativeMethods("HTMLTemplateElement", $.TemplateElement);

$.defineNativeMethodsNonleaf("Text", $.Text);

$.defineNativeMethods("HTMLTextAreaElement", $.TextAreaElement);

$.defineNativeMethods("TextEvent", $.TextEvent);

$.defineNativeMethods("TextMetrics", $.TextMetrics);

$.defineNativeMethods("TextTrack", $.TextTrack);

$.defineNativeMethods("TextTrackCue", $.TextTrackCue);

$.defineNativeMethods("TextTrackCueList", $.TextTrackCueList);

$.defineNativeMethods("TextTrackList", $.TextTrackList);

$.defineNativeMethods("TimeRanges", $.TimeRanges);

$.defineNativeMethods("HTMLTitleElement", $.TitleElement);

$.defineNativeMethods("Touch", $.Touch);

$.defineNativeMethods("TouchEvent", $.TouchEvent);

$.defineNativeMethods("TouchList", $.TouchList);

$.defineNativeMethods("HTMLTrackElement", $.TrackElement);

$.defineNativeMethods("TrackEvent", $.TrackEvent);

$.defineNativeMethods("TransitionEvent|WebKitTransitionEvent", $.TransitionEvent);

$.defineNativeMethods("TreeWalker", $.TreeWalker);

$.defineNativeMethodsNonleaf("UIEvent", $.UIEvent);

$.defineNativeMethods("HTMLUListElement", $.UListElement);

$.defineNativeMethods("HTMLUnknownElement", $.UnknownElement);

$.defineNativeMethods("URL", $.Url);

$.defineNativeMethods("ValidityState", $.ValidityState);

$.defineNativeMethods("HTMLVideoElement", $.VideoElement);

$.defineNativeMethods("WebKitCSSFilterRule", $.WebKitCssFilterRule);

$.defineNativeMethods("WebKitCSSRegionRule", $.WebKitCssRegionRule);

$.defineNativeMethods("WebSocket", $.WebSocket);

$.defineNativeMethods("MouseScrollEvent|MouseWheelEvent|WheelEvent", $.WheelEvent);

$.defineNativeMethods("DOMWindow|Window", $.Window);

$.defineNativeMethods("Worker", $.Worker);

$.defineNativeMethods("XPathEvaluator", $.XPathEvaluator);

$.defineNativeMethods("XPathException", $.XPathException);

$.defineNativeMethods("XPathExpression", $.XPathExpression);

$.defineNativeMethods("XPathNSResolver", $.XPathNSResolver);

$.defineNativeMethods("XPathResult", $.XPathResult);

$.defineNativeMethods("XMLSerializer", $.XmlSerializer);

$.defineNativeMethods("XSLTProcessor", $.XsltProcessor);

$.defineNativeMethodsNonleaf("CSSValue", $._CSSValue);

$.defineNativeMethods("ClientRect", $._ClientRect);

$.defineNativeMethods("ClientRectList", $._ClientRectList);

$.defineNativeMethods("CSSRuleList", $._CssRuleList);

$.defineNativeMethods("CSSValueList", $._CssValueList);

$.defineNativeMethods("WebKitPoint", $._DomPoint);

$.defineNativeMethods("EntryArray", $._EntryArray);

$.defineNativeMethods("EntryArraySync", $._EntryArraySync);

$.defineNativeMethods("EntrySync", $._EntrySync);

$.defineNativeMethods("GamepadList", $._GamepadList);

$.defineNativeMethods("NamedNodeMap", $._NamedNodeMap);

$.defineNativeMethods("SpeechInputResultList", $._SpeechInputResultList);

$.defineNativeMethods("SpeechRecognitionResultList", $._SpeechRecognitionResultList);

$.defineNativeMethods("StyleSheetList", $._StyleSheetList);

$.defineNativeMethodsNonleaf("IDBCursor", $.Cursor);

$.defineNativeMethods("IDBCursorWithValue", $.CursorWithValue);

$.defineNativeMethods("IDBDatabase", $.Database);

$.defineNativeMethods("IDBFactory", $.IdbFactory);

$.defineNativeMethods("IDBIndex", $.Index);

$.defineNativeMethods("IDBKeyRange", $.KeyRange);

$.defineNativeMethods("IDBObjectStore", $.ObjectStore);

$.defineNativeMethods("IDBOpenDBRequest", $.OpenDBRequest);

$.defineNativeMethodsNonleaf("IDBRequest", $.Request);

$.defineNativeMethods("IDBTransaction", $.Transaction);

$.defineNativeMethods("IDBVersionChangeEvent", $.VersionChangeEvent);

$.defineNativeMethods("SVGAElement", $.AElement);

$.defineNativeMethods("SVGAltGlyphElement", $.AltGlyphElement);

$.defineNativeMethods("SVGAngle", $.Angle);

$.defineNativeMethods("SVGAnimateElement", $.AnimateElement);

$.defineNativeMethods("SVGAnimateMotionElement", $.AnimateMotionElement);

$.defineNativeMethods("SVGAnimateTransformElement", $.AnimateTransformElement);

$.defineNativeMethods("SVGAnimatedAngle", $.AnimatedAngle);

$.defineNativeMethods("SVGAnimatedBoolean", $.AnimatedBoolean);

$.defineNativeMethods("SVGAnimatedEnumeration", $.AnimatedEnumeration);

$.defineNativeMethods("SVGAnimatedInteger", $.AnimatedInteger);

$.defineNativeMethods("SVGAnimatedLength", $.AnimatedLength);

$.defineNativeMethods("SVGAnimatedLengthList", $.AnimatedLengthList);

$.defineNativeMethods("SVGAnimatedNumber", $.AnimatedNumber);

$.defineNativeMethods("SVGAnimatedNumberList", $.AnimatedNumberList);

$.defineNativeMethods("SVGAnimatedPreserveAspectRatio", $.AnimatedPreserveAspectRatio);

$.defineNativeMethods("SVGAnimatedRect", $.AnimatedRect);

$.defineNativeMethods("SVGAnimatedString", $.AnimatedString);

$.defineNativeMethods("SVGAnimatedTransformList", $.AnimatedTransformList);

$.defineNativeMethodsNonleaf("SVGAnimationElement", $.AnimationElement);

$.defineNativeMethods("SVGCircleElement", $.CircleElement);

$.defineNativeMethods("SVGClipPathElement", $.ClipPathElement);

$.defineNativeMethods("SVGDefsElement", $.DefsElement);

$.defineNativeMethods("SVGDescElement", $.DescElement);

$.defineNativeMethods("SVGElementInstance", $.ElementInstance);

$.defineNativeMethods("SVGEllipseElement", $.EllipseElement);

$.defineNativeMethods("SVGFEBlendElement", $.FEBlendElement);

$.defineNativeMethods("SVGFEColorMatrixElement", $.FEColorMatrixElement);

$.defineNativeMethods("SVGFEComponentTransferElement", $.FEComponentTransferElement);

$.defineNativeMethods("SVGFECompositeElement", $.FECompositeElement);

$.defineNativeMethods("SVGFEConvolveMatrixElement", $.FEConvolveMatrixElement);

$.defineNativeMethods("SVGFEDiffuseLightingElement", $.FEDiffuseLightingElement);

$.defineNativeMethods("SVGFEDisplacementMapElement", $.FEDisplacementMapElement);

$.defineNativeMethods("SVGFEDistantLightElement", $.FEDistantLightElement);

$.defineNativeMethods("SVGFEFloodElement", $.FEFloodElement);

$.defineNativeMethods("SVGFEFuncAElement", $.FEFuncAElement);

$.defineNativeMethods("SVGFEFuncBElement", $.FEFuncBElement);

$.defineNativeMethods("SVGFEFuncGElement", $.FEFuncGElement);

$.defineNativeMethods("SVGFEFuncRElement", $.FEFuncRElement);

$.defineNativeMethods("SVGFEGaussianBlurElement", $.FEGaussianBlurElement);

$.defineNativeMethods("SVGFEImageElement", $.FEImageElement);

$.defineNativeMethods("SVGFEMergeElement", $.FEMergeElement);

$.defineNativeMethods("SVGFEMergeNodeElement", $.FEMergeNodeElement);

$.defineNativeMethods("SVGFEMorphologyElement", $.FEMorphologyElement);

$.defineNativeMethods("SVGFEOffsetElement", $.FEOffsetElement);

$.defineNativeMethods("SVGFEPointLightElement", $.FEPointLightElement);

$.defineNativeMethods("SVGFESpecularLightingElement", $.FESpecularLightingElement);

$.defineNativeMethods("SVGFESpotLightElement", $.FESpotLightElement);

$.defineNativeMethods("SVGFETileElement", $.FETileElement);

$.defineNativeMethods("SVGFETurbulenceElement", $.FETurbulenceElement);

$.defineNativeMethods("SVGFilterElement", $.FilterElement);

$.defineNativeMethods("SVGForeignObjectElement", $.ForeignObjectElement);

$.defineNativeMethods("SVGGElement", $.GElement);

$.defineNativeMethods("SVGImageElement", $.ImageElement0);

$.defineNativeMethods("SVGLength", $.Length);

$.defineNativeMethods("SVGLengthList", $.LengthList);

$.defineNativeMethods("SVGLineElement", $.LineElement);

$.defineNativeMethods("SVGLinearGradientElement", $.LinearGradientElement);

$.defineNativeMethods("SVGMarkerElement", $.MarkerElement);

$.defineNativeMethods("SVGMaskElement", $.MaskElement);

$.defineNativeMethods("SVGMatrix", $.Matrix);

$.defineNativeMethods("SVGMetadataElement", $.MetadataElement);

$.defineNativeMethods("SVGNumber", $.Number);

$.defineNativeMethods("SVGNumberList", $.NumberList);

$.defineNativeMethods("SVGPathElement", $.PathElement);

$.defineNativeMethodsNonleaf("SVGPathSeg", $.PathSeg);

$.defineNativeMethods("SVGPathSegArcAbs", $.PathSegArcAbs);

$.defineNativeMethods("SVGPathSegArcRel", $.PathSegArcRel);

$.defineNativeMethods("SVGPathSegClosePath", $.PathSegClosePath);

$.defineNativeMethods("SVGPathSegCurvetoCubicAbs", $.PathSegCurvetoCubicAbs);

$.defineNativeMethods("SVGPathSegCurvetoCubicRel", $.PathSegCurvetoCubicRel);

$.defineNativeMethods("SVGPathSegCurvetoCubicSmoothAbs", $.PathSegCurvetoCubicSmoothAbs);

$.defineNativeMethods("SVGPathSegCurvetoCubicSmoothRel", $.PathSegCurvetoCubicSmoothRel);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticAbs", $.PathSegCurvetoQuadraticAbs);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticRel", $.PathSegCurvetoQuadraticRel);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticSmoothAbs", $.PathSegCurvetoQuadraticSmoothAbs);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticSmoothRel", $.PathSegCurvetoQuadraticSmoothRel);

$.defineNativeMethods("SVGPathSegLinetoAbs", $.PathSegLinetoAbs);

$.defineNativeMethods("SVGPathSegLinetoHorizontalAbs", $.PathSegLinetoHorizontalAbs);

$.defineNativeMethods("SVGPathSegLinetoHorizontalRel", $.PathSegLinetoHorizontalRel);

$.defineNativeMethods("SVGPathSegLinetoRel", $.PathSegLinetoRel);

$.defineNativeMethods("SVGPathSegLinetoVerticalAbs", $.PathSegLinetoVerticalAbs);

$.defineNativeMethods("SVGPathSegLinetoVerticalRel", $.PathSegLinetoVerticalRel);

$.defineNativeMethods("SVGPathSegList", $.PathSegList);

$.defineNativeMethods("SVGPathSegMovetoAbs", $.PathSegMovetoAbs);

$.defineNativeMethods("SVGPathSegMovetoRel", $.PathSegMovetoRel);

$.defineNativeMethods("SVGPatternElement", $.PatternElement);

$.defineNativeMethods("SVGPoint", $.Point0);

$.defineNativeMethods("SVGPointList", $.PointList);

$.defineNativeMethods("SVGPolygonElement", $.PolygonElement);

$.defineNativeMethods("SVGPolylineElement", $.PolylineElement);

$.defineNativeMethods("SVGPreserveAspectRatio", $.PreserveAspectRatio);

$.defineNativeMethods("SVGRadialGradientElement", $.RadialGradientElement);

$.defineNativeMethods("SVGRect", $.Rect0);

$.defineNativeMethods("SVGRectElement", $.RectElement);

$.defineNativeMethods("SVGRenderingIntent", $.RenderingIntent);

$.defineNativeMethods("SVGScriptElement", $.ScriptElement0);

$.defineNativeMethods("SVGSetElement", $.SetElement);

$.defineNativeMethods("SVGStopElement", $.StopElement);

$.defineNativeMethods("SVGStringList", $.StringList);

$.defineNativeMethods("SVGStyleElement", $.StyleElement0);

$.defineNativeMethodsNonleaf("SVGStyledElement", $.StyledElement);

$.defineNativeMethods("SVGDocument", $.SvgDocument);

$.defineNativeMethodsNonleaf("SVGElement", $.SvgElement);

$.defineNativeMethods("SVGException", $.SvgException);

$.defineNativeMethods("SVGSVGElement", $.SvgSvgElement);

$.defineNativeMethods("SVGSwitchElement", $.SwitchElement);

$.defineNativeMethods("SVGSymbolElement", $.SymbolElement);

$.defineNativeMethods("SVGTSpanElement", $.TSpanElement);

$.defineNativeMethodsNonleaf("SVGTextContentElement", $.TextContentElement);

$.defineNativeMethods("SVGTextElement", $.TextElement);

$.defineNativeMethods("SVGTextPathElement", $.TextPathElement);

$.defineNativeMethodsNonleaf("SVGTextPositioningElement", $.TextPositioningElement);

$.defineNativeMethods("SVGTitleElement", $.TitleElement0);

$.defineNativeMethods("SVGTransform", $.Transform);

$.defineNativeMethods("SVGTransformList", $.TransformList);

$.defineNativeMethods("SVGUnitTypes", $.UnitTypes);

$.defineNativeMethods("SVGUseElement", $.UseElement);

$.defineNativeMethods("SVGViewElement", $.ViewElement);

$.defineNativeMethods("SVGViewSpec", $.ViewSpec);

$.defineNativeMethods("SVGZoomEvent", $.ZoomEvent);

$.defineNativeMethods("SVGElementInstanceList", $._ElementInstanceList);

$.defineNativeMethodsNonleaf("SVGGradientElement", $._GradientElement);

$.defineNativeMethods("SVGColor", $._SVGColor);

$.defineNativeMethodsNonleaf("SVGComponentTransferFunctionElement", $._SVGComponentTransferFunctionElement);

$.defineNativeMethods("ArrayBuffer", $.ByteBuffer);

$.defineNativeMethodsNonleaf("ArrayBufferView", $.TypedData);

$.defineNativeMethods("DataView", $.ByteData);

$.defineNativeMethods("Float32Array", $.Float32List);

$.defineNativeMethods("Float64Array", $.Float64List);

$.defineNativeMethods("Int16Array", $.Int16List);

$.defineNativeMethods("Int32Array", $.Int32List);

$.defineNativeMethods("Int8Array", $.Int8List);

$.defineNativeMethods("Uint16Array", $.Uint16List);

$.defineNativeMethods("Uint32Array", $.Uint32List);

$.defineNativeMethods("Uint8ClampedArray", $.Uint8ClampedList);

$.defineNativeMethodsNonleaf("Uint8Array", $.Uint8List);

$.defineNativeMethods("AnalyserNode", $.AnalyserNode);

$.defineNativeMethods("AudioBuffer", $.AudioBuffer);

$.defineNativeMethods("AudioBufferSourceNode", $.AudioBufferSourceNode);

$.defineNativeMethodsNonleaf("AudioContext", $.AudioContext);

$.defineNativeMethods("AudioDestinationNode", $.AudioDestinationNode);

$.defineNativeMethods("AudioListener", $.AudioListener);

$.defineNativeMethodsNonleaf("AudioNode", $.AudioNode);

$.defineNativeMethods("AudioParam", $.AudioParam);

$.defineNativeMethods("AudioProcessingEvent", $.AudioProcessingEvent);

$.defineNativeMethodsNonleaf("AudioSourceNode", $.AudioSourceNode);

$.defineNativeMethods("BiquadFilterNode", $.BiquadFilterNode);

$.defineNativeMethods("ChannelMergerNode", $.ChannelMergerNode);

$.defineNativeMethods("ChannelSplitterNode", $.ChannelSplitterNode);

$.defineNativeMethods("ConvolverNode", $.ConvolverNode);

$.defineNativeMethods("DelayNode", $.DelayNode);

$.defineNativeMethods("DynamicsCompressorNode", $.DynamicsCompressorNode);

$.defineNativeMethods("GainNode", $.GainNode);

$.defineNativeMethods("MediaElementAudioSourceNode", $.MediaElementAudioSourceNode);

$.defineNativeMethods("MediaStreamAudioDestinationNode", $.MediaStreamAudioDestinationNode);

$.defineNativeMethods("MediaStreamAudioSourceNode", $.MediaStreamAudioSourceNode);

$.defineNativeMethods("OfflineAudioCompletionEvent", $.OfflineAudioCompletionEvent);

$.defineNativeMethods("OfflineAudioContext", $.OfflineAudioContext);

$.defineNativeMethods("OscillatorNode", $.OscillatorNode);

$.defineNativeMethods("PannerNode", $.PannerNode);

$.defineNativeMethods("ScriptProcessorNode", $.ScriptProcessorNode);

$.defineNativeMethods("WaveShaperNode", $.WaveShaperNode);

$.defineNativeMethods("WaveTable", $.WaveTable);

$.defineNativeMethods("WebGLActiveInfo", $.ActiveInfo);

$.defineNativeMethods("WebGLBuffer", $.Buffer);

$.defineNativeMethods("WebGLCompressedTextureATC", $.CompressedTextureAtc);

$.defineNativeMethods("WebGLCompressedTexturePVRTC", $.CompressedTexturePvrtc);

$.defineNativeMethods("WebGLCompressedTextureS3TC", $.CompressedTextureS3TC);

$.defineNativeMethods("WebGLContextAttributes", $.ContextAttributes);

$.defineNativeMethods("WebGLContextEvent", $.ContextEvent);

$.defineNativeMethods("WebGLDebugRendererInfo", $.DebugRendererInfo);

$.defineNativeMethods("WebGLDebugShaders", $.DebugShaders);

$.defineNativeMethods("WebGLDepthTexture", $.DepthTexture);

$.defineNativeMethods("EXTDrawBuffers", $.ExtDrawBuffers);

$.defineNativeMethods("EXTTextureFilterAnisotropic", $.ExtTextureFilterAnisotropic);

$.defineNativeMethods("WebGLFramebuffer", $.Framebuffer);

$.defineNativeMethods("WebGLLoseContext", $.LoseContext);

$.defineNativeMethods("OESElementIndexUint", $.OesElementIndexUint);

$.defineNativeMethods("OESStandardDerivatives", $.OesStandardDerivatives);

$.defineNativeMethods("OESTextureFloat", $.OesTextureFloat);

$.defineNativeMethods("OESTextureHalfFloat", $.OesTextureHalfFloat);

$.defineNativeMethods("OESVertexArrayObject", $.OesVertexArrayObject);

$.defineNativeMethods("WebGLProgram", $.Program);

$.defineNativeMethods("WebGLRenderbuffer", $.Renderbuffer);

$.defineNativeMethods("WebGLRenderingContext", $.RenderingContext);

$.defineNativeMethods("WebGLShader", $.Shader);

$.defineNativeMethods("WebGLShaderPrecisionFormat", $.ShaderPrecisionFormat);

$.defineNativeMethods("WebGLTexture", $.Texture);

$.defineNativeMethods("WebGLUniformLocation", $.UniformLocation);

$.defineNativeMethods("WebGLVertexArrayObjectOES", $.VertexArrayObject);

$.defineNativeMethods("Database", $.SqlDatabase);

$.defineNativeMethods("SQLError", $.SqlError);

$.defineNativeMethods("SQLException", $.SqlException);

$.defineNativeMethods("SQLResultSet", $.SqlResultSet);

$.defineNativeMethods("SQLResultSetRowList", $.SqlResultSetRowList);

$.defineNativeMethods("SQLTransaction", $.SqlTransaction);


var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.main.call$0 = $.main;
$.initializeDispatchProperty(function(a) {
  $.getDispatchProperty = a;
}, "___dart_dispatch_record_ZxYxX_0_", $.Interceptor.prototype);
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f<"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        isolateProperties[cls] = defineClass(name, cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=app.dart.js.map
