{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [Iterator] class provides methods to iterate over an object. It\nis transparently used by the for-in construct to test for the end\nof the iteration, and to get the elements.\n\nIf the object iterated over is changed during the iteration, the\nbehavior is unspecified.\n\nThe [Iterator] is initially positioned before the first element. Before\naccessing the first element the iterator must thus be advanced ([moveNext])\nto point to the first element. If there is no element left, then [moveNext]\nreturns false.\n\nA typical usage of an [Iterator] looks as follows:\n\n    var it = obj.iterator;\n    while (it.moveNext()) {\n      use(it.current);\n    }\n","uri":"dart-sdk/lib/core/iterator.dart","name":"Iterator","id":"Iterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nMoves to the next element. Returns true if [current] contains the next\nelement. Returns false, if no element was left.\n\nIt is safe to invoke [moveNext] even when the iterator is already\npositioned after the last element. In this case [moveNext] has no effect.\n","name":"moveNext","id":"moveNext0()","line":"35","kind":"method"},{"ref":{"refId":"dart.core/Iterator/E","name":"E"},"comment":"\nReturns the current element.\n\nReturn [:null:] if the iterator has not yet been moved to the first\nelement, or if the iterator has been moved after the last element of the\n[Iterable].\n","name":"current","id":"current","line":"44","kind":"property"},{"name":"E","id":"E","kind":"typeparam"}],"line":"27","kind":"class"}],"line":"5","kind":"library"}],"comment":"\nDart Web Toolkit Util library.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/util.dart","id":"dart_web_toolkit_util","children":[{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/AnimationType/int","name":"int"}],"name":"Enum"},"comment":"\nThe type of animation to use when opening the popup.\n\n<ul>\n<li>CENTER - Expand from the center of the popup</li>\n<li>ONE_WAY_CORNER - Expand from the top left corner, do not animate hiding\n</li>\n</ul>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/animation_type.dart","name":"AnimationType","id":"AnimationType","children":[{"ref":{"refId":"dart_web_toolkit_util/AnimationType","name":"AnimationType"},"isStatic":true,"name":"CENTER","id":"CENTER","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/AnimationType","name":"AnimationType"},"isStatic":true,"name":"ONE_WAY_CORNER","id":"ONE_WAY_CORNER","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/AnimationType","name":"AnimationType"},"isStatic":true,"name":"ROLL_DOWN","id":"ROLL_DOWN","line":"21","kind":"variable"},{"name":"AnimationType","id":"AnimationType1()","children":[{"ref":{"refId":"dart_web_toolkit_util/AnimationType/int","name":"int"},"name":"num","id":"num","kind":"param"}],"line":"17","kind":"constructor"},{"name":"int","id":"int","kind":"typeparam"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/DockLayoutConstant/int","name":"int"}],"name":"Enum"},"comment":"\nDockPanel layout constant, used in\n{@link DockPanel#add(Widget, DockPanel.DockLayoutConstant)}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/layout_constant.dart","name":"DockLayoutConstant","id":"DockLayoutConstant","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the center of the dock.\n","name":"CENTER","id":"CENTER","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the beginning of the line direction\nfor the layout.\n","name":"LINE_START","id":"LINE_START","line":"22","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the end of the line direction\nfor the layout.\n","name":"LINE_END","id":"LINE_END","line":"27","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the east edge of the dock.\n","name":"EAST","id":"EAST","line":"31","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the north edge of the dock.\n","name":"NORTH","id":"NORTH","line":"35","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the south edge of the dock.\n","name":"SOUTH","id":"SOUTH","line":"39","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"isStatic":true,"comment":"\nSpecifies that a widget be added at the west edge of the dock.\n","name":"WEST","id":"WEST","line":"43","kind":"variable"},{"name":"DockLayoutConstant","id":"DockLayoutConstant1()","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant/int","name":"int"},"name":"type","id":"type","kind":"param"}],"line":"12","kind":"constructor"},{"name":"int","id":"int","kind":"typeparam"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA string wrapped as an object of type {@link SafeHtml}.\n\n<p>\nThis class is package-private and intended for internal use by the\n{@link com.google.gwt.safehtml} package.\n\n<p>\nAll implementors must implement .equals and .hashCode so that they operate\njust like String.equals() and String.hashCode().\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/safe_html_string.dart","name":"SafeHtmlString","id":"SafeHtmlString","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\n{@inheritDoc}\n","name":"asString","id":"asString0()","line":"46","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nCompares this string to the specified object.\n","name":"==","id":"==1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"53","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns a hash code for this string.\n","name":"hashCode","id":"hashCode","line":"63","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_html","isPrivate":true,"id":"_html","line":"19","kind":"variable"},{"comment":"\nConstructs a {@link SafeHtmlString} from a string. Callers are responsible\nfor ensuring that the string passed as the argument to this constructor\nsatisfies the constraints of the contract imposed by the {@link SafeHtml}\ninterface.\n\n@param html the string to be wrapped as a {@link SafeHtml}\n","name":"SafeHtmlString","id":"SafeHtmlString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"29","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUtility class containing static methods for escaping and sanitizing strings.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/safe_html_utils.dart","name":"SafeHtmlUtils","id":"SafeHtmlUtils","children":[{"returnType":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"isStatic":true,"comment":"\nReturns a {@link SafeHtml} containing the escaped string.\n\n@param s the input String\n@return a {@link SafeHtml} instance\n","name":"fromString","id":"fromString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"isStatic":true,"comment":"\nReturns a {@link SafeHtml} constructed from a trusted string, i.e., without\nescaping the string. No checks are performed. The calling code should be\ncarefully reviewed to ensure the argument meets the {@link SafeHtml} contract.\n\n@param s the input String\n@return a {@link SafeHtml} instance\n","name":"fromTrustedString","id":"fromTrustedString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"htmlEscape","id":"htmlEscape1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"33","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface encapsulates HTML that is guaranteed\nto be safe to use (with respect to potential Cross-Site-Scripting\nvulnerabilities) in an HTML context.\n\n<p>\nNote on usage: SafeHtml should be used to ensure user input is not executed\nin the browser. SafeHtml should not be used to sanitize input before sending\nit to the server: The server cannot rely on the type contract of SafeHtml\nvalues received from clients, because a malicious client could provide\nmaliciously crafted serialized forms of implementations of this type that\nviolate the type contract.\n\n<p>\nAll implementing classes must maintain the class invariant (by design and\nimplementation and/or convention of use), that invoking {@link #asString()}\non any instance will return a string that is safe to assign to the {@code\n.innerHTML} DOM property in a browser (or to use similarly in an \"inner HTML\"\ncontext), in the sense that doing so must not cause execution of script in\nthe browser.\n\n<p>\nFurthermore, values of this type must be composable, i.e. for any two values\n{@code A} and {@code B} of this type, {@code A.asString() + B.asString()}\nmust itself be a value that satisfies the SafeHtml type constraint. This\nrequirement implies that for any value {@code A} of this type, if {@code\nA.asString()} includes HTML markup, the string must end in an \"inner HTML\"\ncontext and not inside a tag or attribute. For example, a value of {@code\n<div style=\"} or {@code <img src=\"} would not satisfy the SafeHtml contract.\nThis is because concatenating such strings with a second value that itself\ndoes not contain script-executing HTML markup can result in an overall string\nthat does. For example, if {@code javascript:malicious()\">} is appended to\n{@code <img src=\"}, the resulting string may result in script execution.\n\n<p>\nAll implementations must implement equals() and hashCode() to behave\nconsistently with the result of asString().equals() and asString.hashCode().\n\n<p>\nImplementations must not return {@code null} from {@link #asString()}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/safe_html.dart","name":"SafeHtml","id":"SafeHtml","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns this object's contained HTML as a string.\n\n<p>\nBased on this class' contract, the returned value will be non-null and a\nstring that is safe to use in an HTML context.\n\n@return the contents as a String\n","name":"asString","id":"asString0()","line":"76","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nCompares this string to the specified object.\nMust be equal to asString().equals().\n\n@param anObject the object to compare to\n","name":"==","id":"==1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"84","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns a hash code for this string.\nMust be equal to asString().hashCode().\n","name":"hashCode","id":"hashCode","line":"90","kind":"property"}],"line":"47","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUtility class containing static methods for validating and sanitizing URIs.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/uri_utils.dart","name":"UriUtils","id":"UriUtils","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nEncodes the URL.\n<p>\nIn client code, this method delegates to {@link URL#encode(String)} and\nthen unescapes brackets, as they might be used for IPv6 addresses.\n\n@param uri the URL to encode\n@return the %-escaped URL\n","name":"encode","id":"encode1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"uri","id":"uri","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nEncodes the URL, preserving existing %-escapes.\n\n@param uri the URL to encode\n@return the %-escaped URL\n","name":"encodeAllowEscapes","id":"encodeAllowEscapes1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"uri","id":"uri","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nExtracts the scheme of a URI.\n\n@param uri the URI to extract the scheme from\n@return the URI's scheme, or {@code null} if the URI does not have one\n","name":"extractScheme","id":"extractScheme1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"uri","id":"uri","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isStatic":true,"comment":"\nReturns a {@link SafeUri} constructed from a value that is fully under\nthe control of the program, e.g., a constant.\n\n<p>\nThe string is not sanitized and no checks are performed.  The assumption\nthat the resulting value adheres to the {@link SafeUri} type contract\nis entirely based on the argument being fully under program control and\nnot being derived from a program input.\n\n<p>\n<strong>Convention of use:</strong> This method must only be invoked on\nvalues that are fully under the program's control, such as string literals.\n\n@param s the input String\n@return a SafeUri instance\n","name":"fromSafeConstant","id":"fromSafeConstant1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isStatic":true,"comment":"\nReturns a {@link SafeUri} obtained by sanitizing the provided string.\n\n<p>\nThe input string is sanitized using {@link #sanitizeUri(String)}.\n\n@param s the input String\n@return a SafeUri instance\n","name":"fromString","id":"fromString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"163","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isStatic":true,"comment":"\nReturns a {@link SafeUri} constructed from a trusted string, i.e., without\nsanitizing the string. No checks are performed. The calling code should be\ncarefully reviewed to ensure the argument meets the SafeUri contract.\n\n@param s the input String\n@return a SafeUri instance\n","name":"fromTrustedString","id":"fromTrustedString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nDetermines if a {@link String} is safe to use as the value of a URI-valued\nHTML attribute such as {@code src} or {@code href}.\n\n<p>\nIn this context, a URI is safe if it can be established that using it as\nthe value of a URI-valued HTML attribute such as {@code src} or {@code\nhref} cannot result in script execution. Specifically, this method deems a\nURI safe if it either does not have a scheme, or its scheme is one of\n{@code http, https, ftp, mailto}.\n\n@param uri the URI to validate\n@return {@code true} if {@code uri} is safe in the above sense; {@code\n        false} otherwise\n","name":"isSafeUri","id":"isSafeUri1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"uri","id":"uri","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nSanitizes a URI.\n\n<p>\nThis method returns the URI provided if it is safe to use as the the value\nof a URI-valued HTML attribute according to {@link #isSafeUri}, or the URI\n\"{@code #}\" otherwise.\n\n@param uri the URI to sanitize\n@return a sanitized String\n","name":"sanitizeUri","id":"sanitizeUri1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"uri","id":"uri","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isStatic":true,"comment":"\nReturns a {@link SafeUri} constructed from an untrusted string but without\nsanitizing it.\n\n<strong>Despite this method creating a SafeUri instance, no checks are\nperformed, so the returned SafeUri is absolutely NOT guaranteed to be\nsafe!</strong>\n\n@param s the input String\n@return a SafeUri instance\n@deprecated This method is intended only for use in APIs that use\n            {@link SafeUri} to represent URIs, but for backwards\n            compatibility have methods that accept URI parameters as plain\n            strings.\n","name":"unsafeCastFromUntrustedString","id":"unsafeCastFromUntrustedString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"249","kind":"method"},{"name":"UriUtils","id":"UriUtils0()","line":"254","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA string wrapped as an object of type {@link SafeUri}.\n\n<p>\nThis class is package-private and intended for internal use by the\n{@link com.google.gwt.safehtml} package.\n\nAll implementors must implement .equals and .hashCode so that they operate\njust like String.equals() and String.hashCode().\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/safe_uri.dart","name":"SafeUriString","id":"SafeUriString","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\n{@inheritDoc}\n","name":"asString","id":"asString0()","line":"94","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nCompares this string to the specified object.\n","name":"==","id":"==1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"101","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns a hash code for this string.\n","name":"hashCode","id":"hashCode","line":"111","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_uri","isPrivate":true,"id":"_uri","line":"77","kind":"variable"},{"comment":"\nConstructs a {@link SafeUriString} from a string. Callers are responsible\nfor ensuring that the string passed as the argument to this constructor\nsatisfies the constraints of the contract imposed by the {@link SafeUri}\ninterface.\n\n@param uri the string to be wrapped as a {@link SafeUri}\n","name":"SafeUriString","id":"SafeUriString1()","children":[{"initializedField":{"refId":"dart_web_toolkit_util/SafeUriString/_uri","name":"_uri"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_uri","isPrivate":true,"id":"_uri","kind":"param"}],"line":"87","kind":"constructor"}],"line":"75","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface encapsulates a URI that is\nguaranteed to be safe to use (with respect to potential Cross-Site-Scripting\nvulnerabilities) in a URL context, for example in a URL-typed attribute in an\nHTML document.\n\n<p>\nNote on usage: SafeUri should be used to ensure user input is not executed in\nthe browser. SafeUri should not be used to sanitize input before sending it\nto the server: The server cannot rely on the type contract of SafeUri values\nreceived from clients, because a malicious client could provide maliciously\ncrafted serialized forms of implementations of this type that violate the\ntype contract.\n\n<p>\nAll implementing classes must maintain the class invariant (by design and\nimplementation and/or convention of use), that invoking {@link #asString()}\non any instance will return a string that is safe to assign to a URL-typed\nDOM or CSS property in a browser (or to use similarly in a \"URL context\"), in\nthe sense that doing so must not cause unintended execution of script in the\nbrowser.\n\n<p>\nIn determining safety of a URL both the value itself as well as its\nprovenance matter. An arbitrary URI, including e.g. a\n<code>javascript:</code> URI, can be deemed safe in the sense of this type's\ncontract if it is entirely under the program's control (e.g., a string\nliteral, {@see UriUtils#fromSafeConstant}).\n\n<p>\nAll implementations must implement equals() and hashCode() to behave\nconsistently with the result of asString().equals() and asString.hashCode().\n\n<p>\nImplementations must not return {@code null} from {@link #asString()}.\n\n@see UriUtils\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/safe_uri.dart","name":"SafeUri","id":"SafeUri","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns this object's contained URI as a string.\n\n<p>\nBased on this class' contract, the returned value will be non-null and a\nstring that is safe to use in a URL context.\n\n@return the contents as a String\n","name":"asString","id":"asString0()","line":"54","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nCompares this string to the specified object. Must be equal to\nasString().equals().\n\n@param anObject the object to compare to\n","name":"==","id":"==1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"62","kind":"method"}],"line":"44","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nEmulation of Java Enum class.\n\nExample:\n\nclass Meter<int> extends Enum<int> {\n\n const Meter(int val) : super (val);\n\n static const Meter HIGH = const Meter(100);\n static const Meter MIDDLE = const Meter(50);\n static const Meter LOW = const Meter(10);\n}\n\nand usage:\n\nassert (Meter.HIGH, 100);\nassert (Meter.HIGH is Meter);\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/enum.dart","name":"Enum","id":"Enum","children":[{"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"name":"value","id":"value","line":"31","kind":"property"},{"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"isFinal":true,"name":"_value","isPrivate":true,"id":"_value","line":"27","kind":"variable"},{"name":"Enum","id":"Enum1()","children":[{"initializedField":{"refId":"dart_web_toolkit_util/Enum/_value","name":"_value"},"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","kind":"param"}],"line":"29","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"25","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_util/RemoveIterator/E","name":"E"}],"name":"Iterator"},"comment":"\nAn iterator over a collection supports remove elements.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/remove_iterator.dart","name":"RemoveIterator","id":"RemoveIterator","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves from the underlying collection the last element returned\nby this iterator (optional operation).  This method can be called\nonly once per call to {@link #next}.  The behavior of an iterator\nis unspecified if the underlying collection is modified while the\niteration is in progress in any way other than by calling this\nmethod.\n\n@throws UnsupportedOperationException if the {@code remove}\n        operation is not supported by this iterator\n\n@throws IllegalStateException if the {@code next} method has not\n        yet been called, or the {@code remove} method has already\n        been called after the last call to the {@code next}\n        method\n","name":"remove","id":"remove0()","line":"26","kind":"method"},{"name":"E","id":"E","kind":"typeparam"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Style","id":"Style","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_DISPLAY_INLINE_BLOCK","isPrivate":true,"id":"_DISPLAY_INLINE_BLOCK","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_DISPLAY_INLINE","isPrivate":true,"id":"_DISPLAY_INLINE","line":"104","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_DISPLAY_BLOCK","isPrivate":true,"id":"_DISPLAY_BLOCK","line":"105","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_DISPLAY_NONE","isPrivate":true,"id":"_DISPLAY_NONE","line":"106","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_OVERFLOW_AUTO","isPrivate":true,"id":"_OVERFLOW_AUTO","line":"108","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_OVERFLOW_SCROLL","isPrivate":true,"id":"_OVERFLOW_SCROLL","line":"109","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_OVERFLOW_HIDDEN","isPrivate":true,"id":"_OVERFLOW_HIDDEN","line":"110","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_OVERFLOW_VISIBLE","isPrivate":true,"id":"_OVERFLOW_VISIBLE","line":"111","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_POSITION_FIXED","isPrivate":true,"id":"_POSITION_FIXED","line":"113","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_POSITION_ABSOLUTE","isPrivate":true,"id":"_POSITION_ABSOLUTE","line":"114","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_POSITION_RELATIVE","isPrivate":true,"id":"_POSITION_RELATIVE","line":"115","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_POSITION_STATIC","isPrivate":true,"id":"_POSITION_STATIC","line":"116","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_TEXT_ALIGN_CENTER","isPrivate":true,"id":"_TEXT_ALIGN_CENTER","line":"118","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_TEXT_ALIGN_JUSTIFY","isPrivate":true,"id":"_TEXT_ALIGN_JUSTIFY","line":"119","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_TEXT_ALIGN_LEFT","isPrivate":true,"id":"_TEXT_ALIGN_LEFT","line":"120","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_TEXT_ALIGN_RIGHT","isPrivate":true,"id":"_TEXT_ALIGN_RIGHT","line":"121","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_MM","isPrivate":true,"id":"_UNIT_MM","line":"123","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_CM","isPrivate":true,"id":"_UNIT_CM","line":"124","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_IN","isPrivate":true,"id":"_UNIT_IN","line":"125","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_PC","isPrivate":true,"id":"_UNIT_PC","line":"126","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_PT","isPrivate":true,"id":"_UNIT_PT","line":"127","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_EX","isPrivate":true,"id":"_UNIT_EX","line":"128","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_EM","isPrivate":true,"id":"_UNIT_EM","line":"129","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_PCT","isPrivate":true,"id":"_UNIT_PCT","line":"130","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_UNIT_PX","isPrivate":true,"id":"_UNIT_PX","line":"131","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_WHITE_SPACE_NORMAL","isPrivate":true,"id":"_WHITE_SPACE_NORMAL","line":"133","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_WHITE_SPACE_NOWRAP","isPrivate":true,"id":"_WHITE_SPACE_NOWRAP","line":"134","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_WHITE_SPACE_PRE","isPrivate":true,"id":"_WHITE_SPACE_PRE","line":"135","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_WHITE_SPACE_PRE_LINE","isPrivate":true,"id":"_WHITE_SPACE_PRE_LINE","line":"136","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_WHITE_SPACE_PRE_WRAP","isPrivate":true,"id":"_WHITE_SPACE_PRE_WRAP","line":"137","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_VISIBILITY_HIDDEN","isPrivate":true,"id":"_VISIBILITY_HIDDEN","line":"139","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_VISIBILITY_VISIBLE","isPrivate":true,"id":"_VISIBILITY_VISIBLE","line":"140","kind":"variable"}],"line":"101","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/Visibility/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the visibility property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Visibility","id":"Visibility","children":[{"ref":{"refId":"dart_web_toolkit_util/Visibility","name":"Visibility"},"isStatic":true,"name":"VISIBLE","id":"VISIBLE","line":"97","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Visibility","name":"Visibility"},"isStatic":true,"name":"HIDDEN","id":"HIDDEN","line":"98","kind":"variable"},{"name":"Visibility","id":"Visibility1()","children":[{"ref":{"refId":"dart_web_toolkit_util/Visibility/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"95","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"93","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/TextAlign/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the text-align property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"TextAlign","id":"TextAlign","children":[{"ref":{"refId":"dart_web_toolkit_util/TextAlign","name":"TextAlign"},"isStatic":true,"name":"CENTER","id":"CENTER","line":"84","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/TextAlign","name":"TextAlign"},"isStatic":true,"name":"JUSTIFY","id":"JUSTIFY","line":"85","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/TextAlign","name":"TextAlign"},"isStatic":true,"name":"LEFT","id":"LEFT","line":"86","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/TextAlign","name":"TextAlign"},"isStatic":true,"name":"RIGHT","id":"RIGHT","line":"87","kind":"variable"},{"name":"TextAlign","id":"TextAlign1()","children":[{"ref":{"refId":"dart_web_toolkit_util/TextAlign/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"82","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"80","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/WhiteSpace/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the 'white-space' CSS property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"WhiteSpace","id":"WhiteSpace","children":[{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace","name":"WhiteSpace"},"isStatic":true,"name":"NORMAL","id":"NORMAL","line":"70","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace","name":"WhiteSpace"},"isStatic":true,"name":"NOWRAP","id":"NOWRAP","line":"71","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace","name":"WhiteSpace"},"isStatic":true,"name":"PRE","id":"PRE","line":"72","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace","name":"WhiteSpace"},"isStatic":true,"name":"PRE_LINE","id":"PRE_LINE","line":"73","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace","name":"WhiteSpace"},"isStatic":true,"name":"PRE_WRAP","id":"PRE_WRAP","line":"74","kind":"variable"},{"name":"WhiteSpace","id":"WhiteSpace1()","children":[{"ref":{"refId":"dart_web_toolkit_util/WhiteSpace/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"68","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"66","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/Unit/String","name":"String"}],"name":"Enum"},"comment":"\nCSS length units.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Unit","id":"Unit","children":[{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"PX","id":"PX","line":"52","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"PCT","id":"PCT","line":"53","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"EM","id":"EM","line":"54","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"EX","id":"EX","line":"55","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"PT","id":"PT","line":"56","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"PC","id":"PC","line":"57","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"IN","id":"IN","line":"58","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"CM","id":"CM","line":"59","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isStatic":true,"name":"MM","id":"MM","line":"60","kind":"variable"},{"name":"Unit","id":"Unit1()","children":[{"ref":{"refId":"dart_web_toolkit_util/Unit/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"50","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"48","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/Position/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the position property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Position","id":"Position","children":[{"ref":{"refId":"dart_web_toolkit_util/Position","name":"Position"},"isStatic":true,"name":"STATIC","id":"STATIC","line":"39","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Position","name":"Position"},"isStatic":true,"name":"RELATIVE","id":"RELATIVE","line":"40","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Position","name":"Position"},"isStatic":true,"name":"ABSOLUTE","id":"ABSOLUTE","line":"41","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Position","name":"Position"},"isStatic":true,"name":"FIXED","id":"FIXED","line":"42","kind":"variable"},{"name":"Position","id":"Position1()","children":[{"ref":{"refId":"dart_web_toolkit_util/Position/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"37","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"35","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/Overflow/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the overflow property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Overflow","id":"Overflow","children":[{"ref":{"refId":"dart_web_toolkit_util/Overflow","name":"Overflow"},"isStatic":true,"name":"VISIBLE","id":"VISIBLE","line":"26","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Overflow","name":"Overflow"},"isStatic":true,"name":"HIDDEN","id":"HIDDEN","line":"27","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Overflow","name":"Overflow"},"isStatic":true,"name":"SCROLL","id":"SCROLL","line":"28","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Overflow","name":"Overflow"},"isStatic":true,"name":"AUTO","id":"AUTO","line":"29","kind":"variable"},{"name":"Overflow","id":"Overflow1()","children":[{"ref":{"refId":"dart_web_toolkit_util/Overflow/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"24","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart_web_toolkit_util/Display/String","name":"String"}],"name":"Enum"},"comment":"\nEnum for the display property.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/style.dart","name":"Display","id":"Display","children":[{"ref":{"refId":"dart_web_toolkit_util/Display","name":"Display"},"isStatic":true,"name":"NONE","id":"NONE","line":"13","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Display","name":"Display"},"isStatic":true,"name":"BLOCK","id":"BLOCK","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Display","name":"Display"},"isStatic":true,"name":"INLINE","id":"INLINE","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Display","name":"Display"},"isStatic":true,"name":"INLINE_BLOCK","id":"INLINE_BLOCK","line":"16","kind":"variable"},{"name":"Display","id":"Display1()","children":[{"ref":{"refId":"dart_web_toolkit_util/Display/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"11","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA simplified, browser-safe timer class. This class serves the same purpose as\njava.util.Timer, but is simplified because of the single-threaded\nenvironment.\n\n<p>\nTo schedule a timer, simply create a subclass of it (overriding {@link #run})\nand call {@link #schedule} or {@link #scheduleRepeating}.\n</p>\n\n<p>\nNOTE: If you are using a timer to schedule a UI animation, use\n{@link com.google.gwt.animation.client.AnimationScheduler} instead. The\nbrowser can optimize your animation for maximum performance.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TimerExample}\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/util/timer.dart","name":"Timer","id":"Timer","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"clearInterval","id":"clearInterval1()","children":[{"ref":{"refId":"dart.async/Timer","name":"Timer"},"name":"timer","id":"timer","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"clearTimeout","id":"clearTimeout1()","children":[{"ref":{"refId":"dart.async/Timer","name":"Timer"},"name":"timer","id":"timer","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.async/Timer","name":"Timer"},"isStatic":true,"name":"createInterval","id":"createInterval2()","children":[{"ref":{"refId":"dart_web_toolkit_util/Timer","name":"Timer"},"name":"timer","id":"timer","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"period","id":"period","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"dart.async/Timer","name":"Timer"},"isStatic":true,"name":"createTimeout","id":"createTimeout2()","children":[{"ref":{"refId":"dart_web_toolkit_util/Timer","name":"Timer"},"name":"timer","id":"timer","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"delay","id":"delay","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"_hookWindowClosing","isPrivate":true,"id":"_hookWindowClosing0()","line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels this timer.\n","name":"cancel","id":"cancel0()","line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method will be called when a timer fires. Override it to implement the\ntimer's logic.\n","name":"run","id":"run0()","line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedules a timer to elapse in the future.\n\n@param delayMillis how long to wait before the timer elapses, in\n         milliseconds\n","name":"schedule","id":"schedule1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"delayMillis","id":"delayMillis","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedules a timer that elapses repeatedly.\n\n@param periodMillis how long to wait before the timer elapses, in\n         milliseconds, between each repetition\n","name":"scheduleRepeating","id":"scheduleRepeating1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"periodMillis","id":"periodMillis","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fire","id":"fire0()","line":"136","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_util/Timer","name":"Timer"}],"name":"List"},"isStatic":true,"name":"_timers","isPrivate":true,"id":"_timers","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"_initialised","isPrivate":true,"id":"_initialised","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isRepeating","id":"isRepeating","line":"60","kind":"variable"},{"ref":{"refId":"dart.async/Timer","name":"Timer"},"name":"_timer","isPrivate":true,"id":"_timer","line":"62","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"_callback","isPrivate":true,"id":"_callback","line":"64","kind":"variable"},{"name":"Timer.get","id":"Timer.get1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"_callback","isPrivate":true,"id":"_callback","kind":"param"}],"line":"66","kind":"constructor"},{"name":"Timer._internal","isPrivate":true,"id":"Timer._internal1()","children":[{"initializedField":{"refId":"dart_web_toolkit_util/Timer/_callback","name":"_callback"},"ref":{"refId":"dart.core/Function","name":"Function"},"name":"_callback","isPrivate":true,"id":"_callback","kind":"param"}],"line":"74","kind":"constructor"}],"line":"27","kind":"class"}],"line":"7","kind":"library"}