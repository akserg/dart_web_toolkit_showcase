{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/http.dart","id":"dart_web_toolkit_http","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nClass for describing an HTTP header.\n\n<h3>Required Module</h3>\nModules that use this class should inherit\n<code>com.google.gwt.http.HTTP</code>.\n\n{@gwt.include com/google/gwt/examples/http/InheritsExample.gwt.xml}\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/header.dart","name":"Header","id":"Header","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the name of the HTTP header.\n\n@return name of the HTTP header \n","name":"getName","id":"getName0()","line":"21","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value of the HTTP header.\n\n@return value of the HTTP header \n","name":"getValue","id":"getValue0()","line":"28","kind":"method"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUtility class for validating strings.\n\nTODO(mmendez): Is there a better place for this?\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/string_validator.dart","name":"StringValidator","id":"StringValidator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nReturns true if the string is empty or null.\n\n@param string to test if null or empty\n\n@return true if the string is empty or null\n","name":"isEmptyOrNullString","id":"isEmptyOrNullString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"string","id":"string","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nThrows if <code>value</code> is <code>null</code> or empty. This method\nignores leading and trailing whitespace.\n\n@param name the name of the value, used in error messages\n@param value the string value that needs to be validated\n\n@throws IllegalArgumentException if the string is empty, or all whitespace\n@throws NullPointerException if the string is <code>null</code>\n","name":"throwIfEmptyOrNull","id":"throwIfEmptyOrNull2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nThrows a {@link NullPointerException} if the value is <code>null</code>.\n\n@param name the name of the value, used in error messages\n@param value the value that needs to be validated\n\n@throws NullPointerException if the value is <code>null</code>\n","name":"throwIfNull","id":"throwIfNull2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"52","kind":"method"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nHTTP request method constants.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request_builder.dart","name":"Method","id":"Method","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"391","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_name","isPrivate":true,"id":"_name","line":"387","kind":"variable"},{"name":"Method","id":"Method1()","children":[{"initializedField":{"refId":"dart_web_toolkit_http/Method/_name","name":"_name"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_name","isPrivate":true,"id":"_name","kind":"param"}],"line":"389","kind":"constructor"}],"line":"386","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBuilder for constructing {@link com.google.gwt.http.client.Request} objects.\n\n<h3>Required Module</h3> Modules that use this class should inherit\n<code>com.google.gwt.http.HTTP</code>.\n\n{@gwt.include\ncom/google/gwt/examples/http/InheritsExample.gwt.xml}\n\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request_builder.dart","name":"RequestBuilder","id":"RequestBuilder","children":[{"returnType":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"comment":"\nReturns the callback previously set by\n{@link #setCallback(RequestCallback)}, or <code>null</code> if no callback\nwas set.\n","name":"getCallback","id":"getCallback0()","line":"120","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value of a header previous set by\n{@link #setHeader(String, String)}, or <code>null</code> if no such header\nwas set.\n\n@param header the name of the header\n","name":"getHeader","id":"getHeader1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"}],"line":"131","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the HTTP method specified in the constructor.\n","name":"getHTTPMethod","id":"getHTTPMethod0()","line":"141","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the password previously set by {@link #setPassword(String)}, or\n<code>null</code> if no password was set.\n","name":"getPassword","id":"getPassword0()","line":"149","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the requestData previously set by {@link #setRequestData(String)},\nor <code>null</code> if no requestData was set.\n","name":"getRequestData","id":"getRequestData0()","line":"157","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the timeoutMillis previously set by {@link #setTimeoutMillis(int)},\nor <code>0</code> if no timeoutMillis was set.\n","name":"getTimeoutMillis","id":"getTimeoutMillis0()","line":"165","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the HTTP URL specified in the constructor.\n","name":"getUrl","id":"getUrl0()","line":"172","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the user previously set by {@link #setUser(String)}, or\n<code>null</code> if no user was set.\n","name":"getUser","id":"getUser0()","line":"180","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_http/Request","name":"Request"},"comment":"\nSends an HTTP request based on the current builder configuration. If no\nrequest headers have been set, the header \"Content-Type\" will be used with\na value of \"text/plain; charset=utf-8\". You must call\n{@link #setRequestData(String)} and {@link #setCallback(RequestCallback)}\nbefore calling this method.\n\n@return a {@link Request} object that can be used to track the request\n@throws RequestException if the call fails to initiate\n@throws NullPointerException if a request callback has not been set\n","name":"send","id":"send0()","line":"195","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_http/Request","name":"Request"},"comment":"\nSends an HTTP request based on the current builder configuration with the\nspecified data and callback. If no request headers have been set, the\nheader \"Content-Type\" will be used with a value of \"text/plain;\ncharset=utf-8\". This method does not cache <code>requestData</code> or\n<code>callback</code>.\n\n@param requestData the data to send as part of the request\n@param callback the response handler to be notified when the request fails\n         or completes\n@return a {@link Request} object that can be used to track the request\n@throws NullPointerException if <code>callback</code> <code>null</code>\n","name":"sendRequest","id":"sendRequest2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"requestData","id":"requestData","kind":"param"},{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the response handler for this request. This method <b>must</b> be\ncalled before calling {@link #send()}.\n\n@param callback the response handler to be notified when the request fails\n         or completes\n\n@throws NullPointerException if <code>callback</code> is <code>null</code>\n","name":"setCallback","id":"setCallback1()","children":[{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"227","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a request header with the given name and value. If a header with the\nspecified name has already been set then the new value overwrites the\ncurrent value.\n\n@param header the name of the header\n@param value the value of the header\n\n@throws NullPointerException if header or value are null\n@throws IllegalArgumentException if header or value are the empty string\n","name":"setHeader","id":"setHeader2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the password to use in the request URL. This is ignored if there is no\nuser specified.\n\n@param password password to use in the request URL\n\n@throws IllegalArgumentException if the password is empty\n@throws NullPointerException if the password is null\n","name":"setPassword","id":"setPassword1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"password","id":"password","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the data to send as part of this request. This method <b>must</b> be\ncalled before calling {@link #send()}.\n\n@param requestData the data to send as part of the request\n","name":"setRequestData","id":"setRequestData1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"requestData","id":"requestData","kind":"param"}],"line":"276","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the number of milliseconds to wait for a request to complete. Should\nthe request timeout, the\n{@link com.google.gwt.http.client.RequestCallback#onError(Request, Throwable)}\nmethod will be called on the callback instance given to the\n{@link com.google.gwt.http.client.RequestBuilder#sendRequest(String, RequestCallback)}\nmethod. The callback method will receive an instance of the\n{@link com.google.gwt.http.client.RequestTimeoutException} class as its\n{@link java.lang.Throwable} argument.\n\n@param timeoutMillis number of milliseconds to wait before canceling the\n         request, a value of zero disables timeouts\n\n@throws IllegalArgumentException if the timeout value is negative\n","name":"setTimeoutMillis","id":"setTimeoutMillis1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"timeoutMillis","id":"timeoutMillis","kind":"param"}],"line":"295","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the user name that will be used in the request URL.\n\n@param user user name to use\n@throws IllegalArgumentException if the user is empty\n@throws NullPointerException if the user is null\n","name":"setUser","id":"setUser1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"user","id":"user","kind":"param"}],"line":"310","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_http/Request","name":"Request"},"comment":"\nSends an HTTP request based on the current builder configuration. If no\nrequest headers have been set, the header \"Content-Type\" will be used with\na value of \"text/plain; charset=utf-8\".\n\n@return a {@link Request} object that can be used to track the request\n@throws RequestException if the call fails to initiate\n@throws NullPointerException if request data has not been set\n@throws NullPointerException if a request callback has not been set\n","name":"_doSend","isPrivate":true,"id":"_doSend2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"requestData","id":"requestData","kind":"param"},{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"326","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setHeaders","isPrivate":true,"id":"_setHeaders1()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xmlHttpRequest","id":"xmlHttpRequest","kind":"param"}],"line":"368","kind":"method"},{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"isFinal":true,"isStatic":true,"comment":"\nSpecifies that the HTTP DELETE method should be used.\n","name":"DELETE","id":"DELETE","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"isFinal":true,"isStatic":true,"comment":"\nSpecifies that the HTTP GET method should be used.\n","name":"GET","id":"GET","line":"25","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"isFinal":true,"isStatic":true,"comment":"\nSpecifies that the HTTP HEAD method should be used.\n","name":"HEAD","id":"HEAD","line":"30","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"isFinal":true,"isStatic":true,"comment":"\nSpecifies that the HTTP POST method should be used.\n","name":"POST","id":"POST","line":"35","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"isFinal":true,"isStatic":true,"comment":"\nSpecifies that the HTTP PUT method should be used.\n","name":"PUT","id":"PUT","line":"40","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"comment":"\nThe callback to call when the request completes.\n","name":"_callback","isPrivate":true,"id":"_callback","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"comment":"\nMap of header name to value that will be added to the JavaScript\nXmlHttpRequest object before sending a request.\n","name":"_headers","isPrivate":true,"id":"_headers","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nHTTP method to use when opening a JavaScript XmlHttpRequest object.\n","name":"_httpMethod","isPrivate":true,"id":"_httpMethod","line":"56","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nPassword to use when opening a JavaScript XmlHttpRequest object.\n","name":"_password","isPrivate":true,"id":"_password","line":"61","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nRequest data to use when sending a JavaScript XmlHttpRequest object.\n","name":"_requestData","isPrivate":true,"id":"_requestData","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nTimeout in milliseconds before the request timeouts and fails.\n","name":"_timeoutMillis","isPrivate":true,"id":"_timeoutMillis","line":"71","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nURL to use when opening a JavaScript XmlHttpRequest object.\n","name":"_url","isPrivate":true,"id":"_url","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nUser to use when opening a JavaScript XmlHttpRequest object.\n","name":"_user","isPrivate":true,"id":"_user","line":"81","kind":"variable"},{"comment":"\nCreates a builder using the parameters for configuration.\n\n@param httpMethod HTTP method to use for the request\n@param url URL that has already has already been encoded. Please see\n         {@link com.google.gwt.http.client.URL#encode(String)},\n         {@link com.google.gwt.http.client.URL#encodePathSegment(String)} and\n         {@link com.google.gwt.http.client.URL#encodeQueryString(String)} for\n         how to do this.\n@throws IllegalArgumentException if the httpMethod or URL are empty\n@throws NullPointerException if the httpMethod or the URL are null\n","name":"RequestBuilder.fromMethod","id":"RequestBuilder.fromMethod2()","children":[{"ref":{"refId":"dart_web_toolkit_http/Method","name":"Method"},"name":"httpMethod","id":"httpMethod","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"95","kind":"constructor"},{"comment":"\nCreates a builder using the parameters values for configuration.\n\n@param httpMethod HTTP method to use for the request\n@param url URL that has already has already been URL encoded. Please see\n         {@link com.google.gwt.http.client.URL#encode(String)} and\n         {@link com.google.gwt.http.client.URL#encodePathSegment(String)} and\n         {@link com.google.gwt.http.client.URL#encodeQueryString(String)} for\n         how to do this.\n@throws IllegalArgumentException if the httpMethod or URL are empty\n@throws NullPointerException if the httpMethod or the URL are null\n","name":"RequestBuilder","id":"RequestBuilder2()","children":[{"initializedField":{"refId":"dart_web_toolkit_http/RequestBuilder/_httpMethod","name":"_httpMethod"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_httpMethod","isPrivate":true,"id":"_httpMethod","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_http/RequestBuilder/_url","name":"_url"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_url","isPrivate":true,"id":"_url","kind":"param"}],"line":"109","kind":"constructor"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nWrapper which provides access to the components of an HTTP response.\n\n<h3>Required Module</h3>\nModules that use this class should inherit\n<code>com.google.gwt.http.HTTP</code>.\n\n{@gwt.include com/google/gwt/examples/http/InheritsExample.gwt.xml}\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/response.dart","name":"Response","id":"Response","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value of the requested header or null if the header was not\nspecified.\n\n@param header the header to query for\n@return the value of response header\n\n@throws IllegalArgumentException if the header name is empty\n@throws NullPointerException if the header name is null\n","name":"getHeader","id":"getHeader1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_http/Header","name":"Header"}],"name":"List"},"comment":"\nReturns an array of HTTP headers associated with this response.\n\n@return array of HTTP headers; returns zero length array if there are no\n        headers\n","name":"getHeaders","id":"getHeaders0()","line":"35","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns all headers as a single string. The individual headers are\ndelimited by a CR (U+000D) LF (U+000A) pair. An individual header is\nformatted according to <a href=\"http://ietf.org/rfc/rfc2616\"> RFC 2616</a>.\n\n@return all headers as a single string delimited by CRLF pairs\n","name":"getHeadersAsString","id":"getHeadersAsString0()","line":"44","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the HTTP status code that is part of this response.\n\n@return the HTTP status code\n","name":"getStatusCode","id":"getStatusCode0()","line":"51","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the HTTP status message text.\n\n@return the HTTP status message text\n","name":"getStatusText","id":"getStatusText0()","line":"58","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the text associated with the response.\n\n@return the response text\n","name":"getText","id":"getText0()","line":"65","kind":"method"}],"line":"15","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_http/Response","name":"Response"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request.dart","name":"_Response","isPrivate":true,"id":"_Response","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getHeader","id":"getHeader1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"}],"line":"304","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_http/Header","name":"Header"}],"name":"List"},"name":"getHeaders","id":"getHeaders0()","line":"310","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getHeadersAsString","id":"getHeadersAsString0()","line":"314","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getStatusCode","id":"getStatusCode0()","line":"318","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getStatusText","id":"getStatusText0()","line":"322","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getText","id":"getText0()","line":"326","kind":"method"},{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"_xmlHttpRequest","isPrivate":true,"id":"_xmlHttpRequest","line":"300","kind":"variable"},{"name":"_Response","id":"_Response1()","children":[{"initializedField":{"refId":"dart_web_toolkit_http/_Response/_xmlHttpRequest","name":"_xmlHttpRequest"},"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"_xmlHttpRequest","isPrivate":true,"id":"_xmlHttpRequest","kind":"param"}],"line":"302","kind":"constructor"}],"line":"298","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_http/Header","name":"Header"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request.dart","name":"_RequestHeader","isPrivate":true,"id":"_RequestHeader","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getName","id":"getName0()","line":"285","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getValue","id":"getValue0()","line":"289","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"293","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_name","isPrivate":true,"id":"_name","line":"280","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_value","isPrivate":true,"id":"_value","line":"281","kind":"variable"},{"name":"_RequestHeader","id":"_RequestHeader2()","children":[{"initializedField":{"refId":"dart_web_toolkit_http/_RequestHeader/_name","name":"_name"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_name","isPrivate":true,"id":"_name","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_http/_RequestHeader/_value","name":"_value"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_value","isPrivate":true,"id":"_value","kind":"param"}],"line":"283","kind":"constructor"}],"line":"278","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn HTTP request that is waiting for a response. Requests can be queried for\ntheir pending status or they can be canceled.\n\n<h3>Required Module</h3> Modules that use this class should inherit\n<code>com.google.gwt.http.HTTP</code>.\n\n{@gwt.include\ncom/google/gwt/examples/http/InheritsExample.gwt.xml}\n\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request.dart","name":"Request","id":"Request","children":[{"returnType":{"refId":"dart_web_toolkit_http/Response","name":"Response"},"isStatic":true,"comment":"\nCreates a {@link Response} instance for the given JavaScript XmlHttpRequest\nobject.\n\n@param xmlHttpRequest xmlHttpRequest object for which we need a response\n@return a {@link Response} object instance\n","name":"createResponse","id":"createResponse1()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xmlHttpRequest","id":"xmlHttpRequest","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_http/Header","name":"Header"}],"name":"List"},"isStatic":true,"comment":"\nReturns an array of headers built by parsing the string of headers returned\nby the JavaScript <code>XmlHttpRequest</code> object.\n\n@param xmlHttpRequest\n@return array of Header items\n","name":"getHeaders","id":"getHeaders1()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xmlHttp","id":"xmlHttp","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isResponseReady","id":"isResponseReady1()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xhr","id":"xhr","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels a pending request. If the request has already been canceled or if\nit has timed out no action is taken.\n","name":"cancel","id":"cancel0()","line":"137","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if this request is waiting for a response.\n\n@return true if this request is waiting for a response\n","name":"isPending","id":"isPending0()","line":"167","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireOnResponseReceived","id":"fireOnResponseReceived1()","children":[{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_cancelTimer","isPrivate":true,"id":"_cancelTimer0()","line":"224","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_fireOnTimeout","isPrivate":true,"id":"_fireOnTimeout1()","children":[{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nTests if the JavaScript <code>XmlHttpRequest.status</code> property is\nreadable. This can return failure in two different known scenarios:\n\n<ol>\n<li>On Mozilla, after a network error, attempting to read the status code\nresults in an exception being thrown. See <a\nhref=\"https://bugzilla.mozilla.org/show_bug.cgi?id=238559\"\n>https://bugzilla.mozilla.org/show_bug.cgi?id=238559</a>.</li>\n<li>On Safari, if the HTTP response does not include any response text. See\n<a\nhref=\"http://bugs.webkit.org/show_bug.cgi?id=3810\">http://bugs.webkit.org\n/show_bug.cgi?id=3810</a>.</li>\n</ol>\n\n@param xhr the JavaScript <code>XmlHttpRequest</code> object to test\n@return a String message containing an error message if the\n        <code>XmlHttpRequest.status</code> code is unreadable or null if\n        the status code could be successfully read.\n","name":"_getBrowserSpecificFailure","isPrivate":true,"id":"_getBrowserSpecificFailure1()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xhr","id":"xhr","kind":"param"}],"line":"266","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe number of milliseconds to wait for this HTTP request to complete.\n","name":"_timeoutMillis","isPrivate":true,"id":"_timeoutMillis","line":"74","kind":"variable"},{"ref":{"refId":"dart.async/Timer","name":"Timer"},"name":"_timer","isPrivate":true,"id":"_timer","line":"80","kind":"variable"},{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"_xmlHttpRequest","isPrivate":true,"id":"_xmlHttpRequest","line":"87","kind":"variable"},{"comment":"\nOnly used for building a\n{@link com.google.gwt.user.client.rpc.impl.FailedRequest}.\n","name":"Request.internal","id":"Request.internal0()","line":"93","kind":"constructor"},{"comment":"\nConstructs an instance of the Request object.\n\n@param xmlHttpRequest JavaScript XmlHttpRequest object instance\n@param timeoutMillis number of milliseconds to wait for a response\n@param callback callback interface to use for notification\n\n@throws IllegalArgumentException if timeoutMillis &lt; 0\n@throws NullPointerException if xmlHttpRequest, or callback are null\n","name":"Request","id":"Request3()","children":[{"ref":{"refId":"dart.dom.html/HttpRequest","name":"HttpRequest"},"name":"xmlHttpRequest","id":"xmlHttpRequest","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"timeoutMillis","id":"timeoutMillis","kind":"param"},{"ref":{"refId":"dart_web_toolkit_http/RequestCallback","name":"RequestCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"105","kind":"constructor"}],"line":"17","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe primary interface a caller must implement to receive a response to a\n{@link com.google.gwt.http.client.Request}.\n\n<h3>Required Module</h3>\nModules that use this interface should inherit\n<code>com.google.gwt.http.HTTP</code>.\n\n{@gwt.include com/google/gwt/examples/http/InheritsExample.gwt.xml}\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/http/request_callback.dart","name":"RequestCallback","id":"RequestCallback","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a pending {@link com.google.gwt.http.client.Request} completes\nnormally.  Note this method is called even when the status code of the \nHTTP response is not \"OK\", 200. \n\n@param request the object that generated this event\n@param response an instance of the\n       {@link com.google.gwt.http.client.Response} class \n","name":"onResponseReceived","id":"onResponseReceived2()","children":[{"ref":{"refId":"dart_web_toolkit_http/Request","name":"Request"},"name":"request","id":"request","kind":"param"},{"ref":{"refId":"dart_web_toolkit_http/Response","name":"Response"},"name":"response","id":"response","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link com.google.gwt.http.client.Request} does not complete\nnormally.  A {@link com.google.gwt.http.client.RequestTimeoutException RequestTimeoutException} is\none example of the type of error that a request may encounter.\n\n@param request the request object which has experienced the error\n    condition, may be null if the request was never generated\n@param exception the error that was encountered\n","name":"onError","id":"onError2()","children":[{"ref":{"refId":"dart_web_toolkit_http/Request","name":"Request"},"name":"request","id":"request","kind":"param"},{"ref":{"refId":"dart.core/Exception","name":"Exception"},"name":"exception","id":"exception","kind":"param"}],"line":"38","kind":"method"}],"line":"16","kind":"class"}],"line":"4","kind":"library"}