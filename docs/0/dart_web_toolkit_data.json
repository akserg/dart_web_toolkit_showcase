{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"comment":"\nDart Web Toolkit Data library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/data.dart","id":"dart_web_toolkit_data","children":[{"interfaces":[{"refId":"dart_web_toolkit_data/ProvidesKey","arguments":[{"refId":"dart_web_toolkit_data/SimpleKeyProvider/T","name":"T"}],"name":"ProvidesKey"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSimple passthrough implementation of {@link ProvidesKey}.\n\n@param <T> the data type of records \n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/data/simple_key_provider.dart","name":"SimpleKeyProvider","id":"SimpleKeyProvider","children":[{"returnType":{"refId":"dart.core/Object","name":"Object"},"comment":"\nReturn the passed-in item.\n","name":"getKey","id":"getKey1()","children":[{"ref":{"refId":"dart_web_toolkit_data/SimpleKeyProvider/T","name":"T"},"name":"item","id":"item","kind":"param"}],"line":"16","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\n<p>\nImplementors of {@link ProvidesKey} provide a key for list items, such that\nitems that are to be treated as distinct (for example, for editing) have\ndistinct keys.\n</p>\n<p>\nThe key must implement a coherent set of {@link Object#equals(Object)} and\n{@link Object#hashCode()} methods such that if objects {@code A} and {@code\nB} are to be treated as identical, then {@code A.equals(B)}, {@code\nB.equals(A)}, and {@code A.hashCode() == B.hashCode()}. If {@code A} and\n{@code B} are to be treated as unequal, then it must be the case that {@code\nA.equals(B) == false} and {@code B.equals(A) == false}.\n</p>\n\n@param <T> the data type of records in the list\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/data/provides_key.dart","name":"ProvidesKey","id":"ProvidesKey","children":[{"returnType":{"refId":"dart.core/Object","name":"Object"},"comment":"\nGet the key for a list item.\n\n@param item the list item\n@return the key that represents the item\n","name":"getKey","id":"getKey1()","children":[{"ref":{"refId":"dart_web_toolkit_data/ProvidesKey/T","name":"T"},"name":"item","id":"item","kind":"param"}],"line":"31","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"23","kind":"class"}],"line":"7","kind":"library"}