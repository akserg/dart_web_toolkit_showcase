{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","id":"0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/core.dart","id":"dart_web_toolkit_core","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSupports core functionality that in some cases requires direct support from\nthe compiler and runtime systems such as runtime type information and\ndeferred binding.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/core/dwt.dart","name":"DWT","id":"DWT","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGets the URL prefix that should be prepended to URLs that\nare intended to be module-relative, such as RPC entry points.\n\n<p>If the URL points to an output file of the GWT compiler (such as\na file in the public path), use {@link #getModuleBaseForStaticFiles()}\ninstead.</p>\n\n@return if non-empty, the base URL is guaranteed to end with a slash\n","name":"getModuleBaseURL","id":"getModuleBaseURL0()","line":"22","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"majorVersion","id":"majorVersion","line":"27","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"minorVersion","id":"minorVersion","line":"29","kind":"property"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nPrivate implementation class for GWT core. This API is should not be\nconsidered public or stable.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/core/impl.dart","name":"Impl","id":"Impl","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"getModuleBaseURL","id":"getModuleBaseURL0()","line":"11","kind":"method"}],"line":"10","kind":"class"}],"line":"4","kind":"library"}