{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","uri":"dart-sdk/lib/core/exceptions.dart","name":"Exception","id":"Exception","children":[{"name":"Exception","id":"Exception1()","children":[{"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"21","kind":"constructor"}],"line":"20","kind":"class"}],"line":"5","kind":"library"}],"comment":"\nDart Web Toolkit Event library.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/event.dart","id":"dart_web_toolkit_event","children":[{"interfaces":[{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseDownEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/all_mouse_handlers_adapter.dart","name":"AllMouseHandlersAdapter","id":"AllMouseHandlersAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseDown is fired.\n\n@param event the {@link MouseDownEvent} that was fired\n","name":"onMouseDown","id":"onMouseDown1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownEvent","name":"MouseDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseMoveEvent is fired.\n\n@param event the {@link MouseMoveEvent} that was fired\n","name":"onMouseMove","id":"onMouseMove1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveEvent","name":"MouseMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOutEvent is fired.\n\n@param event the {@link MouseOutEvent} that was fired\n","name":"onMouseOut","id":"onMouseOut1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutEvent","name":"MouseOutEvent"},"name":"event","id":"event","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOverEvent is fired.\n\n@param event the {@link MouseOverEvent} that was fired\n","name":"onMouseOver","id":"onMouseOver1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverEvent","name":"MouseOverEvent"},"name":"event","id":"event","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseUpEvent is fired.\n\n@param event the {@link MouseUpEvent} that was fired\n","name":"onMouseUp","id":"onMouseUp1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpEvent","name":"MouseUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseWheelEvent is fired.\n\n@param event the {@link MouseWheelEvent} that was fired\n","name":"onMouseWheel","id":"onMouseWheel1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelEvent","name":"MouseWheelEvent"},"name":"event","id":"event","kind":"param"}],"line":"65","kind":"method"},{"name":"AllMouseHandlersAdapter","id":"AllMouseHandlersAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"13","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link AttachEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/attach_event_handler_adapter.dart","name":"AttachEventHandlerAdapter","id":"AttachEventHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link AttachEvent} is fired.\n\n@param event the {@link AttachEvent} that was fired\n","name":"onAttachOrDetach","id":"onAttachOrDetach1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEvent","name":"AttachEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"AttachEventHandlerAdapter","id":"AttachEventHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","name":"BeforeSelectionHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link BlurEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/before_selection_handler_adapter.dart","name":"BeforeSelectionHandlerAdapter","id":"BeforeSelectionHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link BeforeSelectionEvent} is fired.\n\n@param event the {@link BeforeSelectionEvent} that was fired\n","name":"onBeforeSelection","id":"onBeforeSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent","name":"BeforeSelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"BeforeSelectionHandlerAdapter","id":"BeforeSelectionHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/SelectionHandler","name":"SelectionHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link ScrollEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/selection_handler_adapter.dart","name":"SelectionHandlerAdapter","id":"SelectionHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link SelectionEvent} is fired.\n\n@param event the {@link SelectionEvent} that was fired\n","name":"onSelection","id":"onSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent","name":"SelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"SelectionHandlerAdapter","id":"SelectionHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/NativePreviewHandler","name":"NativePreviewHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link NativePreviewEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/native_preview_handler_adapter.dart","name":"NativePreviewHandlerAdapter","id":"NativePreviewHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when NativePreviewEvent is fired.\n\n@param event the {@link NativePreviewEvent} that was fired\n","name":"onPreviewNativeEvent","id":"onPreviewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"NativePreviewHandlerAdapter","id":"NativePreviewHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ClosingHandler","name":"ClosingHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler for {@link CloseEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/closing_handler_adapter.dart","name":"ClosingHandlerAdapter","id":"ClosingHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired just before the browser window closes or navigates to a different\nsite. No user-interface may be displayed during shutdown.\n\n@param event the event\n","name":"onWindowClosing","id":"onWindowClosing1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClosingEvent","name":"ClosingEvent"},"name":"event","id":"event","kind":"param"}],"line":"19","kind":"method"},{"name":"ClosingHandlerAdapter","id":"ClosingHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/CloseHandler","name":"CloseHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler for {@link CloseEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/close_handler_adapter.dart","name":"CloseHandlerAdapter","id":"CloseHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a close event is fired.\n\n@param event the {@link CloseEvent} that was fired\n","name":"onClose","id":"onClose1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseEvent","name":"CloseEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"CloseHandlerAdapter","id":"CloseHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_event/OpenHandlerAdapter/T","name":"T"}],"name":"OpenHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nImplemented by objects that handle {@link OpenEvent}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/open_handler_adapter.dart","name":"OpenHandlerAdapter","id":"OpenHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link ValueChangeEvent} is fired.\n\n@param event the {@link ValueChangeEvent} that was fired\n","name":"onOpen","id":"onOpen1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenEvent","arguments":[{"refId":"dart_web_toolkit_event/OpenHandlerAdapter/T","name":"T"}],"name":"OpenEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"OpenHandlerAdapter","id":"OpenHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link TouchStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/touch_start_handler_adapter.dart","name":"TouchStartHandlerAdapter","id":"TouchStartHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchStartEvent is fired.\n\n@param event the {@link TouchStartEvent} that was fired\n","name":"onTouchStart","id":"onTouchStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartEvent","name":"TouchStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"TouchStartHandlerAdapter","id":"TouchStartHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link TouchMoveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/touch_move_handler_adapter.dart","name":"TouchMoveHandlerAdapter","id":"TouchMoveHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchMoveEvent is fired.\n\n@param event the {@link TouchMoveEvent} that was fired\n","name":"onTouchMove","id":"onTouchMove1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveEvent","name":"TouchMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"TouchMoveHandlerAdapter","id":"TouchMoveHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link TouchEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/touch_end_handler_adapter.dart","name":"TouchEndHandlerAdapter","id":"TouchEndHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchEndEvent is fired.\n\n@param event the {@link TouchEndEvent} that was fired\n","name":"onTouchEnd","id":"onTouchEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndEvent","name":"TouchEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"TouchEndHandlerAdapter","id":"TouchEndHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link TouchCancelEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/touch_cancel_handler_adapter.dart","name":"TouchCancelHandlerAdapter","id":"TouchCancelHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchCancelEvent is fired.\n\n@param event the {@link TouchCancelEvent} that was fired\n","name":"onTouchCancel","id":"onTouchCancel1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelEvent","name":"TouchCancelEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"TouchCancelHandlerAdapter","id":"TouchCancelHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link ScrollEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/scroll_handler_adapter.dart","name":"ScrollHandlerAdapter","id":"ScrollHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when ScrollEvent is fired.\n\n@param event the {@link ScrollEvent} that was fired\n","name":"onScroll","id":"onScroll1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollEvent","name":"ScrollEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"ScrollHandlerAdapter","id":"ScrollHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseWheelEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_wheel_handler_adapter.dart","name":"MouseWheelHandlerAdapter","id":"MouseWheelHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseWheelEvent is fired.\n\n@param event the {@link MouseWheelEvent} that was fired\n","name":"onMouseWheel","id":"onMouseWheel1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelEvent","name":"MouseWheelEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseWheelHandlerAdapter","id":"MouseWheelHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseUpEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_up_handler_adapter.dart","name":"MouseUpHandlerAdapter","id":"MouseUpHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseUpEvent is fired.\n\n@param event the {@link MouseUpEvent} that was fired\n","name":"onMouseUp","id":"onMouseUp1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpEvent","name":"MouseUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseUpHandlerAdapter","id":"MouseUpHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseOverEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_over_handler_adapter.dart","name":"MouseOverHandlerAdapter","id":"MouseOverHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOverEvent is fired.\n\n@param event the {@link MouseOverEvent} that was fired\n","name":"onMouseOver","id":"onMouseOver1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverEvent","name":"MouseOverEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseOverHandlerAdapter","id":"MouseOverHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseOutEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_out_handler_adapter.dart","name":"MouseOutHandlerAdapter","id":"MouseOutHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOutEvent is fired.\n\n@param event the {@link MouseOutEvent} that was fired\n","name":"onMouseOut","id":"onMouseOut1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutEvent","name":"MouseOutEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseOutHandlerAdapter","id":"MouseOutHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseMoveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_move_handler_adapter.dart","name":"MouseMoveHandlerAdapter","id":"MouseMoveHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseMoveEvent is fired.\n\n@param event the {@link MouseMoveEvent} that was fired\n","name":"onMouseMove","id":"onMouseMove1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveEvent","name":"MouseMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseMoveHandlerAdapter","id":"MouseMoveHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link MouseDownEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/mouse_down_handler_adapter.dart","name":"MouseDownHandlerAdapter","id":"MouseDownHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseDown is fired.\n\n@param event the {@link MouseDownEvent} that was fired\n","name":"onMouseDown","id":"onMouseDown1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownEvent","name":"MouseDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"MouseDownHandlerAdapter","id":"MouseDownHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link LoadEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/load_handler_adapter.dart","name":"LoadHandlerAdapter","id":"LoadHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when LoadEvent is fired.\n\n@param event the {@link LoadEvent} that was fired\n","name":"onLoad","id":"onLoad1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadEvent","name":"LoadEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"LoadHandlerAdapter","id":"LoadHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link KeyUpEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/key_up_handler_adapter.dart","name":"KeyUpHandlerAdapter","id":"KeyUpHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when KeyUpEvent is fired.\n\n@param event the {@link KeyUpEvent} that was fired\n","name":"onKeyUp","id":"onKeyUp1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpEvent","name":"KeyUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"KeyUpHandlerAdapter","id":"KeyUpHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link KeyPressEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/key_press_handler_adapter.dart","name":"KeyPressHandlerAdapter","id":"KeyPressHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when KeyPressEvent is fired.\n\n@param event the {@link KeyPressEvent} that was fired\n","name":"onKeyPress","id":"onKeyPress1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressEvent","name":"KeyPressEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"KeyPressHandlerAdapter","id":"KeyPressHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link KeyDownEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/key_down_handler_adapter.dart","name":"KeyDownHandlerAdapter","id":"KeyDownHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link KeyDownEvent} is fired.\n\n@param event the {@link KeyDownEvent} that was fired\n","name":"onKeyDown","id":"onKeyDown1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownEvent","name":"KeyDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"KeyDownHandlerAdapter","id":"KeyDownHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link GestureStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/gesture_start_handler_adapter.dart","name":"GestureStartHandlerAdapter","id":"GestureStartHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureStartEvent is fired.\n\n@param event the {@link GestureStartEvent} that was fired\n","name":"onGestureStart","id":"onGestureStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartEvent","name":"GestureStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"GestureStartHandlerAdapter","id":"GestureStartHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link GestureEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/gesture_end_handler_adapter.dart","name":"GestureEndHandlerAdapter","id":"GestureEndHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureEndEvent is fired.\n\n@param event the {@link GestureEndEvent} that was fired\n","name":"onGestureEnd","id":"onGestureEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndEvent","name":"GestureEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"GestureEndHandlerAdapter","id":"GestureEndHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link GestureChangeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/gesture_change_handler_adapter.dart","name":"GestureChangeHandlerAdapter","id":"GestureChangeHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureChangeEvent is fired.\n\n@param event the {@link GestureChangeEvent} that was fired\n","name":"onGestureChange","id":"onGestureChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeEvent","name":"GestureChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"GestureChangeHandlerAdapter","id":"GestureChangeHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link FocusEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/focus_handler_adapter.dart","name":"FocusHandlerAdapter","id":"FocusHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when FocusEvent is fired.\n\n@param event the {@link FocusEvent} that was fired\n","name":"onFocus","id":"onFocus1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusEvent","name":"FocusEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"FocusHandlerAdapter","id":"FocusHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link ErrorEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/error_handler_adapter.dart","name":"ErrorHandlerAdapter","id":"ErrorHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when ErrorEvent is fired.\n\n@param event the {@link ErrorEvent} that was fired\n","name":"onError","id":"onError1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorEvent","name":"ErrorEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"ErrorHandlerAdapter","id":"ErrorHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DropEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drop_handler_adapter.dart","name":"DropHandlerAdapter","id":"DropHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DropEvent} is fired.\n\n@param event the {@link DropEvent} that was fired\n","name":"onDrop","id":"onDrop1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropEvent","name":"DropEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DropHandlerAdapter","id":"DropHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_start_handler_adapter.dart","name":"DragStartHandlerAdapter","id":"DragStartHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragStartEvent} is fired.\n\n@param event the {@link DragStartEvent} that was fired\n","name":"onDragStart","id":"onDragStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartEvent","name":"DragStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragStartHandlerAdapter","id":"DragStartHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragOverEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_over_handler_adapter.dart","name":"DragOverHandlerAdapter","id":"DragOverHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragOverEvent} is fired.\n\n@param event the {@link DragOverEvent} that was fired\n","name":"onDragOver","id":"onDragOver1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverEvent","name":"DragOverEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragOverHandlerAdapter","id":"DragOverHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragLeaveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_leave_handler_adapter.dart","name":"DragLeaveHandlerAdapter","id":"DragLeaveHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragLeaveEvent} is fired.\n\n@param event the {@link DragLeaveEvent} that was fired\n","name":"onDragLeave","id":"onDragLeave1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveEvent","name":"DragLeaveEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragLeaveHandlerAdapter","id":"DragLeaveHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_handler_adapter.dart","name":"DragHandlerAdapter","id":"DragHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEvent} is fired.\n\n@param event the {@link DragEvent} that was fired\n","name":"onDrag","id":"onDrag1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEvent","name":"DragEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragHandlerAdapter","id":"DragHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragEnterEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_enter_handler_adapter.dart","name":"DragEnterHandlerAdapter","id":"DragEnterHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEnterEvent} is fired.\n\n@param event the {@link DragEnterEvent} that was fired\n","name":"onDragEnter","id":"onDragEnter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterEvent","name":"DragEnterEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragEnterHandlerAdapter","id":"DragEnterHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DragEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/drag_end_handler_adapter.dart","name":"DragEndHandlerAdapter","id":"DragEndHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEndEvent} is fired.\n\n@param event the {@link DragEndEvent} that was fired\n","name":"onDragEnd","id":"onDragEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndEvent","name":"DragEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DragEndHandlerAdapter","id":"DragEndHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link DoubleClickEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/double_click_handler_adapter.dart","name":"DoubleClickHandlerAdapter","id":"DoubleClickHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DoubleClickEvent} is fired.\n\n@param event the {@link DoubleClickEvent} that was fired\n","name":"onDoubleClick","id":"onDoubleClick1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickEvent","name":"DoubleClickEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"DoubleClickHandlerAdapter","id":"DoubleClickHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler for {@link ClickEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/click_handler_adapter.dart","name":"ClickHandlerAdapter","id":"ClickHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a native click event is fired.\n\n@param event the {@link ClickEvent} that was fired\n","name":"onClick","id":"onClick1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickEvent","name":"ClickEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"ClickHandlerAdapter","id":"ClickHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler for {@link ChangeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/change_handler_adapter.dart","name":"ChangeHandlerAdapter","id":"ChangeHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a change event is fired.\n\n@param event the {@link ChangeEvent} that was fired\n","name":"onChange","id":"onChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeEvent","name":"ChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"ChangeHandlerAdapter","id":"ChangeHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nHandler interface for {@link BlurEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/blur_handler_adapter.dart","name":"BlurHandlerAdapter","id":"BlurHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when BlurEvent is fired.\n\n@param event the {@link BlurEvent} that was fired\n","name":"onBlur","id":"onBlur1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurEvent","name":"BlurEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"BlurHandlerAdapter","id":"BlurHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link OpenEvent} events.\n\n@param <T> the type being opened\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/open_handler.dart","name":"OpenHandler","id":"OpenHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link OpenEvent} is fired.\n\n@param event the {@link OpenEvent} that was fired\n","name":"onOpen","id":"onOpen1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenEvent","arguments":[{"refId":"dart_web_toolkit_event/OpenHandler/T","name":"T"}],"name":"OpenEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a open event.\n\n@param <T> the type being opened\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/open_event.dart","name":"OpenEvent","id":"OpenEvent","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires a open event on all registered handlers in the handler manager.If no\nsuch handlers exist, this method will do nothing.\n\n@param <T> the target type\n@param source the source of the handlers\n@param target the target\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasOpenHandlers","name":"HasOpenHandlers"},"name":"source","id":"source","kind":"param"},{"name":"target","id":"target","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/OpenHandler","name":"OpenHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"42","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/OpenEvent/T","name":"T"},"comment":"\nGets the target.\n\n@return the target\n","name":"getTarget","id":"getTarget0()","line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenHandler","name":"OpenHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"58","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/OpenHandler","name":"OpenHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/OpenEvent/T","name":"T"},"isFinal":true,"name":"_target","isPrivate":true,"id":"_target","line":"33","kind":"variable"},{"comment":"\nCreates a new open event.\n\n@param target the ui object being opened\n","name":"OpenEvent","id":"OpenEvent1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/OpenEvent/_target","name":"_target"},"ref":{"refId":"dart_web_toolkit_event/OpenEvent/T","name":"T"},"name":"_target","isPrivate":true,"id":"_target","kind":"param"}],"line":"40","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link OpenEvent} events.\n\n@param <T> the type being opened\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_open_handlers.dart","name":"HasOpenHandlers","id":"HasOpenHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link OpenEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addOpenHandler","id":"addOpenHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_event/HasOpenHandlers/T","name":"T"}],"name":"OpenHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"19","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link NativePreviewEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/native_preview_handler.dart","name":"NativePreviewHandler","id":"NativePreviewHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link NativePreviewEvent} is fired.\n\n@param event the {@link NativePreviewEvent} that was fired\n","name":"onPreviewNativeEvent","id":"onPreviewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"15","kind":"method"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasNativeEvent","name":"HasNativeEvent"}],"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a preview of a native {@link Event}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/native_preview_event.dart","name":"NativePreviewEvent","id":"NativePreviewEvent","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nFire a {@link NativePreviewEvent} for the native event.\n\n@param handlers the {@link HandlerManager}\n@param nativeEvent the native event\n@return true to fire the event normally, false to cancel the event\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"name":"handlers","id":"handlers","kind":"param"},{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"nativeEvent","id":"nativeEvent","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancel the native event and prevent it from firing. Note that the event\ncan still fire if another handler calls {@link #consume()}.\n\nClasses overriding this method should still call super.cancel().\n","name":"cancel","id":"cancel0()","line":"83","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nConsume the native event and prevent it from being canceled, even if it\nhas already been canceled by another handler.\n{@link NativePreviewHandler} that fire first have priority over later\nhandlers, so all handlers should check if the event has already been\ncanceled before calling this method.\n","name":"consume","id":"consume0()","line":"94","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/NativePreviewHandler","name":"NativePreviewHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"99","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"name":"getNativeEvent","id":"getNativeEvent0()","line":"103","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHas the event already been canceled? Note that {@link #isConsumed()} will\nstill return true if the native event has also been consumed.\n\n@return true if the event has been canceled\n@see #cancel()\n","name":"isCanceled","id":"isCanceled0()","line":"124","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHas the native event been consumed? Note that {@link #isCanceled()} will\nstill return true if the native event has also been canceled.\n\n@return true if the event has been consumed\n@see #consume()\n","name":"isConsumed","id":"isConsumed0()","line":"135","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the current handler the first to preview this event?\n\n@return true if the current handler is the first to preview the event\n","name":"isFirstHandler","id":"isFirstHandler0()","line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewHandler","name":"NativePreviewHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"revive","id":"revive0()","line":"155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the native event.\n\n@param nativeEvent the native {@link Event} being previewed.\n","name":"setNativeEvent","id":"setNativeEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"nativeEvent","id":"nativeEvent","kind":"param"}],"line":"168","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/NativePreviewHandler","name":"NativePreviewHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nHandler type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"isStatic":true,"comment":"\nThe singleton instance of {@link NativePreviewEvent}.\n","name":"singleton","id":"singleton","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating that the native event should be canceled.\n","name":"_isCanceled","isPrivate":true,"id":"_isCanceled","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating whether or not canceling the native event should be\nprevented. This supercedes {@link #isCanceled}.\n","name":"_isConsumed","isPrivate":true,"id":"_isConsumed","line":"64","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating that the current handler is at the top of the event\npreview stack.\n","name":"_isFirstHandler","isPrivate":true,"id":"_isFirstHandler","line":"70","kind":"variable"},{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"comment":"\nThe event being previewed.\n","name":"_nativeEvent","isPrivate":true,"id":"_nativeEvent","line":"75","kind":"variable"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface has a native event associated with\nit.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_native_event.dart","name":"HasNativeEvent","id":"HasNativeEvent","children":[{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"comment":"\nGets the underlying native event.\n\n@return the native event\n","name":"getNativeEvent","id":"getNativeEvent0()","line":"16","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native scroll event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/scroll_event.dart","name":"ScrollEvent","id":"ScrollEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"ScrollEvent","id":"ScrollEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link ScrollEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/scroll_handler.dart","name":"ScrollHandler","id":"ScrollHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when ScrollEvent is fired.\n\n@param event the {@link ScrollEvent} that was fired\n","name":"onScroll","id":"onScroll1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollEvent","name":"ScrollEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ScrollHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_scroll_handlers.dart","name":"HasScrollHandlers","id":"HasScrollHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ScrollEvent} handler.\n\n@param handler the scroll handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addScrollHandler","id":"addScrollHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by widgets that support vertical scrolling.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_vertical_scrolling.dart","name":"HasVerticalScrolling","id":"HasVerticalScrolling","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the maximum position of vertical scrolling. This is usually the\n<code>scrollHeight - clientHeight</code>.\n\n@return the maximum vertical scroll position\n","name":"getMaximumVerticalScrollPosition","id":"getMaximumVerticalScrollPosition0()","line":"16","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the minimum position of vertical scrolling.\n\n@return the minimum vertical scroll position\n","name":"getMinimumVerticalScrollPosition","id":"getMinimumVerticalScrollPosition0()","line":"23","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the vertical scroll position.\n\n@return the vertical scroll position, in pixels\n","name":"getVerticalScrollPosition","id":"getVerticalScrollPosition0()","line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical scroll position.\n\n@param position the new vertical scroll position, in pixels\n","name":"setVerticalScrollPosition","id":"setVerticalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"37","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by widgets that support horizontal scrolling.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_horizontal_scrolling.dart","name":"HasHorizontalScrolling","id":"HasHorizontalScrolling","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the horizontal scroll position.\n\n@return the horizontal scroll position, in pixels\n","name":"getHorizontalScrollPosition","id":"getHorizontalScrollPosition0()","line":"16","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the maximum position of horizontal scrolling. This is usually the\n<code>scrollWidth - clientWidth</code>.\n\n@return the maximum horizontal scroll position\n","name":"getMaximumHorizontalScrollPosition","id":"getMaximumHorizontalScrollPosition0()","line":"24","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the minimum position of horizontal scrolling.\n\n@return the minimum horizontal scroll position\n","name":"getMinimumHorizontalScrollPosition","id":"getMinimumHorizontalScrollPosition0()","line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal scroll position.\n\n@param position the new horizontal scroll position, in pixels\n","name":"setHorizontalScrollPosition","id":"setHorizontalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"38","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nAbstract class representing mouse events.\n\n@param <H> handler type\n\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_event.dart","name":"MouseEvent","id":"MouseEvent","children":[{"returnType":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"comment":"\nCast native event to [MouseEvent].\n","name":"getMouseEvent","id":"getMouseEvent0()","line":"17","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>alt</code> key down.\n\n@return whether the alt key is down\n","name":"isAltKeyDown","id":"isAltKeyDown0()","line":"29","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>control</code> key down.\n\n@return whether the control key is down\n","name":"isControlKeyDown","id":"isControlKeyDown0()","line":"38","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>meta</code> key down.\n\n@return whether the meta key is down\n","name":"isMetaKeyDown","id":"isMetaKeyDown0()","line":"47","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>shift</code> key down.\n\n@return whether the shift key is down\n","name":"isShiftKeyDown","id":"isShiftKeyDown0()","line":"56","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse x-position within the browser window's client area.\n\n@return the mouse x-position\n","name":"getClientX","id":"getClientX0()","line":"65","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse y-position within the browser window's client area.\n\n@return the mouse y-position\n","name":"getClientY","id":"getClientY0()","line":"74","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the button value. Compare it to\n{@link com.google.gwt.dom.client.NativeEvent#BUTTON_LEFT},\n{@link com.google.gwt.dom.client.NativeEvent#BUTTON_RIGHT},\n{@link com.google.gwt.dom.client.NativeEvent#BUTTON_MIDDLE}\n\n@return the button value\n","name":"getNativeButton","id":"getNativeButton0()","line":"86","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse x-position relative to a given element.\n\n@param target the element whose coordinate system is to be used\n@return the relative x-position\n","name":"getRelativeX","id":"getRelativeX1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"target","id":"target","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse y-position relative to a given element.\n\n@param target the element whose coordinate system is to be used\n@return the relative y-position\n","name":"getRelativeY","id":"getRelativeY1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"target","id":"target","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse x-position on the user's display.\n\n@return the mouse x-position\n","name":"getScreenX","id":"getScreenX0()","line":"115","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse y-position on the user's display.\n\n@return the mouse y-position\n","name":"getScreenY","id":"getScreenY0()","line":"124","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse x-position relative to the event's current target element.\n\n@return the relative x-position\n","name":"getX","id":"getX0()","line":"133","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the mouse y-position relative to the event's current target element.\n\n@return the relative y-position\n","name":"getY","id":"getY0()","line":"146","kind":"method"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nAbstract class representing position events such as mouse or touch events.\n\n@param <H> handler type\n\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/human_input_event.dart","name":"HumanInputEvent","id":"HumanInputEvent","children":[{"returnType":{"refId":"dart.dom.html/KeyboardEvent","name":"KeyboardEvent"},"comment":"\nCast native event to [KeyboardEvent].\n","name":"getKeyboardEvent","id":"getKeyboardEvent0()","line":"17","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>alt</code> key down.\n\n@return whether the alt key is down\n","name":"isAltKeyDown","id":"isAltKeyDown0()","line":"29","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>control</code> key down.\n\n@return whether the control key is down\n","name":"isControlKeyDown","id":"isControlKeyDown0()","line":"38","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>meta</code> key down.\n\n@return whether the meta key is down\n","name":"isMetaKeyDown","id":"isMetaKeyDown0()","line":"47","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs <code>shift</code> key down.\n\n@return whether the shift key is down\n","name":"isShiftKeyDown","id":"isShiftKeyDown0()","line":"56","kind":"method"}],"line":"12","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a selection event.\n\n@param <T> the type being selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/selection_event.dart","name":"SelectionEvent","id":"SelectionEvent","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires a selection event on all registered handlers in the handler\nmanager.If no such handlers exist, this method will do nothing.\n\n@param <T> the selected item type\n@param source the source of the handlers\n@param selectedItem the selected item\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasSelectionHandlers","name":"HasSelectionHandlers"},"name":"source","id":"source","kind":"param"},{"name":"selectedItem","id":"selectedItem","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SelectionHandler","name":"SelectionHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nGets the type associated with this event.\n\n@return returns the handler type\n","name":"getType","id":"getType0()","line":"38","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/SelectionEvent/T","name":"T"}],"name":"SelectionHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"55","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/SelectionEvent/T","name":"T"},"comment":"\nGets the selected item.\n\n@return the selected item\n","name":"getSelectedItem","id":"getSelectedItem0()","line":"64","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/SelectionEvent/T","name":"T"}],"name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"68","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SelectionHandler","name":"SelectionHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nHandler type.\n","name":"TYPE","id":"TYPE","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent/T","name":"T"},"name":"_selectedItem","isPrivate":true,"id":"_selectedItem","line":"42","kind":"variable"},{"comment":"\nCreates a new selection event.\n\n@param selectedItem selected item\n","name":"SelectionEvent","id":"SelectionEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent/T","name":"T"},"name":"selectedItem","id":"selectedItem","kind":"param"}],"line":"49","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link SelectionEvent} events.\n\n@param <T> the type being selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/selection_handler.dart","name":"SelectionHandler","id":"SelectionHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link SelectionEvent} is fired.\n\n@param event the {@link SelectionEvent} that was fired\n","name":"onSelection","id":"onSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent","arguments":[{"refId":"dart_web_toolkit_event/SelectionHandler/T","name":"T"}],"name":"SelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"17","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link SelectionEvent} events.\n\n@param <T> the type being selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_selection_handlers.dart","name":"HasSelectionHandlers","id":"HasSelectionHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link SelectionEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers/T","name":"T"}],"name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"19","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a before selection event.\n\n@param <T> the type about to be selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/before_selection_event.dart","name":"BeforeSelectionEvent","id":"BeforeSelectionEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent","name":"BeforeSelectionEvent"},"isStatic":true,"comment":"\nFires a before selection event on all registered handlers in the handler\nmanager. If no such handlers exist, this method will do nothing.\n\n@param <T> the item type\n@param source the source of the handlers\n@param item the item\n@return the event so that the caller can check if it was canceled, or null\n        if no handlers of this event type have been registered\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers","name":"HasBeforeSelectionHandlers"},"name":"source","id":"source","kind":"param"},{"name":"item","id":"item","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","name":"BeforeSelectionHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nGets the type associated with this event.\n\n@return returns the handler type\n","name":"getType","id":"getType0()","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancel the before selection event.\n\nClasses overriding this method should still call super.cancel().\n","name":"cancel","id":"cancel0()","line":"62","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","name":"BeforeSelectionHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"68","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent/T","name":"T"},"comment":"\nGets the item.\n\n@return the item\n","name":"getItem","id":"getItem0()","line":"77","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHas the selection event already been canceled?\n\n@return is canceled\n","name":"isCanceled","id":"isCanceled0()","line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionEvent/T","name":"T"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the item.\n\n@param item the item\n","name":"setItem","id":"setItem1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent/T","name":"T"},"name":"item","id":"item","kind":"param"}],"line":"99","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","name":"BeforeSelectionHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nHandler type.\n","name":"TYPE","id":"TYPE","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent/T","name":"T"},"name":"_item","isPrivate":true,"id":"_item","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_canceled","isPrivate":true,"id":"_canceled","line":"50","kind":"variable"},{"comment":"\nCreates a new before selection event.\n","name":"BeforeSelectionEvent","id":"BeforeSelectionEvent0()","line":"55","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link BeforeSelectionEvent} events.\n\n@param <T> the type about to be selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/before_selection_handler.dart","name":"BeforeSelectionHandler","id":"BeforeSelectionHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link BeforeSelectionEvent} is fired.\n\n@param event the {@link BeforeSelectionEvent} that was fired\n","name":"onBeforeSelection","id":"onBeforeSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler/T","name":"T"}],"name":"BeforeSelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native error event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/error_event.dart","name":"ErrorEvent","id":"ErrorEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"ErrorEvent","id":"ErrorEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link ErrorEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/error_handler.dart","name":"ErrorHandler","id":"ErrorHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when ErrorEvent is fired.\n\n@param event the {@link ErrorEvent} that was fired\n","name":"onError","id":"onError1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorEvent","name":"ErrorEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ErrorHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_error_handlers.dart","name":"HasErrorHandlers","id":"HasErrorHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link ErrorEvent} handler.\n\n@param handler the error handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addErrorHandler","id":"addErrorHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native load event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/load_event.dart","name":"LoadEvent","id":"LoadEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"LoadEvent","id":"LoadEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link LoadEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/load_handler.dart","name":"LoadHandler","id":"LoadHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when LoadEvent is fired.\n\n@param event the {@link LoadEvent} that was fired\n","name":"onLoad","id":"onLoad1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadEvent","name":"LoadEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link LoadHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_load_handlers.dart","name":"HasLoadHandlers","id":"HasLoadHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link LoadEvent} handler.\n\n@param handler the load handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addLoadHandler","id":"addLoadHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text with HTML markup,\nwhich can be set with the Cross-Site-Scripting-safe HTML markup encapsulated\nin a {@link com.google.gwt.safehtml.shared.SafeHtml} object.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_safe_html.dart","name":"HasSafeHtml","id":"HasSafeHtml","line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface for objects that have a direction estimator.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_direction_estimator.dart","name":"HasDirectionEstimator","id":"HasDirectionEstimator","line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/TouchEvent","name":"TouchEvent"},"comment":"\nRepresents a native touch start event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_cancel_event.dart","name":"TouchCancelEvent","id":"TouchCancelEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"TouchCancelEvent","id":"TouchCancelEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link TouchCancelEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_cancel_handler.dart","name":"TouchCancelHandler","id":"TouchCancelHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchCancelEvent is fired.\n\n@param event the {@link TouchCancelEvent} that was fired\n","name":"onTouchCancel","id":"onTouchCancel1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelEvent","name":"TouchCancelEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchCancelHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_touch_cancel_handlers.dart","name":"HasTouchCancelHandlers","id":"HasTouchCancelHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchCancelEvent} handler.\n\n@param handler the touch cancel handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/TouchEvent","name":"TouchEvent"},"comment":"\nRepresents a native touch end event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_end_event.dart","name":"TouchEndEvent","id":"TouchEndEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"TouchEndEvent","id":"TouchEndEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link TouchEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_end_handler.dart","name":"TouchEndHandler","id":"TouchEndHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchEndEvent is fired.\n\n@param event the {@link TouchEndEvent} that was fired\n","name":"onTouchEnd","id":"onTouchEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndEvent","name":"TouchEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchEndHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_touch_end_handlers.dart","name":"HasTouchEndHandlers","id":"HasTouchEndHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchEndEvent} handler.\n\n@param handler the touch end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/TouchEvent","name":"TouchEvent"},"comment":"\nRepresents a native touch move event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_move_event.dart","name":"TouchMoveEvent","id":"TouchMoveEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"TouchMoveEvent","id":"TouchMoveEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link TouchMoveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_move_handler.dart","name":"TouchMoveHandler","id":"TouchMoveHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchMoveEvent is fired.\n\n@param event the {@link TouchMoveEvent} that was fired\n","name":"onTouchMove","id":"onTouchMove1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveEvent","name":"TouchMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchMoveHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_touch_move_handlers.dart","name":"HasTouchMoveHandlers","id":"HasTouchMoveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchMoveEvent} handler.\n\n@param handler the touch move handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/TouchEvent","name":"TouchEvent"},"comment":"\nRepresents a native touch start event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_start_event.dart","name":"TouchStartEvent","id":"TouchStartEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"TouchStartEvent","id":"TouchStartEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link TouchStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_start_handler.dart","name":"TouchStartHandler","id":"TouchStartHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when TouchStartEvent is fired.\n\n@param event the {@link TouchStartEvent} that was fired\n","name":"onTouchStart","id":"onTouchStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartEvent","name":"TouchStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchStartHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_touch_start_handlers.dart","name":"HasTouchStartHandlers","id":"HasTouchStartHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchStartEvent} handler.\n\n@param handler the touch start handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasTouchCancelHandlers","name":"HasTouchCancelHandlers"},{"refId":"dart_web_toolkit_event/HasTouchEndHandlers","name":"HasTouchEndHandlers"},{"refId":"dart_web_toolkit_event/HasTouchMoveHandlers","name":"HasTouchMoveHandlers"},{"refId":"dart_web_toolkit_event/HasTouchStartHandlers","name":"HasTouchStartHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all touch handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all touch events in GWT, new touch event handlers will be added to\nit. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_touch_handlers.dart","name":"HasAllTouchHandlers","id":"HasAllTouchHandlers","line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/TouchSupportDetector","name":"TouchSupportDetector"},"comment":"\nDetector for browsers that do not support touch events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_event.dart","name":"TouchSupportDetectorNo","id":"TouchSupportDetectorNo","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isSupported","id":"isSupported0()","line":"113","kind":"method"}],"line":"111","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDectector for browser support for touch events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_event.dart","name":"TouchSupportDetector","id":"TouchSupportDetector","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isSupported","id":"isSupported0()","line":"87","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"detectTouchSupport","id":"detectTouchSupport0()","line":"95","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isSupported","isPrivate":true,"id":"_isSupported","line":"85","kind":"variable"},{"name":"TouchSupportDetector","id":"TouchSupportDetector0()","line":"91","kind":"constructor"}],"line":"83","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nAbstract class representing touch events.\n\nSee {@link <a href=\"http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html\">Safari Touch Event Documentation</a>}\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/touch_event.dart","name":"TouchEvent","id":"TouchEvent","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nRuntime check for whether touch scrolling is supported in this browser. Returns true if touch\nevents are supported but touch based scrolling is not natively supported.\n\n@return true if touch events are supported, false if not\n","name":"isSupported","id":"isSupported0()","line":"24","kind":"method"},{"returnType":{"refId":"dart.dom.html/TouchEvent","name":"TouchEvent"},"comment":"\nCast native event to [TouchEvent].\n","name":"getTouchEvent","id":"getTouchEvent0()","line":"34","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Touch","name":"Touch"}],"name":"List"},"comment":"\nGet an array of {@link Touch touches} which have changed since the last\ntouch event fired. Note, that for {@link TouchEndEvent touch end events},\nthe touch which has just ended will not be present in the array. Moreover,\nif the touch which just ended was the last remaining touch, then a zero\nlength array will be returned.\n\n@return an array of touches\n","name":"getChangedTouches","id":"getChangedTouches0()","line":"50","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Touch","name":"Touch"}],"name":"List"},"comment":"\nGet an array of {@link Touch touches} all touch which originated at the\nsame target as the current touch event. Note, that for {@link TouchEndEvent\ntouch end events}, the touch which has just ended will not be present in\nthe array. Moreover, if the touch which just ended was the last remaining\ntouch, then a zero length array will be returned.\n\n@return an array of touches\n","name":"getTargetTouches","id":"getTargetTouches0()","line":"63","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Touch","name":"Touch"}],"name":"List"},"comment":"\nGet an array of all current {@link Touch touches}. Note, that for\n{@link TouchEndEvent touch end events}, the touch which has just ended will\nnot be present in the array. Moreover, if the touch which just ended was\nthe last remaining touch, then a zero length array will be returned.\n\n@return an array of touches\n","name":"getTouches","id":"getTouches0()","line":"75","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/TouchSupportDetector","name":"TouchSupportDetector"},"isStatic":true,"comment":"\nThe implementation singleton.\n","name":"_impl","isPrivate":true,"id":"_impl","line":"16","kind":"variable"}],"line":"12","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse wheel event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_wheel_event.dart","name":"MouseWheelEvent","id":"MouseWheelEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.dom.html/WheelEvent","name":"WheelEvent"},"comment":"\nCast native event to [WheelEvent].\n","name":"getWheelEvent","id":"getWheelEvent0()","line":"29","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the change in the mouse wheel position along the Y-axis; positive if\nthe mouse wheel is moving north (toward the top of the screen) or negative\nif the mouse wheel is moving south (toward the bottom of the screen).\n\nNote that delta values are not normalized across browsers or OSes.\n\n@return the delta of the mouse wheel along the y axis\n","name":"getDeltaY","id":"getDeltaY0()","line":"45","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nConvenience method that returns <code>true</code> if {@link #getDeltaY()}\nis a negative value (ie, the velocity is directed toward the top of the\nscreen).\n\n@return true if the velocity is directed toward the top of the screen\n","name":"isNorth","id":"isNorth0()","line":"56","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nConvenience method that returns <code>true</code> if {@link #getDeltaY()}\nis a positive value (ie, the velocity is directed toward the bottom of the\nscreen).\n\n@return true if the velocity is directed toward the bottom of the screen\n","name":"isSouth","id":"isSouth0()","line":"67","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"MouseWheelEvent","id":"MouseWheelEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseWheelEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_wheel_handler.dart","name":"MouseWheelHandler","id":"MouseWheelHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseWheelEvent is fired.\n\n@param event the {@link MouseWheelEvent} that was fired\n","name":"onMouseWheel","id":"onMouseWheel1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelEvent","name":"MouseWheelEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseWheelHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_wheel_handlers.dart","name":"HasMouseWheelHandlers","id":"HasMouseWheelHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseWheelEvent} handler.\n\n@param handler the mouse wheel handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse move event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_move_event.dart","name":"MouseMoveEvent","id":"MouseMoveEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"MouseMoveEvent","id":"MouseMoveEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseMoveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_move_handler.dart","name":"MouseMoveHandler","id":"MouseMoveHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseMoveEvent is fired.\n\n@param event the {@link MouseMoveEvent} that was fired\n","name":"onMouseMove","id":"onMouseMove1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveEvent","name":"MouseMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseMoveHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_move_handlers.dart","name":"HasMouseMoveHandlers","id":"HasMouseMoveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseMoveEvent} handler.\n\n@param handler the mouse move handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse over event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_over_event.dart","name":"MouseOverEvent","id":"MouseOverEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"MouseOverEvent","id":"MouseOverEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseOverEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_over_handler.dart","name":"MouseOverHandler","id":"MouseOverHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOverEvent is fired.\n\n@param event the {@link MouseOverEvent} that was fired\n","name":"onMouseOver","id":"onMouseOver1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverEvent","name":"MouseOverEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseOverHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_over_handlers.dart","name":"HasMouseOverHandlers","id":"HasMouseOverHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseOverEvent} handler.\n\n@param handler the mouse over handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse out event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_out_event.dart","name":"MouseOutEvent","id":"MouseOutEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"21","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"13","kind":"variable"},{"name":"MouseOutEvent","id":"MouseOutEvent0()","line":"19","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseOutEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_out_handler.dart","name":"MouseOutHandler","id":"MouseOutHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseOutEvent is fired.\n\n@param event the {@link MouseOutEvent} that was fired\n","name":"onMouseOut","id":"onMouseOut1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutEvent","name":"MouseOutEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseOutHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_out_handlers.dart","name":"HasMouseOutHandlers","id":"HasMouseOutHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseOutEvent} handler.\n\n@param handler the mouse out handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse up event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_up_event.dart","name":"MouseUpEvent","id":"MouseUpEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"MouseUpEvent","id":"MouseUpEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseUpEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_up_handler.dart","name":"MouseUpHandler","id":"MouseUpHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseUpEvent is fired.\n\n@param event the {@link MouseUpEvent} that was fired\n","name":"onMouseUp","id":"onMouseUp1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpEvent","name":"MouseUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseUpHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_up_handlers.dart","name":"HasMouseUpHandlers","id":"HasMouseUpHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseUpEvent} handler.\n\n@param handler the mouse up handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native mouse down event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_down_event.dart","name":"MouseDownEvent","id":"MouseDownEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"MouseDownEvent","id":"MouseDownEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link MouseDownEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/mouse_down_handler.dart","name":"MouseDownHandler","id":"MouseDownHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when MouseDown is fired.\n\n@param event the {@link MouseDownEvent} that was fired\n","name":"onMouseDown","id":"onMouseDown1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownEvent","name":"MouseDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseDownHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_mouse_down_handlers.dart","name":"HasMouseDownHandlers","id":"HasMouseDownHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseDownEvent} handler.\n\n@param handler the mouse down handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasMouseWheelHandlers","name":"HasMouseWheelHandlers"},{"refId":"dart_web_toolkit_event/HasMouseMoveHandlers","name":"HasMouseMoveHandlers"},{"refId":"dart_web_toolkit_event/HasMouseOverHandlers","name":"HasMouseOverHandlers"},{"refId":"dart_web_toolkit_event/HasMouseOutHandlers","name":"HasMouseOutHandlers"},{"refId":"dart_web_toolkit_event/HasMouseUpHandlers","name":"HasMouseUpHandlers"},{"refId":"dart_web_toolkit_event/HasMouseDownHandlers","name":"HasMouseDownHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all mouse handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all mouse events in GWT, new mouse event handlers will be added to\nit. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_mouse_handlers.dart","name":"HasAllMouseHandlers","id":"HasAllMouseHandlers","line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/KeyCodeEvent","name":"KeyCodeEvent"},"comment":"\nRepresents a native key press event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_press_event.dart","name":"KeyPressEvent","id":"KeyPressEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the Unicode char code (code point) for this event.\n\n@return the Unicode char code\n","name":"getUnicodeCharCode","id":"getUnicodeCharCode0()","line":"31","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"KeyPressEvent","id":"KeyPressEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link KeyPressEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_press_handler.dart","name":"KeyPressHandler","id":"KeyPressHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when KeyPressEvent is fired.\n\n@param event the {@link KeyPressEvent} that was fired\n","name":"onKeyPress","id":"onKeyPress1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressEvent","name":"KeyPressEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyPressHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_key_press_handlers.dart","name":"HasKeyPressHandlers","id":"HasKeyPressHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyPressEvent} handler.\n\n@param handler the key press handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/KeyCodeEvent","name":"KeyCodeEvent"},"comment":"\nRepresents a native key down event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_down_event.dart","name":"KeyDownEvent","id":"KeyDownEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"KeyDownEvent","id":"KeyDownEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link KeyDownEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_down_handler.dart","name":"KeyDownHandler","id":"KeyDownHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link KeyDownEvent} is fired.\n\n@param event the {@link KeyDownEvent} that was fired\n","name":"onKeyDown","id":"onKeyDown1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownEvent","name":"KeyDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyDownHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_key_down_handlers.dart","name":"HasKeyDownHandlers","id":"HasKeyDownHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyDownEvent} handler.\n\n@param handler the key down handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nContains the native key codes previously defined in\n{@link com.google.gwt.user.client.ui.KeyboardListener}. When converting\nkeyboard listener instances, developers can use the following static import\nto access these constants:\n\n<pre> import static com.google.gwt.event.dom.client.KeyCodes.*; </pre>\n\nThese constants are defined with an int data type in order to be compatible\nwith the constants defined in\n{@link com.google.gwt.user.client.ui.KeyboardListener}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_code_event.dart","name":"KeyCodes","id":"KeyCodes","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nAlt key code.\n","name":"KEY_ALT","id":"KEY_ALT","line":"98","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nBackspace key code.\n","name":"KEY_BACKSPACE","id":"KEY_BACKSPACE","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nControl key code.\n","name":"KEY_CTRL","id":"KEY_CTRL","line":"107","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nDelete key code.\n","name":"KEY_DELETE","id":"KEY_DELETE","line":"112","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nDown arrow code.\n","name":"KEY_DOWN","id":"KEY_DOWN","line":"117","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nEnd key code.\n","name":"KEY_END","id":"KEY_END","line":"122","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nEnter key code.\n","name":"KEY_ENTER","id":"KEY_ENTER","line":"127","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nEscape key code.\n","name":"KEY_ESCAPE","id":"KEY_ESCAPE","line":"131","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nHome key code.\n","name":"KEY_HOME","id":"KEY_HOME","line":"135","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nLeft key code.\n","name":"KEY_LEFT","id":"KEY_LEFT","line":"139","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nPage down key code.\n","name":"KEY_PAGEDOWN","id":"KEY_PAGEDOWN","line":"143","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nPage up key code.\n","name":"KEY_PAGEUP","id":"KEY_PAGEUP","line":"147","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nRight arrow key code.\n","name":"KEY_RIGHT","id":"KEY_RIGHT","line":"151","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nShift key code.\n","name":"KEY_SHIFT","id":"KEY_SHIFT","line":"155","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nTab key code.\n","name":"KEY_TAB","id":"KEY_TAB","line":"160","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nUp Arrow key code.\n","name":"KEY_UP","id":"KEY_UP","line":"164","kind":"variable"}],"line":"94","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/KeyEvent","name":"KeyEvent"},"comment":"\nKey up and key down are both events based upon a given key code.\n\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_code_event.dart","name":"KeyCodeEvent","id":"KeyCodeEvent","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nDoes the key code represent an arrow key?\n\n@param keyCode the key code\n@return if it is an arrow key code\n","name":"isArrow","id":"isArrow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"keyCode","id":"keyCode","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the native key code. These key codes are enumerated in the\n{@link KeyCodes} class.\n\n@return the key code\n","name":"getNativeKeyCode","id":"getNativeKeyCode0()","line":"37","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this a key down arrow?\n\n@return whether this is a down arrow key event\n","name":"isDownArrow","id":"isDownArrow0()","line":"46","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this a left arrow?\n\n@return whether this is a left arrow key event\n","name":"isLeftArrow","id":"isLeftArrow0()","line":"55","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this a right arrow?\n\n@return whether this is a right arrow key event\n","name":"isRightArrow","id":"isRightArrow0()","line":"64","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this a up arrow?\n\n@return whether this is a right arrow key event\n","name":"isUpArrow","id":"isUpArrow0()","line":"73","kind":"method"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nBase class for Key events. The native keyboard events are somewhat a mess\n(http://www.quirksmode.org/js/keys.html), we do some trivial normalization\nhere, but do not attempt any complex patching, so user be warned.\n\n@param <H> The event handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_event.dart","name":"KeyEvent","id":"KeyEvent","children":[{"returnType":{"refId":"dart.dom.html/KeyboardEvent","name":"KeyboardEvent"},"comment":"\nCast native event to [KeyboardEvent].\n","name":"getKeyboardEvent","id":"getKeyboardEvent0()","line":"18","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the <code>alt</code> key down?\n\n@return whether the alt key is down\n","name":"isAltKeyDown","id":"isAltKeyDown0()","line":"30","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDoes this event have any modifier keys down? Specifically. is the control,\nmeta, shift, or alt key currently pressed?\n\n@return whether this event have any modifier key down\n","name":"isAnyModifierKeyDown","id":"isAnyModifierKeyDown0()","line":"40","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the <code>control</code> key down?\n\n@return whether the control key is down\n","name":"isControlKeyDown","id":"isControlKeyDown0()","line":"49","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the <code>meta</code> key down?\n\n@return whether the meta key is down\n","name":"isMetaKeyDown","id":"isMetaKeyDown0()","line":"58","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the <code>shift</code> key down?\n\n@return whether the shift key is down\n","name":"isShiftKeyDown","id":"isShiftKeyDown0()","line":"67","kind":"method"}],"line":"13","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/KeyCodeEvent","name":"KeyCodeEvent"},"comment":"\nRepresents a native key up event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_up_event.dart","name":"KeyUpEvent","id":"KeyUpEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"KeyUpEvent","id":"KeyUpEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link KeyUpEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/key_up_handler.dart","name":"KeyUpHandler","id":"KeyUpHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when KeyUpEvent is fired.\n\n@param event the {@link KeyUpEvent} that was fired\n","name":"onKeyUp","id":"onKeyUp1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpEvent","name":"KeyUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyUpHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_key_up_handlers.dart","name":"HasKeyUpHandlers","id":"HasKeyUpHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyUpEvent} handler.\n\n@param handler the key up handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasKeyPressHandlers","name":"HasKeyPressHandlers"},{"refId":"dart_web_toolkit_event/HasKeyDownHandlers","name":"HasKeyDownHandlers"},{"refId":"dart_web_toolkit_event/HasKeyUpHandlers","name":"HasKeyUpHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nConvenience interface used to implement all key handlers at once.\n\n<p>\nWARNING, PLEASE READ: In the unlikely event that more key handler subtypes\nare added to GWT, this interface will be expanded, so only implement this\ninterface if you wish to have your widget break if a new key event type is\nintroduced.\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_key_handlers.dart","name":"HasAllKeyHandlers","id":"HasAllKeyHandlers","line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native gesture end event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_end_event.dart","name":"GestureEndEvent","id":"GestureEndEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getRotation","id":"getRotation0()","line":"26","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getScale","id":"getScale0()","line":"31","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"GestureEndEvent","id":"GestureEndEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link GestureEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_end_handler.dart","name":"GestureEndHandler","id":"GestureEndHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureEndEvent is fired.\n\n@param event the {@link GestureEndEvent} that was fired\n","name":"onGestureEnd","id":"onGestureEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndEvent","name":"GestureEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureEndHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_gesture_end_handlers.dart","name":"HasGestureEndHandlers","id":"HasGestureEndHandlers","line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native gesture change event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_change_event.dart","name":"GestureChangeEvent","id":"GestureChangeEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getRotation","id":"getRotation0()","line":"26","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getScale","id":"getScale0()","line":"31","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"GestureChangeEvent","id":"GestureChangeEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link GestureChangeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_change_handler.dart","name":"GestureChangeHandler","id":"GestureChangeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureChangeEvent is fired.\n\n@param event the {@link GestureChangeEvent} that was fired\n","name":"onGestureChange","id":"onGestureChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeEvent","name":"GestureChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureChangeHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_gesture_change_handlers.dart","name":"HasGestureChangeHandlers","id":"HasGestureChangeHandlers","line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native gesture start event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_start_event.dart","name":"GestureStartEvent","id":"GestureStartEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getRotation","id":"getRotation0()","line":"26","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getScale","id":"getScale0()","line":"31","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"GestureStartEvent","id":"GestureStartEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link GestureStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/gesture_start_handler.dart","name":"GestureStartHandler","id":"GestureStartHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when GestureStartEvent is fired.\n\n@param event the {@link GestureStartEvent} that was fired\n","name":"onGestureStart","id":"onGestureStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartEvent","name":"GestureStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureStartHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_gesture_start_handlers.dart","name":"HasGestureStartHandlers","id":"HasGestureStartHandlers","line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasGestureEndHandlers","name":"HasGestureEndHandlers"},{"refId":"dart_web_toolkit_event/HasGestureChangeHandlers","name":"HasGestureChangeHandlers"},{"refId":"dart_web_toolkit_event/HasGestureStartHandlers","name":"HasGestureStartHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all gesture handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all gesture events in GWT, new gesture event handlers will be added\nto it. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_gesture_handlers.dart","name":"HasAllGestureHandlers","id":"HasAllGestureHandlers","line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native blur event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/blur_event.dart","name":"BlurEvent","id":"BlurEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"23","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"27","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"}],"name":"DomEventType"},"isFinal":true,"isStatic":true,"comment":"\nEvent type for focus events. Represents the meta-data associated with this\nevent.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"comment":"\nProtected constructor, use\n{@link DomEvent#fireNativeEvent(com.google.gwt.dom.client.NativeEvent, com.google.gwt.event.shared.HasHandlers)}\nto fire focus events.\n","name":"BlurEvent","id":"BlurEvent0()","line":"21","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link BlurEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/blur_handler.dart","name":"BlurHandler","id":"BlurHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when BlurEvent is fired.\n\n@param event the {@link BlurEvent} that was fired\n","name":"onBlur","id":"onBlur1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurEvent","name":"BlurEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link BlurHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_blur_handlers.dart","name":"HasBlurHandlers","id":"HasBlurHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link BlurEvent} handler.\n\n@param handler the blur handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addBlurHandler","id":"addBlurHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native focus event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/focus_event.dart","name":"FocusEvent","id":"FocusEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"28","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"}],"name":"DomEventType"},"isFinal":true,"isStatic":true,"comment":"\nEvent type for focus events. Represents the meta-data associated with this\nevent.\n","name":"TYPE","id":"TYPE","line":"15","kind":"variable"},{"comment":"\nProtected constructor, use\n{@link DomEvent#fireNativeEvent(com.google.gwt.dom.client.NativeEvent, com.google.gwt.event.shared.HasHandlers)}\nto fire focus events.\n","name":"FocusEvent","id":"FocusEvent0()","line":"22","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link FocusEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/focus_handler.dart","name":"FocusHandler","id":"FocusHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when FocusEvent is fired.\n\n@param event the {@link FocusEvent} that was fired\n","name":"onFocus","id":"onFocus1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusEvent","name":"FocusEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link FocusHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_focus_handlers.dart","name":"HasFocusHandlers","id":"HasFocusHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link FocusEvent} handler.\n\n@param handler the focus handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addFocusHandler","id":"addFocusHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasBlurHandlers","name":"HasBlurHandlers"},{"refId":"dart_web_toolkit_event/HasFocusHandlers","name":"HasFocusHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all focus handlers defined by\nthe core GWT system.\n\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all focus events in GWT, in the unlikely event that a new focus\nevent is added, this interface will change.\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_focus_handlers.dart","name":"HasAllFocusHandlers","id":"HasAllFocusHandlers","line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native double click event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/double_click_event.dart","name":"DoubleClickEvent","id":"DoubleClickEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DoubleClickEvent","id":"DoubleClickEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DoubleClickEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/double_click_handler.dart","name":"DoubleClickHandler","id":"DoubleClickHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DoubleClickEvent} is fired.\n\n@param event the {@link DoubleClickEvent} that was fired\n","name":"onDoubleClick","id":"onDoubleClick1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickEvent","name":"DoubleClickEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DoubleClickHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_double_click_handlers.dart","name":"HasDoubleClickHandlers","id":"HasDoubleClickHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DoubleClickEvent} handler.\n\n@param handler the double click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drop event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drop_event.dart","name":"DropEvent","id":"DropEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DropEvent","id":"DropEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DropEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drop_handler.dart","name":"DropHandler","id":"DropHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DropEvent} is fired.\n\n@param event the {@link DropEvent} that was fired\n","name":"onDrop","id":"onDrop1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropEvent","name":"DropEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DropHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drop_handlers.dart","name":"HasDropHandlers","id":"HasDropHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DropEvent} handler.\n\n@param handler the drop handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag start event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_start_event.dart","name":"DragStartEvent","id":"DragStartEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragStartEvent","id":"DragStartEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragStartEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_start_handler.dart","name":"DragStartHandler","id":"DragStartHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragStartEvent} is fired.\n\n@param event the {@link DragStartEvent} that was fired\n","name":"onDragStart","id":"onDragStart1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartEvent","name":"DragStartEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragStartHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change. </span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_start_handlers.dart","name":"HasDragStartHandlers","id":"HasDragStartHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragStartEvent} handler.\n\n@param handler the drag start handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag over event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_over_event.dart","name":"DragOverEvent","id":"DragOverEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragOverEvent","id":"DragOverEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragOverEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_over_handler.dart","name":"DragOverHandler","id":"DragOverHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragOverEvent} is fired.\n\n@param event the {@link DragOverEvent} that was fired\n","name":"onDragOver","id":"onDragOver1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverEvent","name":"DragOverEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragOverHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_over_handlers.dart","name":"HasDragOverHandlers","id":"HasDragOverHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragOverEvent} handler.\n\n@param handler the drag over handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_event.dart","name":"DragEvent","id":"DragEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragEvent","id":"DragEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_handler.dart","name":"DragHandler","id":"DragHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEvent} is fired.\n\n@param event the {@link DragEvent} that was fired\n","name":"onDrag","id":"onDrag1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEvent","name":"DragEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragLeaveHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_handlers.dart","name":"HasDragHandlers","id":"HasDragHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEvent} handler.\n\n@param handler the drag handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"24","kind":"method"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag leave event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_leave_event.dart","name":"DragLeaveEvent","id":"DragLeaveEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragLeaveEvent","id":"DragLeaveEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragLeaveEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_leave_handler.dart","name":"DragLeaveHandler","id":"DragLeaveHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragLeaveEvent} is fired.\n\n@param event the {@link DragLeaveEvent} that was fired\n","name":"onDragLeave","id":"onDragLeave1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveEvent","name":"DragLeaveEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragLeaveHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_leave_handlers.dart","name":"HasDragLeaveHandlers","id":"HasDragLeaveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragLeaveEvent} handler.\n\n@param handler the drag leave handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag enter event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_enter_event.dart","name":"DragEnterEvent","id":"DragEnterEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragEnterEvent","id":"DragEnterEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragEnterEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_enter_handler.dart","name":"DragEnterHandler","id":"DragEnterHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEnterEvent} is fired.\n\n@param event the {@link DragEnterEvent} that was fired\n","name":"onDragEnter","id":"onDragEnter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterEvent","name":"DragEnterEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragEnterHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_enter_handlers.dart","name":"HasDragEnterHandlers","id":"HasDragEnterHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEnterEvent} handler.\n\n@param handler the drag end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragDropEventBase","name":"DragDropEventBase"},"comment":"\nRepresents a native drag end event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_end_event.dart","name":"DragEndEvent","id":"DragEndEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"DragEndEvent","id":"DragEndEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link DragEndEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_end_handler.dart","name":"DragEndHandler","id":"DragEndHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a {@link DragEndEvent} is fired.\n\n@param event the {@link DragEndEvent} that was fired\n","name":"onDragEnd","id":"onDragEnd1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndEvent","name":"DragEndEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragEndHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change. </span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_drag_end_handlers.dart","name":"HasDragEndHandlers","id":"HasDragEndHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEndEvent} handler.\n\n@param handler the drag end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DragSupportDetector","name":"DragSupportDetector"},"comment":"\nDetector for permutations that do not support drag events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_drop_event_base.dart","name":"DragSupportDetectorNo","id":"DragSupportDetectorNo","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isSupported","id":"isSupported","line":"106","kind":"property"}],"line":"104","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDetector for browser support of drag events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_drop_event_base.dart","name":"DragSupportDetector","id":"DragSupportDetector","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"detectDragSupport","id":"detectDragSupport0()","line":"88","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nUsing a run-time check, return true if drag events are supported.\n\n@return true if supported, false otherwise.\n","name":"isSupported","id":"isSupported","line":"82","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isSupported","isPrivate":true,"id":"_isSupported","line":"75","kind":"variable"},{"name":"DragSupportDetector","id":"DragSupportDetector0()","line":"84","kind":"constructor"}],"line":"73","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nBase class for drag and drop events.\n\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/drag_drop_event_base.dart","name":"DragDropEventBase","id":"DragDropEventBase","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nRuntime check for whether drag events are supported in this browser.\n\n@return true if supported, false if not\n","name":"isSupported","id":"isSupported0()","line":"23","kind":"method"},{"returnType":{"refId":"dart.dom.html/DataTransfer","name":"DataTransfer"},"comment":"\nGet the {@link DataTransfer} associated with the current drag event.\n\n@return the {@link DataTransfer} object\n","name":"getDataTransfer","id":"getDataTransfer0()","line":"35","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the data for the specified format from the {@link DataTransfer} object.\n\n@param format the format\n@return the data for the specified format\n","name":"getData","id":"getData1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"format","id":"format","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the data in the {@link DataTransfer} object for the specified format.\n\n@param format the format\n@param data the data to associate with the format\n","name":"setData","id":"setData2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"format","id":"format","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"data","id":"data","kind":"param"}],"line":"62","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DragSupportDetector","name":"DragSupportDetector"},"isStatic":true,"comment":"\nThe implementation singleton.\n","name":"_impl","isPrivate":true,"id":"_impl","line":"16","kind":"variable"}],"line":"11","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasDropHandlers","name":"HasDropHandlers"},{"refId":"dart_web_toolkit_event/HasDragStartHandlers","name":"HasDragStartHandlers"},{"refId":"dart_web_toolkit_event/HasDragOverHandlers","name":"HasDragOverHandlers"},{"refId":"dart_web_toolkit_event/HasDragHandlers","name":"HasDragHandlers"},{"refId":"dart_web_toolkit_event/HasDragLeaveHandlers","name":"HasDragLeaveHandlers"},{"refId":"dart_web_toolkit_event/HasDragEnterHandlers","name":"HasDragEnterHandlers"},{"refId":"dart_web_toolkit_event/HasDragEndHandlers","name":"HasDragEndHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all drag and drop handlers\ndefined by the core GWT system.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_all_drag_and_drop_handlers.dart","name":"HasAllDragAndDropHandlers","id":"HasAllDragAndDropHandlers","line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link BeforeSelectionEvent} events.\n\n@param <T> the type about to be selected\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_before_selection_handlers.dart","name":"HasBeforeSelectionHandlers","id":"HasBeforeSelectionHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link BeforeSelectionEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers/T","name":"T"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"20","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasValue","arguments":[{"refId":"dart_web_toolkit_event/HasConstrainedValue/T","name":"T"}],"name":"HasValue"},"comment":"\nImplemented by widgets that pick from a set of values.\n<p>\nIt is up to the implementation to decide (and document) how to behave when\n{@link #setValue(Object)} is called with a value that is not in the\nacceptable set. For example, throwing an {@link IllegalArgumentException}, or\nquietly adding the value to the acceptable set, are both reasonable choices.\n\n@param <T> the type of value\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_constrained_value.dart","name":"HasConstrainedValue","id":"HasConstrainedValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the acceptable values.\n\n@param values the acceptible values\n","name":"setAcceptableValues","id":"setAcceptableValues1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_event/HasConstrainedValue/T","name":"T"}],"name":"Iterable"},"name":"values","id":"values","kind":"param"}],"line":"23","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"16","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","arguments":[{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"}],"name":"HasValueChangeHandlers"},{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"}],"name":"TakesValue"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtends {@link TakesValue} to allow the value to be pulled back out, and to\nthrow {@link com.google.gwt.event.logical.shared.ValueChangeEvent\nValueChangeEvent} events.\n<p>\nAn object that implements this interface should be a user input widget, where\nthe user and programmer can both set and get the object's value. It is\nintended to provide a unified interface to widgets with \"atomic\" values, like\nStrings and Dates.\n\n@param <T> the type of value\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_value.dart","name":"HasValue","id":"HasValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"36","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"18","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by objects that hold a value.\n\n@param <V> value type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/takes_value.dart","name":"TakesValue","id":"TakesValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_event/TakesValue/V","name":"V"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/TakesValue/V","name":"V"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"30","kind":"method"},{"name":"V","id":"V","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ChangeHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_change_handlers.dart","name":"HasChangeHandlers","id":"HasChangeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ChangeEvent} handler.\n\n@param handler the change handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addChangeHandler","id":"addChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler for {@link ChangeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/change_handler.dart","name":"ChangeHandler","id":"ChangeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a change event is fired.\n\n@param event the {@link ChangeEvent} that was fired\n","name":"onChange","id":"onChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeEvent","name":"ChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"comment":"\nRepresents a native change event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/change_event.dart","name":"ChangeEvent","id":"ChangeEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"}],"name":"DomEventType"},"comment":"\nGets the event type associated with change events.\n\n@return the handler type\n","name":"getAssociatedType","id":"getAssociatedType0()","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"27","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"ChangeEvent","id":"ChangeEvent0()","line":"25","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface provides registration for\n{@link ClickHandler} instances.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_click_handlers.dart","name":"HasClickHandlers","id":"HasClickHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ClickEvent} handler.\n\n@param handler the click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/MouseEvent","name":"MouseEvent"},"comment":"\nRepresents a native click event.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/click_event.dart","name":"ClickEvent","id":"ClickEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"}],"name":"DomEventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","arguments":[{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"}],"name":"DomEventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"name":"ClickEvent","id":"ClickEvent0()","line":"20","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler for {@link ClickEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/click_handler.dart","name":"ClickHandler","id":"ClickHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a native click event is fired.\n\n@param event the {@link ClickEvent} that was fired\n","name":"onClick","id":"onClick1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickEvent","name":"ClickEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nFired when the event source is resized.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/resize_event.dart","name":"ResizeEvent","id":"ResizeEvent","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires a resize event on all registered handlers in the handler source.\n\n@param <S> The handler source\n@param source the source of the handlers\n@param width the new width\n@param height the new height\n","name":"fire","id":"fire3()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the new height.\n\n@return the new height\n","name":"height","id":"height","line":"51","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the new width.\n\n@return the new width\n","name":"width","id":"width","line":"58","kind":"property"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_width","isPrivate":true,"id":"_width","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_height","isPrivate":true,"id":"_height","line":"32","kind":"variable"},{"comment":"\nConstruct a new {@link ResizeEvent}.\n\n@param _width the new width\n@param _height the new height\n","name":"ResizeEvent","id":"ResizeEvent2()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/ResizeEvent/_width","name":"_width"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_width","isPrivate":true,"id":"_width","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/ResizeEvent/_height","name":"_height"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_height","isPrivate":true,"id":"_height","kind":"param"}],"line":"40","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler for {@link ResizeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/resize_handler.dart","name":"ResizeHandler","id":"ResizeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired when the widget is resized.\n\n@param event the event\n","name":"onResize","id":"onResize1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeEvent","name":"ResizeEvent"},"name":"event","id":"event","kind":"param"}],"line":"15","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link ResizeEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_resize_handlers.dart","name":"HasResizeHandlers","id":"HasResizeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ResizeEvent} handler.\n\n@param handler the handler\n@return the handler registration\n","name":"addResizeHandler","id":"addResizeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface can receive keyboard focus.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/focusable.dart","name":"Focusable","id":"Focusable","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's 'access key'. This key is used (in conjunction with a\nbrowser-specific modifier key) to automatically focus the widget.\n\n@param key the widget's access key\n","name":"accessKey=","id":"accessKey=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nExplicitly focus/unfocus this widget. Only one widget can have focus at a\ntime, and the widget that does will receive all keyboard events.\n\n@param focused whether this widget should take focus or release it\n","name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's position in the tab index. If more than one widget has\nthe same tab index, each such widget will receive focus in an arbitrary\norder. Setting the tab index to <code>-1</code> will cause this widget to\nbe removed from the tab order.\n\n@param index the widget's tab index\n","name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"42","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"16","kind":"property"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA {@link Widget} that uses an animation should implement this class so users\ncan enable or disable animations.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_animation.dart","name":"HasAnimation","id":"HasAnimation","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if animations are enabled, false if not.\n","name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable animations.\n\n@param enable true to enable, false to disable\n","name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"22","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface can be put in an \"enabled\"\nor \"disabled\" state.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_enabled.dart","name":"HasEnabled","id":"HasEnabled","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this widget is enabled.\n\n@param enabled <code>true</code> to enable the widget, <code>false</code>\n         to disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"23","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the widget is enabled, false if not.\n","name":"enabled","id":"enabled","line":"15","kind":"property"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has a 'name' associated with it,\nallowing it to be used with {@link FormPanel}. This property is the name\nthat will be associated with the widget when its form is submitted.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_name.dart","name":"HasName","id":"HasName","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's name.\n\n@param name the widget's new name\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"18","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the widget's name.\n\n@return the widget's name\n","name":"name","id":"name","line":"25","kind":"property"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text, which can be set and\nretrieved using these methods.\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nThe body of an XML element representing a widget that implements\nHasText will be parsed as text and be used in a call to its\n{@link #setText(String)} method. HasText elements must only\ncontain text. (This behavior is overridden for {@link HasHTML}\nwidgets.)\n\n<p>For example:<pre>\n&lt;g:Label>Hello.&lt;/g:Label>\n</pre>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_text.dart","name":"HasText","id":"HasText","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's text.\n\n@param text the object's new text\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"36","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's text.\n\n@return the object's text\n","name":"text","id":"text","line":"29","kind":"property"}],"line":"22","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasText","name":"HasText"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text, which can be set and\nretrieved using these methods. The object's text can be set either as HTML or\nas text.\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nThe body of an XML element representing a widget that implements\nHasHTML will be parsed as HTML and be used in a call to its\n{@link #setHTML(String)} method.\n\n<p>For example:<pre>\n&lt;g:PushButton>&lt;b>Click me!&lt;/b>&lt;/g:PushButton>\n</pre>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_html.dart","name":"HasHtml","id":"HasHtml","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's contents via HTML. Use care when setting an object's\nHTML; it is an easy way to expose script-based security problems. Consider\nusing {@link #setText(String)} whenever possible.\n\n@param html the object's new HTML\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"37","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's contents as HTML.\n\n@return the object's HTML\n","name":"html","id":"html","line":"28","kind":"property"}],"line":"21","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has a 'word-wrap' property that can\nbe manipulated using these methods.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_word_wrap.dart","name":"HasWordWrap","id":"HasWordWrap","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether word-wrapping is enabled.\n\n@param wrap <code>true</code> to enable word-wrapping.\n","name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"24","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether word-wrapping is enabled.\n\n@return <code>true</code> if word-wrapping is enabled.\n","name":"wordWrap","id":"wordWrap","line":"17","kind":"property"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by objects that have the visibility trait.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_visibility.dart","name":"HasVisibility","id":"HasVisibility","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this object is visible.\n\n@param visible <code>true</code> to show the object, <code>false</code> to\n         hide it\n","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"28","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this object is visible. Note that this does not\nnecessarily take into account whether or not the receiver's parent is\nvisible, or even if it is attached to the\n[Document]. The default implementation of this trait in [UIObject] is\nbased on the value of a dom element's style object's display attribute.\n\n@return <code>true</code> if the object is visible\n","name":"visible","id":"visible","line":"20","kind":"property"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandlerAdapter/T","name":"T"}],"name":"ValueChangeHandler"}],"superclass":{"refId":"dart_web_toolkit_event/EventHandlerAdapter","name":"EventHandlerAdapter"},"comment":"\nImplemented by objects that handle {@link AttachEvent}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/adapter/value_change_handler_adapter.dart","name":"ValueChangeHandlerAdapter","id":"ValueChangeHandlerAdapter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link ValueChangeEvent} is fired.\n\n@param event the {@link ValueChangeEvent} that was fired\n","name":"onValueChange","id":"onValueChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandlerAdapter/T","name":"T"}],"name":"ValueChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"ValueChangeHandlerAdapter","id":"ValueChangeHandlerAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"11","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event_handler_adapter.dart","name":"EventHandlerAdapter","id":"EventHandlerAdapter","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","line":"10","kind":"variable"},{"name":"EventHandlerAdapter","id":"EventHandlerAdapter1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/EventHandlerAdapter/callback","name":"callback"},"ref":{"refId":"dart_web_toolkit_event/EventHandlerAdapterCallback","name":"EventHandlerAdapterCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"12","kind":"constructor"}],"line":"8","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event_handler_adapter.dart","name":"EventHandlerAdapterCallback","id":"EventHandlerAdapterCallback","children":[{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"6","kind":"typedef"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link ValueChangeEvent} events.\n\n@param <T> the value about to be changed\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_value_change_handlers.dart","name":"HasValueChangeHandlers","id":"HasValueChangeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ValueChangeEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_event/HasValueChangeHandlers/T","name":"T"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"20","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_attach_handlers.dart","name":"HasAttachHandlers","id":"HasAttachHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link AttachEvent} handler.\n\n@param handler the handler\n@return the handler registration\n","name":"addAttachHandler","id":"addAttachHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether or not the receiver is attached to the\n{@link com.google.gwt.dom.client.Document Document}'s\n{@link com.google.gwt.dom.client.BodyElement BodyElement}.\n\n@return true if attached, false otherwise\n","name":"isAttached","id":"isAttached0()","line":"22","kind":"method"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface has a collection of event handlers\nassociated with it.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/has_handlers.dart","name":"HasHandlers","id":"HasHandlers","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the given event to the handlers listening to the event's type.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@param event the event\n","name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"22","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nImplemented by objects that handle {@link AttachEvent}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/value_change_handler.dart","name":"ValueChangeHandler","id":"ValueChangeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link ValueChangeEvent} is fired.\n\n@param event the {@link ValueChangeEvent} that was fired\n","name":"onValueChange","id":"onValueChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandler/T","name":"T"}],"name":"ValueChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a value change event.\n\n@param <T> the value about to be changed\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/value_change_event.dart","name":"ValueChangeEvent","id":"ValueChangeEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandler","name":"ValueChangeHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nImplemented by subclasses to to invoke their handlers in a type safe\nmanner. Intended to be called by [EventBus#fireEvent(Event)] or\n[EventBus#fireEventFromSource(Event, Object)].\n\n@param handler handler\n@see EventBus#dispatchEvent(Event, Object)\n","name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires an {@link AttachEvent} on all registered handlers in the handler\nsource.\n\n@param <S> The handler source type\n@param source the source of the handlers\n@param attached whether to announce an attach or detach\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","name":"HasValueChangeHandlers"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires value change event if the old value is not equal to the new value.\nUse this call rather than making the decision to short circuit yourself for\nsafe handling of null.\n\n@param <T> the old value type\n@param source the source of the handlers\n@param oldValue the oldValue, may be null\n@param newValue the newValue, may be null\n","name":"fireIfNotEqual","id":"fireIfNotEqual3()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","name":"HasValueChangeHandlers"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"oldValue","id":"oldValue","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"newValue","id":"newValue","kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nConvenience method to allow subtypes to know when they should fire a value\nchange event in a null-safe manner.\n\n@param <T> value type\n@param source the source\n@param oldValue the old value\n@param newValue the new value\n@return whether the event should be fired\n","name":"_shouldFire","isPrivate":true,"id":"_shouldFire3()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","name":"HasValueChangeHandlers"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"oldValue","id":"oldValue","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"newValue","id":"newValue","kind":"param"}],"line":"92","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nThe toString() for abstract event is overridden to avoid accidently\nincluding class literals in the the compiled output. Use [Event]\n#toDebugString to get more information about the event.\n","name":"toString","id":"toString0()","line":"101","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent/T","name":"T"},"comment":"\nGets the value.\n\n@return the value\n","name":"value","id":"value","line":"25","kind":"property"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandler","name":"ValueChangeHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","line":"18","kind":"variable"},{"comment":"\nCreates a value change event.\n\n@param value the value\n","name":"ValueChangeEvent","id":"ValueChangeEvent1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/ValueChangeEvent/_value","name":"_value"},"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","kind":"param"}],"line":"32","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHHandler for {@link Window.ClosingEvent} events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/closing_handler.dart","name":"ClosingHandler","id":"ClosingHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired just before the browser window closes or navigates to a different\nsite. No user-interface may be displayed during shutdown.\n\n@param event the event\n","name":"onWindowClosing","id":"onWindowClosing1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClosingEvent","name":"ClosingEvent"},"name":"event","id":"event","kind":"param"}],"line":"17","kind":"method"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nFired just before the browser window closes or navigates to a different site.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/closing_event.dart","name":"ClosingEvent","id":"ClosingEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ClosingHandler","name":"ClosingHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"22","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the message that will be presented to the user in a confirmation\ndialog that asks the user whether or not she wishes to navigate away from\nthe page.\n\n@return the message to display to the user, or null\n","name":"getMessage","id":"getMessage0()","line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the message to a <code>non-null</code> value to present a\nconfirmation dialog that asks the user whether or not she wishes to\nnavigate away from the page. If multiple handlers set the message, the\nlast message will be displayed; all others will be ignored.\n\n@param message the message to display to the user, or null\n","name":"setMessage","id":"setMessage1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClosingHandler","name":"ClosingHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"49","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/ClosingHandler","name":"ClosingHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nThe message to display to the user to see whether they really want to\nleave the page.\n","name":"_message","isPrivate":true,"id":"_message","line":"20","kind":"variable"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link CloseEvent} events.\n\n@param <T> the type being closed\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/close_handler.dart","name":"CloseHandler","id":"CloseHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link CloseEvent} is fired.\n\n@param event the {@link CloseEvent} that was fired\n","name":"onClose","id":"onClose1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseEvent","arguments":[{"refId":"dart_web_toolkit_event/CloseHandler/T","name":"T"}],"name":"CloseEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link CloseEvent} events.\n\n@param <T> the type being closed\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/close_event.dart","name":"HasCloseHandlers","id":"HasCloseHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link CloseEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_event/HasCloseHandlers/T","name":"T"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"75","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"68","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"comment":"\nRepresents a close event.\n\n@param <T> the type being closed\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/close_event.dart","name":"CloseEvent","id":"CloseEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/CloseHandler","name":"CloseHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nImplemented by subclasses to to invoke their handlers in a type safe\nmanner. Intended to be called by [EventBus#fireEvent(Event)] or\n[EventBus#fireEventFromSource(Event, Object)].\n\n@param handler handler\n@see EventBus#dispatchEvent(Event, Object)\n","name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_event/CloseEvent/T","name":"T"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires a close event on all registered handlers in the handler manager.\n\n@param <T> the target type\n@param source the source of the handlers\n@param target the target\n@param autoClosed was the target closed automatically\n","name":"fire","id":"fire3()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasCloseHandlers","name":"HasCloseHandlers"},"name":"source","id":"source","kind":"param"},{"name":"target","id":"target","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoClosed","id":"autoClosed","kind":"param"}],"line":"54","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/CloseHandler","name":"CloseHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/CloseEvent/T","name":"T"},"isFinal":true,"name":"target","id":"target","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"autoClosed","id":"autoClosed","line":"20","kind":"variable"},{"comment":"\nCreates a new close event.\n\n@param target the target\n@param autoClosed whether it is auto closed\n","name":"CloseEvent","id":"CloseEvent2()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/CloseEvent/target","name":"target"},"ref":{"refId":"dart_web_toolkit_event/CloseEvent/T","name":"T"},"name":"target","id":"target","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/CloseEvent/autoClosed","name":"autoClosed"},"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoClosed","id":"autoClosed","kind":"param"}],"line":"28","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nMarker interface for event handlers. All stock GWT Widget and dom event\nhandlers extend [EventHandler].\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event_handler.dart","name":"EventHandler","id":"EventHandler","line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nImplemented by objects that handle {@link AttachEvent}.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/attach_event_handler.dart","name":"AttachEventHandler","id":"AttachEventHandler","children":[{"returnType":{"refId":"void","name":"void"},"name":"onAttachOrDetach","id":"onAttachOrDetach1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEvent","name":"AttachEvent"},"name":"event","id":"event","kind":"param"}],"line":"10","kind":"method"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/attach_event.dart","name":"AttachEvent","id":"AttachEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nImplemented by subclasses to to invoke their handlers in a type safe\nmanner. Intended to be called by [EventBus#fireEvent(Event)] or\n[EventBus#fireEventFromSource(Event, Object)].\n\n@param handler handler\n@see EventBus#dispatchEvent(Event, Object)\n","name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires an {@link AttachEvent} on all registered handlers in the handler\nsource.\n\n@param <S> The handler source type\n@param source the source of the handlers\n@param attached whether to announce an attach or detach\n","name":"fire","id":"fire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasAttachHandlers","name":"HasAttachHandlers"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"attached","id":"attached","kind":"param"}],"line":"46","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_attached","isPrivate":true,"id":"_attached","line":"13","kind":"variable"},{"comment":"\nConstruct a new [AttachEvent].\n\n@param attached true if the source has been attached\n","name":"AttachEvent","id":"AttachEvent1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/AttachEvent/_attached","name":"_attached"},"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_attached","isPrivate":true,"id":"_attached","kind":"param"}],"line":"20","kind":"constructor"}],"line":"6","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/DomEventType/H","name":"H"}],"name":"EventType"},"comment":"\nType class used by dom event subclasses. Type is specialized for dom in\norder to carry information about the native event.\n\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/dom_event.dart","name":"DomEventType","id":"DomEventType","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventName","id":"eventName","line":"103","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"name":"flyweight","id":"flyweight","line":"104","kind":"variable"},{"name":"DomEventType","id":"DomEventType2()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/DomEventType/eventName","name":"eventName"},"ref":{"refId":"dart.core/String","name":"String"},"name":"eventName","id":"eventName","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/DomEventType/flyweight","name":"flyweight"},"ref":{"refId":"dart_web_toolkit_event/DomEvent","name":"DomEvent"},"name":"flyweight","id":"flyweight","kind":"param"}],"line":"106","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"101","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasNativeEvent","name":"HasNativeEvent"}],"superclass":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/dom_event.dart","name":"DomEvent","id":"DomEvent","children":[{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart_web_toolkit_event/DomEventType","name":"DomEventType"}],"name":"Map"},"isStatic":true,"name":"getRegistered","id":"getRegistered0()","line":"13","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"}],"name":"EventType"},"name":"getAssociatedType","id":"getAssociatedType0()","line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFires the given native event on the specified handlers.\n\n@param _nativeEvent the native event\n@param handlerSource the source of the handlers to fire\n@param _relativeElem the element relative to which event coordinates will be\n         measured\n","name":"fireNativeEvent","id":"fireNativeEvent3()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"nativeEvent","id":"nativeEvent","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"name":"handlerSource","id":"handlerSource","line":"40","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"relativeElem","id":"relativeElem","line":"40","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPrevents the wrapped native event's default action.\n","name":"preventDefault","id":"preventDefault0()","line":"64","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nStops the propagation of the underlying native event.\n","name":"stopPropagation","id":"stopPropagation0()","line":"72","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"name":"getNativeEvent","id":"getNativeEvent0()","line":"77","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the element relative to which event coordinates will be measured.\nIf this element is <code>null</code>, event coordinates will be measured\nrelative to the window's client area.\n\n@return the event's relative element\n","name":"getRelativeElement","id":"getRelativeElement0()","line":"89","kind":"method"},{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"_nativeEvent","isPrivate":true,"id":"_nativeEvent","line":"8","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_relativeElem","isPrivate":true,"id":"_relativeElem","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart_web_toolkit_event/DomEventType","name":"DomEventType"}],"name":"Map"},"isStatic":true,"name":"_registered","isPrivate":true,"id":"_registered","line":"11","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"}],"name":"EventType"},"isStatic":true,"comment":"\nThe event type.\n","name":"TYPE","id":"TYPE","line":"23","kind":"variable"},{"name":"DomEvent","id":"DomEvent0()","line":"29","kind":"constructor"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/IEvent","arguments":[{"refId":"dart_web_toolkit_event/DwtEvent/H","name":"H"}],"name":"IEvent"},"comment":"\nRoot of all GWT widget and dom events sourced by a {@link HandlerManager}.\nAll GWT events are considered dead and should no longer be accessed once the\n{@link HandlerManager} which originally fired the event finishes with it.\nThat is, don't hold on to event objects outside of your handler methods.\n\nThere is no need for an application's custom event types to extend GwtEvent.\nPrefer {@link Event} instead.\n\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/dwt_event.dart","name":"DwtEvent","id":"DwtEvent","children":[{"returnType":{"refId":"dart.core/Object","name":"Object"},"name":"getSource","id":"getSource0()","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAsserts that the event still should be accessed. All events are considered\nto be \"dead\" after their original handler manager finishes firing them. An\nevent can be revived by calling {@link GwtEvent#revive()}.\n","name":"assertLive","id":"assertLive0()","line":"31","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the event current live?\n\n@return whether the event is live\n","name":"isLive","id":"isLive0()","line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nKill the event. After the event has been killed, users cannot really on its\nvalues or functions being available.\n","name":"kill","id":"kill0()","line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRevives the event. Used when recycling event instances.\n","name":"revive","id":"revive0()","line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"overrideSource","id":"overrideSource1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"61","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_dead","isPrivate":true,"id":"_dead","line":"19","kind":"variable"},{"name":"H","id":"H","kind":"typeparam"}],"line":"17","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nReceives low-level browser events. The implementer registers for DOM events\nusing [DOM#setEventListener(Element, EventListener)].\n\nOnly subclasses of [Widget] should attempt to listen to browser events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event_listener.dart","name":"EventListener","id":"EventListener","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired whenever a browser event is received.\n\n@param event the event received\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"19","kind":"method"}],"line":"12","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/DomImpl","name":"DomImpl"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/impl/dom_impl_standard.dart","name":"DomImplStandard","id":"DomImplStandard","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isOrHasChild","id":"isOrHasChild2()","children":[{"ref":{"refId":"dart.dom.html/Node","name":"Node"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Node","name":"Node"},"name":"child","id":"child","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertChild","id":"insertChild3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"toAdd","id":"toAdd","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getChild","id":"getChild2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getChildCount","id":"getChildCount1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"69","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsoluteLeft","id":"getAbsoluteLeft1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsoluteTop","id":"getAbsoluteTop1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"releaseCapture","id":"releaseCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_releaseCaptureImpl","isPrivate":true,"id":"_releaseCaptureImpl1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCapture","id":"setCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setCaptureImpl","isPrivate":true,"id":"_setCaptureImpl1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"134","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInitializes the event dispatch system.\n","name":"initEventSystem","id":"initEventSystem0()","line":"145","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"getEventListener","id":"getEventListener1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"220","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setEventListener","id":"setEventListener2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"224","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkBitlessEvent","id":"sinkBitlessEvent2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeName","id":"eventTypeName","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sinkBitlessEventImpl","isPrivate":true,"id":"_sinkBitlessEventImpl2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeName","id":"eventTypeName","kind":"param"}],"line":"234","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkEvents","id":"sinkEvents2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bits","id":"bits","kind":"param"}],"line":"258","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkEventsImpl","id":"sinkEventsImpl2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bits","id":"bits","kind":"param"}],"line":"265","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_applyDispatcher","isPrivate":true,"id":"_applyDispatcher8()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","name":"EventStreamProvider"},"name":"provider","id":"provider","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bits","id":"bits","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"chMask","id":"chMask","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventName","id":"eventName","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"mask","id":"mask","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"handler","id":"handler","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"useCapture","id":"useCapture","kind":"param"}],"line":"301","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"eventGetToElement","id":"eventGetToElement1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"312","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"name":"createHtmlEvent","id":"createHtmlEvent3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"canBubble","id":"canBubble","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelable","id":"cancelable","kind":"param"}],"line":"324","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.dom.html/Element","name":"Element"},{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"}],"name":"Map"},"name":"_listener","isPrivate":true,"id":"_listener","line":"8","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"captureElem","id":"captureElem","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isStatic":true,"name":"dispatchCapturedEvent","id":"dispatchCapturedEvent","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isStatic":true,"name":"dispatchCapturedMouseEvent","id":"dispatchCapturedMouseEvent","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isStatic":true,"name":"dispatchDragEvent","id":"dispatchDragEvent","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isStatic":true,"name":"dispatchEvent","id":"dispatchEvent","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isStatic":true,"name":"dispatchUnhandledEvent","id":"dispatchUnhandledEvent","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"}],"name":"Map"},"name":"_subscription","isPrivate":true,"id":"_subscription","line":"263","kind":"variable"},{"name":"DomImplStandard","id":"DomImplStandard0()","line":"10","kind":"constructor"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/impl/dom_impl.dart","name":"DomImpl","id":"DomImpl","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isOrHasChild","id":"isOrHasChild2()","children":[{"ref":{"refId":"dart.dom.html/Node","name":"Node"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Node","name":"Node"},"name":"child","id":"child","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertChild","id":"insertChild3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getChild","id":"getChild2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getChildCount","id":"getChildCount1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsoluteLeft","id":"getAbsoluteLeft1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"41","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsoluteTop","id":"getAbsoluteTop1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"releaseCapture","id":"releaseCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCapture","id":"setCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"maybeInitializeEventSystem","id":"maybeInitializeEventSystem0()","line":"57","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInitializes the event dispatch system.\n","name":"initEventSystem","id":"initEventSystem0()","line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setEventListener","id":"setEventListener2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"69","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkBitlessEvent","id":"sinkBitlessEvent2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeName","id":"eventTypeName","kind":"param"}],"line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkEvents","id":"sinkEvents2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBits","id":"eventBits","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getEventsSunk","id":"getEventsSunk1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"_getEventBits","isPrivate":true,"id":"_getEventBits1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setEventBits","isPrivate":true,"id":"_setEventBits2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bits","id":"bits","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"eventGetToElement","id":"eventGetToElement1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getEventTypeInt","id":"getEventTypeInt1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"eventGetTypeInt","id":"eventGetTypeInt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventType","id":"eventType","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"name":"createHtmlEvent","id":"createHtmlEvent3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"canBubble","id":"canBubble","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelable","id":"cancelable","kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"getEventListener","id":"getEventListener1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"138","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"eventSystemIsInitialized","id":"eventSystemIsInitialized","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"comment":"\nThe attribute that is set when an image fires a native load or error event\nbefore it is attached.\n","name":"UNHANDLED_EVENT_ATTR","id":"UNHANDLED_EVENT_ATTR","line":"23","kind":"variable"},{"comment":"\nCreate instance of [DomImpl] depends on broswer.\n","name":"DomImpl.browserDependent","id":"DomImpl.browserDependent0()","line":"11","kind":"constructor"},{"name":"DomImpl","id":"DomImpl0()","line":"15","kind":"constructor"}],"line":"6","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class provides a set of static methods that allow you to manipulate the\nbrowser's Document Object Model (DOM). It contains methods for manipulating\nboth [Element]s and [Event]s.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/dom.dart","name":"Dom","id":"Dom","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nDetermine whether one element is equal to, or the child of, another.\n\n@param parent the potential parent element\n@param child the potential child element\n@return <code>true</code> if the relationship holds\n","name":"isOrHasChild","id":"isOrHasChild2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"child","id":"child","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nGets an element's n-th child element.\n\n@param parent the element whose child is to be retrieved\n@param index the index of the child element\n@return the n-th child element\n","name":"getChild","id":"getChild2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets the number of child elements present in a given parent element.\n\n@param parent the element whose children are to be counted\n@return the number of children\n","name":"getChildCount","id":"getChildCount1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nScrolls the given element into view.\n\n<p>\nThis method crawls up the DOM hierarchy, adjusting the scrollLeft and\nscrollTop properties of each scrollable element to ensure that the\nspecified element is completely in view. It adjusts each scroll position by\nthe minimum amount necessary.\n</p>\n\n@param elem the element to be made visible\n","name":"scrollIntoView","id":"scrollIntoView1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nInitialize the event system if it has not already been initialized.\n","name":"maybeInitializeEventSystem","id":"maybeInitializeEventSystem0()","line":"73","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGets any named property from an element, as a string.\n\n@param elem the element whose property is to be retrieved\n@param prop the name of the property\n@return the property's value\n","name":"getElementProperty","id":"getElementProperty2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets any named property from an element, as an int.\n\n@param elem the element whose property is to be retrieved\n@param prop the name of the property\n@return the property's value as an int\n","name":"getElementPropertyInt","id":"getElementPropertyInt2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nGets any named property from an element, as a boolean.\n\n@param elem the element whose property is to be retrieved\n@param prop the name of the property\n@return the property's value as a boolean\n","name":"getElementPropertyBoolean","id":"getElementPropertyBoolean2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nGets any named property from an element, as a boolean.\n\n@param elem the element whose property is to be retrieved\n@param prop the name of the property\n@return the property's value as a boolean\n","name":"setElementPropertyBoolean","id":"setElementPropertyBoolean3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets a property on the given element.\n\n@param elem the element whose property is to be set\n@param prop the name of the property to be set\n@param value the new property value\n","name":"setElementProperty","id":"setElementProperty3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"145","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets an int property on the given element.\n\n@param elem the element whose property is to be set\n@param prop the name of the property to be set\n@param value the new property value as an int\n","name":"setElementPropertyInt","id":"setElementPropertyInt3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"prop","id":"prop","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"160","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets an attribute on a given element.\n\n@param elem element whose attribute is to be set\n@param attr the name of the attribute\n@param value the value to which the attribute should be set\n","name":"setElementAttribute","id":"setElementAttribute3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attr","id":"attr","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nRemoves the named attribute from the given element.\n\n@param elem the element whose attribute is to be removed\n@param attr the name of the element to remove\n","name":"removeElementAttribute","id":"removeElementAttribute2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attr","id":"attr","kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets the {@link EventListener} to receive events for the given element.\nOnly one such listener may exist for a single element.\n\n@param elem the element whose listener is to be set\n@param listener the listener to receive {@link Event events}\n","name":"setEventListener","id":"setEventListener2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets an element's absolute left coordinate in the document's coordinate\nsystem.\n\n@param elem the element to be measured\n@return the element's absolute left coordinate\n","name":"getAbsoluteLeft","id":"getAbsoluteLeft1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets an element's absolute top coordinate in the document's coordinate\nsystem.\n\n@param elem the element to be measured\n@return the element's absolute top coordinate\n","name":"getAbsoluteTop","id":"getAbsoluteTop1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets an attribute on the given element's style.\n\n@param elem the element whose style attribute is to be set\n@param attr the name of the style attribute to be set\n@param value the style attribute's new value\n","name":"setStyleAttribute","id":"setStyleAttribute3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attr","id":"attr","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets an integer attribute on the given element's style.\n\n@param elem the element whose style attribute is to be set\n@param attr the name of the style attribute to be set\n@param value the style attribute's new integer value\n","name":"setIntStyleAttribute","id":"setIntStyleAttribute3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attr","id":"attr","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGenerates a unique DOM id. The id is of the form \"dwt-id-<unique integer>\".\n\n@return a unique DOM id\n","name":"createUniqueId","id":"createUniqueId0()","line":"254","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nInserts an element as a child of the given parent element.\n<p>\nIf the child element is a {@link com.google.gwt.user.client.ui.PotentialElement}, it is first\nresolved.\n</p>\n\n@param parent the parent element\n@param child the child element to add to <code>parent</code>\n@param index the index before which the child will be inserted (any value\n         greater than the number of existing children will cause the child\n         to be appended)\n@see com.google.gwt.user.client.ui.PotentialElement#resolve(Element)\n","name":"insertChild","id":"insertChild3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"273","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nGets the first child element of the given element.\n\n@param elem the element whose child is to be retrieved\n@return the child element\n","name":"getFirstChild","id":"getFirstChild1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"288","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nGets the element that currently has mouse capture.\n\n@return a handle to the capture element, or <code>null</code> if none\n        exists\n","name":"getCaptureElement","id":"getCaptureElement0()","line":"302","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nReleases mouse/touch/gesture capture on the given element. Calling this\nmethod has no effect if the element does not currently have\nmouse/touch/gesture capture.\n\n@param elem the element to release capture\n@see #setCapture(Element)\n","name":"releaseCapture","id":"releaseCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"314","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets mouse/touch/gesture capture on the given element. This element will\ndirectly receive all mouse events until {@link #releaseCapture(Element)} is\ncalled on it.\n\n@param elem the element on which to set mouse/touch/gesture capture\n","name":"setCapture","id":"setCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"328","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe height of the document's client area.\n\n@return the document's client height\n","name":"getClientHeight","id":"getClientHeight0()","line":"338","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe width of the document's client area.\n\n@return the document's client width\n","name":"getClientWidth","id":"getClientWidth0()","line":"347","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe number of pixels that the document's content is scrolled from the left.\n\n<p>\nIf the document is in RTL mode, this method will return a negative value of\nthe number of pixels scrolled from the right.\n</p>\n\n@return the document's left scroll position\n","name":"getScrollLeft","id":"getScrollLeft0()","line":"361","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe number of pixels that the document's content is scrolled from the top.\n\n@return the document's top scroll position\n","name":"getScrollTop","id":"getScrollTop0()","line":"370","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe width of the scrollable area of the document.\n\n@return the width of the document's scrollable area\n","name":"getScrollWidth","id":"getScrollWidth0()","line":"379","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe height of the scrollable area of the document.\n\n@return the height of the document's scrollable area\n","name":"getScrollHeight","id":"getScrollHeight0()","line":"388","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nClones an element.\n\n@param elem the element to be cloned\n@param deep should children be cloned as well?\n","name":"clone","id":"clone2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"deep","id":"deep","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSinks a named event. Events will be fired to the nearest\n{@link EventListener} specified on any of the element's parents.\n\n@param elem the element whose events are to be retrieved\n@param eventTypeName name of the event to sink on this element\n","name":"sinkBitlessEvent","id":"sinkBitlessEvent2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeName","id":"eventTypeName","kind":"param"}],"line":"413","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets the current set of events sunk by a given element. These events will\nbe fired to the nearest {@link EventListener} specified on any of the\nelement's parents.\n\n@param elem the element whose events are to be retrieved\n@param eventBits a bitfield describing the events sunk on this element (its\n         possible values are described in {@link Event})\n","name":"sinkEvents","id":"sinkEvents2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBits","id":"eventBits","kind":"param"}],"line":"426","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets the current set of events sunk by a given element.\n\n@param elem the element whose events are to be retrieved\n@return a bitfield describing the events sunk on this element (its possible\n        values are described in {@link Event})\n","name":"getEventsSunk","id":"getEventsSunk1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"437","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nThis method is called directly by native code when any event is fired.\n\n@param evt the handle to the event being fired.\n@param elem the handle to the element that received the event.\n@param listener the listener associated with the element that received the\n         event.\n","name":"dispatchEvent","id":"dispatchEvent3()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"449","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"_dispatchEventImpl","isPrivate":true,"id":"_dispatchEventImpl3()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"459","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nGets the element to which the mouse pointer was moved (only valid for\n{@link Event#ONMOUSEOUT} and {@link Event#ONMOUSEOVER}).\n\n@param evt the event to be tested\n@return the element to which the mouse pointer was moved\n","name":"eventGetToElement","id":"eventGetToElement1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"480","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nThis method is called directly by native code when event preview is being\nused.\n\n@param evt a handle to the event being previewed\n@return <code>false</code> to cancel the event\n","name":"previewEvent","id":"previewEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"491","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets the enumerated type of this event (as defined in {@link Event}).\n\n@param evt the event to be tested\n@return the event's enumerated type, or -1 if not defined\n","name":"eventGetType","id":"eventGetType1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"511","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates an event.\n\n<p>\nWhile this method may be used to create events directly, it is generally\npreferable to use existing helper methods such as\n{@link #createFocusEvent()}.\n</p>\n\n<p>\nAlso, note that on Internet Explorer the 'canBubble' and 'cancelable'\narguments will be ignored (the event's behavior is inferred by the browser\nbased upon its type).\n</p>\n\n@param type the type of event (e.g., BrowserEvents.FOCUS, BrowserEvents.LOAD, etc)\n@param canBubble <code>true</code> if the event should bubble\n@param cancelable <code>true</code> if the event should be cancelable\n@return the event object\n","name":"createHtmlEvent","id":"createHtmlEvent3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"canBubble","id":"canBubble","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelable","id":"cancelable","kind":"param"}],"line":"535","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'blur' event.\n","name":"createBlurEvent","id":"createBlurEvent0()","line":"542","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'change' event.\n","name":"createChangeEvent","id":"createChangeEvent0()","line":"549","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'contextmenu' event.\n\nNote: Contextmenu events will not dispatch properly on Firefox 2 and\nearlier.\n\n@return the event object\n","name":"createContextMenuEvent","id":"createContextMenuEvent0()","line":"561","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates an 'error' event.\n\n@return the event object\n","name":"createErrorEvent","id":"createErrorEvent0()","line":"570","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'focus' event.\n\n@return the event object\n","name":"createFocusEvent","id":"createFocusEvent0()","line":"579","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'load' event.\n\n@return the event object\n","name":"createLoadEvent","id":"createLoadEvent0()","line":"588","kind":"method"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"comment":"\nCreates a 'scroll' event.\n\nNote: Contextmenu events will not dispatch properly on Firefox 2 and\nearlier.\n\n@return the event object\n","name":"createScrollEvent","id":"createScrollEvent0()","line":"600","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"isStatic":true,"comment":"\nGets the {@link EventListener} that will receive events for the given\nelement. Only one such listener may exist for a single element.\n\n@param elem the element whose listener is to be set\n@return the element's event listener\n","name":"getEventListener","id":"getEventListener1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"611","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/DomImpl","name":"DomImpl"},"isStatic":true,"comment":"\nDOM helper class Implementation.\n","name":"impl","id":"impl","line":"16","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"name":"_sCaptureElem","isPrivate":true,"id":"_sCaptureElem","line":"17","kind":"variable"},{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"isStatic":true,"name":"_currentEvent","isPrivate":true,"id":"_currentEvent","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"uniqueId","id":"uniqueId","line":"247","kind":"variable"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nConstant strings representing browser events.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/browser_events.dart","name":"BrowserEvents","id":"BrowserEvents","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"BLUR","id":"BLUR","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CANPLAYTHROUGH","id":"CANPLAYTHROUGH","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CHANGE","id":"CHANGE","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CLICK","id":"CLICK","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CONTEXTMENU","id":"CONTEXTMENU","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DBLCLICK","id":"DBLCLICK","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAG","id":"DRAG","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAGEND","id":"DRAGEND","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAGENTER","id":"DRAGENTER","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAGLEAVE","id":"DRAGLEAVE","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAGOVER","id":"DRAGOVER","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DRAGSTART","id":"DRAGSTART","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DROP","id":"DROP","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"ENDED","id":"ENDED","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"ERROR","id":"ERROR","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"FOCUS","id":"FOCUS","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"FOCUSIN","id":"FOCUSIN","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"FOCUSOUT","id":"FOCUSOUT","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"GESTURECHANGE","id":"GESTURECHANGE","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"GESTUREEND","id":"GESTUREEND","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"GESTURESTART","id":"GESTURESTART","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"KEYDOWN","id":"KEYDOWN","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"KEYPRESS","id":"KEYPRESS","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"KEYUP","id":"KEYUP","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"LOAD","id":"LOAD","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"LOSECAPTURE","id":"LOSECAPTURE","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEDOWN","id":"MOUSEDOWN","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEMOVE","id":"MOUSEMOVE","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEOUT","id":"MOUSEOUT","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEOVER","id":"MOUSEOVER","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEUP","id":"MOUSEUP","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MOUSEWHEEL","id":"MOUSEWHEEL","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"PROGRESS","id":"PROGRESS","line":"42","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"SCROLL","id":"SCROLL","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TOUCHCANCEL","id":"TOUCHCANCEL","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TOUCHEND","id":"TOUCHEND","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TOUCHMOVE","id":"TOUCHMOVE","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TOUCHSTART","id":"TOUCHSTART","line":"47","kind":"variable"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart.core/Exception","name":"Exception"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA [Exception] that collects a [Set] of child\n[Exception]s together. Typically thrown after a loop, with all of the\nexceptions thrown during that loop, but delayed so that the loop finishes\nexecuting.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/umbrella_exception.dart","name":"UmbrellaException","id":"UmbrellaException","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"25","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"makeMessage","id":"makeMessage1()","children":[{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/Exception","name":"Exception"},"isStatic":true,"name":"makeCause","id":"makeCause1()","children":[{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","kind":"param"}],"line":"43","kind":"method"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","line":"23","kind":"property"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"comment":"\nA message describing the format error.\n","name":"_causes","isPrivate":true,"id":"_causes","line":"17","kind":"variable"},{"name":"UmbrellaException","id":"UmbrellaException1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/UmbrellaException/_causes","name":"_causes"},"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"_causes","isPrivate":true,"id":"_causes","kind":"param"}],"line":"19","kind":"constructor"}],"line":"12","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/Command","arguments":[{"refId":"dart_web_toolkit_event/_RemoveCommand/H","name":"H"}],"name":"Command"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/simple_event_bus.dart","name":"_RemoveCommand","isPrivate":true,"id":"_RemoveCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute0()","line":"331","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","line":"324","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_RemoveCommand/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","line":"325","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","line":"326","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/_RemoveCommand/H","name":"H"},"name":"handler","id":"handler","line":"327","kind":"variable"},{"name":"_RemoveCommand","id":"_RemoveCommand4()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/_RemoveCommand/_eventBus","name":"_eventBus"},"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_RemoveCommand/type","name":"type"},"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_RemoveCommand/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_RemoveCommand/source","name":"source"},"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_RemoveCommand/handler","name":"handler"},"ref":{"refId":"dart_web_toolkit_event/_RemoveCommand/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"329","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"322","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/Command","arguments":[{"refId":"dart_web_toolkit_event/_AddCommand/H","name":"H"}],"name":"Command"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/simple_event_bus.dart","name":"_AddCommand","isPrivate":true,"id":"_AddCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute0()","line":"317","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","line":"310","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_AddCommand/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","line":"311","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","line":"312","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/_AddCommand/H","name":"H"},"name":"handler","id":"handler","line":"313","kind":"variable"},{"name":"_AddCommand","id":"_AddCommand4()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/_AddCommand/_eventBus","name":"_eventBus"},"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_AddCommand/type","name":"type"},"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_AddCommand/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_AddCommand/source","name":"source"},"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_AddCommand/handler","name":"handler"},"ref":{"refId":"dart_web_toolkit_event/_AddCommand/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"315","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"308","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/simple_event_bus.dart","name":"_EmptySource","isPrivate":true,"id":"_EmptySource","line":"306","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/simple_event_bus.dart","name":"_HandlerRegistration","isPrivate":true,"id":"_HandlerRegistration","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nDeregisters the handler associated with this registration object if the\nhandler is still attached to the event source. If the handler is no longer\nattached to the event source, this is a no-op.\n","name":"removeHandler","id":"removeHandler0()","line":"301","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","line":"289","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_HandlerRegistration/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","line":"290","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","line":"291","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/_HandlerRegistration/H","name":"H"},"name":"handler","id":"handler","line":"292","kind":"variable"},{"name":"_HandlerRegistration","id":"_HandlerRegistration4()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/_HandlerRegistration/_eventBus","name":"_eventBus"},"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus","name":"SimpleEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_HandlerRegistration/type","name":"type"},"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/_HandlerRegistration/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_HandlerRegistration/source","name":"source"},"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_HandlerRegistration/handler","name":"handler"},"ref":{"refId":"dart_web_toolkit_event/_HandlerRegistration/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"294","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"287","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/EventBus","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventBus"},"comment":"\nBasic implementation of [EventBus].\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/simple_event_bus.dart","name":"SimpleEventBus","id":"SimpleEventBus","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\n@deprecated required by legacy features in GWT's old HandlerManager\n","name":"isEventHandled","id":"isEventHandled1()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an unfiltered [handler] to receive events of this [type] from all sources.\n\nIt is rare to call this method directly. More typically an [Event]\nsubclass will provide a static <code>register</code> method, or a widget\nwill accept handlers directly.\n\n@param <H> The type of handler\n@param type the event type associated with this handler\n@param handler the handler\n@return the handler registration, can be stored in order to remove the\n        handler later\n","name":"addHandler","id":"addHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a [handler] to receive events of this [type] from the given [source].\n\nIt is rare to call this method directly. More typically a [Event]\nsubclass will provide a static <code>register</code> method, or a widget\nwill accept handlers directly.\n\n@param <H> The type of handler\n@param type the event type associated with this handler\n@param source the source associated with this handler\n@param handler the handler\n@return the handler registration, can be stored in order to remove the\n        handler later\n","name":"addHandlerToSource","id":"addHandlerToSource3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"71","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"_doAdd","isPrivate":true,"id":"_doAdd3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doAddNow","isPrivate":true,"id":"_doAddNow3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"List"},"name":"ensureHandlerList","id":"ensureHandlerList2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"95","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doRemove","isPrivate":true,"id":"_doRemove3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doRemoveNow","isPrivate":true,"id":"_doRemoveNow3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"prune","id":"prune2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_defer","isPrivate":true,"id":"_defer1()","children":[{"ref":{"refId":"dart_web_toolkit_event/Command","name":"Command"},"name":"command","id":"command","kind":"param"}],"line":"154","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleQueuedAddsAndRemoves","isPrivate":true,"id":"_handleQueuedAddsAndRemoves0()","line":"161","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_enqueueRemove","isPrivate":true,"id":"_enqueueRemove3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"173","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_enqueueAdd","isPrivate":true,"id":"_enqueueAdd3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"177","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the event from no source. Only unfiltered handlers will receive it.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@throws UmbrellaException wrapping exceptions thrown by handlers\n\n@param event the event to fire\n","name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"}],"line":"197","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the given event to the handlers listening to the event's type.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@throws UmbrellaException wrapping exceptions thrown by handlers\n\n@param event the event to fire\n","name":"fireEventFromSource","id":"fireEventFromSource2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doFire","isPrivate":true,"id":"_doFire2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"219","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"List"},"name":"getDispatchList","id":"getDispatchList2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"257","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"List"},"name":"getHandlerList","id":"getHandlerList2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/SimpleEventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"272","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/_EmptySource","name":"_EmptySource"},"isStatic":true,"name":"_emptySource","isPrivate":true,"id":"_emptySource","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart_web_toolkit_event/EventType","name":"EventType"},{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Object","name":"Object"},{"refId":"dart.core/List","name":"List"}],"name":"Map"}],"name":"Map"},"comment":"\nMap of event type to map of event source to list of their handlers.\n","name":"map","id":"map","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_firingDepth","isPrivate":true,"id":"_firingDepth","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_event/Command","name":"Command"}],"name":"List"},"comment":"\nAdd and remove operations received during dispatch.\n","name":"_deferredDeltas","isPrivate":true,"id":"_deferredDeltas","line":"23","kind":"variable"},{"comment":"\nAllows creation of an instance that fires its handlers in the reverse of\nthe order in which they were added, although filtered handlers all fire\nbefore unfiltered handlers.\n","name":"SimpleEventBus","id":"SimpleEventBus0()","line":"30","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/resettable_event_bus.dart","name":"_ResettableHandlerRegistration","isPrivate":true,"id":"_ResettableHandlerRegistration","children":[{"returnType":{"refId":"void","name":"void"},"name":"removeHandler","id":"removeHandler0()","line":"83","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/ResettableEventBus","name":"ResettableEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","line":"78","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"_registration","isPrivate":true,"id":"_registration","line":"79","kind":"variable"},{"name":"_ResettableHandlerRegistration","id":"_ResettableHandlerRegistration2()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/_ResettableHandlerRegistration/_eventBus","name":"_eventBus"},"ref":{"refId":"dart_web_toolkit_event/ResettableEventBus","name":"ResettableEventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_event/_ResettableHandlerRegistration/_registration","name":"_registration"},"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"_registration","isPrivate":true,"id":"_registration","kind":"param"}],"line":"81","kind":"constructor"}],"line":"76","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"comment":"\nWraps an EventBus to hold on to any HandlerRegistrations, so that they can\neasily all be cleared at once.\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/resettable_event_bus.dart","name":"ResettableEventBus","id":"ResettableEventBus","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addHandler","id":"addHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addHandlerToSource","id":"addHandlerToSource3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireEventFromSource","id":"fireEventFromSource2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove all handlers that have been added through this wrapper.\n","name":"removeHandlers","id":"removeHandlers0()","line":"41","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\n Visible for testing.\n","name":"getRegistrationSize","id":"getRegistrationSize0()","line":"59","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"_doRegisterHandler","isPrivate":true,"id":"_doRegisterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"registration","id":"registration","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doUnregisterHandler","isPrivate":true,"id":"_doUnregisterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"registration","id":"registration","kind":"param"}],"line":"68","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"isFinal":true,"name":"_wrapped","isPrivate":true,"id":"_wrapped","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"}],"name":"Set"},"isFinal":true,"name":"_registrations","isPrivate":true,"id":"_registrations","line":"12","kind":"variable"},{"name":"ResettableEventBus","id":"ResettableEventBus1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/ResettableEventBus/_wrapped","name":"_wrapped"},"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"name":"_wrapped","isPrivate":true,"id":"_wrapped","kind":"param"}],"line":"14","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDispatches [Event]s to interested parties. Eases decoupling by allowing\nobjects to interact without having direct dependencies upon one another, and\nwithout requiring event sources to deal with maintaining handler lists. There\nwill typically be one EventBus per application, broadcasting events that may\nbe of general interest.\n\n@see SimpleEventBus\n@see ResettableEventBus\n@see com.google.web.bindery.event.shared.testing.CountingEventBus\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event_bus.dart","name":"EventBus","id":"EventBus","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nInvokes [dispatch] with [handler].\n\nProtected to allow EventBus implementations in different packages to\ndispatch events even though the [dispatch] method is protected.\n","name":"dispatchEvent","id":"dispatchEvent2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"name":"handler","id":"handler","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets [source] as the source of [event].\n\nProtected to allow EventBus implementations in different packages to set an\nevent source even though the {@code event.setSource} method is protected.\n","name":"setSourceOfEvent","id":"setSourceOfEvent2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"name":"source","id":"source","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an unfiltered handler to receive events of this type from all sources.\n\nIt is rare to call this method directly. More typically an [Event]\nsubclass will provide a static <code>register</code> method, or a widget\nwill accept handlers directly.\n\n@param <H> The type of handler\n@param type the event type associated with this handler\n@param handler the handler\n@return the handler registration, can be stored in order to remove the\n        handler later\n","name":"addHandler","id":"addHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/EventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"52","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a handler to receive events of this type from the given source.\n\nIt is rare to call this method directly. More typically a [Event]\nsubclass will provide a static <code>register</code> method, or a widget\nwill accept handlers directly.\n\n@param <H> The type of handler\n@param type the event type associated with this handler\n@param source the source associated with this handler\n@param handler the handler\n@return the handler registration, can be stored in order to remove the\n        handler later\n","name":"addHandlerToSource","id":"addHandlerToSource3()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/EventBus/H","name":"H"}],"name":"EventType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventBus/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the event from no source. Only unfiltered handlers will receive it.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@throws UmbrellaException wrapping exceptions thrown by handlers\n\n@param event the event to fire\n","name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"}],"line":"82","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the given event to the handlers listening to the event's type.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@throws UmbrellaException wrapping exceptions thrown by handlers\n\n@param event the event to fire\n","name":"fireEventFromSource","id":"fireEventFromSource2()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent","name":"IEvent"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"source","id":"source","kind":"param"}],"line":"96","kind":"method"},{"name":"H","id":"H","kind":"typeparam"}],"line":"17","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nEncapsulates an action for later execution, often from a different context.\n\nThe Command interface provides a layer of separation between the code\nspecifying some behavior and the code invoking that behavior. This separation\naids in creating reusable code. For example, a\n{@link com.google.gwt.user.client.ui.MenuItem} can have a Command associated\nwith it that it executes when the menu item is chosen by the user.\nImportantly, the code that constructed the Command to be executed when the\nmenu item is invoked knows nothing about the internals of the MenuItem class\nand vice-versa.\n\nThe Command interface is often implemented with an anonymous inner class. For\nexample,\n\nCommand sayHello = new Command() {\n  public void execute() {\n    Window.alert(\"Hello\");\n  }\n};\nsayHello.execute();\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/command.dart","name":"Command","id":"Command","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCauses the Command to perform its encapsulated behavior.\n","name":"execute","id":"execute0()","line":"33","kind":"method"},{"name":"H","id":"H","kind":"typeparam"}],"line":"28","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nRegistration objects returned when an event handler is bound (e.g. via\n[EventBus#addHandler]), used to deregister.\n\nA tip: to make a handler deregister itself try something like the following:\n<code><pre>new MyHandler() {\n HandlerRegistration reg = MyEvent.register(eventBus, this);\n\n public void onMyThing(MyEvent event) {\n   {@literal /}* do your thing *{@literal /}\n   reg.removeHandler();\n }\n};\n</pre></code>\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/handler_registration.dart","name":"HandlerRegistration","id":"HandlerRegistration","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nDeregisters the handler associated with this registration object if the\nhandler is still attached to the event source. If the handler is no longer\nattached to the event source, this is a no-op.\n","name":"removeHandler","id":"removeHandler0()","line":"28","kind":"method"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nType class used to register events with an [EventBus].\n\n@param <H> handler type\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event.dart","name":"EventType","id":"EventType","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"410","kind":"method"},{"name":"H","id":"H","kind":"typeparam"}],"line":"409","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBase Event object.\n\n@param <H> interface implemented by handlers of this kind of event\n","uri":"file:///home/akserg/Workspace/dart_web_toolkit/lib/src/event/event.dart","name":"IEvent","id":"IEvent","children":[{"returnType":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/IEvent/H","name":"H"}],"name":"EventType"},"comment":"\nReturns the [EventType] used to register this event, allowing an\n[EventBus] to find handlers of the appropriate class.\n\n@return the type\n","name":"getAssociatedType","id":"getAssociatedType0()","line":"26","kind":"method"},{"comment":"\nReturns the source for this event. The type and meaning of the source is\narbitrary, and is most useful as a secondary key for handler registration.\n(See [EventBus#addHandlerToSource], which allows a handler to\nregister for events of a particular type, tied to a particular source.)\n\nNote that the source is actually set at dispatch time, e.g. via\n[EventBus#fireEventFromSource(Event, Object)].\n\n@return object representing the source of this event\n","name":"getSource","id":"getSource0()","line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the source that triggered this event. Intended to be called by the\n[EventBus] during dispatch.\n\n@param source the source of this event.\n@see EventBus#fireEventFromSource(Event, Object)\n@see EventBus#setSourceOfEvent(Event, Object)\n","name":"setSource","id":"setSource1()","children":[{"name":"source","id":"source","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nThe toString() for abstract event is overridden to avoid accidently\nincluding class literals in the the compiled output. Use [Event]\n#toDebugString to get more information about the event.\n","name":"toString","id":"toString0()","line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nImplemented by subclasses to invoke their handlers in a type safe\nmanner. Intended to be called by [EventBus#fireEvent(Event)] or\n[EventBus#fireEventFromSource(Event, Object)].\n\n@param handler handler\n@see EventBus#dispatchEvent(Event, Object)\n","name":"dispatch","id":"dispatch1()","children":[{"ref":{"refId":"dart_web_toolkit_event/IEvent/H","name":"H"},"name":"handler","id":"handler","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"isStatic":true,"comment":"\n<p>\nAdds a {@link NativePreviewHandler} that will receive all events before\nthey are fired to their handlers. Note that the handler will receive\n<u>all</u> native events, including those received due to bubbling, whereas\nnormal event handlers only receive explicitly sunk events.\n</p>\n\n<p>\nUnlike other event handlers, {@link NativePreviewHandler} are fired in the\nreverse order that they are added, such that the last\n{@link NativePreviewEvent} that was added is the first to be fired.\n</p>\n\n<p>\nPlease note that nondeterministic behavior will result if more than one GWT\napplication registers preview handlers. See <a href=\n'http://code.google.com/p/google-web-toolkit/issues/detail?id=3892'>issue\n3892</a> for details.\n</p>\n\n@param handler the {@link NativePreviewHandler}\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addNativePreviewHandler","id":"addNativePreviewHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewHandler","name":"NativePreviewHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nFire a {@link NativePreviewEvent} for the native event.\n\n@param nativeEvent the native event\n@return true to fire the event normally, false to cancel the event\n","name":"fireNativePreviewEvent","id":"fireNativePreviewEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"nativeEvent","id":"nativeEvent","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets the enumerated type of this event given a valid event type name.\n\n@param typeName the typeName to be tested\n@return the event's enumerated type, or -1 if not defined\n","name":"getTypeInt","id":"getTypeInt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"typeName","id":"typeName","kind":"param"}],"line":"326","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets the {@link EventListener} to receive events for the given element.\nOnly one such listener may exist for a single element.\n\n@param elem the element whose listener is to be set\n@param listener the listener to receive {@link Event events}\n","name":"setEventListener","id":"setEventListener2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"337","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets the current set of events sunk by a given element. These events will\nbe fired to the nearest {@link EventListener} specified on any of the\nelement's parents.\n\n@param elem the element whose events are to be retrieved\n@param eventBits a bitfield describing the events sunk on this element (its\n         possible values are described in {@link Event})\n","name":"sinkEvents","id":"sinkEvents2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBits","id":"eventBits","kind":"param"}],"line":"352","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nGets the current set of events sunk by a given element.\n\n@param elem the element whose events are to be retrieved\n@return a bitfield describing the events sunk on this element (its possible\n        values are described in {@link Event})\n","name":"getEventsSunk","id":"getEventsSunk1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"365","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"isStatic":true,"comment":"\nGets the {@link EventListener} that will receive events for the given\nelement. Only one such listener may exist for a single element.\n\n@param elem the element whose listener is to be set\n@return the element's event listener\n","name":"getEventListener","id":"getEventListener1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"378","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets mouse-capture on the given element. This element will directly receive\nall mouse events until {@link #releaseCapture(Element)} is called on it.\n\n@param elem the element on which to set mouse capture\n","name":"setCapture","id":"setCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"388","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nReleases mouse capture on the given element. Calling this method has no\neffect if the element does not currently have mouse capture.\n\n@param elem the element to release capture\n@see #setCapture(Element)\n","name":"releaseCapture","id":"releaseCapture1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"399","kind":"method"},{"name":"_source","isPrivate":true,"id":"_source","line":"13","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"isStatic":true,"comment":"\nThe list of {@link NativePreviewHandler}. We use a list instead of a\nhandler manager for efficiency and because we want to fire the handlers in\nreverse order. When the last handler is removed, handlers is reset to null.\n","name":"handlers","id":"handlers","line":"81","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when an element loses keyboard focus.\n","name":"ONBLUR","id":"ONBLUR","line":"137","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the value of an input element changes.\n","name":"ONCHANGE","id":"ONCHANGE","line":"142","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user clicks on an element.\n","name":"ONCLICK","id":"ONCLICK","line":"147","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user double-clicks on an element.\n","name":"ONDBLCLICK","id":"ONDBLCLICK","line":"152","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when an image encounters an error.\n","name":"ONERROR","id":"ONERROR","line":"157","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when an element receives keyboard focus.\n","name":"ONFOCUS","id":"ONFOCUS","line":"162","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user gesture changes.\n","name":"ONGESTURECHANGE","id":"ONGESTURECHANGE","line":"167","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user gesture ends.\n","name":"ONGESTUREEND","id":"ONGESTUREEND","line":"172","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user gesture starts.\n","name":"ONGESTURESTART","id":"ONGESTURESTART","line":"177","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user depresses a key.\n","name":"ONKEYDOWN","id":"ONKEYDOWN","line":"182","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the a character is generated from a keypress (either directly or\nthrough auto-repeat).\n","name":"ONKEYPRESS","id":"ONKEYPRESS","line":"188","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user releases a key.\n","name":"ONKEYUP","id":"ONKEYUP","line":"193","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when an element (normally an IMG) finishes loading.\n","name":"ONLOAD","id":"ONLOAD","line":"198","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when an element that has mouse capture loses it.\n","name":"ONLOSECAPTURE","id":"ONLOSECAPTURE","line":"203","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user depresses a mouse button over an element.\n","name":"ONMOUSEDOWN","id":"ONMOUSEDOWN","line":"208","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the mouse is moved within an element's area.\n","name":"ONMOUSEMOVE","id":"ONMOUSEMOVE","line":"213","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the mouse is moved out of an element's area.\n","name":"ONMOUSEOUT","id":"ONMOUSEOUT","line":"218","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the mouse is moved into an element's area.\n","name":"ONMOUSEOVER","id":"ONMOUSEOVER","line":"223","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user releases a mouse button over an element.\n","name":"ONMOUSEUP","id":"ONMOUSEUP","line":"228","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user scrolls the mouse wheel over an element.\n","name":"ONMOUSEWHEEL","id":"ONMOUSEWHEEL","line":"233","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user pastes text into an input element.\n\n<p>\nNote: This event is <em>not</em> supported on Firefox 2 and earlier, or\nOpera 10 and earlier. Be aware that it will not fire on these browser\nversions.\n</p>\n","name":"ONPASTE","id":"ONPASTE","line":"244","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when a scrollable element's scroll offset changes.\n","name":"ONSCROLL","id":"ONSCROLL","line":"249","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user cancels touching an element.\n","name":"ONTOUCHCANCEL","id":"ONTOUCHCANCEL","line":"254","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user ends touching an element.\n","name":"ONTOUCHEND","id":"ONTOUCHEND","line":"259","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user moves while touching an element.\n","name":"ONTOUCHMOVE","id":"ONTOUCHMOVE","line":"264","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user starts touching an element.\n","name":"ONTOUCHSTART","id":"ONTOUCHSTART","line":"269","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFired when the user requests an element's context menu (usually by\nright-clicking).\n\nNote that not all browsers will fire this event (notably Opera, as of 9.5).\n","name":"ONCONTEXTMENU","id":"ONCONTEXTMENU","line":"276","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nA bit-mask covering both focus events (focus and blur).\n","name":"FOCUSEVENTS","id":"FOCUSEVENTS","line":"281","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nA bit-mask covering all keyboard events (down, up, and press).\n","name":"KEYEVENTS","id":"KEYEVENTS","line":"286","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nA bit-mask covering all mouse events (down, up, move, over, and out), but\nnot click, dblclick, or wheel events.\n","name":"MOUSEEVENTS","id":"MOUSEEVENTS","line":"292","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nA bit-mask covering all touch events (start, move, end, cancel).\n","name":"TOUCHEVENTS","id":"TOUCHEVENTS","line":"298","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nA bit-mask covering all gesture events (start, change, end).\n","name":"GESTUREEVENTS","id":"GESTUREEVENTS","line":"303","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe left mouse button.\n","name":"BUTTON_LEFT","id":"BUTTON_LEFT","line":"308","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe middle mouse button.\n","name":"BUTTON_MIDDLE","id":"BUTTON_MIDDLE","line":"313","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe right mouse button.\n","name":"BUTTON_RIGHT","id":"BUTTON_RIGHT","line":"318","kind":"variable"},{"comment":"\nConstructor.\n","name":"IEvent","id":"IEvent0()","line":"18","kind":"constructor"},{"name":"H","id":"H","kind":"typeparam"}],"line":"11","kind":"class"}],"line":"7","kind":"library"}