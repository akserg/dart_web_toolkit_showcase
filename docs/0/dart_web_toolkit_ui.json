{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [Iterator] class provides methods to iterate over an object. It\nis transparently used by the for-in construct to test for the end\nof the iteration, and to get the elements.\n\nIf the object iterated over is changed during the iteration, the\nbehavior is unspecified.\n\nThe [Iterator] is initially positioned before the first element. Before\naccessing the first element the iterator must thus be advanced ([moveNext])\nto point to the first element. If there is no element left, then [moveNext]\nreturns false.\n\nA typical usage of an [Iterator] looks as follows:\n\n    var it = obj.iterator;\n    while (it.moveNext()) {\n      use(it.current);\n    }\n","uri":"dart-sdk/lib/core/iterator.dart","name":"Iterator","id":"Iterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nMoves to the next element. Returns true if [current] contains the next\nelement. Returns false, if no element was left.\n\nIt is safe to invoke [moveNext] even when the iterator is already\npositioned after the last element. In this case [moveNext] has no effect.\n","name":"moveNext","id":"moveNext0()","line":"35","kind":"method"},{"ref":{"refId":"dart.core/Iterator/E","name":"E"},"comment":"\nReturns the current element.\n\nReturn [:null:] if the iterator has not yet been moved to the first\nelement, or if the iterator has been moved after the last element of the\n[Iterable].\n","name":"current","id":"current","line":"44","kind":"property"},{"name":"E","id":"E","kind":"typeparam"}],"line":"27","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [Iterable] interface allows to get an [Iterator] out of an\n[Iterable] object.\n\nThis interface is used by the for-in construct to iterate over an\n[Iterable] object.\nThe for-in construct takes an [Iterable] object at the right-hand\nside, and calls its [iterator] method to get an [Iterator] on it.\n\nA user-defined class that implements the [Iterable] interface can\nbe used as the right-hand side of a for-in construct.\n","uri":"dart-sdk/lib/core/iterable.dart","name":"Iterable","id":"Iterable","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nReturns a lazy [Iterable] where each element [:e:] of `this` is replaced\nby the result of [:f(e):].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. The transformed elements will not be cached. Iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"51","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns a lazy [Iterable] with all elements that satisfy the\npredicate [test].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [test] will\nnot be invoked. Iterating will not cache results, and thus iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [test] multiple times on the same element.\n","name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"63","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nExpand each element of this [Iterable] into zero or more elements.\n\nThe resulting Iterable will run through the elements returned\nby [f] for each element of this, in order.\n\nThe returned [Iterable] is lazy, and will call [f] for each element\nof this every time it's iterated.\n","name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"74","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether the collection contains an element equal to [element].\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies the function [f] to each element of this collection.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"84","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.\n\nExample of calculating the sum of an iterable:\n\n    iterable.reduce((value, element) => value + element);\n\n","name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"95","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"95","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"95","kind":"method"},{"comment":"\nReduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value using the provided\nfunction.\n\nUse [initialValue] as the initial value, and the function [combine] to\ncreate a new value from the previous one and an element.\n\nExample of calculating the sum of an iterable:\n\n    iterable.fold(0, (prev, element) => prev + element);\n\n","name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/core/iterable.dart","name":"previousValue","id":"previousValue","line":"111","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"111","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"111","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if every elements of this collection satisify the\npredicate [test]. Returns `false` otherwise.\n","name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"117","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nConverts each element to a [String] and concatenates the strings.\n\nConverts each element to a [String] by calling [Object.toString] on it.\nThen concatenates the strings, optionally separated by the [separator]\nstring.\n","name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"separator","id":"separator","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if one element of this collection satisfies the\npredicate [test]. Returns false otherwise.\n","name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"136","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"List"},"comment":"\nCreates a [List] containing the elements of this [Iterable].\n\nThe elements will be in iteration order. The list is fixed-length\nif [growable] is false.\n","name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Set"},"comment":"\nCreates a [Set] containing the elements of this [Iterable].\n","name":"toSet","id":"toSet0()","line":"149","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] with at most [n] elements.\n\nThe returned [Iterable] may contain fewer than [n] elements, if `this`\ncontains fewer than [n] elements.\n","name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that stops once [test] is not satisfied anymore.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] will start iterating over the elements of `this`.\n\nWhen the iterator encounters an element `e` that does not satisfy [test],\nit discards `e` and moves into the finished state. That is, it will not\nask or provide any more elements.\n","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"187","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips the first [n] elements.\n\nIf `this` has fewer than [n] elements, then the resulting [Iterable] will\nbe empty.\n","name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips elements while [test] is satisfied.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] iterates over all elements of `this`.\n\nAs long as the iterator's elements satisfy [test] they are\ndiscarded. Once an element does not satisfy the [test] the iterator stops\ntesting and uses every later element unconditionally. That is, the elements\nof the returned [Iterable] are the elements of `this` starting from the\nfirst element that does not satisfy [test].\n","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"209","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element that satisfies the given predicate [test].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"240","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element that satisfies the given predicate [test].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"249","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"249","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element that satisfies [test]. If no or more than one\nelement match then a [StateError] is thrown.\n","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"255","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"255","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the [index]th element.\n\nIf `this` has fewer than [index] elements throws a [RangeError].\n\nNote: if `this` does not have a deterministic iteration order then the\nfunction may simply return any element without any iteration if there are\nat least [index] elements in `this`.\n","name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"266","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterator"},"comment":"\nReturns an [Iterator] that iterates over this [Iterable] object.\n","name":"iterator","id":"iterator","line":"39","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of elements in [this].\n\nCounting all elements may be involve running through all elements and can\ntherefore be slow.\n","name":"length","id":"length","line":"157","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there is no element in this collection.\n","name":"isEmpty","id":"isEmpty","line":"162","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there is at least one element in this collection.\n","name":"isNotEmpty","id":"isNotEmpty","line":"167","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element.\n\nIf `this` is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","name":"first","id":"first","line":"217","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element.\n\nIf `this` is empty throws a [StateError].\n","name":"last","id":"last","line":"224","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element in `this`.\n\nIf `this` is empty or has more than one element throws a [StateError].\n","name":"single","id":"single","line":"231","kind":"property"},{"name":"Iterable","id":"Iterable0()","line":"20","kind":"constructor"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nCreate an [Iterable] that generates its elements dynamically.\n\nThe [Iterators] created by the [Iterable] will count from\nzero to [:count - 1:] while iterating, and call [generator]\nwith that index to create the next value.\n\nAs an [Iterable], [:new Iterable.generate(n, generator)):] is equivalent to\n[:const [0, ..., n - 1].map(generator):]\n","name":"Iterable.generate","id":"Iterable.generate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"generator","id":"generator","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/iterable.dart","name":"index","id":"index","line":"32","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"32","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"19","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","uri":"dart-sdk/lib/core/exceptions.dart","name":"Exception","id":"Exception","children":[{"returnType":{"refId":"dart.core/Exception","name":"Exception"},"name":"Exception","id":"Exception1()","children":[{"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"21","kind":"constructor"}],"line":"20","kind":"class"}],"line":"5","kind":"library"},{"comment":"\nDart Web Toolkit Event library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/event.dart","id":"dart_web_toolkit_event","children":[{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link OpenEvent} events.\n\n@param <T> the type being opened\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/open_handler.dart","name":"OpenHandler","id":"OpenHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link OpenEvent} is fired.\n\n@param event the {@link OpenEvent} that was fired\n","name":"onOpen","id":"onOpen1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenEvent","arguments":[{"refId":"dart_web_toolkit_event/OpenHandler/T","name":"T"}],"name":"OpenEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link OpenEvent} events.\n\n@param <T> the type being opened\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_open_handlers.dart","name":"HasOpenHandlers","id":"HasOpenHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link OpenEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addOpenHandler","id":"addOpenHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_event/HasOpenHandlers/T","name":"T"}],"name":"OpenHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"19","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ScrollHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_scroll_handlers.dart","name":"HasScrollHandlers","id":"HasScrollHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ScrollEvent} handler.\n\n@param handler the scroll handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addScrollHandler","id":"addScrollHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by widgets that support vertical scrolling.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_vertical_scrolling.dart","name":"HasVerticalScrolling","id":"HasVerticalScrolling","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the maximum position of vertical scrolling. This is usually the\n<code>scrollHeight - clientHeight</code>.\n\n@return the maximum vertical scroll position\n","name":"getMaximumVerticalScrollPosition","id":"getMaximumVerticalScrollPosition0()","line":"16","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the minimum position of vertical scrolling.\n\n@return the minimum vertical scroll position\n","name":"getMinimumVerticalScrollPosition","id":"getMinimumVerticalScrollPosition0()","line":"23","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the vertical scroll position.\n\n@return the vertical scroll position, in pixels\n","name":"getVerticalScrollPosition","id":"getVerticalScrollPosition0()","line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical scroll position.\n\n@param position the new vertical scroll position, in pixels\n","name":"setVerticalScrollPosition","id":"setVerticalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"37","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by widgets that support horizontal scrolling.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_horizontal_scrolling.dart","name":"HasHorizontalScrolling","id":"HasHorizontalScrolling","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the horizontal scroll position.\n\n@return the horizontal scroll position, in pixels\n","name":"getHorizontalScrollPosition","id":"getHorizontalScrollPosition0()","line":"16","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the maximum position of horizontal scrolling. This is usually the\n<code>scrollWidth - clientWidth</code>.\n\n@return the maximum horizontal scroll position\n","name":"getMaximumHorizontalScrollPosition","id":"getMaximumHorizontalScrollPosition0()","line":"24","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the minimum position of horizontal scrolling.\n\n@return the minimum horizontal scroll position\n","name":"getMinimumHorizontalScrollPosition","id":"getMinimumHorizontalScrollPosition0()","line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal scroll position.\n\n@param position the new horizontal scroll position, in pixels\n","name":"setHorizontalScrollPosition","id":"setHorizontalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"38","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link SelectionEvent} events.\n\n@param <T> the type being selected\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/selection_handler.dart","name":"SelectionHandler","id":"SelectionHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link SelectionEvent} is fired.\n\n@param event the {@link SelectionEvent} that was fired\n","name":"onSelection","id":"onSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent","arguments":[{"refId":"dart_web_toolkit_event/SelectionHandler/T","name":"T"}],"name":"SelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"17","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link SelectionEvent} events.\n\n@param <T> the type being selected\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_selection_handlers.dart","name":"HasSelectionHandlers","id":"HasSelectionHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link SelectionEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers/T","name":"T"}],"name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"19","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link BeforeSelectionEvent} events.\n\n@param <T> the type about to be selected\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/before_selection_handler.dart","name":"BeforeSelectionHandler","id":"BeforeSelectionHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link BeforeSelectionEvent} is fired.\n\n@param event the {@link BeforeSelectionEvent} that was fired\n","name":"onBeforeSelection","id":"onBeforeSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent","arguments":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler/T","name":"T"}],"name":"BeforeSelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ErrorHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_error_handlers.dart","name":"HasErrorHandlers","id":"HasErrorHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link ErrorEvent} handler.\n\n@param handler the error handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addErrorHandler","id":"addErrorHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link LoadHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_load_handlers.dart","name":"HasLoadHandlers","id":"HasLoadHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link LoadEvent} handler.\n\n@param handler the load handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addLoadHandler","id":"addLoadHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text with HTML markup,\nwhich can be set with the Cross-Site-Scripting-safe HTML markup encapsulated\nin a {@link com.google.gwt.safehtml.shared.SafeHtml} object.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_safe_html.dart","name":"HasSafeHtml","id":"HasSafeHtml","line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface for objects that have a direction estimator.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_direction_estimator.dart","name":"HasDirectionEstimator","id":"HasDirectionEstimator","line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchCancelHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_touch_cancel_handlers.dart","name":"HasTouchCancelHandlers","id":"HasTouchCancelHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchCancelEvent} handler.\n\n@param handler the touch cancel handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchEndHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_touch_end_handlers.dart","name":"HasTouchEndHandlers","id":"HasTouchEndHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchEndEvent} handler.\n\n@param handler the touch end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchMoveHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_touch_move_handlers.dart","name":"HasTouchMoveHandlers","id":"HasTouchMoveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchMoveEvent} handler.\n\n@param handler the touch move handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link TouchStartHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_touch_start_handlers.dart","name":"HasTouchStartHandlers","id":"HasTouchStartHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link TouchStartEvent} handler.\n\n@param handler the touch start handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasTouchCancelHandlers","name":"HasTouchCancelHandlers"},{"refId":"dart_web_toolkit_event/HasTouchEndHandlers","name":"HasTouchEndHandlers"},{"refId":"dart_web_toolkit_event/HasTouchMoveHandlers","name":"HasTouchMoveHandlers"},{"refId":"dart_web_toolkit_event/HasTouchStartHandlers","name":"HasTouchStartHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all touch handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all touch events in GWT, new touch event handlers will be added to\nit. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_touch_handlers.dart","name":"HasAllTouchHandlers","id":"HasAllTouchHandlers","line":"15","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseWheelHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_wheel_handlers.dart","name":"HasMouseWheelHandlers","id":"HasMouseWheelHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseWheelEvent} handler.\n\n@param handler the mouse wheel handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseMoveHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_move_handlers.dart","name":"HasMouseMoveHandlers","id":"HasMouseMoveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseMoveEvent} handler.\n\n@param handler the mouse move handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseOverHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_over_handlers.dart","name":"HasMouseOverHandlers","id":"HasMouseOverHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseOverEvent} handler.\n\n@param handler the mouse over handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseOutHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_out_handlers.dart","name":"HasMouseOutHandlers","id":"HasMouseOutHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseOutEvent} handler.\n\n@param handler the mouse out handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseUpHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_up_handlers.dart","name":"HasMouseUpHandlers","id":"HasMouseUpHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseUpEvent} handler.\n\n@param handler the mouse up handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link MouseDownHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_mouse_down_handlers.dart","name":"HasMouseDownHandlers","id":"HasMouseDownHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link MouseDownEvent} handler.\n\n@param handler the mouse down handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasMouseWheelHandlers","name":"HasMouseWheelHandlers"},{"refId":"dart_web_toolkit_event/HasMouseMoveHandlers","name":"HasMouseMoveHandlers"},{"refId":"dart_web_toolkit_event/HasMouseOverHandlers","name":"HasMouseOverHandlers"},{"refId":"dart_web_toolkit_event/HasMouseOutHandlers","name":"HasMouseOutHandlers"},{"refId":"dart_web_toolkit_event/HasMouseUpHandlers","name":"HasMouseUpHandlers"},{"refId":"dart_web_toolkit_event/HasMouseDownHandlers","name":"HasMouseDownHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all mouse handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all mouse events in GWT, new mouse event handlers will be added to\nit. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_mouse_handlers.dart","name":"HasAllMouseHandlers","id":"HasAllMouseHandlers","line":"15","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyPressHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_key_press_handlers.dart","name":"HasKeyPressHandlers","id":"HasKeyPressHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyPressEvent} handler.\n\n@param handler the key press handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyDownHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_key_down_handlers.dart","name":"HasKeyDownHandlers","id":"HasKeyDownHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyDownEvent} handler.\n\n@param handler the key down handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link KeyUpHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_key_up_handlers.dart","name":"HasKeyUpHandlers","id":"HasKeyUpHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link KeyUpEvent} handler.\n\n@param handler the key up handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasKeyPressHandlers","name":"HasKeyPressHandlers"},{"refId":"dart_web_toolkit_event/HasKeyDownHandlers","name":"HasKeyDownHandlers"},{"refId":"dart_web_toolkit_event/HasKeyUpHandlers","name":"HasKeyUpHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nConvenience interface used to implement all key handlers at once.\n\n<p>\nWARNING, PLEASE READ: In the unlikely event that more key handler subtypes\nare added to GWT, this interface will be expanded, so only implement this\ninterface if you wish to have your widget break if a new key event type is\nintroduced.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_key_handlers.dart","name":"HasAllKeyHandlers","id":"HasAllKeyHandlers","line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureEndHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_gesture_end_handlers.dart","name":"HasGestureEndHandlers","id":"HasGestureEndHandlers","line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureChangeHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_gesture_change_handlers.dart","name":"HasGestureChangeHandlers","id":"HasGestureChangeHandlers","line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link GestureStartHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_gesture_start_handlers.dart","name":"HasGestureStartHandlers","id":"HasGestureStartHandlers","line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasGestureEndHandlers","name":"HasGestureEndHandlers"},{"refId":"dart_web_toolkit_event/HasGestureChangeHandlers","name":"HasGestureChangeHandlers"},{"refId":"dart_web_toolkit_event/HasGestureStartHandlers","name":"HasGestureStartHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all gesture handlers defined by\nthe core GWT system.\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all gesture events in GWT, new gesture event handlers will be added\nto it. Therefore, updates can cause breaking API changes.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_gesture_handlers.dart","name":"HasAllGestureHandlers","id":"HasAllGestureHandlers","line":"15","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link BlurHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_blur_handlers.dart","name":"HasBlurHandlers","id":"HasBlurHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link BlurEvent} handler.\n\n@param handler the blur handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addBlurHandler","id":"addBlurHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link FocusHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_focus_handlers.dart","name":"HasFocusHandlers","id":"HasFocusHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link FocusEvent} handler.\n\n@param handler the focus handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addFocusHandler","id":"addFocusHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasBlurHandlers","name":"HasBlurHandlers"},{"refId":"dart_web_toolkit_event/HasFocusHandlers","name":"HasFocusHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all focus handlers defined by\nthe core GWT system.\n\n<p>\nWARNING, PLEASE READ: As this interface is intended for developers who wish\nto handle all focus events in GWT, in the unlikely event that a new focus\nevent is added, this interface will change.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_focus_handlers.dart","name":"HasAllFocusHandlers","id":"HasAllFocusHandlers","line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DoubleClickHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_double_click_handlers.dart","name":"HasDoubleClickHandlers","id":"HasDoubleClickHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DoubleClickEvent} handler.\n\n@param handler the double click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"17","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DropHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drop_handlers.dart","name":"HasDropHandlers","id":"HasDropHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DropEvent} handler.\n\n@param handler the drop handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragStartHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change. </span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_start_handlers.dart","name":"HasDragStartHandlers","id":"HasDragStartHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragStartEvent} handler.\n\n@param handler the drag start handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"}],"line":"15","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragOverHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_over_handlers.dart","name":"HasDragOverHandlers","id":"HasDragOverHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragOverEvent} handler.\n\n@param handler the drag over handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragLeaveHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_handlers.dart","name":"HasDragHandlers","id":"HasDragHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEvent} handler.\n\n@param handler the drag handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"24","kind":"method"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragLeaveHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_leave_handlers.dart","name":"HasDragLeaveHandlers","id":"HasDragLeaveHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragLeaveEvent} handler.\n\n@param handler the drag leave handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragEnterHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_enter_handlers.dart","name":"HasDragEnterHandlers","id":"HasDragEnterHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEnterEvent} handler.\n\n@param handler the drag end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"23","kind":"method"}],"line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link DragEndHandler} instances.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change. </span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_drag_end_handlers.dart","name":"HasDragEndHandlers","id":"HasDragEndHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link DragEndEvent} handler.\n\n@param handler the drag end handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"22","kind":"method"}],"line":"15","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasDropHandlers","name":"HasDropHandlers"},{"refId":"dart_web_toolkit_event/HasDragStartHandlers","name":"HasDragStartHandlers"},{"refId":"dart_web_toolkit_event/HasDragOverHandlers","name":"HasDragOverHandlers"},{"refId":"dart_web_toolkit_event/HasDragHandlers","name":"HasDragHandlers"},{"refId":"dart_web_toolkit_event/HasDragLeaveHandlers","name":"HasDragLeaveHandlers"},{"refId":"dart_web_toolkit_event/HasDragEnterHandlers","name":"HasDragEnterHandlers"},{"refId":"dart_web_toolkit_event/HasDragEndHandlers","name":"HasDragEndHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is a convenience interface that includes all drag and drop handlers\ndefined by the core GWT system.\n\n<p>\n<span style=\"color:red\">Experimental API: This API is still under development\nand is subject to change.\n</span>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_all_drag_and_drop_handlers.dart","name":"HasAllDragAndDropHandlers","id":"HasAllDragAndDropHandlers","line":"16","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link BeforeSelectionEvent} events.\n\n@param <T> the type about to be selected\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_before_selection_handlers.dart","name":"HasBeforeSelectionHandlers","id":"HasBeforeSelectionHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link BeforeSelectionEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers/T","name":"T"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"20","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasValue","arguments":[{"refId":"dart_web_toolkit_event/HasConstrainedValue/T","name":"T"}],"name":"HasValue"},"comment":"\nImplemented by widgets that pick from a set of values.\n<p>\nIt is up to the implementation to decide (and document) how to behave when\n{@link #setValue(Object)} is called with a value that is not in the\nacceptable set. For example, throwing an {@link IllegalArgumentException}, or\nquietly adding the value to the acceptable set, are both reasonable choices.\n\n@param <T> the type of value\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_constrained_value.dart","name":"HasConstrainedValue","id":"HasConstrainedValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the acceptable values.\n\n@param values the acceptible values\n","name":"setAcceptableValues","id":"setAcceptableValues1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_event/HasConstrainedValue/T","name":"T"}],"name":"Iterable"},"name":"values","id":"values","kind":"param"}],"line":"23","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"16","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","arguments":[{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"}],"name":"HasValueChangeHandlers"},{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"}],"name":"TakesValue"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtends {@link TakesValue} to allow the value to be pulled back out, and to\nthrow {@link com.google.gwt.event.logical.shared.ValueChangeEvent\nValueChangeEvent} events.\n<p>\nAn object that implements this interface should be a user input widget, where\nthe user and programmer can both set and get the object's value. It is\nintended to provide a unified interface to widgets with \"atomic\" values, like\nStrings and Dates.\n\n@param <T> the type of value\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_value.dart","name":"HasValue","id":"HasValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HasValue/T","name":"T"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"36","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"18","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by objects that hold a value.\n\n@param <V> value type\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/takes_value.dart","name":"TakesValue","id":"TakesValue","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_event/TakesValue/V","name":"V"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/TakesValue/V","name":"V"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"30","kind":"method"},{"name":"V","id":"V","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface provides registration for\n{@link ChangeHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_change_handlers.dart","name":"HasChangeHandlers","id":"HasChangeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ChangeEvent} handler.\n\n@param handler the change handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addChangeHandler","id":"addChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface provides registration for\n{@link ClickHandler} instances.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_click_handlers.dart","name":"HasClickHandlers","id":"HasClickHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ClickEvent} handler.\n\n@param handler the click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler for {@link ResizeEvent} events.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/resize_handler.dart","name":"ResizeHandler","id":"ResizeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired when the widget is resized.\n\n@param event the event\n","name":"onResize","id":"onResize1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeEvent","name":"ResizeEvent"},"name":"event","id":"event","kind":"param"}],"line":"15","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link ResizeEvent} events.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_resize_handlers.dart","name":"HasResizeHandlers","id":"HasResizeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ResizeEvent} handler.\n\n@param handler the handler\n@return the handler registration\n","name":"addResizeHandler","id":"addResizeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"18","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface can receive keyboard focus.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/focusable.dart","name":"Focusable","id":"Focusable","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's 'access key'. This key is used (in conjunction with a\nbrowser-specific modifier key) to automatically focus the widget.\n\n@param key the widget's access key\n","name":"accessKey=","id":"accessKey=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nExplicitly focus/unfocus this widget. Only one widget can have focus at a\ntime, and the widget that does will receive all keyboard events.\n\n@param focused whether this widget should take focus or release it\n","name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's position in the tab index. If more than one widget has\nthe same tab index, each such widget will receive focus in an arbitrary\norder. Setting the tab index to <code>-1</code> will cause this widget to\nbe removed from the tab order.\n\n@param index the widget's tab index\n","name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"42","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"16","kind":"property"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA {@link Widget} that uses an animation should implement this class so users\ncan enable or disable animations.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_animation.dart","name":"HasAnimation","id":"HasAnimation","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if animations are enabled, false if not.\n","name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable animations.\n\n@param enable true to enable, false to disable\n","name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"22","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface can be put in an \"enabled\"\nor \"disabled\" state.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_enabled.dart","name":"HasEnabled","id":"HasEnabled","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this widget is enabled.\n\n@param enabled <code>true</code> to enable the widget, <code>false</code>\n         to disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"23","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the widget is enabled, false if not.\n","name":"enabled","id":"enabled","line":"15","kind":"property"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has a 'name' associated with it,\nallowing it to be used with {@link FormPanel}. This property is the name\nthat will be associated with the widget when its form is submitted.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_name.dart","name":"HasName","id":"HasName","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's name.\n\n@param name the widget's new name\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"18","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the widget's name.\n\n@return the widget's name\n","name":"name","id":"name","line":"25","kind":"property"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text, which can be set and\nretrieved using these methods.\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nThe body of an XML element representing a widget that implements\nHasText will be parsed as text and be used in a call to its\n{@link #setText(String)} method. HasText elements must only\ncontain text. (This behavior is overridden for {@link HasHTML}\nwidgets.)\n\n<p>For example:<pre>\n&lt;g:Label>Hello.&lt;/g:Label>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_text.dart","name":"HasText","id":"HasText","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's text.\n\n@param text the object's new text\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"36","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's text.\n\n@return the object's text\n","name":"text","id":"text","line":"29","kind":"property"}],"line":"22","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasText","name":"HasText"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains text, which can be set and\nretrieved using these methods. The object's text can be set either as HTML or\nas text.\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nThe body of an XML element representing a widget that implements\nHasHTML will be parsed as HTML and be used in a call to its\n{@link #setHTML(String)} method.\n\n<p>For example:<pre>\n&lt;g:PushButton>&lt;b>Click me!&lt;/b>&lt;/g:PushButton>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_html.dart","name":"HasHtml","id":"HasHtml","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's contents via HTML. Use care when setting an object's\nHTML; it is an easy way to expose script-based security problems. Consider\nusing {@link #setText(String)} whenever possible.\n\n@param html the object's new HTML\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"37","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's contents as HTML.\n\n@return the object's HTML\n","name":"html","id":"html","line":"28","kind":"property"}],"line":"21","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has a 'word-wrap' property that can\nbe manipulated using these methods.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_word_wrap.dart","name":"HasWordWrap","id":"HasWordWrap","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether word-wrapping is enabled.\n\n@param wrap <code>true</code> to enable word-wrapping.\n","name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"24","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether word-wrapping is enabled.\n\n@return <code>true</code> if word-wrapping is enabled.\n","name":"wordWrap","id":"wordWrap","line":"17","kind":"property"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by objects that have the visibility trait.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_visibility.dart","name":"HasVisibility","id":"HasVisibility","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this object is visible.\n\n@param visible <code>true</code> to show the object, <code>false</code> to\n         hide it\n","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"28","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this object is visible. Note that this does not\nnecessarily take into account whether or not the receiver's parent is\nvisible, or even if it is attached to the\nDocument. The default implementation of this trait in UIObject is\nbased on the value of a dom element's style object's display attribute.\n\n@return <code>true</code> if the object is visible\n","name":"visible","id":"visible","line":"20","kind":"property"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link ValueChangeEvent} events.\n\n@param <T> the value about to be changed\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_value_change_handlers.dart","name":"HasValueChangeHandlers","id":"HasValueChangeHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ValueChangeEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_event/HasValueChangeHandlers/T","name":"T"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"20","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"12","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_attach_handlers.dart","name":"HasAttachHandlers","id":"HasAttachHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an {@link AttachEvent} handler.\n\n@param handler the handler\n@return the handler registration\n","name":"addAttachHandler","id":"addAttachHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether or not the receiver is attached to the\n{@link com.google.gwt.dom.client.Document Document}'s\n{@link com.google.gwt.dom.client.BodyElement BodyElement}.\n\n@return true if attached, false otherwise\n","name":"isAttached","id":"isAttached0()","line":"22","kind":"method"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface has a collection of event handlers\nassociated with it.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/has_handlers.dart","name":"HasHandlers","id":"HasHandlers","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the given event to the handlers listening to the event's type.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@param event the event\n","name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"22","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nImplemented by objects that handle {@link AttachEvent}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/value_change_handler.dart","name":"ValueChangeHandler","id":"ValueChangeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link ValueChangeEvent} is fired.\n\n@param event the {@link ValueChangeEvent} that was fired\n","name":"onValueChange","id":"onValueChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent","arguments":[{"refId":"dart_web_toolkit_event/ValueChangeHandler/T","name":"T"}],"name":"ValueChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"16","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"comment":"\nHandler interface for {@link CloseEvent} events.\n\n@param <T> the type being closed\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/close_handler.dart","name":"CloseHandler","id":"CloseHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link CloseEvent} is fired.\n\n@param event the {@link CloseEvent} that was fired\n","name":"onClose","id":"onClose1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseEvent","arguments":[{"refId":"dart_web_toolkit_event/CloseHandler/T","name":"T"}],"name":"CloseEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasHandlers","name":"HasHandlers"},"comment":"\nA widget that implements this interface is a public source of\n{@link CloseEvent} events.\n\n@param <T> the type being closed\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/close_event.dart","name":"HasCloseHandlers","id":"HasCloseHandlers","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link CloseEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_event/HasCloseHandlers/T","name":"T"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"75","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"68","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nMarker interface for event handlers. All stock GWT Widget and dom event\nhandlers extend [EventHandler].\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/event_handler.dart","name":"EventHandler","id":"EventHandler","line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nReceives low-level browser events. The implementer registers for DOM events\nusing [DOM#setEventListener(Element, EventListener)].\n\nOnly subclasses of Widget should attempt to listen to browser events.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/event_listener.dart","name":"EventListener","id":"EventListener","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nFired whenever a browser event is received.\n\n@param event the event received\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"19","kind":"method"}],"line":"12","kind":"class"},{"interfaces":[{"refId":"dart.core/Exception","name":"Exception"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA [Exception] that collects a [Set] of child\n[Exception]s together. Typically thrown after a loop, with all of the\nexceptions thrown during that loop, but delayed so that the loop finishes\nexecuting.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/event/umbrella_exception.dart","name":"UmbrellaException","id":"UmbrellaException","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"25","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"makeMessage","id":"makeMessage1()","children":[{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/Exception","name":"Exception"},"isStatic":true,"name":"makeCause","id":"makeCause1()","children":[{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","kind":"param"}],"line":"43","kind":"method"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","line":"23","kind":"property"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"comment":"\nA message describing the format error.\n","name":"_causes","isPrivate":true,"id":"_causes","line":"17","kind":"variable"},{"name":"UmbrellaException","id":"UmbrellaException1()","children":[{"initializedField":{"refId":"dart_web_toolkit_event/UmbrellaException/_causes","name":"_causes"},"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"_causes","isPrivate":true,"id":"_causes","kind":"param"}],"line":"19","kind":"constructor"}],"line":"12","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Event library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/i18n.dart","id":"dart_web_toolkit_i18n","children":[{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"},{"refId":"dart_web_toolkit_i18n/HasDirectionalText","name":"HasDirectionalText"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains html that has a direction.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_directional_html.dart","name":"HasDirectionalHtml","id":"HasDirectionalHtml","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this object's html, also declaring its direction.\n\n@param html the object's new html\n@param dir the html's direction\n","name":"setHtml","id":"setHtml2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"17","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_i18n/HasDirectionalText","name":"HasDirectionalText"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn object that implements this interface contains html that has a direction.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_directional_safe_html.dart","name":"HasDirectionalSafeHtml","id":"HasDirectionalSafeHtml","line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_event/HasText","name":"HasText"},"comment":"\nAn object that implements this interface contains text that has a direction.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_directional_text.dart","name":"HasDirectionalText","id":"HasDirectionalText","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"comment":"\nGets the direction of this object's text.\n\n@return the direction of this object's text\n","name":"getTextDirection","id":"getTextDirection0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this object's text, also declaring its direction.\n\n@param text the object's new text\n@param dir the text's direction\n","name":"setText","id":"setText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"24","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasKeyUpHandlers","name":"HasKeyUpHandlers"},{"refId":"dart_web_toolkit_i18n/HasDirection","name":"HasDirection"},{"refId":"dart_web_toolkit_event/HasText","name":"HasText"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe interface an object must implement in order to add an\nAutoDirectionHandler to it.\n\nTODO(tomerigo): add Paste and Input events once they're available in GWT.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/auto_direction_handler.dart","name":"AutoDirectionHandlerTarget","id":"AutoDirectionHandlerTarget","line":"140","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_i18n/HasHorizontalAlignment","name":"HasHorizontalAlignment"},"comment":"\nA widget that implements this interface can be configured to be aligned\naccording to its contents' direction, in addition to the static alignment\noptions offered by {@link HasHorizontalAlignment}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_auto_horizontal_alignment.dart","name":"HasAutoHorizontalAlignment","id":"HasAutoHorizontalAlignment","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"comment":"\nGets the horizontal auto-alignment setting. This may be one of the\nauto-alignment values above that depend on content direction (e.g.\n{@link HasAutoHorizontalAlignment#ALIGN_CONTENT_START}), or one of the\n\"static\" {@link HasHorizontalAlignment.HorizontalAlignmentConstant}\nalignment values (e.g. {@link HasHorizontalAlignment#ALIGN_LOCALE_START}).\nIt may be set by either {@code setAutoHorizontalAlignment} or {@code\nHasHorizontalAlignment#setHorizontalAlignment}. The default is null,\nindicating that no specific horizontal alignment has been set, allowing it\nto be determined by the usual HTML and CSS mechanisms.\n\n@return the current automatic horizontal alignment policy.\n","name":"getAutoHorizontalAlignment","id":"getAutoHorizontalAlignment0()","line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal alignment, allowing in addition to the \"static\"\n{@link HasHorizontalAlignment.HorizontalAlignmentConstant} values, the\n\"automatic\" {@link HasHorizontalAlignment.AutoHorizontalAlignmentConstant}\nvalues that depend on the content direction. Determines the values returned\nby both {@link #getAutoHorizontalAlignment} and\n{@link HasHorizontalAlignment#getHorizontalAlignment()}.\n<p> For the {@code ALIGN_CONTENT_START} and {@code ALIGN_CONTENT_END}\nvalues, sets the horizontal alignment (including the value of {@code\nHasHorizontalAlignment#getHorizontalAlignment()}) to the start or end edge\nof the current content's direction, respectively, and continues to\nautomatically update it whenever the content direction changes.\n<p> For other values, operates like {@link #setHorizontalAlignment}.\n<p> For {@code null}, the horizontal alignment is cleared, allowing it to\nbe determined by the standard HTML mechanisms such as inheritance and CSS\nrules.\n@see HasHorizontalAlignment\n\n@param autoHorizontalAlignment the new automatic horizontal alignment\n       policy\n","name":"setAutoHorizontalAlignment","id":"setAutoHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"name":"autoHorizontalAlignment","id":"autoHorizontalAlignment","kind":"param"}],"line":"62","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned left for LTR\ncontent, right for RTL content, and if the content's direction is DEFAULT,\nlike {@link #ALIGN_LOCALE_START}.\n","name":"ALIGN_CONTENT_START","id":"ALIGN_CONTENT_START","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned right for LTR\ncontent, left for RTL content, and if the content's direction is DEFAULT,\nlike {@link #ALIGN_LOCALE_END}.\n","name":"ALIGN_CONTENT_END","id":"ALIGN_CONTENT_END","line":"24","kind":"variable"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nCharacteristic interface which indicates that a widget has an associated\nvertical alignment.\n\n<h3>Use in UiBinder Templates</h3>\n\n<p>\nThe names of the static members of {@link VerticalAlignmentConstant}, as well\nas simple alignment names (<code>top</code>, <code>middle</code>,\n<code>bottom</code>), can be used as values for a\n<code>verticalAlignment</code> attribute of any widget that implements this\ninterface. (In fact, this will work for any widget method that takes a single\nVerticalAlignmentConstant value.)\n<p>\nFor example,\n\n<pre>\n&lt;g:VerticalPanel verticalAlignment='ALIGN_BOTTOM' />\n&lt;g:VerticalPanel verticalAlignment='bottom' />\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_vertical_alignment.dart","name":"HasVerticalAlignment","id":"HasVerticalAlignment","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"comment":"\nGets the vertical alignment.\n\n@return the current vertical alignment.\n","name":"getVerticalAlignment","id":"getVerticalAlignment0()","line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical alignment.\n\n@param align the vertical alignment (\n         {@link HasVerticalAlignment#ALIGN_TOP},\n         {@link HasVerticalAlignment#ALIGN_MIDDLE}, or\n         {@link HasVerticalAlignment#ALIGN_BOTTOM}).\n","name":"setVerticalAlignment","id":"setVerticalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"59","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned to the bottom.\n","name":"ALIGN_BOTTOM","id":"ALIGN_BOTTOM","line":"32","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned in the middle.\n","name":"ALIGN_MIDDLE","id":"ALIGN_MIDDLE","line":"37","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned to the top.\n","name":"ALIGN_TOP","id":"ALIGN_TOP","line":"42","kind":"variable"}],"line":"27","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nCharacteristic interface which indicates that a widget can be aligned\nhorizontally.\n\n<h3>Use in UiBinder Templates</h3>\n\n<p>\nThe names of the static members of {@link HorizontalAlignmentConstant}, as\nwell as simple alignment names (<code>left</code>, <code>center</code>,\n<code>right</code>, <code>justify</code>), can be used as values for a\n<code>horizontalAlignment</code> attribute of any widget that implements this\ninterface. (In fact, this will work for any widget method that takes a single\nHorizontalAlignmentConstant value.)\n<p>\nFor example,\n\n<pre>\n&lt;g:Label horizontalAlignment='ALIGN_RIGHT'>Hi there.&lt;/g:Label>\n&lt;g:Label horizontalAlignment='right'>Hi there.&lt;/g:Label>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_horizontal_alignment.dart","name":"HasHorizontalAlignment","id":"HasHorizontalAlignment","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"comment":"\nGets the horizontal alignment.\n\n@return the current horizontal alignment (\n        {@link HasHorizontalAlignment#ALIGN_LEFT},\n        {@link HasHorizontalAlignment#ALIGN_CENTER},\n        {@link HasHorizontalAlignment#ALIGN_RIGHT},\n        {@link HasHorizontalAlignment#ALIGN_JUSTIFY}, or\n        null).\n","name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal alignment.\n<p> Use {@code null} to clear horizontal alignment, allowing it to be\ndetermined by the standard HTML mechanisms such as inheritance and CSS\nrules.\n\n@param align the horizontal alignment (\n        {@link HasHorizontalAlignment#ALIGN_LEFT},\n        {@link HasHorizontalAlignment#ALIGN_CENTER},\n        {@link HasHorizontalAlignment#ALIGN_RIGHT},\n        {@link HasHorizontalAlignment#ALIGN_JUSTIFY},\n        {@link HasHorizontalAlignment#ALIGN_LOCALE_START}, or\n        {@link HasHorizontalAlignment#ALIGN_LOCALE_END}).\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"93","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned in the center.\n","name":"ALIGN_CENTER","id":"ALIGN_CENTER","line":"31","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned as justify.\n","name":"ALIGN_JUSTIFY","id":"ALIGN_JUSTIFY","line":"36","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned to the left.\n","name":"ALIGN_LEFT","id":"ALIGN_LEFT","line":"41","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSpecifies that the widget's contents should be aligned to the right.\n","name":"ALIGN_RIGHT","id":"ALIGN_RIGHT","line":"46","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nIn a RTL layout, specifies that the widget's contents should be aligned to\nthe right. In a LTR layout, specifies that the widget's constants should be\naligned to the left.\n","name":"ALIGN_LOCALE_START","id":"ALIGN_LOCALE_START","line":"53","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nIn a RTL layout, specifies that the widget's contents should be aligned to\nthe left. In a LTR layout, specifies that the widget's constants should be\naligned to the right.\n","name":"ALIGN_LOCALE_END","id":"ALIGN_LOCALE_END","line":"60","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"isStatic":true,"comment":"\nSynonym of {@link #ALIGN_LOCALE_START}.\n","name":"ALIGN_DEFAULT","id":"ALIGN_DEFAULT","line":"65","kind":"variable"}],"line":"27","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_i18n/HasVerticalAlignment","name":"HasVerticalAlignment"},{"refId":"dart_web_toolkit_i18n/HasHorizontalAlignment","name":"HasHorizontalAlignment"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has an intrinsic alignment which\ncan be manipulated using these methods and constants.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_alignment.dart","name":"HasAlignment","id":"HasAlignment","line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface has the ability to override\nthe document directionality for its root element.\n\nWidgets that implement this interface should be leaf widgets. More\nspecifically, they should not implement the\n{@link com.google.gwt.user.client.ui.HasWidgets} interface.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/i18n/has_direction.dart","name":"HasDirection","id":"HasDirection","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the directionality for a widget.\n\n@param value <code>RTL</code> if the directionality should be set to right-to-left,\n                 <code>LTR</code> if the directionality should be set to left-to-right\n                 <code>DEFAULT</code> if the directionality should not be explicitly set\n","name":"direction=","id":"direction=1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"value","id":"value","kind":"param"}],"line":"23","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"comment":"\nGets the directionality of the widget.\n\n@return <code>RTL</code> if the directionality is right-to-left,\n        <code>LTR</code> if the directionality is left-to-right, or\n        <code>DEFAULT</code> if the directionality is not explicitly specified\n","name":"direction","id":"direction","line":"32","kind":"property"}],"line":"14","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Util library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/util.dart","id":"dart_web_toolkit_util","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nEmulation of Java Enum class.\n\nExample:\n\nclass Meter<int> extends Enum<int> {\n\n const Meter(int val) : super (val);\n\n static const Meter HIGH = const Meter(100);\n static const Meter MIDDLE = const Meter(50);\n static const Meter LOW = const Meter(10);\n}\n\nand usage:\n\nassert (Meter.HIGH, 100);\nassert (Meter.HIGH is Meter);\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/util/enum.dart","name":"Enum","id":"Enum","children":[{"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"name":"value","id":"value","line":"31","kind":"property"},{"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"isFinal":true,"name":"_value","isPrivate":true,"id":"_value","line":"27","kind":"variable"},{"name":"Enum","id":"Enum1()","children":[{"initializedField":{"refId":"dart_web_toolkit_util/Enum/_value","name":"_value"},"ref":{"refId":"dart_web_toolkit_util/Enum/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","kind":"param"}],"line":"29","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"25","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_util/RemoveIterator/E","name":"E"}],"name":"Iterator"},"comment":"\nAn iterator over a collection supports remove elements.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/util/remove_iterator.dart","name":"RemoveIterator","id":"RemoveIterator","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves from the underlying collection the last element returned\nby this iterator (optional operation).  This method can be called\nonly once per call to {@link #next}.  The behavior of an iterator\nis unspecified if the underlying collection is modified while the\niteration is in progress in any way other than by calling this\nmethod.\n\n@throws UnsupportedOperationException if the {@code remove}\n        operation is not supported by this iterator\n\n@throws IllegalStateException if the {@code next} method has not\n        yet been called, or the {@code remove} method has already\n        been called after the last call to the {@code next}\n        method\n","name":"remove","id":"remove0()","line":"26","kind":"method"},{"name":"E","id":"E","kind":"typeparam"}],"line":"9","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Animation library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/animation.dart","id":"dart_web_toolkit_animation","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSpecifies that a panel can animate between layouts.\n\n<p>\nThe normal use pattern is to set all childrens' positions, then to call\n{@link #animate(int)} to move them to their new positions over some period\nof time.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/animation/animated_layout.dart","name":"AnimatedLayout","id":"AnimatedLayout","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nLayout children, animating over the specified period of time.\n\n<p>\nThis method provides a callback that will be informed of animation updates.\nThis can be used to create more complex animation effects.\n</p>\n\n@param duration the animation duration, in milliseconds\n@param callback the animation callback\n","name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nLayout children immediately.\n\n<p>\nThis is not normally necessary, unless you want to update child widgets'\npositions explicitly to create a starting point for a subsequent call to\n{@link #animate(int)}.\n</p>\n\n@see #animate(int)\n@see #animate(int, Layout.AnimationCallback)\n","name":"forceLayout","id":"forceLayout0()","line":"42","kind":"method"}],"line":"15","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn {@link Animation} is a continuous event that updates progressively over\ntime at a non-fixed frame rate.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/animation/animation.dart","name":"Animation","id":"Animation","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nImmediately cancel this animation. If the animation is running or is\nscheduled to run, {@link #onCancel()} will be called.\n","name":"cancel","id":"cancel0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRun this animation at the given startTime. If the startTime has already\npassed, the animation will run synchronously as if it started at the\nspecified start time. If the animation is already running, it will be\ncanceled first.\n<p>\nIf the element is not <code>null</code>, the {@link #onUpdate(double)}\nmethod might be called only if the element may be visible (generally left\nat the appreciation of the browser). Otherwise, it will be called\nunconditionally.\n\n@param duration the duration of the animation in milliseconds\n@param startTime the synchronized start time in milliseconds\n@param element the element that visually bounds the entire animation\n","name":"run","id":"run3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"null","name":"startTime","id":"startTime","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"}],"line":"158","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nInterpolate the linear progress into a more natural easing function.\n\nDepending on the {@link Animation}, the return value of this method can be\nless than 0.0 or greater than 1.0.\n\n@param progress the linear progress, between 0.0 and 1.0\n@return the interpolated progress\n","name":"interpolate","id":"interpolate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled immediately after the animation is canceled. The default\nimplementation of this method calls {@link #onComplete()} only if the\nanimation has actually started running.\n","name":"onCancel","id":"onCancel0()","line":"196","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled immediately after the animation completes.\n","name":"onComplete","id":"onComplete0()","line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled immediately before the animation starts.\n","name":"onStart","id":"onStart0()","line":"212","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the animation should be updated.\n\nThe value of progress is between 0.0 and 1.0 (inclusive) (unless you\noverride the {@link #interpolate(double)} method to provide a wider range\nof values). You can override {@link #onStart()} and {@link #onComplete()}\nto perform setup and tear down procedures.\n\n@param progress a double, normally between 0.0 and 1.0 (inclusive)\n","name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck if the specified run ID is still being run.\n\n@param curRunId the current run ID to check\n@return true if running, false if canceled or restarted\n","name":"isRunning","id":"isRunning1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"curRunId","id":"curRunId","kind":"param"}],"line":"234","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nUpdate the {@link Animation}.\n\n@param curTime the current time\n@return true if the animation should run again, false if it is complete\n","name":"update","id":"update1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"curTime","id":"curTime","kind":"param"}],"line":"244","kind":"method"},{"ref":{"refId":"dart_web_toolkit_animation/AnimationCallback","name":"AnimationCallback"},"name":"callback","id":"callback","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe duration of the {@link Animation} in milliseconds.\n","name":"duration","id":"duration","line":"18","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe element being animated.\n","name":"element","id":"element","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the animation running, even if it hasn't started yet.\n","name":"running","id":"running","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHas the {@link Animation} actually started.\n","name":"isStarted","id":"isStarted","line":"33","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_animation/AnimationHandle","name":"AnimationHandle"},"comment":"\nThe ID of the pending animation request.\n","name":"requestHandle","id":"requestHandle","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe unique ID of the current run. Used to handle cases where an animation\nis restarted within an execution block.\n","name":"runId","id":"runId","line":"44","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_animation/AnimationScheduler","name":"AnimationScheduler"},"name":"scheduler","id":"scheduler","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe start time of the {@link Animation}.\n","name":"startTime","id":"startTime","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDid the animation start before {@link #cancel()} was called.\n","name":"wasStarted","id":"wasStarted","line":"56","kind":"variable"},{"comment":"\nConstruct a new {@link AnimationScheduler} using the specified scheduler to\nsheduler request frames.\n\n@param scheduler an {@link AnimationScheduler} instance\n","name":"Animation","id":"Animation1()","children":[{"ref":{"refId":"dart_web_toolkit_animation/AnimationScheduler","name":"AnimationScheduler"},"isOptional":true,"defaultValue":"null","name":"scheduler","id":"scheduler","kind":"param"}],"line":"64","kind":"constructor"}],"line":"10","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Resource library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/resource.dart","id":"dart_web_toolkit_resource","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSpecifies the classpath location of the resource or resources associated\nwith the {@link ResourcePrototype}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/resource/client_bundle.dart","name":"Source","id":"Source","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"value","id":"value0()","line":"23","kind":"method"}],"line":"22","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe use of this interface is similar to that of ImageBundle. Declare\nno-argument functions that return subclasses of {@link ResourcePrototype},\nwhich are annotated with {@link ClientBundle.Source} annotations specifying\nthe classpath location of the resource to include in the output. At runtime,\nthe functions will return an object that can be used to access the data in\nthe original resource.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/resource/client_bundle.dart","name":"ClientBundle","id":"ClientBundle","children":[{"ref":{"refId":"dart_web_toolkit_resource/Source","name":"Source"},"name":"source","id":"source","line":"15","kind":"property"}],"line":"14","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Layout library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/layout.dart","id":"dart_web_toolkit_layout","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nCallback interface used by {@link Layout#layout(int, AnimationCallback)}\nto provide updates on animation progress.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/layout/layout.dart","name":"LayoutAnimationCallback","id":"LayoutAnimationCallback","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled immediately after the animation is complete, and the entire layout\nis in its final state.\n","name":"onAnimationComplete","id":"onAnimationComplete0()","line":"386","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled at each step of the animation, for each layer being laid out.\n\n@param layer the layer being laid out\n","name":"onLayout","id":"onLayout2()","children":[{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"393","kind":"method"}],"line":"380","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Editor library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/editor.dart","id":"dart_web_toolkit_editor","children":[{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_editor/Editor","arguments":[{"refId":"dart_web_toolkit_editor/HasEditorDelegate/T","name":"T"}],"name":"Editor"},"comment":"\nIndicates that an Editor requires an EditorDelegate.\n\n@param <T> the type of object the EditorDelegate operates on\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/editor/has_editor_delegate.dart","name":"HasEditorDelegate","id":"HasEditorDelegate","children":[{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDescribes an editor whose behavior is not altered by the value being\ndisplayed.\n<p>\nEditors, which may be classes or interfaces, may expose their sub-editors in\none or more of the following ways:\n<ul>\n<li>An instance field with at least package visibility whose name exactly is\nthe property that will be edited or <code><em>propertyName</em>Editor</code>.\n</li>\n<li>A no-arg method with at least package visibility whose name exactly is\nthe property that will be edited or <code><em>propertyName</em>Editor</code>.\n</li>\n<li>The {@link Path} annotation may be used on the field or accessor method\nto specify a dotted path or to bypass the implicit naming convention.</li>\n<li>Sub-Editors may be null. In this case, the Editor framework will ignore\nthese sub-editors.</li>\n</ul>\nAny exposed field or method whose type is Editor may also use the\n{@link IsEditor} interface to provide an Editor instance. This allows view\nobjects to be written that can be attached to an Editor hierarchy without the\nview directly implementing an Editor interface.\n\n@param <T> the type of object the editor displays.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/editor/editor.dart","name":"Editor","id":"Editor","children":[{"name":"T","id":"T","kind":"typeparam"}],"line":"31","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor/T","name":"T"}],"name":"TakesValue"},{"refId":"dart_web_toolkit_editor/Editor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor/T","name":"T"}],"name":"Editor"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUsed to edit non-object or immutable values. The Editor framework will not\ndescend into a LeafValueEditor.\n\n@param <T> The type of primitive value\n@see com.google.gwt.editor.client.adapters.SimpleEditor\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/editor/leaf_value_editor.dart","name":"LeafValueEditor","id":"LeafValueEditor","children":[{"name":"T","id":"T","kind":"typeparam"}],"line":"13","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtended by view objects that wish to participate in an Editor hierarchy, but\nthat do not implement the {@link Editor} contract directly. The primary\nadvantage of the IsEditor interface is that is allows composition of behavior\nwithout the need to implement delegate methods for every interface\nimplemented by the common editor logic.\n<p>\nFor example, an editor Widget that supports adding and removing elements from\na list might wish to re-use the provided\n{@link com.google.gwt.editor.client.adapters.ListEditor ListEditor}\ncontroller. It might be roughly built as:\n\n<pre>\nclass MyListEditor extends Composite implements IsEditor&lt;ListEditor&lt;Foo, FooEditor>> {\n  private ListEditor&lt;Foo, FooEditor> controller = ListEditor.of(new FooEditorSource());\n  public ListEditor&lt;Foo, FooEditor> asEditor() {return controller;}\n  void onAddButtonClicked() { controller.getList().add(new Foo()); }\n  void onClearButtonClicked() { controller.getList().clear(); }\n}\n</pre>\nBy implementing only the one <code>asEditor()</code> method, the\n<code>MyListEditor</code> type is able to incorporate the\n<code>ListEditor</code> behavior without needing to write delegate methods\nfor every method in <code>ListEditor</code>.\n<p>\nIt is legal for a type to implement both Editor and IsEditor. In this case,\nthe Editor returned from {@link #asEditor()} will be a co-Editor of the\nIsEditor instance.\n\n@param <E> the type of Editor the view object will provide\n@see CompositeEditor\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/editor/is_editor.dart","name":"IsEditor","id":"IsEditor","children":[{"name":"E","id":"E","kind":"typeparam"}],"line":"38","kind":"class"}],"line":"7","kind":"library"},{"comment":"\nDart Web Toolkit Scheduler library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/scheduler.dart","id":"dart_web_toolkit_scheduler","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nGeneral-purpose Command interface.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/scheduler/scheduler.dart","name":"ScheduledCommand","id":"ScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInvokes the command.\n","name":"execute","id":"execute0()","line":"135","kind":"method"}],"line":"131","kind":"class"}],"line":"7","kind":"library"}],"comment":"\nDart Web Toolkit UI library.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/ui.dart","id":"dart_web_toolkit_ui","children":[{"superclass":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"comment":"\nImplementation of {@link AbstractImagePrototype} for a clipped image. This\nclass is used internally by the image bundle generator and is not intended\nfor general use. It is subject to change without warning.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/clipped_image_prototype.dart","name":"ClippedImagePrototype","id":"ClippedImagePrototype","children":[{"returnType":{"refId":"void","name":"void"},"name":"applyTo","id":"applyTo1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"applyToImageElement","id":"applyToImageElement1()","children":[{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"imageElement","id":"imageElement","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"createElement","id":"createElement0()","line":"34","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"createImage","id":"createImage0()","line":"39","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"getSafeHtml","id":"getSafeHtml0()","line":"44","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ClippedImageImpl","name":"ClippedImageImpl"},"isFinal":true,"isStatic":true,"name":"_impl","isPrivate":true,"id":"_impl","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"height","id":"height","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"left","id":"left","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"top","id":"top","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isFinal":true,"name":"url","id":"url","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"width","id":"width","line":"19","kind":"variable"},{"name":"ClippedImagePrototype","id":"ClippedImagePrototype5()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/ClippedImagePrototype/url","name":"url"},"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ClippedImagePrototype/left","name":"left"},"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ClippedImagePrototype/top","name":"top"},"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ClippedImagePrototype/width","name":"width"},"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ClippedImagePrototype/height","name":"height"},"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"21","kind":"constructor"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation class used by {@link com.google.gwt.user.client.ui.PopupPanel}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/popup_impl.dart","name":"PopupImpl","id":"PopupImpl","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"createElement","id":"createElement0()","line":"11","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContainerElement","id":"getContainerElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getStyleElement","id":"getStyleElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n@param popup the popup\n","name":"onHide","id":"onHide1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n@param popup the popup\n","name":"onShow","id":"onShow1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n@param popup the popup\n@param rect the clip rect\n","name":"setClip","id":"setClip2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"rect","id":"rect","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n@param popup the popup\n@param visible true if visible\n","name":"setVisible","id":"setVisible2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"popup","id":"popup","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"47","kind":"method"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation of scrolling behavior.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/scroll_impl.dart","name":"ScrollImpl","id":"ScrollImpl","children":[{"returnType":{"refId":"dart_web_toolkit_ui/ScrollImpl","name":"ScrollImpl"},"isStatic":true,"comment":"\nGet the singleton instance of {@link ScrollImpl}.\n","name":"get","id":"get0()","line":"15","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the maximum horizontal scroll position.\n\n@param scrollable the scrollable element\n@return the maximum scroll position\n","name":"getMaximumHorizontalScrollPosition","id":"getMaximumHorizontalScrollPosition1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollable","id":"scrollable","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the minimum horizontal scroll position.\n\n@param scrollable the scrollable element\n@return the minimum scroll position\n","name":"getMinimumHorizontalScrollPosition","id":"getMinimumHorizontalScrollPosition1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollable","id":"scrollable","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize a scrollable element.\n\n@param scrollable the scrollable element\n@param container the container\n","name":"initialize","id":"initialize2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollable","id":"scrollable","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"container","id":"container","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck if the specified element has an RTL direction. We can't base this on\nthe current locale because the user can modify the direction at the DOM\nlevel.\n\n@param scrollable the scrollable element\n@return true if the direction is RTL, false if LTR\n","name":"isRtl","id":"isRtl1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollable","id":"scrollable","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ScrollImpl","name":"ScrollImpl"},"isStatic":true,"name":"impl","id":"impl","line":"10","kind":"variable"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/element_mapper_impl.dart","name":"FreeNode","id":"FreeNode","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","line":"108","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/FreeNode","name":"FreeNode"},"name":"next","id":"next","line":"109","kind":"variable"},{"name":"FreeNode","id":"FreeNode2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/FreeNode/index","name":"index"},"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/FreeNode/next","name":"next"},"ref":{"refId":"dart_web_toolkit_ui/FreeNode","name":"FreeNode"},"name":"next","id":"next","kind":"param"}],"line":"111","kind":"constructor"}],"line":"107","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nCreates a mapping from elements to their associated ui objects.\n\n@param <T> the type that the element is mapped to\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/element_mapper_impl.dart","name":"ElementMapperImpl","id":"ElementMapperImpl","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"clearIndex","id":"clearIndex1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"getIndex","id":"getIndex1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"setIndex","id":"setIndex2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ElementMapperImpl/T","name":"T"},"comment":"\nReturns the uiObject associated with the given element.\n\n@param elem uiObject's element\n@return the uiObject\n","name":"get","id":"get1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/ElementMapperImpl/T","name":"T"}],"name":"List"},"comment":"\nGets the list of ui objects contained in this element mapper.\n\n@return the list of ui objects\n","name":"getObjectList","id":"getObjectList0()","line":"59","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/ElementMapperImpl/T","name":"T"}],"name":"Iterator"},"comment":"\nCreates an iterator from the ui objects stored within.\n\n@return an iterator of the ui objects indexed by this element mapper.\n","name":"iterator","id":"iterator0()","line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds the MappedType.\n\n@param uiObject uiObject to add\n","name":"put","id":"put1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ElementMapperImpl/T","name":"T"},"name":"uiObject","id":"uiObject","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove the uiObject associated with the given element.\n\n@param elem the uiObject's element\n","name":"removeByElement","id":"removeByElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"95","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeImpl","id":"removeImpl2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"100","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"UI_OBJECT_ID","id":"UI_OBJECT_ID","line":"13","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/FreeNode","name":"FreeNode"},"name":"freeList","id":"freeList","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/ElementMapperImpl/T","name":"T"}],"name":"List"},"isFinal":true,"name":"uiObjectList","id":"uiObjectList","line":"38","kind":"variable"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUses a combination of a clear image and a background image to clip all except\na desired portion of an underlying image.\n\nDo not use this class - it is used for implementation only, and its methods\nmay change in the future.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/clipped_image_impl.dart","name":"ClippedImageImpl","id":"ClippedImageImpl","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"createStructure","id":"createStructure5()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"getSafeHtml","id":"getSafeHtml5()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"getImgElement","id":"getImgElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"adjust","id":"adjust6()","children":[{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"img","id":"img","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"42","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"clearImage","id":"clearImage","line":"15","kind":"variable"}],"line":"13","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation class used by {@link com.google.gwt.user.client.ui.TextBox}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/text_box_impl.dart","name":"TextBoxImpl","id":"TextBoxImpl","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getCursorPos","id":"getCursorPos1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"elem","id":"elem","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getSelectionLength","id":"getSelectionLength1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"elem","id":"elem","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTextAreaCursorPos","id":"getTextAreaCursorPos1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"elem","id":"elem","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTextAreaSelectionLength","id":"getTextAreaSelectionLength1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"elem","id":"elem","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSelectionRange","id":"setSelectionRange3()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"pos","id":"pos","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TextBoxImpl","name":"TextBoxImpl"},"name":"TextBoxImpl.browserDependent","id":"TextBoxImpl.browserDependent0()","line":"11","kind":"constructor"},{"name":"TextBoxImpl","id":"TextBoxImpl0()","line":"15","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasValueChangeHandlers","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"HasValueChangeHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nNative implementation associated with\n{@link com.google.gwt.user.client.History}. User classes should not use this\nclass directly.\n\n<p>\nThis base version uses the HTML5 standard window.onhashchange event to\ndetermine when the URL hash identifier changes.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/history_impl.dart","name":"HistoryImpl","id":"HistoryImpl","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"getToken","id":"getToken0()","line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"setToken","id":"setToken1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"token","id":"token","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ValueChangeEvent} handler to be informed of changes to the\nbrowser's history stack.\n\n@param handler the handler\n","name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"encodeFragment","id":"encodeFragment1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"fragment","id":"fragment","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"decodeFragment","id":"decodeFragment1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"encodedFragment","id":"encodedFragment","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the {@link ValueChangeEvent} to all handlers with the given tokens.\n","name":"fireHistoryChangedImpl","id":"fireHistoryChangedImpl1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"newToken","id":"newToken","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"name":"getHandlers","id":"getHandlers0()","line":"67","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"init","id":"init0()","line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"newItem","id":"newItem2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"issueEvent","id":"issueEvent","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"newItemOnEvent","id":"newItemOnEvent1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"nativeUpdate","id":"nativeUpdate1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"nativeUpdateOnEvent","id":"nativeUpdateOnEvent1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"}],"line":"130","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_token","isPrivate":true,"id":"_token","line":"18","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"name":"_handlers","isPrivate":true,"id":"_handlers","line":"28","kind":"variable"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nMethods that need browser-specific implementations for Hyperlink.\nBy default, we're very conservative and let the browser handle any clicks\nwith non-left buttons or with modifier keys. This happens to be the correct\nbehavior for Firefox.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/hyperlink_impl.dart","name":"HyperlinkImpl","id":"HyperlinkImpl","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDefault version, useful for Firefox. Don't fire if it's a rightclick,\nmiddleclick, or if any modifiers are held down.\n","name":"handleAsClick","id":"handleAsClick1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"event","id":"event","kind":"param"}],"line":"18","kind":"method"}],"line":"12","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/focus_impl_default.dart","name":"FocusImplDefault","id":"FocusImplDefault","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove focus from [Element].\n","name":"blur","id":"blur1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nCreate focusable element.\n","name":"createFocusable","id":"createFocusable0()","line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet focus on [Element].\n","name":"focus","id":"focus1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturn [Element] tab index.\n","name":"getTabIndex","id":"getTabIndex1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet [Element] tab [index].\n","name":"setTabIndex","id":"setTabIndex2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet Access Key for keyboard navigation.\n","name":"setAccessKey","id":"setAccessKey2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"48","kind":"method"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/AcceptsOneWidget","name":"AcceptsOneWidget"},"comment":"\nImplemented by panels that have only one widget.\n\n@see SimplePanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_one_widget.dart","name":"HasOneWidget","id":"HasOneWidget","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the panel's child widget.\n\n@return the child widget, or <code>null</code> if none is present\n","name":"getWidget","id":"getWidget0()","line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this panel's widget. Any existing child widget will be removed.\n\n@param w the panel's new widget, or <code>null</code> to clear the panel\n","name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"25","kind":"method"}],"line":"11","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtends this interface with convenience methods to handle [IsWidget].\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_widgets.dart","name":"HasWidgetsForIsWidget","id":"HasWidgetsForIsWidget","children":[{"returnType":{"refId":"void","name":"void"},"name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeIsWidget","id":"removeIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"47","kind":"method"}],"line":"43","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface contains [Widget] and can enumerate\nthem.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_widgets.dart","name":"HasWidgets","id":"HasWidgets","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget.\n\n@param w the widget to be added\n@throws UnsupportedOperationException if this method is not supported (most\n          often this means that a specific overload must be called)\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all child widgets.\n","name":"clear","id":"clear0()","line":"24","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves a child widget.\n\n@param w the widget to be removed\n@return <code>true</code> if the widget was present\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"comment":"\nReturns an [Iterator] that iterates over this [Iterable] object.\n","name":"iterator","id":"iterator0()","line":"37","kind":"method"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"}],"name":"Iterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_iterators.dart","name":"_WidgetsIterator","isPrivate":true,"id":"_WidgetsIterator","children":[{"returnType":{"refId":"dart.core/List","name":"List"},"isStatic":true,"name":"_copyWidgetArray","isPrivate":true,"id":"_copyWidgetArray1()","children":[{"ref":{"refId":"dart.core/List","name":"List"},"name":"widgets","id":"widgets","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_gotoNextIndex","isPrivate":true,"id":"_gotoNextIndex0()","line":"48","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_hasNext","isPrivate":true,"id":"_hasNext0()","line":"58","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"},"name":"_next","isPrivate":true,"id":"_next0()","line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"remove","id":"remove0()","line":"72","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nMoves to the next element. Returns true if [current] contains the next\nelement. Returns false, if no element was left.\n\nIt is safe to invoke [moveNext] even when the iterator is already\npositioned after the last element. In this case [moveNext] has no effect.\n","name":"moveNext","id":"moveNext0()","line":"93","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"},"comment":"\nReturns the current element.\n\nReturn [:null:] if the iterator has not yet been moved to the first\nelement, or if the iterator has been moved after the last element of the\n[Iterable].\n","name":"current","id":"current","line":"108","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"},"name":"_container","isPrivate":true,"id":"_container","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"}],"name":"List"},"name":"_contained","isPrivate":true,"id":"_contained","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"last","id":"last","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"widgetsWasCopied","id":"widgetsWasCopied","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"}],"name":"List"},"name":"widgets","id":"widgets","line":"35","kind":"variable"},{"name":"_WidgetsIterator","id":"_WidgetsIterator2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_WidgetsIterator/_container","name":"_container"},"ref":{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"},"name":"_container","isPrivate":true,"id":"_container","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_WidgetsIterator/_contained","name":"_contained"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/_WidgetsIterator/Widget","name":"Widget"}],"name":"List"},"name":"_contained","isPrivate":true,"id":"_contained","kind":"param"}],"line":"43","kind":"constructor"},{"name":"Widget","id":"Widget","kind":"typeparam"}],"line":"28","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA collection of convenience factories for creating iterators for widgets.\nThis mostly helps developers support {@link HasWidgets} without having to\nimplement their own {@link Iterator}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_iterators.dart","name":"WidgetIterators","id":"WidgetIterators","children":[{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"isStatic":true,"comment":"\nWraps an array of widgets to be returned during iteration.\n<code>null</code> is allowed in the array and will be skipped during\niteration.\n\n@param container the container of the widgets in <code>contained</code>\n@param contained the array of widgets\n@return the iterator\n","name":"createWidgetIterator","id":"createWidgetIterator2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"},"name":"container","id":"container","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"List"},"name":"contained","id":"contained","kind":"param"}],"line":"22","kind":"method"}],"line":"11","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_util/RemoveIterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"RemoveIterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"WidgetIterator","id":"WidgetIterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"moveNext","id":"moveNext0()","line":"219","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_getCurrent","isPrivate":true,"id":"_getCurrent0()","line":"225","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"remove","id":"remove0()","line":"236","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"current","id":"current","line":"223","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/WidgetCollection","name":"WidgetCollection"},"name":"_widgetCollection","isPrivate":true,"id":"_widgetCollection","line":"209","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","line":"213","kind":"variable"},{"name":"WidgetIterator","id":"WidgetIterator1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/WidgetIterator/_widgetCollection","name":"_widgetCollection"},"ref":{"refId":"dart_web_toolkit_ui/WidgetCollection","name":"WidgetCollection"},"name":"_widgetCollection","isPrivate":true,"id":"_widgetCollection","kind":"param"}],"line":"211","kind":"constructor"}],"line":"207","kind":"class"},{"superclass":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"comment":"\nA simple collection of widgets to be used by\n{@link com.google.gwt.user.client.ui.Panel panels} and\n{@link com.google.gwt.user.client.ui.Composite composites}.\n\n<p>\nThe main purpose of this specialized collection is to implement\n{@link java.util.Iterator#remove()} in a way that delegates removal to its\npanel. This makes it much easier for the panel to implement an\n{@link com.google.gwt.user.client.ui.HasWidgets#iterator() iterator} that\nsupports removal of widgets.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"WidgetCollection","id":"WidgetCollection","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the end of this collection.\n\n@param w the widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether a given widget is contained in this collection.\n\n@param w the widget to be searched for\n@return <code>true</code> if the widget is present\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget at the given index.\n\n@param index the index to be retrieved\n@return the widget at the specified index\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the specified index.\n\n@param w the widget to be found\n@return the index of the specified widget, or <code>-1</code> if it is\n        not found\n","name":"indexOf","id":"indexOf1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget before the specified index.\n\n@param w the widget to be inserted\n@param beforeIndex the index before which the widget will be inserted\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insert","id":"insert2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the widget at the specified index.\n\n@param index the index of the widget to be removed\n@throws IndexOutOfBoundsException if <code>index</code> is out of range\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the specified widget.\n\n@param w the widget to be removed\n@throws NoSuchElementException if the widget is not present\n","name":"removeWidget","id":"removeWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of widgets in this collection.\n\n@return the number of widgets\n","name":"size","id":"size0()","line":"170","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"182","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"182","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"183","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"184","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"184","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"185","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"190","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"190","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"190","kind":"method"},{"name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"previousValue","id":"previousValue","line":"191","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"191","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"191","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"192","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"192","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"element","id":"element","line":"193","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"193","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"List"},"name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Set"},"name":"toSet","id":"toSet0()","line":"195","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"197","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"197","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"198","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterable"},"name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"199","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"199","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"200","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"201","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget_collection.dart","name":"value","id":"value","line":"202","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"202","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"203","kind":"method"},{"ref":{"refId":"dart_web_toolkit_util/RemoveIterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"RemoveIterator"},"comment":"\nGets an iterator on this widget collection. This iterator is guaranteed to\nimplement remove() in terms of its containing {@link HasWidgets}.\n\n@return an iterator\n","name":"iterator","id":"iterator","line":"127","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"176","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"177","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isNotEmpty","id":"isNotEmpty","line":"178","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"first","id":"first","line":"179","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"last","id":"last","line":"180","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"single","id":"single","line":"181","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_INITIAL_SIZE","isPrivate":true,"id":"_INITIAL_SIZE","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"List"},"name":"_array","isPrivate":true,"id":"_array","line":"23","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"},"name":"_parent","isPrivate":true,"id":"_parent","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_size","isPrivate":true,"id":"_size","line":"25","kind":"variable"},{"comment":"\nConstructs a new widget collection.\n\n@param _parent the container whose {@link HasWidgets#remove(Widget)} will be\n         delegated to by the iterator's {@link Iterator#remove()} method.\n","name":"WidgetCollection","id":"WidgetCollection1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/WidgetCollection/_parent","name":"_parent"},"ref":{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"},"name":"_parent","isPrivate":true,"id":"_parent","kind":"param"}],"line":"33","kind":"constructor"}],"line":"19","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAdapts the HasText interface to the Editor framework.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/adapter/has_text_editor.dart","name":"HasTextEditor","id":"HasTextEditor","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"53","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/HasText","name":"HasText"},"name":"_peer","isPrivate":true,"id":"_peer","line":"22","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/HasTextEditor","name":"HasTextEditor"},"comment":"\nReturns a new ValueEditor that that modifies the given {@link HasText} peer\ninstance.\n\n@param peer a {@link HasText} instance\n@return a HasTextEditor instance\n","name":"HasTextEditor.of","id":"HasTextEditor.of1()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasText","name":"HasText"},"name":"peer","id":"peer","kind":"param"}],"line":"18","kind":"constructor"},{"comment":"\nConstructs a new HasTextEditor that that modifies the given {@link HasText}\npeer instance.\n\n@param peer a {@link HasText} instance\n","name":"HasTextEditor","id":"HasTextEditor1()","children":[{"ref":{"refId":"dart_web_toolkit_event/HasText","name":"HasText"},"name":"peer","id":"peer","kind":"param"}],"line":"30","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"}],"name":"LeafValueEditor"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAdapts the {@link TakesValue} interface to the Editor framework.\n\n@param <T> the type of value to be edited\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/adapter/takes_value_editor.dart","name":"TakesValueEditor","id":"TakesValueEditor","children":[{"returnType":{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"57","kind":"method"},{"ref":{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"}],"name":"TakesValue"},"isFinal":true,"name":"_peer","isPrivate":true,"id":"_peer","line":"13","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/TakesValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"}],"name":"TakesValueEditor"},"comment":"\nReturns a new ValueEditor that modifies the given {@link TakesValue} peer\ninstance.\n\n@param peer a {@link TakesValue} instance\n@return a TakesValueEditor instance of the same type as its peer\n","name":"TakesValueEditor.of","id":"TakesValueEditor.of1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TakesValue","name":"TakesValue"},"name":"val","id":"val","kind":"param"}],"line":"22","kind":"constructor"},{"comment":"\nReturns a new ValueEditor that modifies the given {@link TakesValue} peer\ninstance.\n\n@param peer a {@link TakesValue} instance\n","name":"TakesValueEditor","id":"TakesValueEditor1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/TakesValueEditor/_peer","name":"_peer"},"ref":{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_ui/TakesValueEditor/T","name":"T"}],"name":"TakesValue"},"name":"_peer","isPrivate":true,"id":"_peer","kind":"param"}],"line":"32","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/HasEditorDelegate","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"HasEditorDelegate"}],"superclass":{"refId":"dart_web_toolkit_ui/TakesValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"TakesValueEditor"},"comment":"\nAdapts the {@link ValueBoxBase} interface to the Editor framework. This\nadapter uses {@link ValueBoxBase#getValueOrThrow()} to report parse errors to\nthe Editor framework.\n\n@param <T> the type of value to be edited\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/adapter/value_box_editor.dart","name":"ValueBoxEditor","id":"ValueBoxEditor","children":[{"returnType":{"refId":"dart_web_toolkit_editor/EditorDelegate","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"EditorDelegate"},"comment":"\nReturns the {@link EditorDelegate} for this instance.\n\n@return an {@link EditorDelegate}, or {@code null}\n@see #setDelegate(EditorDelegate)\n","name":"getDelegate","id":"getDelegate0()","line":"46","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"},"comment":"\nCalls {@link ValueBoxBase#getValueOrThrow()}. If a {@link ParseException}\nis thrown, it will be available through\n{@link com.google.gwt.editor.client.EditorError#getUserData()\nEditorError.getUserData()}.\n\n@return a value of type T\n@see #setValue(Object)\n","name":"getValue","id":"getValue0()","line":"59","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the {@link EditorDelegate} for this instance. This method is only\ncalled by the driver.\n\n@param delegate an {@link EditorDelegate}, or {@code null}\n@see #getDelegate()\n","name":"setDelegate","id":"setDelegate1()","children":[{"ref":{"refId":"dart_web_toolkit_editor/EditorDelegate","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"EditorDelegate"},"name":"delegate","id":"delegate","kind":"param"}],"line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"80","kind":"method"},{"ref":{"refId":"dart_web_toolkit_editor/EditorDelegate","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"EditorDelegate"},"name":"_delegate","isPrivate":true,"id":"_delegate","line":"26","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxBase","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"ValueBoxBase"},"name":"_peer","isPrivate":true,"id":"_peer","line":"27","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","line":"28","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBoxEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor/T","name":"T"}],"name":"ValueBoxEditor"},"comment":"\nReturns a new TakesValueEditor that adapts a {@link ValueBoxBase}\ninstance.\n\n@param valueBox a {@link ValueBoxBase} instance to adapt\n@return a ValueBoxEditor instance of the same type as the\n  adapted {@link ValueBoxBase} instance\n","name":"ValueBoxEditor.of","id":"ValueBoxEditor.of1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxBase","name":"ValueBoxBase"},"name":"valueBox","id":"valueBox","kind":"param"}],"line":"22","kind":"constructor"},{"comment":"\nConstructs a new ValueBoxEditor that adapts a {@link ValueBoxBase} peer\ninstance.\n\n@param peer a {@link ValueBoxBase} instance of type T\n","name":"ValueBoxEditor","id":"ValueBoxEditor1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxBase","name":"ValueBoxBase"},"name":"peer","id":"peer","kind":"param"}],"line":"36","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"13","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Hyperlink","name":"Hyperlink"},"comment":"\nA widget that serves as an \"internal\" hyperlink. That is, it is a link to\nanother state of the running application. It should behave exactly like\n{@link com.google.gwt.user.client.ui.Hyperlink}, save that it lays out\nas an inline element, not block.\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-InlineHyperlink { }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/inline_hyperlink.dart","name":"InlineHyperlink","id":"InlineHyperlink","children":[{"comment":"\nCreates an empty hyperlink.\n","name":"InlineHyperlink","id":"InlineHyperlink3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"targetHistoryToken","id":"targetHistoryToken","kind":"param"}],"line":"30","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Html","name":"Html"},"comment":"\nA widget that can contain arbitrary HTML.\n\nThis widget uses a &lt;span&gt; element, causing it to be displayed with\ninline layout.\n\n<p>\nIf you only need a simple label (text, but not HTML), then the\n{@link com.google.gwt.user.client.ui.Label} widget is more appropriate, as it\ndisallows the use of HTML, which can lead to potential security issues if not\nused properly.\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-InlineHTML { }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/inline_html.dart","name":"InlineHtml","id":"InlineHtml","children":[{"returnType":{"refId":"dart_web_toolkit_ui/InlineHtml","name":"InlineHtml"},"comment":"\nCreates an InlineHTML widget that wraps an existing &lt;div&gt; or\n&lt;span&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"InlineHtml.wrap","id":"InlineHtml.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"44","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be either a div or span element.\n","name":"InlineHtml.fromElement","id":"InlineHtml.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"61","kind":"constructor"},{"comment":"\nCreates an HTML widget with the specified HTML contents.\n","name":"InlineHtml","id":"InlineHtml1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"html","id":"html","kind":"param"}],"line":"68","kind":"constructor"}],"line":"32","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Label","name":"Label"},"comment":"\nA widget that contains arbitrary text, <i>not</i> interpreted as HTML.\n\nThis widget uses a &lt;span&gt; element, causing it to be displayed with\ninline layout.\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-InlineLabel { }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/inline_label.dart","name":"InlineLabel","id":"InlineLabel","children":[{"returnType":{"refId":"dart_web_toolkit_ui/InlineLabel","name":"InlineLabel"},"comment":"\nCreates a InlineLabel widget that wraps an existing &lt;div&gt; or\n&lt;span&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"InlineLabel.wrap","id":"InlineLabel.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"37","kind":"constructor"},{"name":"InlineLabel.fromElement","id":"InlineLabel.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"50","kind":"constructor"},{"comment":"\nCreates an empty label.\n","name":"InlineLabel","id":"InlineLabel1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"text","id":"text","kind":"param"}],"line":"57","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_util/Enum","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Enum"},"comment":"\nAlignment values for {@link ValueBoxBase#setAlignment}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/text_alignment.dart","name":"TextAlignment","id":"TextAlignment","children":[{"ref":{"refId":"dart_web_toolkit_ui/TextAlignment","name":"TextAlignment"},"isStatic":true,"name":"CENTER","id":"CENTER","line":"13","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TextAlignment","name":"TextAlignment"},"isStatic":true,"name":"JUSTIFY","id":"JUSTIFY","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TextAlignment","name":"TextAlignment"},"isStatic":true,"name":"LEFT","id":"LEFT","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TextAlignment","name":"TextAlignment"},"isStatic":true,"name":"RIGHT","id":"RIGHT","line":"16","kind":"variable"},{"name":"TextAlignment","id":"TextAlignment1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"}],"line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtended by objects which have underlying {@link TreeItem}.\nProvides access to that item, if it exists, without compromising the\nability to provide a mock object instance in JRE unit tests.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/is_tree_item.dart","name":"IsTreeItem","id":"IsTreeItem","children":[{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nReturns the {@link TreeItem} aspect of the receiver.\n","name":"asTreeItem","id":"asTreeItem0()","line":"16","kind":"method"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_animation/Animation","name":"Animation"},"comment":"\nAn {@link Animation} used to open the child elements. If a {@link TreeItem}\nis in the process of opening, it will immediately be opened and the new\n{@link TreeItem} will use this animation.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree_item.dart","name":"TreeItemAnimation","id":"TreeItemAnimation","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nOpen the specified {@link TreeItem}.\n\n@param item the {@link TreeItem} to open\n@param animate true to animate, false to open instantly\n","name":"setItemState","id":"setItemState2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"},{"name":"animate","id":"animate","kind":"param"}],"line":"808","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onComplete","id":"onComplete0()","line":"824","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onStart","id":"onStart0()","line":"840","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"865","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nThe {@link TreeItem} currently being affected.\n","name":"_curItem","isPrivate":true,"id":"_curItem","line":"788","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether the item is being opened or closed.\n","name":"_opening","isPrivate":true,"id":"_opening","line":"793","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe target height of the child items.\n","name":"_scrollHeight","isPrivate":true,"id":"_scrollHeight","line":"798","kind":"variable"},{"name":"TreeItemAnimation","id":"TreeItemAnimation1()","children":[{"ref":{"refId":"dart_web_toolkit_animation/AnimationScheduler","name":"AnimationScheduler"},"isOptional":true,"defaultValue":"null","name":"scheduler","id":"scheduler","kind":"param"}],"line":"800","kind":"constructor"}],"line":"783","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/TreeItemImpl","name":"TreeItemImpl"},"comment":"\nIE specific implementation class for {@link TreeItem}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree_item.dart","name":"TreeItemImplIE6","id":"TreeItemImplIE6","children":[{"returnType":{"refId":"void","name":"void"},"name":"convertToFullNode","id":"convertToFullNode1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"772","kind":"method"}],"line":"771","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation class for {@link TreeItem}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree_item.dart","name":"TreeItemImpl","id":"TreeItemImpl","children":[{"returnType":{"refId":"void","name":"void"},"name":"convertToFullNode","id":"convertToFullNode1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"721","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSetup clonable elements.\n","name":"initializeClonableElements","id":"initializeClonableElements0()","line":"740","kind":"method"},{"name":"TreeItemImpl","id":"TreeItemImpl0()","line":"717","kind":"constructor"}],"line":"716","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"},{"refId":"dart_web_toolkit_ui/HasTreeItems","name":"HasTreeItems"},{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"}],"superclass":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"comment":"\nAn item that can be contained within a\n{@link com.google.gwt.user.client.ui.Tree}.\n\nEach tree item is assigned a unique Dom id in order to support ARIA. See\n{@link com.google.gwt.user.client.ui.Accessibility} for more information.\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TreeExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree_item.dart","name":"TreeItem","id":"TreeItem","children":[{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a child tree item containing the specified html.\n\n@param itemHtml the item's HTML\n@return the item that was added\n","name":"addSafeHtmlItem","id":"addSafeHtmlItem1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"itemHtml","id":"itemHtml","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds another item as a child to this one.\n\n@param item the item to be added\n","name":"addItem","id":"addItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds another item as a child to this one.\n\n@param isItem the wrapper of item to be added\n","name":"addIsTreeItem","id":"addIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a child tree item containing the specified widget.\n\n@param widget the widget to be added\n@return the item that was added\n","name":"addWidgetItem","id":"addWidgetItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"141","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a child tree item containing the specified text.\n\n@param itemText the text of the item to be added\n@return the item that was added\n","name":"addTextItem","id":"addTextItem1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"itemText","id":"itemText","kind":"param"}],"line":"154","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"asTreeItem","id":"asTreeItem0()","line":"162","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nGets the child at the specified index.\n\n@param index the index to be retrieved\n@return the item at that index\n","name":"getChild","id":"getChild1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"173","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of children contained in this item.\n\n@return this item's child count.\n","name":"getChildCount","id":"getChildCount0()","line":"187","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the specified child item.\n\n@param child the child item to be found\n@return the child's index, or <code>-1</code> if none is found\n","name":"getChildIndex","id":"getChildIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"child","id":"child","kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nGets this item's parent.\n\n@return the parent item\n","name":"getParentItem","id":"getParentItem0()","line":"218","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this item's children are displayed.\n\n@return <code>true</code> if the item is open\n","name":"getState","id":"getState0()","line":"227","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Tree","name":"Tree"},"comment":"\nGets the tree that contains this item.\n\n@return the containing tree\n","name":"getTree","id":"getTree0()","line":"241","kind":"method"},{"returnType":{"refId":"dart.core/Object","name":"Object"},"comment":"\nGets the user-defined object associated with this item.\n\n@return the item's user-defined object\n","name":"getUserObject","id":"getUserObject0()","line":"250","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the <code>Widget</code> associated with this tree item.\n\n@return the widget\n","name":"getWidget","id":"getWidget0()","line":"259","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\nhtml.\n\n@param beforeIndex the index where the item will be inserted\n@param itemHtml the item's HTML\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertSafeHtmlItem","id":"insertSafeHtmlItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"itemHtml","id":"itemHtml","kind":"param"}],"line":"272","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts an item as a child to this one.\n\n@param beforeIndex the index where the item will be inserted\n@param item the item to be added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertItem","id":"insertItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"285","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\nwidget.\n\n@param beforeIndex the index where the item will be inserted\n@param widget the widget to be added\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertWidgetItem","id":"insertWidgetItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"339","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\ntext.\n\n@param beforeIndex the index where the item will be inserted\n@param itemText the item's text\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertTextItem","id":"insertTextItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"itemText","id":"itemText","kind":"param"}],"line":"354","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether this item is currently selected.\n\n@return <code>true</code> if it is selected\n","name":"isSelected","id":"isSelected0()","line":"366","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves this item from its tree.\n","name":"remove","id":"remove0()","line":"373","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves one of this item's children.\n\n@param item the item to be removed\n","name":"removeItem","id":"removeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"390","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves one of this item's children.\n\n@param isItem the wrapper of item to be removed\n","name":"removeIsTreeItem","id":"removeIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"424","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all of this item's children.\n","name":"removeItems","id":"removeItems0()","line":"435","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"442","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSafeHtml","id":"setSafeHtml1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"val","id":"val","kind":"param"}],"line":"448","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSelects or deselects this item.\n\n@param selected <code>true</code> to select the item, <code>false</code> to\n         deselect it\n","name":"setSelected","id":"setSelected1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"selected","id":"selected","kind":"param"}],"line":"458","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this item's children are displayed.\n\n@param open whether the item is open\n@param fireEvents <code>true</code> to allow open/close events to be\n","name":"setState","id":"setState2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"open","id":"open","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"472","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"489","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the user-defined object associated with this item.\n\n@param userObj the item's user-defined object\n","name":"setUserObject","id":"setUserObject1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"userObj","id":"userObj","kind":"param"}],"line":"499","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the current widget. Any existing child widget will be removed.\n\n@param newWidget Widget to set\n","name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"newWidget","id":"newWidget","kind":"param"}],"line":"508","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/Focusable","name":"Focusable"},"comment":"\nReturns a suggested {@link Focusable} instance to use when this tree item\nis selected. The tree maintains focus if this method returns null. By\ndefault, if the tree item contains a focusable widget, that widget is\nreturned.\n\nNote, the {@link Tree} will ignore this value if the user clicked on an\ninput element such as a button or text area when selecting this item.\n\n@return the focusable item\n","name":"getFocusable","id":"getFocusable0()","line":"563","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addTreeItems","id":"addTreeItems1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"List"},"name":"accum","id":"accum","kind":"param"}],"line":"571","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"List"},"name":"getChildren","id":"getChildren0()","line":"580","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContentElem","id":"getContentElem0()","line":"584","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getImageElement","id":"getImageElement0()","line":"588","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getImageHolderElement","id":"getImageHolderElement0()","line":"592","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initChildren","id":"initChildren0()","line":"599","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isFullNode","id":"isFullNode0()","line":"607","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove a tree item from its parent if it has one.\n\n@param item the tree item to remove from its parent\n","name":"maybeRemoveItemFromParent","id":"maybeRemoveItemFromParent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"616","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setParentItem","id":"setParentItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"parent","id":"parent","kind":"param"}],"line":"622","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setTree","id":"setTree1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Tree","name":"Tree"},"name":"newTree","id":"newTree","kind":"param"}],"line":"626","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateState","id":"updateState2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"animate","id":"animate","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"updateTreeSelection","id":"updateTreeSelection","kind":"param"}],"line":"657","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateStateRecursive","id":"updateStateRecursive0()","line":"696","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"convertToFullNode","id":"convertToFullNode0()","line":"701","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateStateRecursiveHelper","id":"updateStateRecursiveHelper0()","line":"705","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","line":"209","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"232","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"comment":"\nThe margin applied to child items.\n","name":"_CHILD_MARGIN","isPrivate":true,"id":"_CHILD_MARGIN","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IMAGE_PAD","id":"IMAGE_PAD","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe duration of the animation.\n","name":"_ANIMATION_DURATION","isPrivate":true,"id":"_ANIMATION_DURATION","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe duration of the animation per child {@link TreeItem}. If the per item\nduration times the number of child items is less than the duration above,\nthe smaller duration will be used.\n","name":"_ANIMATION_DURATION_PER_ITEM","isPrivate":true,"id":"_ANIMATION_DURATION_PER_ITEM","line":"41","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItemAnimation","name":"TreeItemAnimation"},"isStatic":true,"comment":"\nThe static animation used to open {@link TreeItem TreeItems}.\n","name":"_itemAnimation","isPrivate":true,"id":"_itemAnimation","line":"46","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nThe structured table to hold images.\n","name":"_BASE_INTERNAL_ELEM","isPrivate":true,"id":"_BASE_INTERNAL_ELEM","line":"52","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nThe base tree item element that will be cloned.\n","name":"_BASE_BARE_ELEM","isPrivate":true,"id":"_BASE_BARE_ELEM","line":"56","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItemImpl","name":"TreeItemImpl"},"isStatic":true,"name":"_impl","isPrivate":true,"id":"_impl","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"List"},"name":"_children","isPrivate":true,"id":"_children","line":"60","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_contentElem","isPrivate":true,"id":"_contentElem","line":"61","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_childSpanElem","isPrivate":true,"id":"_childSpanElem","line":"61","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_imageHolder","isPrivate":true,"id":"_imageHolder","line":"61","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIndicates that this item is a root item in a tree.\n","name":"isRoot","id":"isRoot","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_open","isPrivate":true,"id":"_open","line":"68","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"_parent","isPrivate":true,"id":"_parent","line":"69","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_selected","isPrivate":true,"id":"_selected","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"_userObject","isPrivate":true,"id":"_userObject","line":"72","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Tree","name":"Tree"},"name":"_tree","isPrivate":true,"id":"_tree","line":"74","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_widget","isPrivate":true,"id":"_widget","line":"76","kind":"variable"},{"name":"TreeItem","id":"TreeItem3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/TreeItem/isRoot","name":"isRoot"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"isRoot","id":"isRoot","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"isOptional":true,"name":"html","id":"html","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"isOptional":true,"name":"widget","id":"widget","kind":"param"}],"line":"78","kind":"constructor"}],"line":"18","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/HasTreeItems","name":"HasTreeItems"},"comment":"\nExtends this interface with convenience methods to handle {@link IsWidget}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_tree_items.dart","name":"HasTreeItemsForIsWidget","id":"HasTreeItemsForIsWidget","children":[{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"addIsWidgetItem","id":"addIsWidgetItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"75","kind":"method"}],"line":"74","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA widget that implements this interface contains\n{@link com.google.gwt.user.client.ui.TreeItem items} and can operate them.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_tree_items.dart","name":"HasTreeItems","id":"HasTreeItems","children":[{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a simple tree item containing the specified html.\n\n@param itemHtml the html of the item to be added\n@return the item that was added\n","name":"addSafeHtmlItem","id":"addSafeHtmlItem1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"itemHtml","id":"itemHtml","kind":"param"}],"line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds an tree item.\n\n@param item the item to be added\n","name":"addItem","id":"addItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds an item wrapped by specified {@link IsTreeItem}.\n\n@param isItem the wrapper of item to be added\n","name":"addIsTreeItem","id":"addIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a new tree item containing the specified widget.\n\n@param widget the widget to be added\n@return the new item\n","name":"addWidgetItem","id":"addWidgetItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a simple tree item containing the specified text.\n\n@param itemText the text of the item to be added\n@return the item that was added\n","name":"addTextItem","id":"addTextItem1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"itemText","id":"itemText","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves an item.\n\n@param item the item to be removed\n","name":"removeItem","id":"removeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"55","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves an item.\n\n@param isItem the wrapper of item to be removed\n","name":"removeIsTreeItem","id":"removeIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all items.\n","name":"removeItems","id":"removeItems0()","line":"67","kind":"method"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"CloseHandler"},{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"OpenHandler"},{"refId":"dart_web_toolkit_event/HasText","name":"HasText"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nThe default _header widget used within a {@link DisclosurePanel}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_DefaultHeader","isPrivate":true,"id":"_DefaultHeader","children":[{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_Imager","name":"_Imager"},"name":"imager","id":"imager","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"533","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onClose","id":"onClose1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseEvent","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"CloseEvent"},"name":"event","id":"event","kind":"param"}],"line":"572","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onOpen","id":"onOpen1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenEvent","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"OpenEvent"},"name":"event","id":"event","kind":"param"}],"line":"576","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"581","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setStyle","isPrivate":true,"id":"_setStyle0()","line":"586","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"570","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"516","kind":"variable"},{"ref":{"refId":"dart.dom.html/TableCellElement","name":"TableCellElement"},"comment":"\nimageTD holds the image for the icon, not null. labelTD holds the text\nfor the label.\n","name":"_labelTD","isPrivate":true,"id":"_labelTD","line":"522","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"_iconImage","isPrivate":true,"id":"_iconImage","line":"524","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_Imager","name":"_Imager"},"name":"_imager","isPrivate":true,"id":"_imager","line":"525","kind":"variable"},{"name":"_DefaultHeader","id":"_DefaultHeader3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_DefaultHeader/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/_Imager","name":"_Imager"},"name":"imager","id":"imager","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"527","kind":"constructor"},{"name":"_DefaultHeader.fromImageResources","id":"_DefaultHeader.fromImageResources4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"panel","id":"panel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"openImage","id":"openImage","kind":"param"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"closedImage","id":"closedImage","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"531","kind":"constructor"}],"line":"514","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/_Imager","name":"_Imager"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_ImageResourceImager","isPrivate":true,"id":"_ImageResourceImager","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"makeImage","id":"makeImage0()","line":"498","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateImage","id":"updateImage2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"open","id":"open","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"502","kind":"method"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"isFinal":true,"name":"openImage","id":"openImage","line":"493","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"isFinal":true,"name":"closedImage","id":"closedImage","line":"494","kind":"variable"},{"name":"_ImageResourceImager","id":"_ImageResourceImager2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_ImageResourceImager/openImage","name":"openImage"},"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"openImage","id":"openImage","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ImageResourceImager/closedImage","name":"closedImage"},"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"closedImage","id":"closedImage","kind":"param"}],"line":"496","kind":"constructor"}],"line":"492","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_Imager","isPrivate":true,"id":"_Imager","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"makeImage","id":"makeImage0()","line":"487","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateImage","id":"updateImage2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"open","id":"open","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"489","kind":"method"}],"line":"486","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_animation/Animation","name":"Animation"},"comment":"\nAn {@link Animation} used to open the content.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_ContentAnimation","isPrivate":true,"id":"_ContentAnimation","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nOpen or close the content.\n\n@param panel the panel to open or close\n@param animate true to animate, false to open instantly\n","name":"setOpen","id":"setOpen2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"panel","id":"panel","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"animate","id":"animate","kind":"param"}],"line":"439","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onComplete","id":"onComplete0()","line":"457","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onStart","id":"onStart0()","line":"465","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"474","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether the item is being opened or closed.\n","name":"_opening","isPrivate":true,"id":"_opening","line":"424","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"comment":"\nThe {@link DisclosurePanel} being affected.\n","name":"_curPanel","isPrivate":true,"id":"_curPanel","line":"429","kind":"variable"},{"name":"_ContentAnimation","id":"_ContentAnimation0()","line":"431","kind":"constructor"}],"line":"420","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nUsed to wrap widgets in the _header to provide click support. Effectively\nwraps the widget in an <code>anchor</code> to get automatic keyboard\naccess.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_ClickableHeader","isPrivate":true,"id":"_ClickableHeader","children":[{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"403","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"387","kind":"variable"},{"name":"_ClickableHeader","id":"_ClickableHeader1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_ClickableHeader/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"389","kind":"constructor"}],"line":"385","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/DisclosureResource","name":"DisclosureResource"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDefault disclosure resources.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"_DefaultImages","isPrivate":true,"id":"_DefaultImages","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a disclosure panel closed state.\n","name":"disclosurePanelClosed","id":"disclosurePanelClosed0()","line":"354","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a disclosure panel open state.\n","name":"disclosurePanelOpen","id":"disclosurePanelOpen0()","line":"365","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResourcePrototype","name":"ImageResourcePrototype"},"name":"_getImageResourcePrototype","isPrivate":true,"id":"_getImageResourcePrototype1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"372","kind":"method"},{"ref":{"refId":"dart_web_toolkit_resource/Source","name":"Source"},"name":"source","id":"source","line":"347","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"}],"name":"Map"},"name":"_resources","isPrivate":true,"id":"_resources","line":"339","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CLOSED_RESOURCE","id":"CLOSED_RESOURCE","line":"341","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"CLOSED_RESOURCE_RTL","id":"CLOSED_RESOURCE_RTL","line":"342","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"OPEN_RESOURCE","id":"OPEN_RESOURCE","line":"343","kind":"variable"},{"name":"_DefaultImages","id":"_DefaultImages0()","line":"345","kind":"constructor"}],"line":"337","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_resource/ClientBundle","name":"ClientBundle"},"comment":"\nA ClientBundle that contains the default resources for this widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"DisclosureResource","id":"DisclosureResource","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"disclosurePanelClosed","id":"disclosurePanelClosed0()","line":"329","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"disclosurePanelOpen","id":"disclosurePanelOpen0()","line":"331","kind":"method"}],"line":"326","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasCloseHandlers","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"HasCloseHandlers"},{"refId":"dart_web_toolkit_event/HasOpenHandlers","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"HasOpenHandlers"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"},{"refId":"dart_web_toolkit_ui/HasWidgetsForIsWidget","name":"HasWidgetsForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nA widget that consists of a _header and a content panel that discloses the\ncontent when a user clicks on the _header.\n\n<h3>CSS Style Rules</h3> \n<dl class=\"css\"> \n<dt>.gwt-DisclosurePanel \n<dd>the panel's primary style \n<dt>.gwt-DisclosurePanel-open \n<dd> dependent style set when panel is open \n<dt>.gwt-DisclosurePanel-closed \n<dd> dependent style set when panel is closed\n</dl>\n<p>\n<img class='gallery' src='doc-files/DisclosurePanel.png'/>\n</p>\n\n<p>\nThe _header and content sections can be easily selected using css with a child\nselector:<br/>\n.gwt-DisclosurePanel-open ._header { ... }\n</p>\n<h3>Use in UiBinder Templates</h3>\n<p>\nDisclosurePanel elements in  \n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates can \nhave one widget child and one of two types of _header elements. A \n&lt;g:_header> element can hold text (not html), or a &lt;g:customHeader> element\ncan hold a widget. (Note that the tags of the _header elements are not\ncapitalized. This is meant to signal that the _header is not a runtime object, \nand so cannot have a <code>ui:field</code> attribute.) \n<p>\nFor example:<pre>\n&lt;g:DisclosurePanel>\n  &lt;g:_header>Text _header&lt;/g:_header>\n  &lt;g:Label>Widget body&lt;/g:Label>\n&lt;/g:DisclosurePanel>\n\n&lt;g:DisclosurePanel>\n  &lt;g:customHeader>\n    &lt;g:Label>Widget _header&lt;/g:Label>\n  &lt;/g:customHeader>\n  &lt;g:Label>Widget body&lt;/g:Label>\n&lt;/g:DisclosurePanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/disclosure_panel.dart","name":"DisclosurePanel","id":"DisclosurePanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init0()","line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget)\n","name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"155","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addOpenHandler","id":"addOpenHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_ui/DisclosurePanel","name":"DisclosurePanel"}],"name":"OpenHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"163","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"167","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget that was previously set in {@link #setContent(Widget)}.\n\n@return the panel's current content widget\n","name":"getContent","id":"getContent0()","line":"176","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget that is currently being used as a header.\n\n@return the widget currently being used as a header\n","name":"getHeader","id":"getHeader0()","line":"185","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HasText","name":"HasText"},"comment":"\nGets a {@link HasText} instance to provide access to the headers's text, if\nthe header widget does provide such access.\n\n@return a reference to the header widget if it implements {@link HasText},\n        <code>null</code> otherwise\n","name":"getHeaderTextAccessor","id":"getHeaderTextAccessor0()","line":"196","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"201","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether the panel is open.\n\n@return <code>true</code> if panel is in open state\n","name":"isOpen","id":"isOpen0()","line":"210","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"214","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nOverloaded version for IsWidget.\n\n@see #remove(Widget)\n","name":"removeIsWidget","id":"removeIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"247","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the content widget which can be opened and closed by this panel. If\nthere is a preexisting content widget, it will be detached.\n\n@param content the widget to be used as the content panel\n","name":"setContent","id":"setContent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"content","id":"content","kind":"param"}],"line":"257","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the widget used as the header for the panel.\n\n@param headerWidget the widget to be used as the header\n","name":"setHeader","id":"setHeader1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"headerWidget","id":"headerWidget","kind":"param"}],"line":"279","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChanges the visible state of this <code>DisclosurePanel</code>.\n\n@param isOpen <code>true</code> to open the panel, <code>false</code> to\n         close\n","name":"setOpen","id":"setOpen1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isOpen","id":"isOpen","kind":"param"}],"line":"289","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_fireEvent","isPrivate":true,"id":"_fireEvent0()","line":"297","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setContentDisplay","isPrivate":true,"id":"_setContentDisplay1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"animate","id":"animate","kind":"param"}],"line":"305","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_DefaultImages","name":"_DefaultImages"},"isFinal":true,"isStatic":true,"name":"DEFAULT_IMAGES","id":"DEFAULT_IMAGES","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"comment":"\nThe duration of the animation.\n","name":"_ANIMATION_DURATION","isPrivate":true,"id":"_ANIMATION_DURATION","line":"63","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_SUFFIX_OPEN","isPrivate":true,"id":"_STYLENAME_SUFFIX_OPEN","line":"68","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_SUFFIX_CLOSED","isPrivate":true,"id":"_STYLENAME_SUFFIX_CLOSED","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_HEADER","isPrivate":true,"id":"_STYLENAME_HEADER","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_CONTENT","isPrivate":true,"id":"_STYLENAME_CONTENT","line":"74","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_ContentAnimation","name":"_ContentAnimation"},"isStatic":true,"comment":"\nThe {@link Animation} used to open and close the content.\n","name":"_contentAnimation","isPrivate":true,"id":"_contentAnimation","line":"79","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/VerticalPanel","name":"VerticalPanel"},"isFinal":true,"comment":"\ntop level widget. The first child will be a reference to {@link #_header}.\nThe second child will be a reference to {@link #_contentWrapper}.\n","name":"_mainPanel","isPrivate":true,"id":"_mainPanel","line":"85","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"isFinal":true,"comment":"\nThe wrapper around the content widget.\n","name":"_contentWrapper","isPrivate":true,"id":"_contentWrapper","line":"90","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_ClickableHeader","name":"_ClickableHeader"},"comment":"\nholds the _header widget.\n","name":"_header","isPrivate":true,"id":"_header","line":"95","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationEnabled","isPrivate":true,"id":"_isAnimationEnabled","line":"97","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isOpen","isPrivate":true,"id":"_isOpen","line":"99","kind":"variable"},{"comment":"\nCreates an empty DisclosurePanel that is initially closed.\n","name":"DisclosurePanel","id":"DisclosurePanel0()","line":"104","kind":"constructor"},{"comment":"\nCreates a DisclosurePanel with the specified header text, an initial\nopen/close state and a bundle of images to be used in the default header\nwidget.\n\n@param openImage the open state image resource\n@param closedImage the closed state image resource\n@param headerText the text to be displayed in the header\n","name":"DisclosurePanel.fromImageResources","id":"DisclosurePanel.fromImageResources3()","children":[{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"openImage","id":"openImage","kind":"param"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"closedImage","id":"closedImage","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"headerText","id":"headerText","kind":"param"}],"line":"129","kind":"constructor"},{"comment":"\nCreates a DisclosurePanel that will be initially closed using the specified\ntext in the header.\n\n@param headerText the text to be displayed in the header\n","name":"DisclosurePanel.fromText","id":"DisclosurePanel.fromText1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"headerText","id":"headerText","kind":"param"}],"line":"140","kind":"constructor"}],"line":"53","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_animation/Animation","name":"Animation"},"comment":"\nDefault CSS styles for this widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/notification_mole.dart","name":"_MoleAnimation","isPrivate":true,"id":"_MoleAnimation","children":[{"returnType":{"refId":"void","name":"void"},"name":"onComplete","id":"onComplete0()","line":"171","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"179","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"animateMole","id":"animateMole3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"startSize","id":"startSize","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"endSize","id":"endSize","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"}],"line":"185","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_endSize","isPrivate":true,"id":"_endSize","line":"164","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_startSize","isPrivate":true,"id":"_startSize","line":"165","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/NotificationMole","name":"NotificationMole"},"name":"_mole","isPrivate":true,"id":"_mole","line":"167","kind":"variable"},{"name":"_MoleAnimation","id":"_MoleAnimation1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_MoleAnimation/_mole","name":"_mole"},"ref":{"refId":"dart_web_toolkit_ui/NotificationMole","name":"NotificationMole"},"name":"_mole","isPrivate":true,"id":"_mole","kind":"param"}],"line":"169","kind":"constructor"}],"line":"163","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nSimple widget for providing notification feedback.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/notification_mole.dart","name":"NotificationMole","id":"NotificationMole","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the widget to be wrapped by the composite. The wrapped widget must be\nset before calling any {@link Widget} methods on this object, or adding it\nto a panel. This method may only be called once for a given composite.\n\n@param widget the widget to be wrapped\n","name":"_initWidget","isPrivate":true,"id":"_initWidget0()","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHides the notification.\n","name":"hide","id":"hide0()","line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nForce mole to hide and discard outstanding show attempts.\n","name":"hideNow","id":"hideNow0()","line":"92","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the animation duration in milliseconds. The animation duration\ndefaults to 0 if this method is never called.\n\n@param duration the animation duration in milliseconds.\n","name":"setAnimationDuration","id":"setAnimationDuration1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the message text to be displayed.\n\n@param message the text to be displayed.\n","name":"setMessage","id":"setMessage1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the message text and then display the notification.\n","name":"show","id":"show1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"message","id":"message","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDisplay the notification, but after a delay.\n\n@param delay delay in milliseconds.\n","name":"showDelayed","id":"showDelayed1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"delay","id":"delay","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_showImpl","isPrivate":true,"id":"_showImpl0()","line":"144","kind":"method"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"borderElement","id":"borderElement","line":"11","kind":"variable"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"heightMeasure","id":"heightMeasure","line":"13","kind":"variable"},{"ref":{"refId":"dart.dom.html/SpanElement","name":"SpanElement"},"name":"notificationText","id":"notificationText","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"showAttempts","id":"showAttempts","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Timer","name":"Timer"},"name":"showTimer","id":"showTimer","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_MoleAnimation","name":"_MoleAnimation"},"name":"_animation","isPrivate":true,"id":"_animation","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_animationDuration","isPrivate":true,"id":"_animationDuration","line":"23","kind":"variable"},{"name":"NotificationMole","id":"NotificationMole0()","line":"25","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"_MenuScheduledCommand","isPrivate":true,"id":"_MenuScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInvokes the command.\n","name":"execute","id":"execute0()","line":"1267","kind":"method"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"_cmd","isPrivate":true,"id":"_cmd","line":"1260","kind":"variable"},{"name":"_MenuScheduledCommand","id":"_MenuScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_MenuScheduledCommand/_cmd","name":"_cmd"},"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"_cmd","isPrivate":true,"id":"_cmd","kind":"param"}],"line":"1262","kind":"constructor"}],"line":"1258","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/PopupPanelPositionCallback","name":"PopupPanelPositionCallback"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"_PopupPanelPositionCallback","isPrivate":true,"id":"_PopupPanelPositionCallback","children":[{"returnType":{"refId":"void","name":"void"},"name":"setPosition","id":"setPosition2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetWidth","id":"offsetWidth","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetHeight","id":"offsetHeight","kind":"param"}],"line":"1239","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"menuBar","id":"menuBar","line":"1234","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","line":"1235","kind":"variable"},{"name":"_PopupPanelPositionCallback","id":"_PopupPanelPositionCallback2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_PopupPanelPositionCallback/menuBar","name":"menuBar"},"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"menuBar","id":"menuBar","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_PopupPanelPositionCallback/item","name":"item"},"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"1237","kind":"constructor"}],"line":"1232","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/DecoratedPopupPanel","name":"DecoratedPopupPanel"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"_MenuDecoratedPopupPanel","isPrivate":true,"id":"_MenuDecoratedPopupPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"onPreviewNativeEvent","id":"onPreviewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"1206","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"menuBar","id":"menuBar","line":"1196","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","line":"1197","kind":"variable"},{"name":"_MenuDecoratedPopupPanel","id":"_MenuDecoratedPopupPanel5()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_MenuDecoratedPopupPanel/menuBar","name":"menuBar"},"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"menuBar","id":"menuBar","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_MenuDecoratedPopupPanel/item","name":"item"},"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoHide","id":"autoHide","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"modal","id":"modal","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"popup\"","name":"prefix","id":"prefix","kind":"param"}],"line":"1199","kind":"constructor"}],"line":"1194","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/MenuResource","name":"MenuResource"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDefault menu resources.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"MenuResources","id":"MenuResources","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a {@link MenuItem} has an associated submenu.\n","name":"menuBarSubMenuIcon","id":"menuBarSubMenuIcon0()","line":"1178","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResourcePrototype","name":"ImageResourcePrototype"},"name":"_getMenuImageResourcePrototype","isPrivate":true,"id":"_getMenuImageResourcePrototype1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"1186","kind":"method"},{"ref":{"refId":"dart_web_toolkit_resource/Source","name":"Source"},"name":"source","id":"source","line":"1171","kind":"property"},{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"_resource","isPrivate":true,"id":"_resource","line":"1164","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MENU_RESOURCE","id":"MENU_RESOURCE","line":"1166","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"MENU_RESOURCE_RTL","id":"MENU_RESOURCE_RTL","line":"1167","kind":"variable"},{"name":"MenuResources","id":"MenuResources0()","line":"1169","kind":"constructor"}],"line":"1162","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_resource/ClientBundle","name":"ClientBundle"},"comment":"\nA ClientBundle that contains the default resources for this widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"MenuResource","id":"MenuResource","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a {@link MenuItem} has an associated submenu.\n","name":"menuBarSubMenuIcon","id":"menuBarSubMenuIcon0()","line":"1156","kind":"method"}],"line":"1151","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasCloseHandlers","arguments":[{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"}],"name":"HasCloseHandlers"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA standard menu bar widget. A menu bar can contain any number of menu items,\neach of which can either fire a {@link com.google.gwt.core.client.Scheduler.ScheduledCommand} or\nopen a cascaded menu bar.\n\n<p>\n<img class='gallery' src='doc-files/MenuBar.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-MenuBar</dt>\n<dd>the menu bar itself</dd>\n<dt>.gwt-MenuBar-horizontal</dt>\n<dd>dependent style applied to horizontal menu bars</dd>\n<dt>.gwt-MenuBar-vertical</dt>\n<dd>dependent style applied to vertical menu bars</dd>\n<dt>.gwt-MenuBar .gwt-MenuItem</dt>\n<dd>menu items</dd>\n<dt>.gwt-MenuBar .gwt-MenuItem-selected</dt>\n<dd>selected menu items</dd>\n<dt>.gwt-MenuBar .gwt-MenuItemSeparator</dt>\n<dd>section breaks between menu items</dd>\n<dt>.gwt-MenuBar .gwt-MenuItemSeparator .menuSeparatorInner</dt>\n<dd>inner component of section separators</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopLeft</dt>\n<dd>the top left cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopLeftInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopCenter</dt>\n<dd>the top center cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopCenterInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopRight</dt>\n<dd>the top right cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupTopRightInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleLeft</dt>\n<dd>the middle left cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleLeftInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleCenter</dt>\n<dd>the middle center cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleCenterInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleRight</dt>\n<dd>the middle right cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupMiddleRightInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomLeft</dt>\n<dd>the bottom left cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomLeftInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomCenter</dt>\n<dd>the bottom center cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomCenterInner</dt>\n<dd>the inner element of the cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomRight</dt>\n<dd>the bottom right cell</dd>\n<dt>.gwt-MenuBarPopup .menuPopupBottomRightInner</dt>\n<dd>the inner element of the cell</dd>\n</dl>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.MenuBarExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nMenuBar elements in UiBinder template files can have a <code>vertical</code>\nbool attribute (which defaults to false), and may have only MenuItem\nelements as children. MenuItems may contain HTML and MenuBars.\n<p>\nFor example:\n\n<pre>\n&lt;g:MenuBar>\n  &lt;g:MenuItem>Higgledy\n    &lt;g:MenuBar vertical=\"true\">\n      &lt;g:MenuItem>able&lt;/g:MenuItem>\n      &lt;g:MenuItem>baker&lt;/g:MenuItem>\n      &lt;g:MenuItem>charlie&lt;/g:MenuItem>\n    &lt;/g:MenuBar>\n  &lt;/g:MenuItem>\n  &lt;g:MenuItem>Piggledy\n    &lt;g:MenuBar vertical=\"true\">\n      &lt;g:MenuItem>foo&lt;/g:MenuItem>\n      &lt;g:MenuItem>bar&lt;/g:MenuItem>\n      &lt;g:MenuItem>baz&lt;/g:MenuItem>\n    &lt;/g:MenuBar>\n  &lt;/g:MenuItem>\n  &lt;g:MenuItem>&lt;b>Pop!&lt;/b>\n    &lt;g:MenuBar vertical=\"true\">\n      &lt;g:MenuItem>uno&lt;/g:MenuItem>\n      &lt;g:MenuItem>dos&lt;/g:MenuItem>\n      &lt;g:MenuItem>tres&lt;/g:MenuItem>\n    &lt;/g:MenuBar>\n  &lt;/g:MenuItem>\n&lt;/g:MenuBar>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_bar.dart","name":"MenuBar","id":"MenuBar","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"comment":"\nAdds a menu item to the bar.\n\n@param item the item to be added\n@return the {@link MenuItem} object\n","name":"addItem","id":"addItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"comment":"\nAdds a menu item to the bar containing SafeHtml, that will fire the given\ncommand when it is selected.\n\n@param html the item's html text\n@param cmd the command to be fired\n@return the {@link MenuItem} object created\n","name":"addSafeHtmlItem","id":"addSafeHtmlItem3()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"isOptional":true,"name":"popup","id":"popup","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"isOptional":true,"name":"cmd","id":"cmd","kind":"param"}],"line":"171","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"comment":"\nAdds a menu item to the bar, that will fire the given command when it is\nselected.\n\n@param text the item's text\n@param asHtml <code>true</code> to treat the specified text as html\n@param cmd the command to be fired\n@return the {@link MenuItem} object created\n","name":"addTextItem","id":"addTextItem4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"isOptional":true,"name":"popup","id":"popup","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"isOptional":true,"name":"cmd","id":"cmd","kind":"param"}],"line":"184","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"comment":"\nAdds a thin line to the {@link MenuBar} to separate sections of\n{@link MenuItem}s.\n\n@param separator the {@link MenuItemSeparator} to be added\n@return the {@link MenuItemSeparator} object\n","name":"addSeparator","id":"addSeparator1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"isOptional":true,"defaultValue":"null","name":"separator","id":"separator","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all menu items from this menu bar.\n","name":"clearItems","id":"clearItems0()","line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses this menu and all child menu popups.\n\n@param pFocus true to move focus to the parent\n","name":"closeAllChildren","id":"closeAllChildren1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"pFocus","id":"pFocus","kind":"param"}],"line":"234","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGive this MenuBar focus.\n","name":"focus","id":"focus0()","line":"254","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this menu bar's child menus will open when the mouse is moved\nover it.\n\n@return <code>true</code> if child menus will auto-open\n","name":"getAutoOpen","id":"getAutoOpen0()","line":"264","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the index of a {@link MenuItem}.\n\n@return the index of the item, or -1 if it is not contained by this MenuBar\n","name":"getItemIndex","id":"getItemIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"273","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the index of a {@link MenuItemSeparator}.\n\n@return the index of the separator, or -1 if it is not contained by this\n        MenuBar\n","name":"getSeparatorIndex","id":"getSeparatorIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"name":"item","id":"item","kind":"param"}],"line":"283","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"comment":"\nAdds a menu item to the bar at a specific index.\n\n@param item the item to be inserted\n@param beforeIndex the index where the item should be inserted\n@return the {@link MenuItem} object\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertItem","id":"insertItem2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"296","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"comment":"\nAdds a thin line to the {@link MenuBar} to separate sections of\n{@link MenuItem}s at the specified index.\n\n@param separator the {@link MenuItemSeparator} to be inserted\n@param beforeIndex the index where the separator should be inserted\n@return the {@link MenuItemSeparator} object\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertSeparator","id":"insertSeparator2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"isOptional":true,"defaultValue":"null","name":"separator","id":"separator","kind":"param"}],"line":"332","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"353","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether or not this widget will steal keyboard focus when the mouse\nhovers over it.\n\n@return true if enabled, false if disabled\n","name":"isFocusOnHoverEnabled","id":"isFocusOnHoverEnabled0()","line":"363","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the menu selection down to the next item. If there is no selection,\nselects the first item. If there are no items at all, does nothing.\n","name":"moveSelectionDown","id":"moveSelectionDown0()","line":"371","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the menu selection up to the previous item. If there is no selection,\nselects the first item. If there are no items at all, does nothing.\n","name":"moveSelectionUp","id":"moveSelectionUp0()","line":"400","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"415","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses the menu bar.\n\n@deprecated Use {@link #addCloseHandler(CloseHandler)} instead\n\n\nRemoves the specified menu item from the bar.\n\n@param item the item to be removed\n","name":"removeItem","id":"removeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"519","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the specified {@link MenuItemSeparator} from the bar.\n\n@param separator the separator to be removed\n","name":"removeSeparator","id":"removeSeparator1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItemSeparator","name":"MenuItemSeparator"},"name":"separator","id":"separator","kind":"param"}],"line":"537","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSelect the given MenuItem, which must be a direct child of this MenuBar.\n\n@param item the MenuItem to select, or null to clear selection\n","name":"selectItem","id":"selectItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"548","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"587","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this menu bar's child menus will open when the mouse is moved\nover it.\n\n@param autoOpen <code>true</code> to cause child menus to auto-open\n","name":"setAutoOpen","id":"setAutoOpen1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoOpen","id":"autoOpen","kind":"param"}],"line":"597","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable auto focus when the mouse hovers over the MenuBar. This\nallows the MenuBar to respond to keyboard events without the user having to\nclick on it, but it will steal focus from other elements on the page.\nEnabled by default.\n\n@param enabled true to enable, false to disable\n","name":"setFocusOnHoverEnabled","id":"setFocusOnHoverEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"609","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"}],"name":"List"},"comment":"\nReturns a list containing the <code>MenuItem</code> objects in the menu\nbar. If there are no items in the menu bar, then an empty <code>List</code>\nobject will be returned.\n\n@return a list containing the <code>MenuItem</code> objects in the menu bar\n","name":"getItems","id":"getItems0()","line":"620","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"comment":"\nReturns the <code>MenuItem</code> that is currently selected (highlighted)\nby the user. If none of the items in the menu are currently selected, then\n<code>null</code> will be returned.\n\n@return the <code>MenuItem</code> that is currently selected, or\n        <code>null</code> if no items are currently selected\n","name":"getSelectedItem","id":"getSelectedItem0()","line":"632","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"637","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"closeAllParents","id":"closeAllParents0()","line":"649","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses all parent and child menu popups.\n","name":"closeAllParentsAndChildren","id":"closeAllParentsAndChildren0()","line":"662","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doItemAction","id":"doItemAction3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"fireCommand","id":"fireCommand","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"pFocus","id":"pFocus","kind":"param"}],"line":"681","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"comment":"\nVisible for testing.\n","name":"getPopup","id":"getPopup0()","line":"734","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"itemOver","id":"itemOver2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"pFocus","id":"pFocus","kind":"param"}],"line":"738","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShow or hide the icon used for items with a submenu.\n\n@param item the item with or without a submenu\n","name":"updateSubmenuIcon","id":"updateSubmenuIcon1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"785","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPhysically add the td element of a {@link MenuItem} or\n{@link MenuItemSeparator} to this {@link MenuBar}.\n\n@param beforeIndex the index where the separator should be inserted\n@param tdElem the td element to be added\n","name":"_addItemElement","isPrivate":true,"id":"_addItemElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"tdElem","id":"tdElem","kind":"param"}],"line":"826","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses this menu (if it is a popup).\n\n@param focus true to move focus to the parent\n","name":"_close","isPrivate":true,"id":"_close1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focus","id":"focus","kind":"param"}],"line":"842","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_eatEvent","isPrivate":true,"id":"_eatEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"851","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"_findItem","isPrivate":true,"id":"_findItem1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"hItem","id":"hItem","kind":"param"}],"line":"856","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_getItemContainerElement","isPrivate":true,"id":"_getItemContainerElement0()","line":"865","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"vertical","id":"vertical","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"subMenuIcon","id":"subMenuIcon","kind":"param"}],"line":"873","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_moveToNextItem","isPrivate":true,"id":"_moveToNextItem0()","line":"917","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_moveToPrevItem","isPrivate":true,"id":"_moveToPrevItem0()","line":"942","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onHide","isPrivate":true,"id":"_onHide1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"pFocus","id":"pFocus","kind":"param"}],"line":"962","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onShow","isPrivate":true,"id":"_onShow0()","line":"975","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_openPopup","isPrivate":true,"id":"_openPopup1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"item","id":"item","kind":"param"}],"line":"980","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves the specified item from the {@link MenuBar} and the physical Dom\nstructure.\n\n@param item the item to be removed\n@return true if the item was removed\n","name":"_removeItemElement","isPrivate":true,"id":"_removeItemElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"item","id":"item","kind":"param"}],"line":"1031","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSelects the first item in the menu if no items are currently selected. Has\nno effect if there are no items.\n\n@return true if no item was previously selected, false otherwise\n","name":"_selectFirstItemIfNoneSelected","isPrivate":true,"id":"_selectFirstItemIfNoneSelected0()","line":"1050","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_selectNextItem","isPrivate":true,"id":"_selectNextItem0()","line":"1063","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_selectPrevItem","isPrivate":true,"id":"_selectPrevItem0()","line":"1100","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the colspan of a {@link MenuItem} or {@link MenuItemSeparator}.\n\n@param item the {@link MenuItem} or {@link MenuItemSeparator}\n@param colspan the colspan\n","name":"_setItemColSpan","isPrivate":true,"id":"_setItemColSpan2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"colspan","id":"colspan","kind":"param"}],"line":"1143","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"112","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"}],"name":"List"},"comment":"\nList of all {@link MenuItem}s and {@link MenuItemSeparator}s.\n","name":"_allItems","isPrivate":true,"id":"_allItems","line":"117","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"}],"name":"List"},"comment":"\nList of {@link MenuItem}s, not including {@link MenuItemSeparator}s.\n","name":"_items","isPrivate":true,"id":"_items","line":"122","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_body","isPrivate":true,"id":"_body","line":"124","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"_subMenuIcon","isPrivate":true,"id":"_subMenuIcon","line":"126","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationEnabled","isPrivate":true,"id":"_isAnimationEnabled","line":"127","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"_parentMenu","isPrivate":true,"id":"_parentMenu","line":"128","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_popup","isPrivate":true,"id":"_popup","line":"129","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuItem","name":"MenuItem"},"name":"_selectedItem","isPrivate":true,"id":"_selectedItem","line":"130","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"_shownChildMenu","isPrivate":true,"id":"_shownChildMenu","line":"131","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_vertical","isPrivate":true,"id":"_vertical","line":"132","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_autoOpen","isPrivate":true,"id":"_autoOpen","line":"132","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_focusOnHover","isPrivate":true,"id":"_focusOnHover","line":"133","kind":"variable"},{"comment":"\nCreates an empty menu bar that uses the specified ClientBundle for menu\nimages.\n\n@param vertical <code>true</code> to orient the menu bar vertically\n@param resources a bundle that provides images for this menu\n","name":"MenuBar","id":"MenuBar2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"vertical","id":"vertical","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/MenuResource","name":"MenuResource"},"isOptional":true,"defaultValue":"null","name":"resources","id":"resources","kind":"param"}],"line":"142","kind":"constructor"}],"line":"110","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_event/HasEnabled","name":"HasEnabled"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"}],"superclass":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"comment":"\nAn entry in a\n{@link com.google.gwt.user.client.ui.MenuBar}. Menu items can either fire a\n{@link com.google.gwt.core.client.Scheduler.ScheduledCommand} when they are clicked, or open a\ncascading sub-menu.\n\nEach menu item is assigned a unique Dom id in order to support ARIA. See\n{@link com.google.gwt.user.client.ui.Accessibility} for more information.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_item.dart","name":"MenuItem","id":"MenuItem","children":[{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"isOptional":true,"defaultValue":"null","name":"subMenu","id":"subMenu","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"isOptional":true,"defaultValue":"null","name":"cmd","id":"cmd","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"comment":"\nGets the menu that contains this item.\n\n@return the parent menu, or <code>null</code> if none exists.\n","name":"getParentMenu","id":"getParentMenu0()","line":"187","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"comment":"\nGets the scheduled command associated with this item.\n\n@return this item's scheduled command, or <code>null</code> if none exists\n","name":"getScheduledCommand","id":"getScheduledCommand0()","line":"196","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"comment":"\nGets the sub-menu associated with this item.\n\n@return this item's sub-menu, or <code>null</code> if none exists\n","name":"getSubMenu","id":"getSubMenu0()","line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the command associated with this item.\n\n@param cmd the command to be associated with this item\n@deprecated use {@link #setScheduledCommand(ScheduledCommand)} instead\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"val","id":"val","kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSafeHtml","id":"setSafeHtml1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"val","id":"val","kind":"param"}],"line":"241","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the scheduled command associated with this item.\n\n@param cmd the scheduled command to be associated with this item\n","name":"setScheduledCommand","id":"setScheduledCommand1()","children":[{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"cmd","id":"cmd","kind":"param"}],"line":"255","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the sub-menu associated with this item.\n\n@param subMenu this item's new sub-menu\n","name":"setSubMenu","id":"setSubMenu1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"subMenu","id":"subMenu","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"284","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSelectionStyle","id":"setSelectionStyle1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"selected","id":"selected","kind":"param"}],"line":"288","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setParentMenu","id":"setParentMenu1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"parentMenu","id":"parentMenu","kind":"param"}],"line":"296","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nConstructs a new menu item that fires a command when it is selected.\n\n@param text the item's text\n@param asHtml <code>true</code> to treat the specified text as html\n@param cmd the command to be fired when it is selected\n\n\nConstructs a new menu item that cascades to a sub-menu when it is selected.\n\n@param text the item's text\n@param asHtml <code>true</code> to treat the specified text as html\n@param subMenu the sub-menu to be displayed when it is selected\n\n\nConstructs a new menu item that fires a command when it is selected.\n\n@param text the item's text\n@param cmd the command to be fired when it is selected\n\n\nConstructs a new menu item that cascades to a sub-menu when it is selected.\n\n@param text the item's text\n@param subMenu the sub-menu to be displayed when it is selected\n\n/    Roles.getMenuitemRole().set(getElement());\n\nGets the command associated with this item.  If a scheduled command\nis associated with this item a command that can be used to execute the\nscheduled command will be returned.\n\n@return the command\n@deprecated use {@link #getScheduledCommand()} instead\n","name":"html","id":"html","line":"178","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"210","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","line":"215","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_DEPENDENT_STYLENAME_SELECTED_ITEM","isPrivate":true,"id":"_DEPENDENT_STYLENAME_SELECTED_ITEM","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_DEPENDENT_STYLENAME_DISABLED_ITEM","isPrivate":true,"id":"_DEPENDENT_STYLENAME_DISABLED_ITEM","line":"18","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"_command","isPrivate":true,"id":"_command","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"_parentMenu","isPrivate":true,"id":"_parentMenu","line":"21","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"_subMenu","isPrivate":true,"id":"_subMenu","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_enabled","isPrivate":true,"id":"_enabled","line":"22","kind":"variable"},{"comment":"\nConstructs a new menu item that fires a command when it is selected.\n\n@param html the item's html text\n\n\nConstructs a new menu item that fires a command when it is selected.\n\n@param html the item's text\n@param cmd the command to be fired when it is selected\n\n\nConstructs a new menu item that cascades to a sub-menu when it is selected.\n\n@param html the item's text\n@param subMenu the sub-menu to be displayed when it is selected\n","name":"MenuItem.fromSafeHtml","id":"MenuItem.fromSafeHtml3()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"isOptional":true,"name":"subMenu","id":"subMenu","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"isOptional":true,"name":"cmd","id":"cmd","kind":"param"}],"line":"53","kind":"constructor"},{"name":"MenuItem","id":"MenuItem4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"isOptional":true,"defaultValue":"null","name":"subMenu","id":"subMenu","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"isOptional":true,"defaultValue":"null","name":"cmd","id":"cmd","kind":"param"}],"line":"57","kind":"constructor"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"comment":"\nA separator that can be placed in a\n{@link com.google.gwt.user.client.ui.MenuBar}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/menu_item_separator.dart","name":"MenuItemSeparator","id":"MenuItemSeparator","children":[{"returnType":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"comment":"\nGets the menu that contains this item.\n\n@return the parent menu, or <code>null</code> if none exists.\n","name":"getParentMenu","id":"getParentMenu0()","line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setParentMenu","id":"setParentMenu1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"parentMenu","id":"parentMenu","kind":"param"}],"line":"38","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"12","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/MenuBar","name":"MenuBar"},"name":"_parentMenu","isPrivate":true,"id":"_parentMenu","line":"14","kind":"variable"},{"comment":"\nConstructs a new {@link MenuItemSeparator}.\n","name":"MenuItemSeparator","id":"MenuItemSeparator0()","line":"19","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn opaque representation of a particular image such that the image can be\naccessed either as an HTML fragment or as an {@link Image} object. An image\nprototype can be thought of as an abstract image factory with additional\ncapabilities.\n\n<p>\nThe {@link #applyTo(Image)} method provides an efficient way to replace the\ncontents of an existing <code>Image</code>. This is useful in cases where an\nimage changes its appearance based on a user's action. Instead of creating\ntwo <code>Image</code> objects then alternately hiding/showing them, one can\nuse the {@link #applyTo(Image)} method of two\n<code>AbstractImagePrototype</code> objects to transform a single\n<code>Image</code> object between two (or more) visual representations. The\nuse of <code>AbstractImagePrototypes</code> results in an cleaner and more\nefficient implementation.\n</p>\n\n<p>\nThis class also provide methods for working with raw elements, using\n{@link #createElement()} and {@link #applyTo(ImagePrototypeElement)}.\n</p>\n\n<p>\nThis class is also a useful way to encapsulate complex HTML that represents\nan image without actually instantiating <code>Image</code> objects. When\nconstructing large HTML fragments, especially those that contain many images,\n{@link #getHTML()} can be much more efficient.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/abstract_image_prototype.dart","name":"AbstractImagePrototype","id":"AbstractImagePrototype","children":[{"returnType":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"isStatic":true,"comment":"\nCreate an AbstractImagePrototype backed by a ClientBundle ImageResource.\nThis method provides an API compatibility mapping for the new ImageResource\nAPI.\n\n@param resource an ImageResource produced by a ClientBundle\n@return an AbstractImagePrototype that displays the contents of the\n        ImageResource\n","name":"create","id":"create1()","children":[{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"resource","id":"resource","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTransforms an existing {@link Image} into the image represented by this\nprototype.\n\n@param image the instance to be transformed to match this prototype\n","name":"applyTo","id":"applyTo1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTransforms an existing {@link ImagePrototypeElement} into the image\nrepresented by this prototype.\n\n@param imageElement an <code>ImagePrototypeElement</code> created by\n         {@link #createElement()}\n","name":"applyToImageElement","id":"applyToImageElement1()","children":[{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"imageElement","id":"imageElement","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"comment":"\nCreates a new {@link Element} based on the image represented by this\nprototype. The DOM structure may not necessarily a simple\n<code>&lt;img&gt;</code> element. It may be a more complex structure that\nshould be treated opaquely.\n\n@return the <code>ImagePrototypeElement</code> corresponding to the image\n        represented by this prototype\n","name":"createElement","id":"createElement0()","line":"82","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"comment":"\nCreates a new {@link Image} instance based on the image represented by this\nprototype.\n\n@return a new {@link Image} based on this prototype\n","name":"createImage","id":"createImage0()","line":"94","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets an HTML fragment that displays the image represented by this\nprototype. The HTML returned is not necessarily a simple\n<code>&lt;img&gt;</code> element. It may be a more complex structure that\nshould be treated opaquely.\n<p>\nThe default implementation calls {@link #getSafeHtml()}.\n\n@return the HTML representation of this prototype\n","name":"getHtml","id":"getHtml0()","line":"106","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"comment":"\nGets an HTML fragment that displays the image represented by this\nprototype. The HTML returned is not necessarily a simple\n<code>&lt;img&gt;</code> element. It may be a more complex structure that\nshould be treated opaquely.\n<p>\nThe default implementation throws an {@link UnsupportedOperationException}.\n\n@return the HTML representation of this prototype\n","name":"getSafeHtml","id":"getSafeHtml0()","line":"120","kind":"method"}],"line":"36","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThere are several ways of configuring images for the Tree widget due to\ndeprecated APIs.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree.dart","name":"_ImageAdapter","isPrivate":true,"id":"_ImageAdapter","children":[{"returnType":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"treeClosed","id":"treeClosed0()","line":"1234","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"treeLeaf","id":"treeLeaf0()","line":"1238","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"treeOpen","id":"treeOpen0()","line":"1242","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"_treeClosed","isPrivate":true,"id":"_treeClosed","line":"1221","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"_treeLeaf","isPrivate":true,"id":"_treeLeaf","line":"1222","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"_treeOpen","isPrivate":true,"id":"_treeOpen","line":"1223","kind":"variable"},{"name":"_ImageAdapter","id":"_ImageAdapter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_TreeResource","name":"_TreeResource"},"isOptional":true,"defaultValue":"null","name":"resources","id":"resources","kind":"param"}],"line":"1225","kind":"constructor"}],"line":"1220","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_resource/Source","name":"Source"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSpecifies the classpath location of the resource or resources associated\nwith the {@link ResourcePrototype}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree.dart","name":"_TreeSource","isPrivate":true,"id":"_TreeSource","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"value","id":"value0()","line":"1211","kind":"method"}],"line":"1210","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/_TreeResource","name":"_TreeResource"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDefault tree resources\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree.dart","name":"_TreeResources","isPrivate":true,"id":"_TreeResources","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a closed branch.\n","name":"treeClosed","id":"treeClosed0()","line":"1170","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a leaf.\n","name":"treeLeaf","id":"treeLeaf0()","line":"1180","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating an open branch.\n","name":"treeOpen","id":"treeOpen0()","line":"1190","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResourcePrototype","name":"ImageResourcePrototype"},"name":"_getTreeImageResourcePrototype","isPrivate":true,"id":"_getTreeImageResourcePrototype1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"1197","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_TreeResources","name":"_TreeResources"},"isStatic":true,"name":"DEFAULT_RESOURCES","id":"DEFAULT_RESOURCES","line":"1156","kind":"property"},{"ref":{"refId":"dart_web_toolkit_resource/Source","name":"Source"},"name":"source","id":"source","line":"1163","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"}],"name":"Map"},"isFinal":true,"name":"_resources","isPrivate":true,"id":"_resources","line":"1146","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TREE_CLOSED","id":"TREE_CLOSED","line":"1148","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TREE_LEAF","id":"TREE_LEAF","line":"1149","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"TREE_OPEN","id":"TREE_OPEN","line":"1150","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_TreeResources","name":"_TreeResources"},"isStatic":true,"name":"_instance","isPrivate":true,"id":"_instance","line":"1154","kind":"variable"},{"name":"_TreeResources","id":"_TreeResources0()","line":"1152","kind":"constructor"}],"line":"1144","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_resource/ClientBundle","name":"ClientBundle"},"comment":"\nA ClientBundle that provides images for this widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree.dart","name":"_TreeResource","isPrivate":true,"id":"_TreeResource","children":[{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a closed branch.\n","name":"treeClosed","id":"treeClosed0()","line":"1128","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating a leaf.\n","name":"treeLeaf","id":"treeLeaf0()","line":"1133","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"comment":"\nAn image indicating an open branch.\n","name":"treeOpen","id":"treeOpen0()","line":"1138","kind":"method"}],"line":"1123","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"},{"refId":"dart_web_toolkit_event/HasCloseHandlers","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"HasCloseHandlers"},{"refId":"dart_web_toolkit_event/HasOpenHandlers","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"HasOpenHandlers"},{"refId":"dart_web_toolkit_event/HasSelectionHandlers","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"HasSelectionHandlers"},{"refId":"dart_web_toolkit_event/HasAllFocusHandlers","name":"HasAllFocusHandlers"},{"refId":"dart_web_toolkit_event/HasAllKeyHandlers","name":"HasAllKeyHandlers"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"},{"refId":"dart_web_toolkit_event/Focusable","name":"Focusable"},{"refId":"dart_web_toolkit_ui/HasWidgetsForIsWidget","name":"HasWidgetsForIsWidget"},{"refId":"dart_web_toolkit_ui/HasTreeItemsForIsWidget","name":"HasTreeItemsForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA standard hierarchical tree widget. The tree contains a hierarchy of\n{@link com.google.gwt.user.client.ui.TreeItem TreeItems} that the user can\nopen, close, and select.\n<p>\n<img class='gallery' src='doc-files/Tree.png'/>\n</p>\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-Tree</dt>\n<dd>the tree itself</dd>\n<dt>.gwt-Tree .gwt-TreeItem</dt>\n<dd>a tree item</dd>\n<dt>.gwt-Tree .gwt-TreeItem-selected</dt>\n<dd>a selected tree item</dd>\n</dl>\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TreeExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tree.dart","name":"Tree","id":"Tree","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"shouldTreeDelegateFocusToElement","id":"shouldTreeDelegateFocusToElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isArrowKey","id":"isArrowKey1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"code","id":"code","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nNormalized key codes. Also switches KEY_RIGHT and KEY_LEFT in RTL\nlanguages.\n","name":"_standardizeKeycode","isPrivate":true,"id":"_standardizeKeycode1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"code","id":"code","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds the widget as a root tree item.\n\n@see com.google.gwt.user.client.ui.HasWidgets#add(com.google.gwt.user.client.ui.Widget)\n@param widget widget to add.\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget)\n","name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"146","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBlurHandler","id":"addBlurHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addFocusHandler","id":"addFocusHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"161","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a simple tree item containing the specified html.\n\n@param itemHtml the html of the item to be added\n@return the item that was added\n","name":"addSafeHtmlItem","id":"addSafeHtmlItem1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"itemHtml","id":"itemHtml","kind":"param"}],"line":"172","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds an item to the root level of this tree.\n\n@param item the item to be added\n","name":"addItem","id":"addItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"182","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds an item to the root level of this tree.\n\n@param isItem the wrapper of item to be added\n","name":"addIsTreeItem","id":"addIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"192","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a new tree item containing the specified widget.\n\n@param widget the widget to be added\n@return the new item\n","name":"addWidgetItem","id":"addWidgetItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addItem(Widget)\n","name":"addIsWidgetItem","id":"addIsWidgetItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"217","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"227","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"232","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"236","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"241","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"251","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"256","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addOpenHandler","id":"addOpenHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/OpenHandler","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"OpenHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"261","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"SelectionHandler"},"name":"handler","id":"handler","line":"267","kind":"param"}],"line":"266","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nAdds a simple tree item containing the specified text.\n\n@param itemText the text of the item to be added\n@return the item that was added\n","name":"addTextItem","id":"addTextItem1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"itemText","id":"itemText","kind":"param"}],"line":"278","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nClears all tree items from the current tree.\n","name":"clear","id":"clear0()","line":"286","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnsures that the currently-selected item is visible, opening its parents\nand scrolling the tree as necessary.\n","name":"ensureSelectedItemVisible","id":"ensureSelectedItemVisible0()","line":"297","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nGets the top-level tree item at the specified index.\n\n@param index the index to be retrieved\n@return the item at that index\n","name":"getItem","id":"getItem1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"315","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of items contained at the root of this tree.\n\n@return this tree's item count\n","name":"getItemCount","id":"getItemCount0()","line":"324","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nGets the currently selected item.\n\n@return the selected item\n","name":"getSelectedItem","id":"getSelectedItem0()","line":"333","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\nhtml.\n\n@param beforeIndex the index where the item will be inserted\n@param itemHtml the html of the item to be added\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertSafeHtmlItem","id":"insertSafeHtmlItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"itemHtml","id":"itemHtml","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts an item into the root level of this tree.\n\n@param beforeIndex the index where the item will be inserted\n@param item the item to be added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertItem","id":"insertItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"362","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\nwidget.\n\n@param beforeIndex the index where the item will be inserted\n@param widget the widget to be added\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertWidgetItem","id":"insertWidgetItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"375","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nInserts a child tree item at the specified index containing the specified\ntext.\n\n@param beforeIndex the index where the item will be inserted\n@param itemText the text of the item to be added\n@return the item that was added\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"insertTextItem","id":"insertTextItem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"itemText","id":"itemText","kind":"param"}],"line":"388","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"393","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"405","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"497","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nOverloaded version for IsWidget.\n\n@see #remove(Widget)\n","name":"removeIsWidget","id":"removeIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"515","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves an item from the root level of this tree.\n\n@param item the item to be removed\n","name":"removeItem","id":"removeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"525","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves an item from the _root level of this tree.\n\n@param isItem the wrapper of item to be removed\n","name":"removeIsTreeItem","id":"removeIsTreeItem1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsTreeItem","name":"IsTreeItem"},"name":"isItem","id":"isItem","kind":"param"}],"line":"535","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all items from the root level of this tree.\n","name":"removeItems","id":"removeItems0()","line":"546","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"accessKey=","id":"accessKey=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"552","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"557","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"val","id":"val","kind":"param"}],"line":"562","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSelects a specified item.\n\n@param item the item to be selected, or <code>null</code> to deselect all\n         items\n@param fireEvents <code>true</code> to allow selection events to be fired\n","name":"setSelectedItem","id":"setSelectedItem2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"577","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"591","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"Iterator"},"comment":"\nIterator of tree items.\n\n@return the iterator\n","name":"treeItemIterator","id":"treeItemIterator0()","line":"600","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doAttachChildren","id":"doAttachChildren0()","line":"607","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doDetachChildren","id":"doDetachChildren0()","line":"616","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIndicates if keyboard navigation is enabled for the Tree and for a given\nTreeItem. Subclasses of Tree can override this function to selectively\nenable or disable keyboard navigation.\n\n@param currentItem the currently selected TreeItem\n@return <code>true</code> if the Tree will response to arrow keys by\n        changing the currently selected item\n","name":"isKeyboardNavigationEnabled","id":"isKeyboardNavigationEnabled1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"currentItem","id":"currentItem","kind":"param"}],"line":"633","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoad","id":"onLoad0()","line":"637","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"adopt","id":"adopt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"treeItem","id":"treeItem","kind":"param"}],"line":"641","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireStateChanged","id":"fireStateChanged2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"open","id":"open","kind":"param"}],"line":"647","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"Map"},"name":"getChildWidgets","id":"getChildWidgets0()","line":"658","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/_ImageAdapter","name":"_ImageAdapter"},"name":"getImages","id":"getImages0()","line":"662","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"maybeUpdateSelection","id":"maybeUpdateSelection2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"itemThatChangedState","id":"itemThatChangedState","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isItemOpening","id":"isItemOpening","kind":"param"}],"line":"666","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"orphan","id":"orphan1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"684","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled only from {@link TreeItem}: Shows the closed image on that tree\nitem.\n\n@param treeItem the tree item\n","name":"showClosedImage","id":"showClosedImage1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"treeItem","id":"treeItem","kind":"param"}],"line":"703","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled only from {@link TreeItem}: Shows the leaf image on a tree item.\n\n@param treeItem the tree item\n","name":"showLeafImage","id":"showLeafImage1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"treeItem","id":"treeItem","kind":"param"}],"line":"712","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled only from {@link TreeItem}: Shows the open image on a tree item.\n\n@param treeItem the tree item\n","name":"showOpenImage","id":"showOpenImage1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"treeItem","id":"treeItem","kind":"param"}],"line":"727","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCollects parents going up the element tree, terminated at the tree root.\n","name":"_collectElementChain","isPrivate":true,"id":"_collectElementChain3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Element","name":"Element"}],"name":"List"},"name":"chain","id":"chain","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"hRoot","id":"hRoot","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"hElem","id":"hElem","line":"735","kind":"param"}],"line":"734","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_elementClicked","isPrivate":true,"id":"_elementClicked1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"hElem","id":"hElem","kind":"param"}],"line":"744","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"_findDeepestOpenChild","isPrivate":true,"id":"_findDeepestOpenChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"763","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"_findItemByChain","isPrivate":true,"id":"_findItemByChain3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Element","name":"Element"}],"name":"List"},"name":"chain","id":"chain","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"idx","id":"idx","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"root","id":"root","line":"771","kind":"param"}],"line":"770","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"comment":"\nGet the top parent above this {@link TreeItem} that is in closed state. In\nother words, get the parent that is guaranteed to be visible.\n\n@param item\n@return the closed parent, or null if all parents are opened\n","name":"_getTopClosedParent","isPrivate":true,"id":"_getTopClosedParent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"}],"line":"798","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_ImageAdapter","name":"_ImageAdapter"},"name":"images","id":"images","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"useLeafImages","id":"useLeafImages","kind":"param"}],"line":"810","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_keyboardNavigation","isPrivate":true,"id":"_keyboardNavigation1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"847","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_maybeCollapseTreeItem","isPrivate":true,"id":"_maybeCollapseTreeItem0()","line":"872","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_maybeExpandTreeItem","isPrivate":true,"id":"_maybeExpandTreeItem0()","line":"888","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMove the tree focus to the specified selected item.\n","name":"_moveFocus","isPrivate":true,"id":"_moveFocus0()","line":"904","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves to the next item, going into children as if dig is enabled.\n","name":"_moveSelectionDown","isPrivate":true,"id":"_moveSelectionDown2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"sel","id":"sel","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"dig","id":"dig","kind":"param"}],"line":"951","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the selected item up one.\n","name":"_moveSelectionUp","isPrivate":true,"id":"_moveSelectionUp1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"sel","id":"sel","kind":"param"}],"line":"983","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onSelection","isPrivate":true,"id":"_onSelection3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"fireEvents","id":"fireEvents","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"moveFocus","id":"moveFocus","kind":"param"}],"line":"1005","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setImages","isPrivate":true,"id":"_setImages2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_ImageAdapter","name":"_ImageAdapter"},"name":"images","id":"images","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"useLeafImages","id":"useLeafImages","kind":"param"}],"line":"1029","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_showImage","isPrivate":true,"id":"_showImage2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"treeItem","id":"treeItem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/AbstractImagePrototype","name":"AbstractImagePrototype"},"name":"proto","id":"proto","kind":"param"}],"line":"1043","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_updateAriaAttributes","isPrivate":true,"id":"_updateAriaAttributes0()","line":"1056","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"tabIndex","id":"tabIndex","line":"338","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_OTHER_KEY_DOWN","isPrivate":true,"id":"_OTHER_KEY_DOWN","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_OTHER_KEY_LEFT","isPrivate":true,"id":"_OTHER_KEY_LEFT","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_OTHER_KEY_RIGHT","isPrivate":true,"id":"_OTHER_KEY_RIGHT","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_OTHER_KEY_UP","isPrivate":true,"id":"_OTHER_KEY_UP","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"}],"name":"Map"},"comment":"\nMap of TreeItem.widget -> TreeItem.\n","name":"_childWidgets","isPrivate":true,"id":"_childWidgets","line":"95","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"_curSelection","isPrivate":true,"id":"_curSelection","line":"97","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_focusable","isPrivate":true,"id":"_focusable","line":"99","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_ImageAdapter","name":"_ImageAdapter"},"name":"_images","isPrivate":true,"id":"_images","line":"101","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_indentValue","isPrivate":true,"id":"_indentValue","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationEnabled","isPrivate":true,"id":"_isAnimationEnabled","line":"105","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_lastWasKeyDown","isPrivate":true,"id":"_lastWasKeyDown","line":"107","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TreeItem","name":"TreeItem"},"name":"_root","isPrivate":true,"id":"_root","line":"109","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_useLeafImages","isPrivate":true,"id":"_useLeafImages","line":"111","kind":"variable"},{"comment":"\nConstructs a tree that uses the specified ClientBundle for images. If this\ntree does not use leaf images, the width of the Resources's leaf image will\ncontrol the leaf indent.\n\n@param resources a bundle that provides tree specific images\n@param useLeafImages use leaf images from bundle\n","name":"Tree","id":"Tree2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_TreeResource","name":"_TreeResource"},"isOptional":true,"defaultValue":"null","name":"resources","id":"resources","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"useLeafImages","id":"useLeafImages","kind":"param"}],"line":"121","kind":"constructor"}],"line":"27","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_ui/TakesValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"TakesValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/HasConstrainedValue","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"HasConstrainedValue"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nImplementation of {@link HasConstrainedValue} based on a\n{@link com.google.gwt.dom.client.SelectElement}.\n<p>\nA {@link Renderer Renderer<T>} is used to get user-presentable strings to\ndisplay in the select element.\n\n@param <T> the value type\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/value_list_box.dart","name":"ValueListBox","id":"ValueListBox","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"44","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TakesValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"TakesValueEditor"},"comment":"\nReturns a {@link TakesValueEditor} backed by the ValueListBox.\n","name":"asEditor","id":"asEditor0()","line":"51","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"},"name":"getValue","id":"getValue0()","line":"58","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAcceptableValues","id":"setAcceptableValues1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"Iterable"},"name":"newValues","id":"newValues","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the value and display it in the select element. Add the value to the\nacceptable set if it is not already there.\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addValue","isPrivate":true,"id":"_addValue1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ListBox","name":"ListBox"},"name":"_getListBox","isPrivate":true,"id":"_getListBox0()","line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_updateListBox","isPrivate":true,"id":"_updateListBox0()","line":"109","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"List"},"isFinal":true,"name":"_values","isPrivate":true,"id":"_values","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Object","name":"Object"},{"refId":"dart.core/int","name":"int"}],"name":"Map"},"isFinal":true,"name":"_valueKeyToIndex","isPrivate":true,"id":"_valueKeyToIndex","line":"18","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"Renderer"},"isFinal":true,"name":"_renderer","isPrivate":true,"id":"_renderer","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_data/ProvidesKey","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"ProvidesKey"},"name":"_keyProvider","isPrivate":true,"id":"_keyProvider","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TakesValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"TakesValueEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"22","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","line":"23","kind":"variable"},{"name":"ValueListBox","id":"ValueListBox2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/ValueListBox/_renderer","name":"_renderer"},"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"Renderer"},"name":"_renderer","isPrivate":true,"id":"_renderer","kind":"param"},{"ref":{"refId":"dart_web_toolkit_data/ProvidesKey","arguments":[{"refId":"dart_web_toolkit_ui/ValueListBox/T","name":"T"}],"name":"ProvidesKey"},"isOptional":true,"defaultValue":"null","name":"keyProvider","id":"keyProvider","kind":"param"}],"line":"25","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_panel.dart","name":"TmpRow","id":"TmpRow","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"center","id":"center","line":"385","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"tr","id":"tr","line":"386","kind":"variable"}],"line":"384","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_panel.dart","name":"DockPanelLayoutData","id":"DockPanelLayoutData","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","line":"372","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"hAlign","id":"hAlign","line":"373","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","line":"374","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"td","id":"td","line":"375","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"vAlign","id":"vAlign","line":"376","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","line":"377","kind":"variable"},{"name":"DockPanelLayoutData","id":"DockPanelLayoutData1()","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"dir","id":"dir","kind":"param"}],"line":"379","kind":"constructor"}],"line":"371","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_i18n/HasAlignment","name":"HasAlignment"}],"superclass":{"refId":"dart_web_toolkit_ui/CellPanel","name":"CellPanel"},"comment":"\nA panel that lays its child widgets out \"docked\" at its outer edges, and\nallows its last widget to take up the remaining space in its center.\n\n<p>\nThis widget has limitations in standards mode that did not exist in quirks\nmode. The child Widgets contained within a DockPanel cannot be sized using\npercentages. Setting a child widget's height to <code>100%</code> will\n<em>NOT</em> cause the child to fill the available height.\n</p>\n\n<p>\nIf you need to work around these limitations, use {@link DockLayoutPanel}\ninstead, but understand that it is not a drop in replacement for this class.\nIt requires standards mode, and is most easily used under a\n{@link RootLayoutPanel} (as opposed to a {@link RootPanel}).\n</p>\n\n<p>\n<img class='gallery' src='doc-files/DockPanel.png'/>\n</p>\n\n@see DockLayoutPanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_panel.dart","name":"DockPanel","id":"DockPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the specified edge of the dock. If the widget is already a\nchild of this panel, this method behaves as though {@link #remove(Widget)}\nhad already been called.\n\n@param widget the widget to be added\n@param direction the widget's direction in the dock\n\n@throws Exception when adding to the {@link #CENTER} and\n          there is already a different widget there\n","name":"addWidgetTo","id":"addWidgetTo2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"}],"line":"55","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget,DockLayoutConstant)\n","name":"addIsWidgetTo","id":"addIsWidgetTo2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"97","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"getVerticalAlignment","id":"getVerticalAlignment0()","line":"101","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"comment":"\nGets the layout direction of the given child widget.\n\n@param w the widget to be queried\n@return the widget's layout direction, or <code>null</code> if it is not\n        a child of this panel\n","name":"getWidgetDirection","id":"getWidgetDirection1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCellHeight","id":"setCellHeight2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidgetCellHorizontalAlignment","id":"setWidgetCellHorizontalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","line":"143","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidgetCellVerticalAlignment","id":"setWidgetCellVerticalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"152","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCellWidth","id":"setCellWidth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"161","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default horizontal alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasHorizontalAlignment#setHorizontalAlignment(HasHorizontalAlignment.HorizontalAlignmentConstant)\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default vertical alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasVerticalAlignment#setVerticalAlignment(HasVerticalAlignment.VerticalAlignmentConstant)\n","name":"setVerticalAlignment","id":"setVerticalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@link DockPanel} supports adding more than one cell in a direction, so an\ninteger will be appended to the end of the debug id. For example, the first\nnorth cell is labeled \"north1\", the second is \"north2\", and the third is\n\"north3\".\n\nThis widget recreates its structure every time a {@link Widget} is added,\nso you must call this method after adding a new {@link Widget} or all debug\nIDs will be lost.\n\n<p>\n<b>Affected Elements:</b>\n<ul>\n<li>-center = the center cell.</li>\n<li>-north# = the northern cell.</li>\n<li>-south# = the southern cell.</li>\n<li>-east# = the eastern cell.</li>\n<li>-west# = the western cell.</li>\n</ul>\n</p>\n\n@see UIObject#onEnsureDebugId(String)\n\n\n(Re)creates the Dom structure of the table representing the DockPanel,\nbased on the order and layout of the children.\n","name":"realizeTable","id":"realizeTable0()","line":"237","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"shouldAddToLogicalLeftOfTable","id":"shouldAddToLogicalLeftOfTable1()","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"widgetDirection","id":"widgetDirection","kind":"param"}],"line":"320","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"shouldAddToLogicalRightOfTable","id":"shouldAddToLogicalRightOfTable1()","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"widgetDirection","id":"widgetDirection","kind":"param"}],"line":"349","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"_horzAlign","isPrivate":true,"id":"_horzAlign","line":"32","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"_vertAlign","isPrivate":true,"id":"_vertAlign","line":"33","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_center","isPrivate":true,"id":"_center","line":"34","kind":"variable"},{"comment":"\nCreates an empty dock panel.\n","name":"DockPanel","id":"DockPanel0()","line":"39","kind":"constructor"}],"line":"30","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"TakesValue"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nRepresents a hidden field in an HTML form.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/hidden.dart","name":"Hidden","id":"Hidden","children":[{"returnType":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"},"name":"asEditor","id":"asEditor0()","line":"64","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the default value of the hidden field.\n\n@return the default value\n","name":"getDefaultValue","id":"getDefaultValue0()","line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default value of the hidden field.\n\n@param defaultValue default value to set\n","name":"setDefaultValue","id":"setDefaultValue1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"defaultValue","id":"defaultValue","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the id of the hidden field.\n\n@return the id\n","name":"getId","id":"getId0()","line":"94","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the id of the hidden field.\n\n@param id id to set\n","name":"setId","id":"setId1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the name of the hidden field.\n\n@param name name of the field\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the value of the hidden field.\n\n@return the value\n","name":"getValue","id":"getValue0()","line":"134","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value of the hidden field.\n\n@param value value to set\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"getInputElement","id":"getInputElement0()","line":"147","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the name of the hidden field.\n\n@return the name\n","name":"name","id":"name","line":"112","kind":"property"},{"ref":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"34","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/Hidden","name":"Hidden"},"comment":"\nCreates a Hidden widget that wraps an existing &lt;input type='hidden'&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Hidden.wrap","id":"Hidden.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"21","kind":"constructor"},{"comment":"\nConstructor for <code>Hidden</code>.\n\n@param name name of the hidden field\n@param value value of the hidden field\n","name":"Hidden","id":"Hidden2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"value","id":"value","kind":"param"}],"line":"42","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;input&gt; element whose type is\n'hidden'.\n\n@param element the element to be used\n","name":"Hidden.fromElement","id":"Hidden.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"59","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasLoadHandlers","name":"HasLoadHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA widget that wraps an IFRAME element, which can contain an arbitrary web\nsite.\n\n<p>Note that if you are using {@link com.google.dwt.user.client.History}, any\nbrowser history items generated by the Frame will interleave with your\napplication's history.</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.dwt-Frame { }</li>\n</ul>\n\n<p>\n<h3>Example</h3> {@example com.google.dwt.examples.FrameExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/frame.dart","name":"Frame","id":"Frame","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link LoadEvent} load handler which will be called when the frame\nloads.\n\n@param handler the load handler\n@return {@link HandlerRegistration} that can be used to remove this handler\n","name":"addLoadHandler","id":"addLoadHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the URL of the frame's resource.\n\n@return the frame's URL\n","name":"getUrl","id":"getUrl0()","line":"88","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the URL of the resource to be displayed within the frame.\n\n@param url the frame's new URL\n","name":"setUrl","id":"setUrl1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"dart.dom.html/IFrameElement","name":"IFrameElement"},"name":"getFrameElement","id":"getFrameElement0()","line":"110","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"DEFAULT_STYLENAME","id":"DEFAULT_STYLENAME","line":"25","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/Frame","name":"Frame"},"comment":"\nCreates a Frame widget that wraps an existing &lt;frame&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Frame.wrap","id":"Frame.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"36","kind":"constructor"},{"comment":"\nCreates an empty frame or a frame that displays the resource at the\nspecified URL.\n\n@param url the URL of the resource to be displayed\n","name":"Frame","id":"Frame1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"url","id":"url","kind":"param"}],"line":"55","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;iframe&gt; element.\n\n@param element the element to be used\n","name":"Frame.fromElement","id":"Frame.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"68","kind":"constructor"}],"line":"23","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/Caption","name":"Caption"}],"superclass":{"refId":"dart_web_toolkit_ui/Html","name":"Html"},"comment":"\nDefault implementation of Caption. This will be created as the header if\nthere isn't a header specified.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dialog_box.dart","name":"DialogBoxCaptionImpl","id":"DialogBoxCaptionImpl","children":[{"name":"DialogBoxCaptionImpl","id":"DialogBoxCaptionImpl0()","line":"448","kind":"constructor"}],"line":"446","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"},{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSet of characteristic interfaces supported by the {@link DialogBox}\ncaption.\n\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dialog_box.dart","name":"Caption","id":"Caption","line":"439","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"}],"superclass":{"refId":"dart_web_toolkit_ui/DecoratedPopupPanel","name":"DecoratedPopupPanel"},"comment":"\nA form of popup that has a caption area at the top and can be dragged by the\nuser. Unlike a PopupPanel, calls to {@link #setWidth(String)} and\n{@link #setHeight(String)} will set the width and height of the dialog box\nitself, even if a widget has not been added as yet.\n<p>\n<img class='gallery' src='doc-files/DialogBox.png'/>\n</p>\n<h3>CSS Style Rules</h3>\n\n<ul>\n<li>.dwt-DialogBox { the outside of the dialog }</li>\n<li>.dwt-DialogBox .Caption { the caption }</li>\n<li>.dwt-DialogBox .dialogContent { the wrapper around the content }</li>\n<li>.dwt-DialogBox .dialogTopLeft { the top left cell }</li>\n<li>.dwt-DialogBox .dialogTopLeftInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogTopCenter { the top center cell, where the caption\nis located }</li>\n<li>.dwt-DialogBox .dialogTopCenterInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogTopRight { the top right cell }</li>\n<li>.dwt-DialogBox .dialogTopRightInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogMiddleLeft { the middle left cell }</li>\n<li>.dwt-DialogBox .dialogMiddleLeftInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogMiddleCenter { the middle center cell, where the\ncontent is located }</li>\n<li>.dwt-DialogBox .dialogMiddleCenterInner { the inner element of the cell }\n</li>\n<li>.dwt-DialogBox .dialogMiddleRight { the middle right cell }</li>\n<li>.dwt-DialogBox .dialogMiddleRightInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogBottomLeft { the bottom left cell }</li>\n<li>.dwt-DialogBox .dialogBottomLeftInner { the inner element of the cell }</li>\n<li>.dwt-DialogBox .dialogBottomCenter { the bottom center cell }</li>\n<li>.dwt-DialogBox .dialogBottomCenterInner { the inner element of the cell }\n</li>\n<li>.dwt-DialogBox .dialogBottomRight { the bottom right cell }</li>\n<li>.dwt-DialogBox .dialogBottomRightInner { the inner element of the cell }</li>\n</ul>\n<p>\n<h3>Example</h3>\n{@example com.google.dwt.examples.DialogBoxExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nDialogBox elements in {@link com.google.dwt.uibinder.client.UiBinder\nUiBinder} templates can have one widget child and one &lt;g:caption> child.\n(Note the lower case \"c\", meant to signal that the caption is not a runtime\nobject, and so cannot have a <code>ui:field</code> attribute.) The body of\nthe caption can be html.\n\n<p>\n\nFor example:\n\n<pre>\n&lt;g:DialogBox autoHide=\"true\" modal=\"true\">\n  &lt;g:caption>&lt;b>Caption text&lt;/b>&lt;/g:caption>\n  &lt;g:HtmlPanel>\n    Body text\n    &lt;g:Button ui:field='cancelButton'>Cancel&lt;/g:Button>\n    &lt;g:Button ui:field='okButton'>Okay&lt;/g:Button>\n  &lt;/g:HtmlPanel>\n&lt;/g:DialogBox>\n</pre>\n\nYou may also create your own header caption. The caption must implement\n{@link Caption}.\n\n<p>\n\nFor example:\n\n<p>\n\n<pre>\n&lt;g:DialogBox autoHide=\"true\" modal=\"true\">\n  &lt;-- foo is your prefix and Bar is a class that implements {@link Caption}-->\n  &lt;g:customCaption>&lt;foo:Bar/>&lt;/g:customCaption>\n  &lt;g:HtmlPanel>\n    Body text\n    &lt;g:Button ui:field='cancelButton'>Cancel&lt;/g:Button>\n    &lt;g:Button ui:field='okButton'>Okay&lt;/g:Button>\n  &lt;/g:HtmlPanel>\n&lt;/g:DialogBox>\n</pre>\n\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dialog_box.dart","name":"DialogBox","id":"DialogBox","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Caption","name":"Caption"},"comment":"\nProvides access to the dialog's caption.\n\n@return the logical caption for this dialog box\n","name":"getCaption","id":"getCaption0()","line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"hide","id":"hide1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoClosed","id":"autoClosed","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the html string inside the caption by calling its\n{@link #setHtml(SafeHtml)} method.\n\nUse {@link #setWidget(Widget)} to set the contents inside the\n{@link DialogBox}.\n\n@param html the object's new Html\n","name":"setHtml","id":"setHtml1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"}],"line":"271","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the html string inside the caption by calling its\n{@link #setHtml(SafeHtml)} method. Only known safe Html should be inserted\nin here.\n\nUse {@link #setWidget(Widget)} to set the contents inside the\n{@link DialogBox}.\n\n@param html the object's new Html\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"285","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the text inside the caption by calling its {@link #setText(String)}\nmethod.\n\nUse {@link #setWidget(Widget)} to set the contents inside the\n{@link DialogBox}.\n\n@param text the object's new text\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"298","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"show","id":"show0()","line":"303","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled on mouse down in the caption area, begins the dragging loop by\nturning on event capture.\n\n@see Dom#setCapture\n@see #continueDragging\n@param event the mouse down event that triggered dragging\n","name":"beginDragging","id":"beginDragging1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownEvent","name":"MouseDownEvent"},"name":"event","id":"event","kind":"param"}],"line":"322","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled on mouse move in the caption area, continues dragging if it was\nstarted by {@link #beginDragging}.\n\n@see #beginDragging\n@see #endDragging\n@param event the mouse move event that continues dragging\n","name":"continueDragging","id":"continueDragging1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveEvent","name":"MouseMoveEvent"},"name":"event","id":"event","kind":"param"}],"line":"345","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doAttachChildren","id":"doAttachChildren0()","line":"362","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doDetachChildren","id":"doDetachChildren0()","line":"372","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled on mouse up in the caption area, ends dragging by ending event\ncapture.\n\n@param event the mouse up event that ended dragging\n\n@see Dom#releaseCapture\n@see #beginDragging\n@see #endDragging\n","name":"endDragging","id":"endDragging1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpEvent","name":"MouseUpEvent"},"name":"event","id":"event","kind":"param"}],"line":"396","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<b>Affected Elements:</b>\n<ul>\n<li>-caption = text at the top of the {@link DialogBox}.</li>\n<li>-content = the container around the content.</li>\n</ul>\n\n@see UIObject#onEnsureDebugId(String)\n","name":"onPreviewNativeEvent","id":"onPreviewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"411","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isCaptionEvent","id":"isCaptionEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"425","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","line":"230","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"232","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"comment":"\nThe default style name.\n","name":"DEFAULT_STYLENAME","id":"DEFAULT_STYLENAME","line":"98","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Caption","name":"Caption"},"name":"caption","id":"caption","line":"100","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"dragging","id":"dragging","line":"101","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dragStartX","id":"dragStartX","line":"102","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dragStartY","id":"dragStartY","line":"102","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"windowWidth","id":"windowWidth","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"clientLeft","id":"clientLeft","line":"104","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"clientTop","id":"clientTop","line":"105","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"resizeHandlerRegistration","id":"resizeHandlerRegistration","line":"107","kind":"variable"},{"comment":"\n\nCreates an empty dialog box specifying its \"auto-hide\", \"modal\" properties\nand an implementation a custom {@link Caption}. It should not be shown\nuntil its child widget has been added using {@link #add(Widget)}.\n\n@param autoHide <code>true</code> if the dialog should be automatically\n         hidden when the user clicks outside of it\n@param modal <code>true</code> if keyboard and mouse events for widgets not\n         contained by the dialog should be ignored\n@param captionWidget the widget that is the DialogBox's header.\n","name":"DialogBox","id":"DialogBox3()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoHide","id":"autoHide","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"modal","id":"modal","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Caption","name":"Caption"},"isOptional":true,"defaultValue":"null","name":"captionWidget","id":"captionWidget","kind":"param"}],"line":"165","kind":"constructor"}],"line":"93","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"comment":"\n<p>\nA {@link PopupPanel} that wraps its content in a 3x3 grid, which allows users\nto add rounded corners.\n</p>\n\n<h3>Setting the Size:</h3>\n<p>\nIf you set the width or height of the {@link DecoratedPopupPanel}, you need\nto set the height and width of the middleCenter cell to 100% so that the\nmiddleCenter cell takes up all of the available space. If you do not set the\nwidth and height of the {@link DecoratedPopupPanel}, it will wrap its\ncontents tightly.\n</p>\n\n<pre>\n.dwt-DecoratedPopupPanel .popupMiddleCenter {\n  height: 100%;\n  width: 100%;\n}\n</pre>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.dwt-DecoratedPopupPanel { the outside of the popup }</li>\n<li>.dwt-DecoratedPopupPanel .popupContent { the wrapper around the content }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopLeft { the top left cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopLeftInner { the inner element of the\ncell }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopCenter { the top center cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopCenterInner { the inner element of the\ncell }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopRight { the top right cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupTopRightInner { the inner element of the\ncell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleLeft { the middle left cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleLeftInner { the inner element of\nthe cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleCenter { the middle center cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleCenterInner { the inner element of\nthe cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleRight { the middle right cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupMiddleRightInner { the inner element of\nthe cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomLeft { the bottom left cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomLeftInner { the inner element of\nthe cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomCenter { the bottom center cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomCenterInner { the inner element of\nthe cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomRight { the bottom right cell }</li>\n<li>.dwt-DecoratedPopupPanel .popupBottomRightInner { the inner element of\nthe cell }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/decorated_popup_panel.dart","name":"DecoratedPopupPanel","id":"DecoratedPopupPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"90","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"getWidget","id":"getWidget0()","line":"95","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"100","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doAttachChildren","id":"doAttachChildren0()","line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doDetachChildren","id":"doDetachChildren0()","line":"122","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet a specific Element from the panel.\n\n@param row the row index\n@param cell the cell index\n@return the Element at the given row and cell\n","name":"getCellElement","id":"getCellElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"cell","id":"cell","kind":"param"}],"line":"140","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_DEFAULT_STYLENAME","isPrivate":true,"id":"_DEFAULT_STYLENAME","line":"63","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/DecoratorPanel","name":"DecoratorPanel"},"comment":"\nThe panel used to nine box the contents.\n","name":"_decPanel","isPrivate":true,"id":"_decPanel","line":"68","kind":"variable"},{"comment":"\nCreates an empty decorated popup panel using the specified style names.\n\n@param autoHide <code>true</code> if the popup should be automatically\n         hidden when the user clicks outside of it\n@param modal <code>true</code> if keyboard or mouse events that do not\n         target the PopupPanel or its children should be ignored\n@param prefix the prefix applied to child style names\n","name":"DecoratedPopupPanel","id":"DecoratedPopupPanel3()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoHide","id":"autoHide","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"modal","id":"modal","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"popup\"","name":"prefix","id":"prefix","kind":"param"}],"line":"79","kind":"constructor"}],"line":"61","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/Tab","name":"Tab"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\n<code>_ClickDelegatePanel</code> decorates any widget with the minimal\namount of machinery to receive clicks for delegation to the parent.\n{@link SourcesClickEvents} is not implemented due to the fact that only a\nsingle observer is needed.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_bar.dart","name":"_ClickDelegatePanel","isPrivate":true,"id":"_ClickDelegatePanel","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"561","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"569","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"574","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"579","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"name":"getFocusablePanel","id":"getFocusablePanel0()","line":"583","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"hasWordWrap","id":"hasWordWrap0()","line":"601","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isEnabled","id":"isEnabled0()","line":"605","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"610","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setEnabled","id":"setEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"633","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"638","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether word-wrapping is enabled.\n\n@return <code>true</code> if word-wrapping is enabled.\n","name":"wordWrap","id":"wordWrap","line":"593","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"name":"focusablePanel","id":"focusablePanel","line":"540","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","line":"541","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/TabBar","name":"TabBar"},"name":"_tabBar","isPrivate":true,"id":"_tabBar","line":"543","kind":"variable"},{"name":"_ClickDelegatePanel","id":"_ClickDelegatePanel2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_ClickDelegatePanel/_tabBar","name":"_tabBar"},"ref":{"refId":"dart_web_toolkit_ui/TabBar","name":"TabBar"},"name":"_tabBar","isPrivate":true,"id":"_tabBar","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"545","kind":"constructor"}],"line":"539","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasWordWrap","name":"HasWordWrap"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_event/HasAllKeyHandlers","name":"HasAllKeyHandlers"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSet of characteristic interfaces supported by {@link TabBar} tabs.\n\nNote that this set might expand over time, so implement this interface at\nyour own risk.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_bar.dart","name":"Tab","id":"Tab","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck if the underlying widget implements {@link HasWordWrap}.\n\n@return true if the widget implements {@link HasWordWrap}\n","name":"hasWordWrap","id":"hasWordWrap0()","line":"530","kind":"method"}],"line":"524","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasSelectionHandlers"},{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasBeforeSelectionHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nA horizontal bar of folder-style tabs, most commonly used as part of a\n{@link com.google.dwt.user.client.ui.TabPanel}.\n<p>\n<img class='gallery' src='doc-files/TabBar.png'/>\n</p>\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.dwt-TabBar { the tab bar itself }</li>\n<li>.dwt-TabBar .dwt-TabBarFirst { the left edge of the bar }</li>\n<li>.dwt-TabBar .dwt-TabBarFirst-wrapper { table cell around the left edge }\n</li>\n<li>.dwt-TabBar .dwt-TabBarRest { the right edge of the bar }</li>\n<li>.dwt-TabBar .dwt-TabBarRest-wrapper { table cell around the right edge }\n</li>\n<li>.dwt-TabBar .dwt-TabBarItem { unselected tabs }</li>\n<li>.dwt-TabBar .dwt-TabBarItem-wrapper { table cell around tab }</li>\n<li>.dwt-TabBar .dwt-TabBarItem-selected { additional style for selected\n<p>\n<h3>Example</h3>\n{@example com.google.dwt.examples.TabBarExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_bar.dart","name":"TabBar","id":"TabBar","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"70","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a new tab with the specified text.\n\n@param text the new tab's text\n@param asHtml <code>true</code> to treat the specified text as html\n","name":"addTabText","id":"addTabText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a new tab with the specified widget.\n\n@param widget the new tab's widget\n","name":"addTabWidget","id":"addTabWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the tab that is currently selected.\n\n@return the selected tab\n","name":"getSelectedTab","id":"getSelectedTab0()","line":"125","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Tab","name":"Tab"},"comment":"\nGets the given tab.\n\nThis method is final because the Tab interface will expand. Therefore\nit is highly likely that subclasses which implemented this method would end up\nbreaking.\n\n@param index the tab's index\n@return the tab wrapper\n","name":"getTab","id":"getTab1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of tabs present.\n\n@return the tab count\n","name":"getTabCount","id":"getTabCount0()","line":"155","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the specified tab's Html.\n\n@param index the index of the tab whose Html is to be retrieved\n@return the tab's Html\n","name":"getTabHTML","id":"getTabHTML1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a new tab at the specified index.\n\n@param html the new tab's html\n@param beforeIndex the index before which this tab will be inserted\n\n\nInserts a new tab at the specified index.\n\n@param text the new tab's text\n@param asHtml <code>true</code> to treat the specified text as Html\n@param beforeIndex the index before which this tab will be inserted\n","name":"insertTabText","id":"insertTabText3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"199","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a new tab at the specified index.\n\n@param widget widget to be used in the new tab\n@param beforeIndex the index before which this tab will be inserted\n","name":"insertTabWidget","id":"insertTabWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck if a tab is enabled or disabled. If disabled, the user cannot select\nthe tab.\n\n@param index the index of the tab\n@return true if the tab is enabled, false if disabled\n","name":"isTabEnabled","id":"isTabEnabled1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the tab at the specified index.\n\n@param index the index of the tab to be removed\n","name":"removeTab","id":"removeTab1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"291","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nProgrammatically selects the specified tab. Use index -1 to specify that no\ntab should be selected.\n\n@param index the index of the tab to be selected\n@param fireEvents true to fire events, false not to\n@return <code>true</code> if successful, <code>false</code> if the change\nis denied by the {@link BeforeSelectionHandler}.\n","name":"selectTab","id":"selectTab2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"333","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable a tab. When disabled, users cannot select the tab.\n\n@param index the index of the tab to enable or disable\n@param enabled true to enable, false to disable\n","name":"setTabEnabled","id":"setTabEnabled2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"364","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a tab's contents via Html.\n\nUse care when setting an object's Html; it is an easy way to expose\nscript-based security problems. Consider using\n{@link #setTabText(int, String)} or {@link #setTabHTML(int, SafeHtml)}\nwhenever possible.\n\n@param index the index of the tab whose Html is to be set\n@param html the tab new Html\n","name":"setTabHtml","id":"setTabHtml2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"385","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a tab's text contents.\n\n@param index the index of the tab whose text is to be set\n@param text the object's new text\n","name":"setTabText","id":"setTabText2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"409","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nCreate a {@link SimplePanel} that will wrap the contents in a tab.\nSubclasses can use this method to wrap tabs in decorator panels.\n\n@return a {@link SimplePanel} to wrap the tab contents, or null to leave\ntabs unwrapped\n","name":"createTabTextWrapper","id":"createTabTextWrapper0()","line":"428","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a new tab at the specified index.\n\n@param widget widget to be used in the new tab\n@param beforeIndex the index before which this tab will be inserted\n","name":"_insertTabWidget","isPrivate":true,"id":"_insertTabWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"438","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<b>Affected Elements:</b>\n<ul>\n<li>-tab# = The element containing the contents of the tab.</li>\n<li>-tab-wrapper# = The cell containing the tab at the index.</li>\n</ul>\n\n@see UIObject#onEnsureDebugId(String)\n","name":"onEnsureDebugId","id":"onEnsureDebugId1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"baseID","id":"baseID","kind":"param"}],"line":"463","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkInsertBeforeTabIndex","id":"checkInsertBeforeTabIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"472","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkTabIndex","id":"checkTabIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"478","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSelects the tab corresponding to the widget for the tab. To be clear the\nwidget for the tab is not the widget INSIDE of the tab; it is the widget\nused to represent the tab itself.\n\n@param tabWidget The widget for the tab to be selected\n@return true if the tab corresponding to the widget for the tab could\nlocated and selected, false otherwise\n","name":"selectTabByTabWidget","id":"selectTabByTabWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tabWidget","id":"tabWidget","kind":"param"}],"line":"493","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSelectionStyle","id":"setSelectionStyle2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"selected","id":"selected","kind":"param"}],"line":"505","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"STYLENAME_DEFAULT","id":"STYLENAME_DEFAULT","line":"31","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/HorizontalPanel","name":"HorizontalPanel"},"name":"panel","id":"panel","line":"32","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"selectedTab","id":"selectedTab","line":"33","kind":"variable"},{"comment":"\nCreates an empty tab bar.\n","name":"TabBar","id":"TabBar0()","line":"38","kind":"constructor"}],"line":"29","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"BeforeSelectionHandler"},{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"SelectionHandler"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_panel.dart","name":"_TabListener","isPrivate":true,"id":"_TabListener","children":[{"returnType":{"refId":"void","name":"void"},"name":"onBeforeSelection","id":"onBeforeSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionEvent","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"BeforeSelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"455","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onSelection","id":"onSelection1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionEvent","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"SelectionEvent"},"name":"event","id":"event","kind":"param"}],"line":"458","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/TabPanel","name":"TabPanel"},"name":"_tabPanel","isPrivate":true,"id":"_tabPanel","line":"451","kind":"variable"},{"name":"_TabListener","id":"_TabListener1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_TabListener/_tabPanel","name":"_tabPanel"},"ref":{"refId":"dart_web_toolkit_ui/TabPanel","name":"TabPanel"},"name":"_tabPanel","isPrivate":true,"id":"_tabPanel","kind":"param"}],"line":"453","kind":"constructor"}],"line":"449","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/TabBar","name":"TabBar"},"comment":"\nThis extension of TabPanel overrides the mutator methods to prevent\nexternal callers from modifying the state of the TabBar.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_panel.dart","name":"_UnmodifiableTabBar","isPrivate":true,"id":"_UnmodifiableTabBar","children":[{"returnType":{"refId":"void","name":"void"},"name":"insertTabText","id":"insertTabText3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"414","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertTabWidget","id":"insertTabWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"419","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertTabTextProtected","id":"insertTabTextProtected3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"423","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertTabWidgetProtected","id":"insertTabWidgetProtected2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"427","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeTab","id":"removeTab1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"432","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeTabProtected","id":"removeTabProtected1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"439","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"name":"createTabTextWrapper","id":"createTabTextWrapper0()","line":"444","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/TabPanel","name":"TabPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"410","kind":"variable"},{"name":"_UnmodifiableTabBar","id":"_UnmodifiableTabBar1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_UnmodifiableTabBar/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/TabPanel","name":"TabPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"412","kind":"constructor"}],"line":"408","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/DeckPanel","name":"DeckPanel"},"comment":"\nThis extension of DeckPanel overrides the mutator methods to prevent\nexternal callers from adding to the state of the DeckPanel.\n<p>\nRemoval of Widgets is supported so that WidgetCollection.WidgetIterator\noperates as expected.\n</p>\n<p>\nWe ensure that the DeckPanel cannot become of of sync with its associated\nTabBar by delegating all mutations to the TabBar to this implementation of\nDeckPanel.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_panel.dart","name":"_TabbedDeckPanel","isPrivate":true,"id":"_TabbedDeckPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"344","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"349","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"354","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"359","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertProtectedTabText","id":"insertProtectedTabText4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"tabText","id":"tabText","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"371","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertProtectedTabWidget","id":"insertProtectedTabWidget3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tabWidget","id":"tabWidget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"387","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_UnmodifiableTabBar","name":"_UnmodifiableTabBar"},"isFinal":true,"name":"_tabBar","isPrivate":true,"id":"_tabBar","line":"339","kind":"variable"},{"name":"_TabbedDeckPanel","id":"_TabbedDeckPanel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_TabbedDeckPanel/_tabBar","name":"_tabBar"},"ref":{"refId":"dart_web_toolkit_ui/_UnmodifiableTabBar","name":"_UnmodifiableTabBar"},"name":"_tabBar","isPrivate":true,"id":"_tabBar","kind":"param"}],"line":"341","kind":"constructor"}],"line":"337","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasSelectionHandlers"},{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasBeforeSelectionHandlers"},{"refId":"dart_web_toolkit_ui/IndexedPanelForIsWidget","name":"IndexedPanelForIsWidget"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"},{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nA panel that represents a tabbed set of pages, each of which contains another\nwidget. Its child widgets are shown as the user selects the various tabs\nassociated with them. The tabs can contain arbitrary HTML.\n\n<p>\nThis widget will <em>only</em> work in quirks mode. If your application is in\nStandards Mode, use {@link TabLayoutPanel} instead.\n</p>\n\n<p>\n<img class='gallery' src='doc-files/TabPanel.png'/>\n</p>\n\n<p>\nNote that this widget is not a panel per se, but rather a\n{@link com.google.dwt.user.client.ui.Composite} that aggregates a\n{@link com.google.dwt.user.client.ui.TabBar} and a\n{@link com.google.dwt.user.client.ui.DeckPanel}. It does, however, implement\n{@link com.google.dwt.user.client.ui.HasWidgets}.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.dwt-TabPanel { the tab panel itself }</li>\n<li>.dwt-TabPanelBottom { the bottom section of the tab panel\n(the deck containing the widget) }</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.dwt.examples.TabPanelExample}\n</p>\n\n@see TabLayoutPanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_panel.dart","name":"TabPanel","id":"TabPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n\n\nConvenience overload to allow {@link IsWidget} to be used directly.\n\n\nConvenience overload to allow {@link IsWidget} to be used directly.\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the tab panel. If the Widget is already attached to the\nTabPanel, it will be moved to the right-most index.\n\n@param w the widget to be added\n@param tabText the text to be shown on its tab\n\n\nAdds a widget to the tab panel. If the Widget is already attached to the\nTabPanel, it will be moved to the right-most index.\n\n@param w the widget to be added\n@param tabText the text to be shown on its tab\n@param asHtml <code>true</code> to treat the specified text as HTML\n","name":"addTabText","id":"addTabText3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"tabText","id":"tabText","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the tab panel. If the Widget is already attached to the\nTabPanel, it will be moved to the right-most index.\n\n@param w the widget to be added\n@param tabWidget the widget to be shown in the tab\n","name":"addTabWidget","id":"addTabWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tabWidget","id":"tabWidget","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"147","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/DeckPanel","name":"DeckPanel"},"comment":"\nGets the deck panel within this tab panel. Adding or removing Widgets from\nthe DeckPanel is not supported and will throw\nUnsupportedOperationExceptions.\n\n@return the deck panel\n","name":"getDeckPanel","id":"getDeckPanel0()","line":"160","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TabBar","name":"TabBar"},"comment":"\nGets the tab bar within this tab panel. Adding or removing tabs from from\nthe TabBar is not supported and will throw UnsupportedOperationExceptions.\n\n@return the tab bar\n","name":"getTabBar","id":"getTabBar0()","line":"170","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"getWidgetAt","id":"getWidgetAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetCount","id":"getWidgetCount0()","line":"180","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n","name":"getWidgetIndexIsWidget","id":"getWidgetIndexIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetIndex","id":"getWidgetIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"193","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n\n\nConvenience overload to allow {@link IsWidget} to be used directly.\n\n\nConvenience overload to allow {@link IsWidget} to be used directly.\n\n\nInserts a widget into the tab panel. If the Widget is already attached to\nthe TabPanel, it will be moved to the requested index.\n\n@param widget the widget to be inserted\n@param tabText the text to be shown on its tab\n@param asHtml <code>true</code> to treat the specified text as HTML\n@param beforeIndex the index before which it will be inserted\n","name":"insertTabText","id":"insertTabText4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"tabText","id":"tabText","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"228","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget into the tab panel. If the Widget is already attached to\nthe TabPanel, it will be moved to the requested index.\n\n@param widget the widget to be inserted\n@param tabText the text to be shown on its tab\n@param beforeIndex the index before which it will be inserted\n\n\nInserts a widget into the tab panel. If the Widget is already attached to\nthe TabPanel, it will be moved to the requested index.\n\n@param widget the widget to be inserted.\n@param tabWidget the widget to be shown on its tab.\n@param beforeIndex the index before which it will be inserted.\n","name":"insertTabWidget","id":"insertTabWidget3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tabWidget","id":"tabWidget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"253","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"259","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"comment":"\nThe Iterator returned by DeckPanel supports removal and will invoke\n_TabbedDeckPanel.remove(), which is an active function.\n","name":"iterator","id":"iterator0()","line":"268","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"272","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves the given widget, and its associated tab.\n\n@param widget the widget to be removed\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"283","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nProgrammatically selects the specified tab and fires events.\n\n@param index the index of the tab to be selected\n\n\nProgrammatically selects the specified tab.\n\n@param index the index of the tab to be selected\n@param fireEvents true to fire events, false not to\n","name":"selectTab","id":"selectTab2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"303","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"308","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nCreate a {@link SimplePanel} that will wrap the contents in a tab.\nSubclasses can use this method to wrap tabs in decorator panels.\n\n@return a {@link SimplePanel} to wrap the tab contents, or null to leave\n        tabs unwrapped\n","name":"createTabTextWrapper","id":"createTabTextWrapper0()","line":"319","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_UnmodifiableTabBar","name":"_UnmodifiableTabBar"},"name":"tabBar","id":"tabBar","line":"49","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_TabbedDeckPanel","name":"_TabbedDeckPanel"},"name":"deck","id":"deck","line":"50","kind":"variable"},{"comment":"\nCreates an empty tab panel.\n","name":"TabPanel","id":"TabPanel0()","line":"55","kind":"constructor"}],"line":"45","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"_WindowResizeHandler","isPrivate":true,"id":"_WindowResizeHandler","children":[{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeEvent","name":"ResizeEvent"},"name":"event","id":"event","kind":"param"}],"line":"1320","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"1316","kind":"variable"},{"name":"_WindowResizeHandler","id":"_WindowResizeHandler1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_WindowResizeHandler/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"1318","kind":"constructor"}],"line":"1314","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_animation/Animation","name":"Animation"},"comment":"\nAn {@link Animation} used to enlarge the popup into view.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"ResizeAnimation","id":"ResizeAnimation","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nOpen or close the content. This method always called immediately after\nthe PopupPanel showing state has changed, so we base the animation on the\ncurrent state.\n\n@param showing true if the popup is showing, false if not\n","name":"setState","id":"setState2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"showing","id":"showing","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isUnloading","id":"isUnloading","kind":"param"}],"line":"1141","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onComplete","id":"onComplete0()","line":"1202","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onStart","id":"onStart0()","line":"1215","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"1223","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a rect string.\n","name":"getRectString","id":"getRectString4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"right","id":"right","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bottom","id":"bottom","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"}],"line":"1261","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShow or hide the glass.\n","name":"maybeShowGlass","id":"maybeShowGlass0()","line":"1268","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onInstantaneousRun","id":"onInstantaneousRun0()","line":"1291","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"comment":"\nThe {@link PopupPanel} being affected.\n","name":"curPanel","id":"curPanel","line":"1094","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIndicates whether or not the {@link PopupPanel} is in the process of\nunloading. If the popup is unloading, then the animation just does\ncleanup.\n","name":"isUnloading","id":"isUnloading","line":"1101","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe offset height and width of the current {@link PopupPanel}.\n","name":"offsetHeight","id":"offsetHeight","line":"1106","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe offset height and width of the current {@link PopupPanel}.\n","name":"offsetWidth","id":"offsetWidth","line":"1106","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating whether we are showing or hiding the popup.\n","name":"showing","id":"showing","line":"1111","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Timer","name":"Timer"},"comment":"\nThe timer used to delay the show animation.\n","name":"showTimer","id":"showTimer","line":"1116","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating whether the glass element is currently attached.\n","name":"glassShowing","id":"glassShowing","line":"1121","kind":"variable"},{"comment":"\nCreate a new {@link ResizeAnimation}.\n\n@param panel the panel to affect\n","name":"ResizeAnimation","id":"ResizeAnimation1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"panel","id":"panel","kind":"param"}],"line":"1130","kind":"constructor"}],"line":"1090","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/PopupPanelPositionCallback","name":"PopupPanelPositionCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSet the position of the popup right before it is shown.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"ShowPositionCallback","id":"ShowPositionCallback","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nProvides the opportunity to set the position of the PopupPanel right\nbefore the PopupPanel is shown. The offsetWidth and offsetHeight values\nof the PopupPanel are made available to allow for positioning based on\nits size.\n\n@param offsetWidth the offsetWidth of the PopupPanel\n@param offsetHeight the offsetHeight of the PopupPanel\n@see PopupPanel#setPopupPositionAndShow(PositionCallback)\n","name":"setPosition","id":"setPosition2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetWidth","id":"offsetWidth","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetHeight","id":"offsetHeight","kind":"param"}],"line":"1082","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"1067","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"_target","isPrivate":true,"id":"_target","line":"1068","kind":"variable"},{"name":"ShowPositionCallback","id":"ShowPositionCallback2()","children":[{"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ShowPositionCallback/_target","name":"_target"},"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"_target","isPrivate":true,"id":"_target","kind":"param"}],"line":"1070","kind":"constructor"}],"line":"1065","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA callback that is used to set the position of a {@link PopupPanel} right\nbefore it is shown.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"PopupPanelPositionCallback","id":"PopupPanelPositionCallback","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nProvides the opportunity to set the position of the PopupPanel right\nbefore the PopupPanel is shown. The offsetWidth and offsetHeight values\nof the PopupPanel are made available to allow for positioning based on\nits size.\n\n@param offsetWidth the offsetWidth of the PopupPanel\n@param offsetHeight the offsetHeight of the PopupPanel\n@see PopupPanel#setPopupPositionAndShow(PositionCallback)\n","name":"setPosition","id":"setPosition2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetWidth","id":"offsetWidth","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetHeight","id":"offsetHeight","kind":"param"}],"line":"1059","kind":"method"}],"line":"1047","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_ui/HistoryValueChangeHandler/String","name":"String"}],"name":"ValueChangeHandler"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"HistoryValueChangeHandler","id":"HistoryValueChangeHandler","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when {@link ValueChangeEvent} is fired.\n\n@param event the {@link ValueChangeEvent} that was fired\n","name":"onValueChange","id":"onValueChange1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeEvent","arguments":[{"refId":"dart_web_toolkit_ui/HistoryValueChangeHandler/String","name":"String"}],"name":"ValueChangeEvent"},"name":"event","id":"event","kind":"param"}],"line":"1036","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"1027","kind":"variable"},{"name":"HistoryValueChangeHandler","id":"HistoryValueChangeHandler1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/HistoryValueChangeHandler/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"1029","kind":"constructor"},{"name":"String","id":"String","kind":"typeparam"}],"line":"1025","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasCloseHandlers","arguments":[{"refId":"dart_web_toolkit_ui/PopupPanel","name":"PopupPanel"}],"name":"HasCloseHandlers"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"}],"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nA panel that can \"pop up\" over other widgets. It overlays the browser's\nclient area (and any previously-created popups).\n\n<p>\nA PopupPanel should not generally be added to other panels; rather, it should\nbe shown and hidden using the {@link #show()} and {@link #hide()} methods.\n</p>\n<p>\nThe width and height of the PopupPanel cannot be explicitly set; they are\ndetermined by the PopupPanel's widget. Calls to {@link #setWidth(String)} and\n{@link #setHeight(String)} will call these methods on the PopupPanel's\nwidget.\n</p>\n<p>\n<img class='gallery' src='doc-files/PopupPanel.png'/>\n</p>\n\n<p>\nThe PopupPanel can be optionally displayed with a \"glass\" element behind it,\nwhich is commonly used to gray out the widgets behind it. It can be enabled\nusing {@link #setGlassEnabled(bool)}. It has a default style name of\n\"gwt-PopupPanelGlass\", which can be changed using\n{@link #setGlassStyleName(String)}.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.PopupPanelExample}\n</p>\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-PopupPanel</dt>\n<dd>the outside of the popup</dd>\n<dt>.gwt-PopupPanel .popupContent</dt>\n<dd>the wrapper around the content</dd>\n<dt>.gwt-PopupPanelGlass</dt>\n<dd>the glass background behind the popup</dd>\n</dl>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/popup_panel.dart","name":"PopupPanel","id":"PopupPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nMouse events that occur within an autoHide partner will not hide a panel\nset to autoHide.\n\n@param partner the auto hide partner to add\n","name":"addAutoHidePartner","id":"addAutoHidePartner1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"partner","id":"partner","kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addCloseHandler","id":"addCloseHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/CloseHandler","name":"CloseHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCenters the popup in the browser window and shows it. If the popup was\nalready showing, then the popup is centered.\n","name":"center","id":"center0()","line":"167","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the style name to be used on the glass element. By default, this is\n\"gwt-PopupPanelGlass\".\n\n@return the glass element's style name\n","name":"getGlassStyleName","id":"getGlassStyleName0()","line":"210","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the panel's offset height in pixels. Calls to\n{@link #setHeight(String)} before the panel's child widget is set will not\ninfluence the offset height.\n\n@return the object's offset height\n","name":"getOffsetHeight","id":"getOffsetHeight0()","line":"222","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the panel's offset width in pixels. Calls to {@link #setWidth(String)}\nbefore the panel's child widget is set will not influence the offset width.\n\n@return the object's offset width\n","name":"getOffsetWidth","id":"getOffsetWidth0()","line":"233","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the popup's left position relative to the browser's client area.\n\n@return the popup's left position\n","name":"getPopupLeft","id":"getPopupLeft0()","line":"242","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the popup's top position relative to the browser's client area.\n\n@return the popup's top position\n","name":"getPopupTop","id":"getPopupTop0()","line":"251","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getTitle","id":"getTitle0()","line":"256","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHides the popup and detaches it from the page. This has no effect if it is\nnot currently showing.\n\n@param autoClosed the value that will be passed to\n         {@link CloseHandler#onClose(CloseEvent)} when the popup is closed\n","name":"hide","id":"hide1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"autoClosed","id":"autoClosed","kind":"param"}],"line":"267","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"275","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns <code>true</code> if the popup should be automatically hidden when\nthe user clicks outside of it.\n\n@return true if autoHide is enabled, false if disabled\n","name":"isAutoHideEnabled","id":"isAutoHideEnabled0()","line":"285","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns <code>true</code> if the popup should be automatically hidden when\nthe history token changes, such as when the user presses the browser's back\nbutton.\n\n@return true if enabled, false if disabled\n","name":"isAutoHideOnHistoryEventsEnabled","id":"isAutoHideOnHistoryEventsEnabled0()","line":"296","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns <code>true</code> if a glass element will be displayed under the\n{@link PopupPanel}.\n\n@return true if enabled\n","name":"isGlassEnabled","id":"isGlassEnabled0()","line":"306","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns <code>true</code> if keyboard or mouse events that do not target\nthe PopupPanel or its children should be ignored.\n\n@return true if popup is modal, false if not\n","name":"isModal","id":"isModal0()","line":"316","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns <code>true</code> if the popup should preview all events,\neven if the event has already been consumed by another popup.\n\n@return true if previewAllNativeEvents is enabled, false if disabled\n","name":"isPreviewingAllNativeEvents","id":"isPreviewingAllNativeEvents0()","line":"326","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this popup is showing.\n\n@return <code>true</code> if the popup is showing\n@see #show()\n@see #hide()\n","name":"isShowing","id":"isShowing0()","line":"337","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\n@deprecated Use {@link #onPreviewNativeEvent} instead\n","name":"onEventPreview","id":"onEventPreview1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"357","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove an autoHide partner.\n\n@param partner the auto hide partner to remove\n","name":"removeAutoHidePartner","id":"removeAutoHidePartner1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"partner","id":"partner","kind":"param"}],"line":"366","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"383","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable the autoHide feature. When enabled, the popup will be\nautomatically hidden when the user clicks outside of it.\n\n@param autoHide true to enable autoHide, false to disable\n","name":"setAutoHideEnabled","id":"setAutoHideEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoHide","id":"autoHide","kind":"param"}],"line":"393","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable autoHide on history change events. When enabled, the\npopup will be automatically hidden when the history token changes, such as\nwhen the user presses the browser's back button. Disabled by default.\n\n@param enabled true to enable, false to disable\n","name":"setAutoHideOnHistoryEventsEnabled","id":"setAutoHideOnHistoryEventsEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"404","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nWhen enabled, the background will be blocked with a semi-transparent pane\nthe next time it is shown. If the PopupPanel is already visible, the glass\nwill not be displayed until it is hidden and shown again.\n\n@param enabled true to enable, false to disable\n","name":"setGlassEnabled","id":"setGlassEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"415","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the style name to be used on the glass element. By default, this is\n\"gwt-PopupPanelGlass\".\n\n@param glassStyleName the glass element's style name\n","name":"setGlassStyleName","id":"setGlassStyleName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"glassStyleName","id":"glassStyleName","kind":"param"}],"line":"433","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the height of the panel's child widget. If the panel's child widget\nhas not been set, the height passed in will be cached and used to set the\nheight immediately after the child widget is set.\n\n<p>\nNote that subclasses may have a different behavior. A subclass may decide\nnot to change the height of the child widget. It may instead decide to\nchange the height of an internal panel widget, which contains the child\nwidget.\n</p>\n\n@param height the object's new height, in CSS units (e.g. \"10px\", \"1em\")\n","name":"setHeight","id":"setHeight1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"455","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nWhen the popup is modal, keyboard or mouse events that do not target the\nPopupPanel or its children will be ignored.\n\n@param modal true to make the popup modal\n","name":"setModal","id":"setModal1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"modal","id":"modal","kind":"param"}],"line":"470","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the popup's position relative to the browser's client area. The\npopup's position may be set before calling {@link #show()}.\n\n@param left the left position, in pixels\n@param top the top position, in pixels\n","name":"setPopupPosition","id":"setPopupPosition2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"481","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the popup's position using a {@link PositionCallback}, and shows the\npopup. The callback allows positioning to be performed based on the\noffsetWidth and offsetHeight of the popup, which are normally not available\nuntil the popup is showing. By positioning the popup before it is shown,\nthe the popup will not jump from its original position to the new position.\n\n@param callback the callback to set the position of the popup\n@see PositionCallback#setPosition(int offsetWidth, int offsetHeight)\n","name":"setPopupPositionAndShow","id":"setPopupPositionAndShow1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/PopupPanelPositionCallback","name":"PopupPanelPositionCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"509","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nWhen enabled, the popup will preview all events, even if another\npopup was opened after this one.\n</p>\n<p>\nIf autoHide is enabled, enabling this feature will cause the popup to\nautoHide even if another non-modal popup was shown after it. If this\nfeature is disabled, the popup will only autoHide if it was the last popup\nopened.\n</p>\n\n@param previewAllNativeEvents true to enable, false to disable\n","name":"setPreviewingAllNativeEvents","id":"setPreviewingAllNativeEvents1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"previewAllNativeEvents","id":"previewAllNativeEvents","kind":"param"}],"line":"530","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setTitle","id":"setTitle1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"title","id":"title","kind":"param"}],"line":"535","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this object is visible. This method just sets the\n<code>visibility</code> style attribute. You need to call {@link #show()}\nto actually attached/detach the {@link PopupPanel} to the page.\n\n@param visible <code>true</code> to show the object, <code>false</code> to\n         hide it\n@see #show()\n@see #hide()\n","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"vis","id":"vis","kind":"param"}],"line":"555","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"573","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the width of the panel's child widget. If the panel's child widget has\nnot been set, the width passed in will be cached and used to set the width\nimmediately after the child widget is set.\n\n<p>\nNote that subclasses may have a different behavior. A subclass may decide\nnot to change the width of the child widget. It may instead decide to\nchange the width of an internal panel widget, which contains the child\nwidget.\n</p>\n\n@param width the object's new width, in CSS units (e.g. \"10px\", \"1em\")\n","name":"setWidth","id":"setWidth1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"593","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the popup and attach it to the page. It must have a child widget\nbefore this method is called.\n","name":"show","id":"show0()","line":"606","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nNormally, the popup is positioned directly below the relative target, with\nits left edge aligned with the left edge of the target. Depending on the\nwidth and height of the popup and the distance from the target to the\nbottom and right edges of the window, the popup may be displayed directly\nabove the target, and/or its right edge may be aligned with the right edge\nof the target.\n\n@param target the target to show the popup below\n","name":"showRelativeTo","id":"showRelativeTo1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"target","id":"target","kind":"param"}],"line":"628","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContainerElement","id":"getContainerElement0()","line":"634","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet the glass element used by this {@link PopupPanel}. The element is not\ncreated until it is enabled via {@link #setGlassEnabled(bool)}.\n\n@return the glass element, or null if not created\n","name":"getGlassElement","id":"getGlassElement0()","line":"644","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getStyleElement","id":"getStyleElement0()","line":"649","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onPreviewNativeEvent","id":"onPreviewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"653","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUnload","id":"onUnload0()","line":"661","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nWe control size by setting our child widget's size. However, if we don't\ncurrently have a child, we record the size the user wanted so that when we\ndo get a child, we can set it correctly. Until size is explicitly cleared,\nany child put into the popup will be given that size.\n","name":"maybeUpdateSize","id":"maybeUpdateSize0()","line":"678","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the animation used to animate this popup. Used by gwt-incubator to\nallow DropDownPanel to override the default popup animation. Not protected\nbecause the exact API may change in gwt 1.6.\n\n@param animation the animation to use for this popup\n","name":"setAnimation","id":"setAnimation1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ResizeAnimation","name":"ResizeAnimation"},"name":"animation","id":"animation","kind":"param"}],"line":"705","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnable or disable animation of the {@link PopupPanel}.\n\n@param type the type of animation to use\n","name":"setAnimationType","id":"setAnimationType1()","children":[{"ref":{"refId":"dart_web_toolkit_util/AnimationType","name":"AnimationType"},"name":"type","id":"type","kind":"param"}],"line":"714","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove focus from an dart_html.Element.\n\n@param elt The dart_html.Element on which <code>blur()</code> will be invoked\n","name":"blur","id":"blur1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elt","id":"elt","kind":"param"}],"line":"723","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDoes the event target one of the partner elements?\n\n@param event the event\n@return true if the event targets a partner\n","name":"eventTargetsPartner","id":"eventTargetsPartner1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"736","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDoes the event target this popup?\n\n@param event the event\n@return true if the event targets the popup\n","name":"eventTargetsPopup","id":"eventTargetsPopup1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"758","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet the element that {@link PopupImpl} uses. PopupImpl creates an element\nthat goes inside of the outer element, so all methods in PopupImpl are\nrelative to the first child of the outer element, not the outer element\nitself.\n\n@return the dart_html.Element that {@link PopupImpl} creates and expects\n","name":"getPopupImplElement","id":"getPopupImplElement0()","line":"774","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPositions the popup, called after the offset width and height of the popup\nare known.\n\n@param relativeObject the ui object to position relative to\n@param offsetWidth the drop down's offset width\n@param offsetHeight the drop down's offset height\n","name":"position","id":"position3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"relativeObject","id":"relativeObject","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetWidth","id":"offsetWidth","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"offsetHeight","id":"offsetHeight","line":"787","kind":"param"}],"line":"786","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPreview the {@link dart_html.Event}.\n\n@param event the {@link dart_html.Event}\n","name":"previewNativeEvent","id":"previewNativeEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/NativePreviewEvent","name":"NativePreviewEvent"},"name":"event","id":"event","kind":"param"}],"line":"913","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRegister or unregister the handlers used by {@link PopupPanel}.\n","name":"updateHandlers","id":"updateHandlers0()","line":"1004","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this popup is visible. Note that this just checks\nthe <code>visibility</code> style attribute, which is set in the\n{@link #setVisible(bool)} method. If you want to know if the popup is\nattached to the page, use {@link #isShowing()} instead.\n\n@return <code>true</code> if the object is visible\n@see #setVisible(bool)\n","name":"visible","id":"visible","line":"351","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe duration of the animation.\n","name":"ANIMATION_DURATION","id":"ANIMATION_DURATION","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nThe default style name.\n","name":"DEFAULT_STYLENAME","id":"DEFAULT_STYLENAME","line":"56","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/PopupImpl","name":"PopupImpl"},"isStatic":true,"name":"impl","id":"impl","line":"58","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"},"comment":"\nWindow resize handler used to keep the glass the proper size.\n","name":"glassResizer","id":"glassResizer","line":"63","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/AnimationType","name":"AnimationType"},"comment":"\nIf true, animate the opening of this popup from the center. If false,\nanimate it open from top to bottom, and do not animate closing. Use false\nto animate menus.\n","name":"animType","id":"animType","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoHide","id":"autoHide","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"previewAllNativeEvents","id":"previewAllNativeEvents","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"modal","id":"modal","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"showing","id":"showing","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoHideOnHistoryEvents","id":"autoHideOnHistoryEvents","line":"73","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Element","name":"Element"}],"name":"List"},"name":"autoHidePartners","id":"autoHidePartners","line":"75","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"desiredHeight","id":"desiredHeight","line":"78","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"desiredWidth","id":"desiredWidth","line":"80","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe glass element.\n","name":"glass","id":"glass","line":"85","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"glassStyleName","id":"glassStyleName","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating that a glass element should be used.\n","name":"_isGlassEnabled","isPrivate":true,"id":"_isGlassEnabled","line":"92","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationEnabled","isPrivate":true,"id":"_isAnimationEnabled","line":"94","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"leftPosition","id":"leftPosition","line":"97","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"nativePreviewHandlerRegistration","id":"nativePreviewHandlerRegistration","line":"99","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"historyHandlerRegistration","id":"historyHandlerRegistration","line":"100","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeAnimation","name":"ResizeAnimation"},"comment":"\nThe {@link ResizeAnimation} used to open and close the {@link PopupPanel}s.\n","name":"resizeAnimation","id":"resizeAnimation","line":"105","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"topPosition","id":"topPosition","line":"108","kind":"variable"},{"comment":"\nCreates an empty popup panel, specifying its \"auto-hide\" and \"modal\"\nproperties.\n\n@param autoHide <code>true</code> if the popup should be automatically\n         hidden when the user clicks outside of it or the history token\n         changes.\n@param modal <code>true</code> if keyboard or mouse events that do not\n         target the PopupPanel or its children should be ignored\n","name":"PopupPanel","id":"PopupPanel2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"null","name":"autoHide","id":"autoHide","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"null","name":"modal","id":"modal","kind":"param"}],"line":"120","kind":"constructor"}],"line":"46","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},{"refId":"dart_web_toolkit_event/HasScrollHandlers","name":"HasScrollHandlers"},{"refId":"dart_web_toolkit_event/HasVerticalScrolling","name":"HasVerticalScrolling"},{"refId":"dart_web_toolkit_event/HasHorizontalScrolling","name":"HasHorizontalScrolling"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by widgets that support scrolling.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/has_scrolling.dart","name":"HasScrolling","id":"HasScrolling","line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/HasScrolling","name":"HasScrolling"},{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"}],"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nA simple panel that wraps its contents in a scrollable area.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/scroll_panel.dart","name":"ScrollPanel","id":"ScrollPanel","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addScrollHandler","id":"addScrollHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ScrollHandler","name":"ScrollHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnsures that the specified item is visible, by adjusting the panel's scroll\nposition.\n\n@param item the item whose visibility is to be ensured\n","name":"ensureVisible","id":"ensureVisible1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"name":"item","id":"item","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the horizontal scroll position.\n\n@return the horizontal scroll position, in pixels\n","name":"getHorizontalScrollPosition","id":"getHorizontalScrollPosition0()","line":"72","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getMaximumHorizontalScrollPosition","id":"getMaximumHorizontalScrollPosition0()","line":"76","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getMaximumVerticalScrollPosition","id":"getMaximumVerticalScrollPosition0()","line":"80","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getMinimumHorizontalScrollPosition","id":"getMinimumHorizontalScrollPosition0()","line":"84","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getMinimumVerticalScrollPosition","id":"getMinimumVerticalScrollPosition0()","line":"88","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getVerticalScrollPosition","id":"getVerticalScrollPosition0()","line":"92","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether or not touch based scrolling is disabled. This method always\nreturns false on devices that do not support touch scrolling.\n\n@return true if disabled, false if enabled\n","name":"isTouchScrollingDisabled","id":"isTouchScrollingDisabled0()","line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"106","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nScroll to the bottom of this panel.\n","name":"scrollToBottom","id":"scrollToBottom0()","line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nScroll to the far left of this panel.\n","name":"scrollToLeft","id":"scrollToLeft0()","line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nScroll to the far right of this panel.\n","name":"scrollToRight","id":"scrollToRight0()","line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nScroll to the top of this panel.\n","name":"scrollToTop","id":"scrollToTop0()","line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this panel always shows its scroll bars, or only when\nnecessary.\n\n@param alwaysShow <code>true</code> to show scroll bars at all times\n","name":"setAlwaysShowScrollBars","id":"setAlwaysShowScrollBars1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"alwaysShow","id":"alwaysShow","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's height. This height does not include decorations such as\nborder, margin, and padding.\n\n@param height the object's new height, in absolute CSS units (e.g. \"10px\",\n         \"1em\" but not \"50%\")\n","name":"setHeight","id":"setHeight1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal scroll position.\n\n@param position the new horizontal scroll position, in pixels\n","name":"setHorizontalScrollPosition","id":"setHorizontalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's size. This size does not include decorations such as\nborder, margin, and padding.\n\n@param width the object's new width, in absolute CSS units (e.g. \"10px\",\n         \"1em\", but not \"50%\")\n@param height the object's new height, in absolute CSS units (e.g. \"10px\",\n         \"1em\", but not \"50%\")\n","name":"setSize","id":"setSize2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"182","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSet whether or not touch scrolling is disabled. By default, touch scrolling\nis enabled on devices that support touch events.\n\n@param isDisabled true to disable, false to enable\n@return true if touch scrolling is enabled and supported, false if disabled\n        or not supported\n","name":"setTouchScrollingDisabled","id":"setTouchScrollingDisabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isDisabled","id":"isDisabled","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setVerticalScrollPosition","id":"setVerticalScrollPosition1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"210","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's width. This width does not include decorations such as\nborder, margin, and padding.\n\n@param width the object's new width, in absolute CSS units (e.g. \"10px\",\n         \"1em\", but not \"50%\")\n","name":"setWidth","id":"setWidth1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContainerElement","id":"getContainerElement0()","line":"227","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet the scrollable element. That is the element with its overflow set to\n'auto' or 'scroll'.\n\n@return the scrollable element\n","name":"getScrollableElement","id":"getScrollableElement0()","line":"237","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"242","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"255","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"ensureVisibleImpl","id":"ensureVisibleImpl2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scroll","id":"scroll","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"e","id":"e","kind":"param"}],"line":"265","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the widget.\n","name":"initialize","id":"initialize0()","line":"283","kind":"method"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"containerElem","id":"containerElem","line":"11","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollableElem","id":"scrollableElem","line":"12","kind":"variable"},{"comment":"\nThe scroller used to support touch events.\n\n\nCreates an empty scroll panel or with the given [child] widget.\n","name":"ScrollPanel","id":"ScrollPanel1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"isOptional":true,"defaultValue":"null","name":"child","id":"child","kind":"param"}],"line":"22","kind":"constructor"},{"comment":"\nCreates an empty scroll panel using the specified root, scrollable, and\ncontainer elements.\n\n@param root the root element of the Widget\n@param scrollable the scrollable element, which can be the same as the root\n         element\n@param container the container element that holds the child\n","name":"ScrollPanel.fromElement","id":"ScrollPanel.fromElement3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"root","id":"root","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ScrollPanel/scrollableElem","name":"scrollableElem"},"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"scrollableElem","id":"scrollableElem","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ScrollPanel/containerElem","name":"containerElem"},"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"containerElem","id":"containerElem","kind":"param"}],"line":"42","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"}],"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nA simple panel that {@link ProvidesResize} to its one child.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/simple_layout_panel.dart","name":"SimpleLayoutPanel","id":"SimpleLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"19","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"81","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"87","kind":"method"},{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","line":"11","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"layout","id":"layout","line":"12","kind":"variable"},{"name":"SimpleLayoutPanel","id":"SimpleLayoutPanel0()","line":"14","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"comment":"\nA rectangular grid that can contain text, html, or a child\n{@link com.google.gwt.user.client.ui.Widget} within its cells. It must be\nresized explicitly to the desired number of rows and columns.\n<p>\n<img class='gallery' src='doc-files/Table.png'/>\n</p>\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.GridExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nGrid widget consists of &lt;g:row> elements. Each &lt;g:row> element\ncan contain one or more &lt;g:cell> or &lt;g:customCell> elements.\nUsing &lt;g:cell> attribute it is possible to place pure HTML content.\n&lt;g:customCell> is used as a container for\n{@link com.google.gwt.user.client.ui.Widget} type objects. (Note that the\ntags of the row, cell and customCell elements are not capitalized. This\nis meant to signal that the item is not a runtime object, and so cannot\nhave a <code>ui:field</code> attribute.)\n<p>\nFor example:\n\n<pre>\n&lt;g:Grid>\n &lt;g:row styleName=\"optionalHeaderStyle\">\n   &lt;g:customCell styleName=\"optionalFooCellStyle\">\n     &lt;g:Label>foo&lt;/g:Label>\n   &lt;/g:customCell>\n   &lt;g:customCell styleName=\"optionalBarCellStyle\">\n     &lt;g:Label>bar&lt;/g:Label>\n   &lt;/g:customCell>\n &lt;/g:row>\n &lt;g:row>\n   &lt;g:cell>\n     &lt;div>foo&lt;/div>\n   &lt;/g:cell>\n   &lt;g:cell>\n     &lt;div>bar&lt;/div>\n   &lt;/g:cell>\n &lt;/g:row>\n&lt;/g:Grid>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/grid.dart","name":"Grid","id":"Grid","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nNative method to add rows into a table with a given number of columns.\n\n@param table the table element\n@param rows number of rows to add\n@param columns the number of columns per row\n","name":"addRows","id":"addRows3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"table","id":"table","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"rows","id":"rows","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"columns","id":"columns","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplaces the contents of the specified cell with a single space.\n\n@param row the cell's row\n@param column the cell's column\n@throws IndexOutOfBoundsException\n","name":"clearCell","id":"clearCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturn number of columns. For grid, row argument is ignored as all grids\nare rectangular.\n","name":"getCellCount","id":"getCellCount1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of columns in this grid.\n\n@return the number of columns\n","name":"getColumnCount","id":"getColumnCount0()","line":"128","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturn number of rows.\n","name":"getRowCount","id":"getRowCount0()","line":"136","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nInserts a new row into the table. If you want to add multiple rows at once,\nuse {@link #resize(int, int)} or {@link #resizeRows(int)} as they are more\nefficient.\n\n@param beforeRow the index before which the new row will be inserted\n@return the index of the newly-created row\n@throws IndexOutOfBoundsException\n","name":"insertRow","id":"insertRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeRow","id":"beforeRow","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeRow","id":"removeRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"164","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResizes the grid.\n\n@param rows the number of rows\n@param columns the number of columns\n@throws IndexOutOfBoundsException\n","name":"resize","id":"resize2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"rows","id":"rows","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"columns","id":"columns","kind":"param"}],"line":"176","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResizes the grid to the specified number of columns.\n\n@param columns the number of columns\n@throws IndexOutOfBoundsException\n","name":"resizeColumns","id":"resizeColumns1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"columns","id":"columns","kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResizes the grid to the specified number of rows.\n\n@param rows the number of rows\n@throws IndexOutOfBoundsException\n","name":"resizeRows","id":"resizeRows1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"rows","id":"rows","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nCreates a new, empty cell.\n","name":"createCell","id":"createCell0()","line":"244","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that a cell is a valid cell in the table.\n\n@param row the cell's row\n@param column the cell's column\n@throws IndexOutOfBoundsException\n","name":"prepareCell","id":"prepareCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"261","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that the column index is valid.\n\n@param column The column index to be checked\n@throws IndexOutOfBoundsException if the column is negative\n","name":"prepareColumn","id":"prepareColumn1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"280","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that the row index is valid.\n\n@param row The row index to be checked\n@throws IndexOutOfBoundsException if the row is negative\n","name":"prepareRow","id":"prepareRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"299","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nNumber of columns in the current grid.\n","name":"numColumns","id":"numColumns","line":"78","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nNumber of rows in the current grid.\n","name":"numRows","id":"numRows","line":"83","kind":"variable"},{"comment":"\nConstructor for <code>Grid</code>. If [rows] and [columns] specified grid will\nconstructs with the requested size.\n","name":"Grid","id":"Grid2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"null","name":"rows","id":"rows","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"null","name":"columns","id":"columns","kind":"param"}],"line":"89","kind":"constructor"}],"line":"52","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/CellFormatter","name":"CellFormatter"},"comment":"\nFlexTable-specific implementation of {@link HTMLTable.CellFormatter}. The\nformatter retrieved from {@link HTMLTable#getCellFormatter()} may be cast\nto this class.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/flex_table.dart","name":"FlexCellFormatter","id":"FlexCellFormatter","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the column span for the given cell. This is the number of logical\ncolumns covered by the cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the cell's column span\n@throws IndexOutOfBoundsException\n","name":"getColSpan","id":"getColSpan2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the row span for the given cell. This is the number of logical rows\ncovered by the cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the cell's row span\n@throws IndexOutOfBoundsException\n","name":"getRowSpan","id":"getRowSpan2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the column span for the given cell. This is the number of logical\ncolumns covered by the cell.\n\n@param row the cell's row\n@param column the cell's column\n@param colSpan the cell's column span\n@throws IndexOutOfBoundsException\n","name":"setColSpan","id":"setColSpan3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"colSpan","id":"colSpan","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the row span for the given cell. This is the number of logical rows\ncovered by the cell.\n\n@param row the cell's row\n@param column the cell's column\n@param rowSpan the cell's row span\n@throws IndexOutOfBoundsException\n","name":"setRowSpan","id":"setRowSpan3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"rowSpan","id":"rowSpan","kind":"param"}],"line":"235","kind":"method"},{"name":"FlexCellFormatter","id":"FlexCellFormatter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"table","id":"table","kind":"param"}],"line":"185","kind":"constructor"}],"line":"183","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"comment":"\nA flexible table that creates cells on demand. It can be jagged (that is,\neach row can contain a different number of cells) and individual cells can be\nset to span multiple rows or columns.\n<p>\n<img class='gallery' src='doc-files/Table.png'/>\n</p>\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.FlexTableExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/flex_table.dart","name":"FlexTable","id":"FlexTable","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"addCells","id":"addCells3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"table","id":"table","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"num","id":"num","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAppends a cell to the specified row.\n\n@param row the row to which the new cell will be added\n@throws IndexOutOfBoundsException\n","name":"addCell","id":"addCell1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of cells on a given row.\n\n@param row the row whose cells are to be counted\n@return the number of cells present\n@throws IndexOutOfBoundsException\n","name":"getCellCount","id":"getCellCount1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"55","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/FlexCellFormatter","name":"FlexCellFormatter"},"comment":"\nExplicitly gets the {@link FlexCellFormatter}. The results of\n{@link HTMLTable#getCellFormatter()} may also be downcast to a\n{@link FlexCellFormatter}.\n\n@return the FlexTable's cell formatter\n","name":"getFlexCellFormatter","id":"getFlexCellFormatter0()","line":"67","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of rows.\n\n@return number of rows\n","name":"getRowCount","id":"getRowCount0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a cell into the FlexTable.\n\n@param beforeRow the cell's row\n@param beforeColumn the cell's column\n","name":"insertCell","id":"insertCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeRow","id":"beforeRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeColumn","id":"beforeColumn","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nInserts a row into the FlexTable.\n\n@param beforeRow the row to insert\n","name":"insertRow","id":"insertRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeRow","id":"beforeRow","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove all rows in this table.\n","name":"removeAllRows","id":"removeAllRows0()","line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeCell","id":"removeCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"col","id":"col","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a number of cells from a row in the table.\n\n@param row the row of the cells to be removed\n@param column the column of the first cell to be removed\n@param num the number of cells to be removed\n@throws IndexOutOfBoundsException\n","name":"removeCells","id":"removeCells3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"num","id":"num","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeRow","id":"removeRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnsure that the cell exists.\n\n@param row the row to prepare.\n@param column the column to prepare.\n@throws IndexOutOfBoundsException if the row is negative\n","name":"prepareCell","id":"prepareCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnsure that the row exists.\n\n@param row The row to prepare.\n@throws IndexOutOfBoundsException if the row is negative\n","name":"prepareRow","id":"prepareRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"165","kind":"method"},{"name":"FlexTable","id":"FlexTable0()","line":"31","kind":"constructor"}],"line":"18","kind":"class"},{"interfaces":[{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"_WidgetIterator","isPrivate":true,"id":"_WidgetIterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"moveNext","id":"moveNext0()","line":"1378","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_getCurrent","isPrivate":true,"id":"_getCurrent0()","line":"1384","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"remove","id":"remove0()","line":"1394","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"findNext","id":"findNext0()","line":"1404","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"current","id":"current","line":"1382","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","line":"1367","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"List"},"name":"widgetList","id":"widgetList","line":"1369","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"lastIndex","id":"lastIndex","line":"1370","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"nextIndex","id":"nextIndex","line":"1371","kind":"variable"},{"name":"_WidgetIterator","id":"_WidgetIterator1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_WidgetIterator/_table","name":"_table"},"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","kind":"param"}],"line":"1373","kind":"constructor"}],"line":"1365","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class contains methods used to format a table's rows.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"RowFormatter","id":"RowFormatter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a style to the specified row.\n\n@param row the row to which the style will be added\n@param styleName the style name to be added\n@see UiObject#addStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"addStyleName","id":"addStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1221","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the TR element representing the specified row.\n\n@param row the row whose TR element is to be retrieved\n@return the row's TR element\n@throws IndexOutOfBoundsException\n","name":"getElement","id":"getElement1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1232","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the style of the specified row.\n\n@param row the row to be queried\n@return the style name\n@see UiObject#getStyleName()\n@throws IndexOutOfBoundsException\n","name":"getStyleName","id":"getStyleName1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1245","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the primary style of the specified row.\n\n@param row the row to be queried\n@return the style name\n@see UiObject#getStylePrimaryName()\n@throws IndexOutOfBoundsException\n","name":"getStylePrimaryName","id":"getStylePrimaryName1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1257","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this row is visible via the display style\nattribute.\n\n@param row the row whose visibility is to be set\n@return <code>true</code> if the row is visible\n","name":"isVisible","id":"isVisible1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1268","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a style from the specified row.\n\n@param row the row from which the style will be removed\n@param styleName the style name to be removed\n@see UiObject#removeStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"removeStyleName","id":"removeStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1281","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the style name associated with the specified row.\n\n@param row the row whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"setStyleName","id":"setStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1293","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the primary style name associated with the specified row.\n\n@param row the row whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStylePrimaryName(String)\n@throws IndexOutOfBoundsException\n","name":"setStylePrimaryName","id":"setStylePrimaryName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical alignment of the specified row.\n\n@param row the row whose alignment is to be set\n@param align the row's new vertical alignment as specified in\n         {@link HasVerticalAlignment}\n@throws IndexOutOfBoundsException\n","name":"setVerticalAlign","id":"setVerticalAlign2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"1317","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this row is visible.\n\n@param row the row whose visibility is to be set\n@param visible <code>true</code> to show the row, <code>false</code> to\n         hide it\n","name":"setVisible","id":"setVisible2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"1329","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nEnsure the TR element representing the specified row exists for\nsubclasses that allow dynamic addition of elements.\n\n@param row the row whose TR element is to be retrieved\n@return the row's TR element\n@throws IndexOutOfBoundsException\n","name":"ensureElement","id":"ensureElement1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1342","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getRow","id":"getRow2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"1347","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nConvenience methods to set an attribute on a row.\n\n@param row cell's row\n@param attrName attribute to set\n@param value value to set\n@throws IndexOutOfBoundsException\n","name":"setAttr","id":"setAttr3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attrName","id":"attrName","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"1359","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","line":"1211","kind":"variable"}],"line":"1209","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class contains methods used to format a table's columns. It is limited\nby the support cross-browser HTML support for column formatting.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"ColumnFormatter","id":"ColumnFormatter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a style to the specified column.\n\n@param col the col to which the style will be added\n@param styleName the style name to be added\n@see UiObject#addStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"addStyleName","id":"addStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"col","id":"col","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1076","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet the col element for the column.\n\n@param column the column index\n@return the col element\n","name":"getElement","id":"getElement1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"1086","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the style of the specified column.\n\n@param column the column to be queried\n@return the style name\n@see UiObject#getStyleName()\n@throws IndexOutOfBoundsException\n","name":"getStyleName","id":"getStyleName1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"1098","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the primary style of the specified column.\n\n@param column the column to be queried\n@return the style name\n@see UiObject#getStylePrimaryName()\n@throws IndexOutOfBoundsException\n","name":"getStylePrimaryName","id":"getStylePrimaryName1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"1110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a style from the specified column.\n\n@param column the column from which the style will be removed\n@param styleName the style name to be removed\n@see UiObject#removeStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"removeStyleName","id":"removeStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the style name associated with the specified column.\n\n@param column the column whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"setStyleName","id":"setStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1134","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the primary style name associated with the specified column.\n\n@param column the column whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStylePrimaryName(String)\n@throws IndexOutOfBoundsException\n","name":"setStylePrimaryName","id":"setStylePrimaryName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"1146","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the width of the specified column.\n\n@param column the column of the cell whose width is to be set\n@param width the cell's new width, in percentage or pixel units\n@throws IndexOutOfBoundsException\n","name":"setWidth","id":"setWidth2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"1157","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResize the column group element.\n\n@param columns the number of columns\n@param growOnly true to only grow, false to shrink if needed\n","name":"resizeColumnGroup","id":"resizeColumnGroup2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"columns","id":"columns","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"growOnly","id":"growOnly","kind":"param"}],"line":"1167","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"ensureColumn","id":"ensureColumn1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"col","id":"col","kind":"param"}],"line":"1184","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPrepare the colgroup tag for the first time, guaranteeing that it exists\nand has at least one col tag in it. This method corrects a Mozilla issue\nwhere the col tag will affect the wrong column if a col tag doesn't exist\nwhen the element is attached to the page.\n","name":"prepareColumnGroup","id":"prepareColumnGroup0()","line":"1197","kind":"method"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"columnGroup","id":"columnGroup","line":"1065","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","line":"1066","kind":"variable"}],"line":"1064","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class contains methods used to format a table's cells.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"CellFormatter","id":"CellFormatter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a style to the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@param styleName the style name to be added\n@see UiObject#addStyleName(String)\n","name":"addStyleName","id":"addStyleName3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"780","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the TD element representing the specified cell.\n\n@param row the row of the cell to be retrieved\n@param column the column of the cell to be retrieved\n@return the column's TD element\n@throws IndexOutOfBoundsException\n","name":"getElement","id":"getElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"794","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the style of a specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@see UiObject#getStyleName()\n@return returns the style name\n@throws IndexOutOfBoundsException\n","name":"getStyleName","id":"getStyleName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"808","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the primary style of a specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@see UiObject#getStylePrimaryName()\n@return returns the style name\n@throws IndexOutOfBoundsException\n","name":"getStylePrimaryName","id":"getStylePrimaryName2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"821","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this cell is visible.\n\n@param row the row of the cell whose visibility is to be set\n@param column the column of the cell whose visibility is to be set\n@return <code>true</code> if the object is visible\n","name":"isVisible","id":"isVisible2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"832","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a style from the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@param styleName the style name to be removed\n@see UiObject#removeStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"removeStyleName","id":"removeStyleName3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"846","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal and vertical alignment of the specified cell's\ncontents.\n\n@param row the row of the cell whose alignment is to be set\n@param column the column of the cell whose alignment is to be set\n@param hAlign the cell's new horizontal alignment as specified in\n         {@link HasHorizontalAlignment}\n@param vAlign the cell's new vertical alignment as specified in\n         {@link HasVerticalAlignment}\n@throws IndexOutOfBoundsException\n","name":"setAlignment","id":"setAlignment4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"hAlign","id":"hAlign","line":"865","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"vAlign","id":"vAlign","line":"865","kind":"param"}],"line":"864","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the height of the specified cell.\n\n@param row the row of the cell whose height is to be set\n@param column the column of the cell whose height is to be set\n@param height the cell's new height, in CSS units\n@throws IndexOutOfBoundsException\n","name":"setHeight","id":"setHeight3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"878","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal alignment of the specified cell.\n\n@param row the row of the cell whose alignment is to be set\n@param column the column of the cell whose alignment is to be set\n@param align the cell's new horizontal alignment as specified in\n         {@link HasHorizontalAlignment}.\n@throws IndexOutOfBoundsException\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","line":"894","kind":"param"}],"line":"893","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the style name associated with the specified cell.\n\n@param row the row of the cell whose style name is to be set\n@param column the column of the cell whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStyleName(String)\n@throws IndexOutOfBoundsException\n","name":"setStyleName","id":"setStyleName3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"909","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the primary style name associated with the specified cell.\n\n@param row the row of the cell whose style name is to be set\n@param column the column of the cell whose style name is to be set\n@param styleName the new style name\n@see UiObject#setStylePrimaryName(String)\n@throws IndexOutOfBoundsException\n","name":"setStylePrimaryName","id":"setStylePrimaryName3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"923","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical alignment of the specified cell.\n\n@param row the row of the cell whose alignment is to be set\n@param column the column of the cell whose alignment is to be set\n@param align the cell's new vertical alignment as specified in\n         {@link HasVerticalAlignment}.\n@throws IndexOutOfBoundsException\n","name":"setVerticalAlignment","id":"setVerticalAlignment3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","line":"937","kind":"param"}],"line":"936","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this cell is visible via the display style property. The\nother cells in the row will all shift left to fill the cell's space. So,\nfor example a table with (0,1,2) will become (1,2) if cell 1 is hidden.\n\n@param row the row of the cell whose visibility is to be set\n@param column the column of the cell whose visibility is to be set\n@param visible <code>true</code> to show the cell, <code>false</code> to\n         hide it\n","name":"setVisible","id":"setVisible3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"953","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the width of the specified cell.\n\n@param row the row of the cell whose width is to be set\n@param column the column of the cell whose width is to be set\n@param width the cell's new width, in CSS units\n@throws IndexOutOfBoundsException\n","name":"setWidth","id":"setWidth3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"966","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether the specified cell will allow word wrapping of its contents.\n\n@param row the row of the cell whose word-wrap is to be set\n@param column the column of the cell whose word-wrap is to be set\n@param wrap <code>false </code> to disable word wrapping in this cell\n@throws IndexOutOfBoundsException\n","name":"setWordWrap","id":"setWordWrap3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"981","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the element associated with a cell. If it does not exist and the\nsubtype allows creation of elements, creates it.\n\n@param row the cell's row\n@param column the cell's column\n@return the cell's element\n@throws IndexOutOfBoundsException\n","name":"ensureElement","id":"ensureElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"996","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nConvenience methods to get an attribute on a cell.\n\n@param row cell's row\n@param column cell's column\n@param attr attribute to get\n@return the attribute's value\n@throws IndexOutOfBoundsException\n","name":"getAttr","id":"getAttr3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attr","id":"attr","kind":"param"}],"line":"1010","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nConvenience methods to set an attribute on a cell.\n\n@param row cell's row\n@param column cell's column\n@param attrName attribute to set\n@param value value to set\n@throws IndexOutOfBoundsException\n","name":"setAttr","id":"setAttr4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"attrName","id":"attrName","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"1024","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nNative method to get a cell's element.\n\n@param table the table element\n@param row the row of the cell\n@param col the column of the cell\n@return the element\n","name":"getCellElement","id":"getCellElement3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"table","id":"table","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"col","id":"col","kind":"param"}],"line":"1037","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the TD element representing the specified cell unsafely (meaning\nthat it doesn't ensure that <code>row</code> and <code>column</code> are\nvalid).\n\n@param row the row of the cell to be retrieved\n@param column the column of the cell to be retrieved\n@return the cell's TD element\n","name":"getRawElement","id":"getRawElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"1054","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","line":"768","kind":"variable"},{"name":"CellFormatter","id":"CellFormatter1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/CellFormatter/_table","name":"_table"},"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","kind":"param"}],"line":"770","kind":"constructor"}],"line":"766","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nReturn value for {@link HTMLTable#getCellForEvent}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"Cell","id":"Cell","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the cell index.\n\n@return the cell index\n","name":"getCellIndex","id":"getCellIndex0()","line":"740","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the cell's element.\n\n@return the cell's element.\n","name":"getElement","id":"getElement0()","line":"749","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet row index.\n\n@return the row index\n","name":"getRowIndex","id":"getRowIndex0()","line":"758","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","line":"722","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"rowIndex","id":"rowIndex","line":"724","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"cellIndex","id":"cellIndex","line":"725","kind":"variable"},{"comment":"\nCreates a cell.\n\n@param rowIndex the cell's row\n@param cellIndex the cell's index\n","name":"Cell","id":"Cell3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/Cell/_table","name":"_table"},"ref":{"refId":"dart_web_toolkit_ui/HtmlTable","name":"HtmlTable"},"name":"_table","isPrivate":true,"id":"_table","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/Cell/rowIndex","name":"rowIndex"},"ref":{"refId":"dart.core/int","name":"int"},"name":"rowIndex","id":"rowIndex","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/Cell/cellIndex","name":"cellIndex"},"ref":{"refId":"dart.core/int","name":"int"},"name":"cellIndex","id":"cellIndex","kind":"param"}],"line":"733","kind":"constructor"}],"line":"720","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasDoubleClickHandlers","name":"HasDoubleClickHandlers"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_event/HasAllDragAndDropHandlers","name":"HasAllDragAndDropHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"comment":"\nHTMLTable contains the common table algorithms for\n{@link com.google.gwt.user.client.ui.Grid} and\n{@link com.google.gwt.user.client.ui.FlexTable}.\n<p>\n<img class='gallery' src='doc-files/Table.png'/>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_table.dart","name":"HtmlTable","id":"HtmlTable","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"69","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"81","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all widgets from this table, optionally clearing the inner HTML of\neach cell.  Note that this method does not remove any cells or rows.\n\n@param clearInnerHTML should the cell's inner html be cleared?\n","name":"clear","id":"clear1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"clearInnerHTML","id":"clearInnerHTML","kind":"param"}],"line":"95","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nClears the cell at the given row and column. If it contains a Widget, it\nwill be removed from the table. If not, its contents will simply be\ncleared.\n\n@param row the widget's row\n@param column the widget's column\n@return true if a widget was removed\n@throws IndexOutOfBoundsException\n","name":"clearCell","id":"clearCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of cells in a given row.\n\n@param row the row whose cells are to be counted\n@return the number of cells present in the row\n","name":"getCellCount","id":"getCellCount1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Cell","name":"Cell"},"comment":"\nGiven a click event, return the Cell that was clicked, or null if the event\ndid not hit this table.  The cell can also be null if the click event does\nnot occur on a specific cell.\n\n@param event A click event of indeterminate origin\n@return The appropriate cell, or null\n","name":"getCellForEvent","id":"getCellForEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickEvent","name":"ClickEvent"},"name":"event","id":"event","kind":"param"}],"line":"134","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/CellFormatter","name":"CellFormatter"},"comment":"\nGets the {@link CellFormatter} associated with this table. Use casting to\nget subclass-specific functionality\n\n@return this table's cell formatter\n","name":"getCellFormatter","id":"getCellFormatter0()","line":"151","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the amount of padding that is added around all cells.\n\n@return the cell padding, in pixels\n","name":"getCellPadding","id":"getCellPadding0()","line":"160","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the amount of spacing that is added around all cells.\n\n@return the cell spacing, in pixels\n","name":"getCellSpacing","id":"getCellSpacing0()","line":"169","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ColumnFormatter","name":"ColumnFormatter"},"comment":"\nGets the column formatter.\n\n@return the column formatter\n","name":"getColumnFormatter","id":"getColumnFormatter0()","line":"178","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the HTML contents of the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the cell's HTML contents\n@throws IndexOutOfBoundsException\n","name":"getHTML","id":"getHTML2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of rows present in this table.\n\n@return the table's row count\n","name":"getRowCount","id":"getRowCount0()","line":"199","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/RowFormatter","name":"RowFormatter"},"comment":"\nGets the RowFormatter associated with this table.\n\n@return the table's row formatter\n","name":"getRowFormatter","id":"getRowFormatter0()","line":"206","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the text within the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the cell's text contents\n@throws IndexOutOfBoundsException\n","name":"getText","id":"getText2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget in the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the widget in the specified cell, or <code>null</code> if none is\n        present\n@throws IndexOutOfBoundsException\n","name":"getWidget","id":"getWidget2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"232","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether the specified cell exists.\n\n@param row the cell's row\n@param column the cell's column\n@return <code>true</code> if the specified cell exists\n","name":"isCellPresent","id":"isCellPresent2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"comment":"\nReturns an iterator containing all the widgets in this table.\n\n@return the iterator\n","name":"iterator","id":"iterator0()","line":"260","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemove the specified widget from the table.\n\n@param widget widget to remove\n@return was the widget removed from the table.\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"271","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the width of the table's border. This border is displayed around all\ncells in the table.\n\n@param width the width of the border, in pixels\n","name":"setBorderWidth","id":"setBorderWidth1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"}],"line":"298","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the amount of padding to be added around all cells.\n\n@param padding the cell padding, in pixels\n","name":"setCellPadding","id":"setCellPadding1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"padding","id":"padding","kind":"param"}],"line":"307","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the amount of spacing to be added around all cells.\n\n@param spacing the cell spacing, in pixels\n","name":"setCellSpacing","id":"setCellSpacing1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"spacing","id":"spacing","kind":"param"}],"line":"316","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the HTML contents of the specified cell.\n\n@param row the cell's row\n@param column the cell's column\n@param html the cell's HTML contents\n@throws IndexOutOfBoundsException\n","name":"setHtml","id":"setHtml3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"328","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the text within the specified cell.\n\n@param row the cell's row\n@param column cell's column\n@param text the cell's text contents\n@throws IndexOutOfBoundsException\n","name":"setText","id":"setText3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"356","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the widget within the specified cell.\n<p>\nInherited implementations may either throw IndexOutOfBounds exception if\nthe cell does not exist, or allocate a new cell to store the content.\n</p>\n<p>\nFlexTable will automatically allocate the cell at the correct location and\nthen set the widget. Grid will set the widget if and only if the cell is\nwithin the Grid's bounding box.\n</p>\n\n@param widget The widget to be added, or null to clear the cell\n@param row the cell's row\n@param column the cell's column\n@throws IndexOutOfBoundsException\n","name":"setWidget","id":"setWidget3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"383","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidget(int,int,Widget)\n","name":"setIsWidget","id":"setIsWidget3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"}],"line":"407","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nBounds checks that the cell exists at the specified location.\n\n@param row cell's row\n@param column cell's column\n@throws IndexOutOfBoundsException\n","name":"checkCellBounds","id":"checkCellBounds2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"418","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that the row is within the correct bounds.\n\n@param row row index to check\n@throws IndexOutOfBoundsException\n","name":"checkRowBounds","id":"checkRowBounds1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"435","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nCreates a new cell. Override this method if the cell should have initial\ncontents.\n\n@return the newly created TD\n","name":"createCell","id":"createCell0()","line":"448","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the table's TBODY element.\n\n@return the TBODY element\n","name":"getBodyElement","id":"getBodyElement0()","line":"457","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nDirectly ask the underlying Dom what the cell count on the given row is.\n\n@param tableBody the element\n@param row the row\n@return number of columns in the row\n","name":"getDomCellCount","id":"getDomCellCount2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"tableBody","id":"tableBody","kind":"param"}],"line":"468","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nDirectly ask the underlying Dom what the row count is.\n\n@return Returns the number of rows in the table\n","name":"getDomRowCount","id":"getDomRowCount1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"elem","id":"elem","kind":"param"}],"line":"481","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nDetermines the TD associated with the specified event.\n\n@param event the event to be queried\n@return the TD associated with the event, or <code>null</code> if none is\n        found.\n","name":"getEventTargetCell","id":"getEventTargetCell1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"496","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a new cell into the specified row.\n\n@param row the row into which the new cell will be inserted\n@param column the column before which the cell will be inserted\n@throws IndexOutOfBoundsException\n","name":"insertCell","id":"insertCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"522","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a number of cells before the specified cell.\n\n@param row the row into which the new cells will be inserted\n@param column the column before which the new cells will be inserted\n@param count number of cells to be inserted\n@throws IndexOutOfBoundsException\n","name":"insertCells","id":"insertCells3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"536","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nInserts a new row into the table.\n\n@param beforeRow the index before which the new row will be inserted\n@return the index of the newly-created row\n@throws IndexOutOfBoundsException\n","name":"insertRow","id":"insertRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeRow","id":"beforeRow","kind":"param"}],"line":"551","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDoes actual clearing, used by clearCell and cleanCell. All HTMLTable\nmethods should use internalClearCell rather than clearCell, as clearCell\nmay be overridden in subclasses to format an empty cell.\n\n@param td element to clear\n@param clearInnerHTML should the cell's inner html be cleared?\n@return returns whether a widget was cleared\n","name":"internalClearCell","id":"internalClearCell2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"td","id":"td","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"clearInnerHTML","id":"clearInnerHTML","kind":"param"}],"line":"570","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSubclasses must implement this method. It allows them to decide what to do\njust before a cell is accessed. If the cell already exists, this method\nmust do nothing. Otherwise, a subclass must either ensure that the cell\nexists or throw an {@link IndexOutOfBoundsException}.\n\n@param row the cell's row\n@param column the cell's column\n","name":"prepareCell","id":"prepareCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"598","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSubclasses can implement this method. It allows them to decide what to do\njust before a column is accessed. For classes, such as\n<code>FlexTable</code>, that do not have a concept of a global column\nlength can ignore this method.\n\n@param column the cell's column\n@throws IndexOutOfBoundsException\n","name":"prepareColumn","id":"prepareColumn1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"609","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSubclasses must implement this method. If the row already exists, this\nmethod must do nothing. Otherwise, a subclass must either ensure that the\nrow exists or throw an {@link IndexOutOfBoundsException}.\n\n@param row the cell's row\n","name":"prepareRow","id":"prepareRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"623","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the specified cell from the table.\n\n@param row the row of the cell to remove\n@param column the column of cell to remove\n@throws IndexOutOfBoundsException\n","name":"removeCell","id":"removeCell2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"632","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the specified row from the table.\n\n@param row the index of the row to be removed\n@throws IndexOutOfBoundsException\n","name":"removeRow","id":"removeRow1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"}],"line":"645","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the table's CellFormatter.\n\n@param cellFormatter the table's cell formatter\n","name":"setCellFormatter","id":"setCellFormatter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/CellFormatter","name":"CellFormatter"},"name":"cellFormatter","id":"cellFormatter","kind":"param"}],"line":"658","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setColumnFormatter","id":"setColumnFormatter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ColumnFormatter","name":"ColumnFormatter"},"name":"formatter","id":"formatter","kind":"param"}],"line":"662","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the table's RowFormatter.\n\n@param rowFormatter the table's row formatter\n","name":"setRowFormatter","id":"setRowFormatter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/RowFormatter","name":"RowFormatter"},"name":"rowFormatter","id":"rowFormatter","kind":"param"}],"line":"678","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nRemoves any widgets, text, and HTML within the cell. This method assumes\nthat the requested cell already exists.\n\n@param row the cell's row\n@param column the cell's column\n@param clearInnerHTML should the cell's inner html be cleared?\n@return element that has been cleaned\n","name":"cleanCell","id":"cleanCell3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"clearInnerHTML","id":"clearInnerHTML","kind":"param"}],"line":"692","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the Widget associated with the given cell.\n\n@param row the cell's row\n@param column the cell's column\n@return the widget\n","name":"getWidgetImpl","id":"getWidgetImpl2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"}],"line":"706","kind":"method"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nTable's body.\n","name":"bodyElem","id":"bodyElem","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/CellFormatter","name":"CellFormatter"},"comment":"\nCurrent cell formatter.\n","name":"cellFormatter","id":"cellFormatter","line":"24","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ColumnFormatter","name":"ColumnFormatter"},"comment":"\nColumn Formatter.\n","name":"columnFormatter","id":"columnFormatter","line":"29","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/RowFormatter","name":"RowFormatter"},"comment":"\nCurrent row formatter.\n","name":"rowFormatter","id":"rowFormatter","line":"34","kind":"variable"},{"ref":{"refId":"dart.dom.html/TableElement","name":"TableElement"},"comment":"\nTable element.\n","name":"tableElem","id":"tableElem","line":"39","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ElementMapperImpl","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"ElementMapperImpl"},"name":"widgetMap","id":"widgetMap","line":"41","kind":"variable"},{"comment":"\nCreate a new empty HTML Table.\n","name":"HtmlTable","id":"HtmlTable0()","line":"46","kind":"constructor"}],"line":"14","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_animation/Animation","name":"Animation"},"comment":"\nAn {@link Animation} used to slide in the new content.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/deck_panel.dart","name":"_SlideAnimation","isPrivate":true,"id":"_SlideAnimation","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSwitch to a new {@link Widget}.\n\n@param oldWidget the {@link Widget} to hide\n@param newWidget the {@link Widget} to show\n@param animate true to animate, false to switch instantly\n","name":"showWidget","id":"showWidget3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"oldWidget","id":"oldWidget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"newWidget","id":"newWidget","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"animate","id":"animate","kind":"param"}],"line":"223","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onComplete","id":"onComplete0()","line":"284","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onStart","id":"onStart0()","line":"303","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onUpdate","id":"onUpdate1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"312","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHide the old widget when the animation completes.\n","name":"hideOldWidget","id":"hideOldWidget0()","line":"344","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onInstantaneousRun","id":"onInstantaneousRun0()","line":"351","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/DeckPanel","name":"DeckPanel"},"name":"_deckPanel","isPrivate":true,"id":"_deckPanel","line":"180","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe {@link dart_html.Element} holding the {@link Widget} with a lower index.\n","name":"container1","id":"container1","line":"185","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe {@link dart_html.Element} holding the {@link Widget} with a higher index.\n","name":"container2","id":"container2","line":"190","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA bool indicating whether container1 is growing or shrinking.\n","name":"growing","id":"growing","line":"195","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe fixed height of a {@link TabPanel} in pixels. If the {@link TabPanel}\ndoes not have a fixed height, this will be set to -1.\n","name":"fixedHeight","id":"fixedHeight","line":"201","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nThe old {@link Widget} that is being hidden.\n","name":"oldWidget","id":"oldWidget","line":"206","kind":"variable"},{"comment":"\nConstruct a new {@link _SlideAnimation} using the specified scheduler to\nsheduler request frames.\n\n@param scheduler an {@link _SlideAnimation} instance\n","name":"_SlideAnimation","id":"_SlideAnimation2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_SlideAnimation/_deckPanel","name":"_deckPanel"},"ref":{"refId":"dart_web_toolkit_ui/DeckPanel","name":"DeckPanel"},"name":"_deckPanel","isPrivate":true,"id":"_deckPanel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_animation/AnimationScheduler","name":"AnimationScheduler"},"isOptional":true,"defaultValue":"null","name":"scheduler","id":"scheduler","kind":"param"}],"line":"214","kind":"constructor"}],"line":"178","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"},{"refId":"dart_web_toolkit_event/HasAnimation","name":"HasAnimation"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that displays all of its child widgets in a 'deck', where only one\ncan be visible at a time. It is used by\n{@link com.google.gwt.user.client.ui.TabPanel}.\n\n<p>\nOnce a widget has been added to a DeckPanel, its visibility, width, and\nheight attributes will be manipulated. When the widget is removed from the\nDeckPanel, it will be visible, and its width and height attributes will be\ncleared.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/deck_panel.dart","name":"DeckPanel","id":"DeckPanel","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nThe the container {@link dart_html.Element} around a {@link Widget}.\n\n@param w the {@link Widget}\n@return the container {@link dart_html.Element}\n","name":"_getContainer","isPrivate":true,"id":"_getContainer1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the currently-visible widget.\n\n@return the visible widget's index\n","name":"getVisibleWidgetIndex","id":"getVisibleWidgetIndex0()","line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"81","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isAnimationEnabled","id":"isAnimationEnabled0()","line":"90","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"94","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAnimationEnabled","id":"setAnimationEnabled1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enable","id":"enable","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the widget at the specified index. This causes the currently- visible\nwidget to be hidden.\n\n@param index the index of the widget to be shown\n","name":"showWidgetAt","id":"showWidgetAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nSetup the container around the widget.\n","name":"createWidgetContainer","id":"createWidgetContainer0()","line":"136","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSetup the container around the widget.\n","name":"finishWidgetInitialization","id":"finishWidgetInitialization2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"container","id":"container","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"148","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nReset the dimensions of the widget when it is removed.\n","name":"resetChildWidget","id":"resetChildWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"169","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"comment":"\nThe duration of the animation.\n","name":"_ANIMATION_DURATION","isPrivate":true,"id":"_ANIMATION_DURATION","line":"22","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_SlideAnimation","name":"_SlideAnimation"},"isStatic":true,"comment":"\nThe {@link Animation} used to slide in the new {@link Widget}.\n","name":"_slideAnimation","isPrivate":true,"id":"_slideAnimation","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationEnabled","isPrivate":true,"id":"_isAnimationEnabled","line":"39","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_visibleWidget","isPrivate":true,"id":"_visibleWidget","line":"41","kind":"variable"},{"comment":"\nCreates an empty deck panel.\n","name":"DeckPanel","id":"DeckPanel0()","line":"46","kind":"constructor"}],"line":"18","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/DeckLayoutPanel","name":"DeckLayoutPanel"},"comment":"\nThis extension of DeckLayoutPanel overrides the mutator methods to\nprevent external callers from adding to the state of the DeckPanel.\n<p>\nRemoval of Widgets is supported so that WidgetCollection.WidgetIterator\noperates as expected.\n</p>\n<p>\nWe ensure that the DeckLayoutPanel cannot become of of sync with its\nassociated TabBar by delegating all mutations to the TabBar to this\nimplementation of DeckLayoutPanel.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_layout_panel.dart","name":"_TabbedDeckLayoutPanel","isPrivate":true,"id":"_TabbedDeckLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"637","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"641","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertWidget","id":"insertWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"645","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"649","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insertProtected","isPrivate":true,"id":"_insertProtected2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"657","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeProtected","isPrivate":true,"id":"_removeProtected1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"661","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/TabLayoutPanel","name":"TabLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"633","kind":"variable"},{"name":"_TabbedDeckLayoutPanel","id":"_TabbedDeckLayoutPanel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_TabbedDeckLayoutPanel/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/TabLayoutPanel","name":"TabLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"635","kind":"constructor"}],"line":"631","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_layout_panel.dart","name":"_Tab","isPrivate":true,"id":"_Tab","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"576","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"580","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSelected","id":"setSelected1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"selected","id":"selected","kind":"param"}],"line":"598","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"606","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContainerElement","id":"getContainerElement0()","line":"612","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/TabLayoutPanel","name":"TabLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"559","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_inner","isPrivate":true,"id":"_inner","line":"561","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_replacingWidget","isPrivate":true,"id":"_replacingWidget","line":"562","kind":"variable"},{"name":"_Tab","id":"_Tab2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_Tab/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/TabLayoutPanel","name":"TabLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"564","kind":"constructor"}],"line":"557","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasSelectionHandlers"},{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasBeforeSelectionHandlers"},{"refId":"dart_web_toolkit_animation/AnimatedLayout","name":"AnimatedLayout"},{"refId":"dart_web_toolkit_ui/IndexedPanelForIsWidget","name":"IndexedPanelForIsWidget"},{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"}],"superclass":{"refId":"dart_web_toolkit_ui/ResizeComposite","name":"ResizeComposite"},"comment":"\nA panel that represents a tabbed set of pages, each of which contains another\nwidget. Its child widgets are shown as the user selects the various _tabs\nassociated with them. The _tabs can contain arbitrary text, HTML, or widgets.\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-TabLayoutPanel\n<dd>the panel itself\n<dt>.gwt-TabLayoutPanel .gwt-TabLayoutPanelTabs\n<dd>the tab bar element\n<dt>.gwt-TabLayoutPanel .gwt-TabLayoutPanelTab\n<dd>an individual tab\n<dt>.gwt-TabLayoutPanel .gwt-TabLayoutPanelTabInner\n<dd>an element nested in each tab (useful for styling)\n<dt>.gwt-TabLayoutPanel .gwt-TabLayoutPanelContent\n<dd>applied to all child content widgets\n</dl>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TabLayoutPanelExample}\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nA TabLayoutPanel element in a {@link com.google.gwt.uibinder.client.UiBinder\nUiBinder} template must have a <code>barHeight</code> attribute with a double\nvalue, and may have a <code>barUnit</code> attribute with a\n{@link com.google.gwt.dom.client.Style.Unit Style.Unit} value.\n<code>barUnit</code> defaults to PX.\n<p>\nThe children of a TabLayoutPanel element are laid out in &lt;g:tab>\nelements. Each tab can have one widget child and one of two types of header\nelements. A &lt;g:header> element can hold html, or a &lt;g:customHeader>\nelement can hold a widget. (Note that the tags of the header elements are\nnot capitalized. This is meant to signal that the head is not a runtime\nobject, and so cannot have a <code>ui:field</code> attribute.)\n<p>\nFor example:<pre>\n&lt;g:TabLayoutPanel barUnit='EM' barHeight='3'>\n &lt;g:tab>\n   &lt;g:header size='7'>&lt;b>HTML&lt;/b> header&lt;/g:header>\n   &lt;g:Label>able&lt;/g:Label>\n &lt;/g:tab>\n &lt;g:tab>\n   &lt;g:customHeader size='7'>\n     &lt;g:Label>Custom header&lt;/g:Label>\n   &lt;/g:customHeader>\n   &lt;g:Label>baker&lt;/g:Label>\n &lt;/g:tab>\n&lt;/g:TabLayoutPanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/tab_layout_panel.dart","name":"TabLayoutPanel","id":"TabLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the panel. If the Widget is already attached, it will be\nmoved to the right-most index.\n\n@param child the widget to be added\n@param text the text to be shown on its tab\n@param asHtml <code>true</code> to treat the specified text as HTML\n","name":"addTabText","id":"addTabText3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"163","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the panel. If the Widget is already attached, it will be\nmoved to the right-most index.\n\n@param child the widget to be added\n@param tab the widget to be placed in the associated tab\n","name":"addTab","id":"addTab2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tab","id":"tab","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","line":"179","kind":"param"}],"line":"178","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"SelectionHandler"},"name":"handler","id":"handler","line":"184","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"192","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forceLayout","id":"forceLayout0()","line":"200","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the duration of the animated transition between _tabs.\n\n@return the duration in milliseconds\n","name":"getAnimationDuration","id":"getAnimationDuration0()","line":"209","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the currently-selected tab.\n\n@return the selected index, or <code>-1</code> if none is selected.\n","name":"getSelectedIndex","id":"getSelectedIndex0()","line":"218","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget in the tab at the given index.\n\n@param index the index of the tab to be retrieved\n@return the tab's widget\n","name":"getTabWidgetById","id":"getTabWidgetById1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"228","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n","name":"getTabIsWidget","id":"getTabIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"236","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget in the tab associated with the given child widget.\n\n@param child the child whose tab is to be retrieved\n@return the tab's widget\n","name":"getTabWidget","id":"getTabWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nReturns the widget at the given index.\n","name":"getWidgetById","id":"getWidgetById1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"254","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of _tabs and widgets.\n","name":"getWidgetCount","id":"getWidgetCount0()","line":"261","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n","name":"getWidgetIndexIsWidget","id":"getWidgetIndexIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"268","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the index of the given child, or -1 if it is not a child.\n","name":"getWidgetIndex","id":"getWidgetIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget into the panel. If the Widget is already attached, it will\nbe moved to the requested index.\n\n@param child the widget to be added\n@param text the text to be shown on its tab\n@param asHtml <code>true</code> to treat the specified text as HTML\n@param beforeIndex the index before which it will be inserted\n","name":"insert","id":"insert4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"328","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget into the panel. If the Widget is already attached, it will\nbe moved to the requested index.\n\n@param child the widget to be added\n@param tab the widget to be placed in the associated tab\n@param beforeIndex the index before which it will be inserted\n","name":"insertTab","id":"insertTab3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"tab","id":"tab","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"346","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether or not transitions slide in vertically or horizontally.\nDefaults to horizontally.\n\n@return true for vertical transitions, false for horizontal\n","name":"isAnimationVertical","id":"isAnimationVertical0()","line":"356","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"360","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"364","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"392","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nProgrammatically selects the specified tab.\n\n@param index the index of the tab to be selected\n@param fireEvents true to fire events, false not to\n","name":"selectTab","id":"selectTab2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"407","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nProgrammatically selects the specified tab.\n\n@param child the child whose tab is to be selected\n@param fireEvents true to fire events, false not to\n","name":"selectTabWidget","id":"selectTabWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"457","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the duration of the animated transition between _tabs.\n\n@param duration the duration in milliseconds.\n","name":"setAnimationDuration","id":"setAnimationDuration1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"}],"line":"466","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet whether or not transitions slide in vertically or horizontally.\n\n@param isVertical true for vertical transitions, false for horizontal\n","name":"setAnimationVertical","id":"setAnimationVertical1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isVertical","id":"isVertical","kind":"param"}],"line":"475","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a tab's HTML contents.\n\nUse care when setting an object's HTML; it is an easy way to expose\nscript-based security problems. Consider using\n{@link #setTabHTML(int, SafeHtml)} or\n{@link #setTabText(int, String)} whenever possible.\n\n@param index the index of the tab whose HTML is to be set\n@param html the tab's new HTML contents\n","name":"setTabHtml","id":"setTabHtml2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"490","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a tab's text contents.\n\n@param index the index of the tab whose text is to be set\n@param text the object's new text\n","name":"setTabText","id":"setTabText2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"511","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkChild","id":"checkChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"516","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkIndex","id":"checkIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"520","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insert","isPrivate":true,"id":"_insert3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/_Tab","name":"_Tab"},"name":"tab","id":"tab","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"524","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_CONTENT_CONTAINER_STYLE","isPrivate":true,"id":"_CONTENT_CONTAINER_STYLE","line":"67","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_CONTENT_STYLE","isPrivate":true,"id":"_CONTENT_STYLE","line":"68","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_TAB_STYLE","isPrivate":true,"id":"_TAB_STYLE","line":"69","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_TAB_INNER_STYLE","isPrivate":true,"id":"_TAB_INNER_STYLE","line":"71","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"_BIG_ENOUGH_TO_NOT_WRAP","isPrivate":true,"id":"_BIG_ENOUGH_TO_NOT_WRAP","line":"73","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_TabbedDeckLayoutPanel","name":"_TabbedDeckLayoutPanel"},"name":"_deckPanel","isPrivate":true,"id":"_deckPanel","line":"75","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/FlowPanel","name":"FlowPanel"},"isFinal":true,"name":"_tabBar","isPrivate":true,"id":"_tabBar","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/_Tab","name":"_Tab"}],"name":"List"},"isFinal":true,"name":"_tabs","isPrivate":true,"id":"_tabs","line":"77","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_selectedIndex","isPrivate":true,"id":"_selectedIndex","line":"78","kind":"variable"},{"comment":"\nCreates an empty tab panel.\n\n@param barHeight the size of the tab bar\n@param barUnit the unit in which the tab bar size is specified\n","name":"TabLayoutPanel","id":"TabLayoutPanel2()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"barHeight","id":"barHeight","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"barUnit","id":"barUnit","kind":"param"}],"line":"86","kind":"constructor"}],"line":"65","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/caption_panel.dart","name":"_CaptionPanelImplSafariScheduledCommand","isPrivate":true,"id":"_CaptionPanelImplSafariScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute0()","line":"242","kind":"method"},{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"_fieldset","isPrivate":true,"id":"_fieldset","line":"238","kind":"variable"},{"name":"_CaptionPanelImplSafariScheduledCommand","id":"_CaptionPanelImplSafariScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_CaptionPanelImplSafariScheduledCommand/_fieldset","name":"_fieldset"},"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"_fieldset","isPrivate":true,"id":"_fieldset","kind":"param"}],"line":"240","kind":"constructor"}],"line":"236","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/CaptionPanelImpl","name":"CaptionPanelImpl"},"comment":"\nImplementation class that handles Safari rendering issues.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/caption_panel.dart","name":"CaptionPanelImplSafari","id":"CaptionPanelImplSafari","children":[{"returnType":{"refId":"void","name":"void"},"name":"setSafeCaption","id":"setSafeCaption3()","children":[{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"fieldset","id":"fieldset","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"legend","id":"legend","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"caption","id":"caption","kind":"param"}],"line":"225","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCaption","id":"setCaption4()","children":[{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"fieldset","id":"fieldset","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"legend","id":"legend","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"caption","id":"caption","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"asHtml","id":"asHtml","kind":"param"}],"line":"229","kind":"method"}],"line":"223","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/CaptionPanelImpl","name":"CaptionPanelImpl"},"comment":"\nImplementation class that handles Mozilla rendering issues.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/caption_panel.dart","name":"CaptionPanelImplMozilla","id":"CaptionPanelImplMozilla","children":[{"returnType":{"refId":"void","name":"void"},"name":"setSafeCaption","id":"setSafeCaption3()","children":[{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"fieldset","id":"fieldset","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"legend","id":"legend","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"caption","id":"caption","kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCaption","id":"setCaption4()","children":[{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"fieldset","id":"fieldset","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"legend","id":"legend","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"caption","id":"caption","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"asHtml","id":"asHtml","kind":"param"}],"line":"213","kind":"method"}],"line":"207","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation class without browser-specific hacks.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/caption_panel.dart","name":"CaptionPanelImpl","id":"CaptionPanelImpl","children":[{"returnType":{"refId":"void","name":"void"},"name":"setCaption","id":"setCaption4()","children":[{"ref":{"refId":"dart.dom.html/FieldSetElement","name":"FieldSetElement"},"name":"fieldset","id":"fieldset","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"legend","id":"legend","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"caption","id":"caption","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"asHtml","id":"asHtml","kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/CaptionPanelImpl","name":"CaptionPanelImpl"},"name":"CaptionPanelImpl.browserDependant","id":"CaptionPanelImpl.browserDependant0()","line":"174","kind":"constructor"},{"name":"CaptionPanelImpl","id":"CaptionPanelImpl0()","line":"178","kind":"constructor"}],"line":"172","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/HasWidgetsForIsWidget","name":"HasWidgetsForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nA panel that wraps its contents in a border with a caption that appears in\nthe upper left corner of the border. This is an implementation of the\nfieldset HTML element.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/caption_panel.dart","name":"CaptionPanel","id":"CaptionPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget)\n","name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"59","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the content widget.\n","name":"clear","id":"clear0()","line":"66","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the caption as HTML; note that if the caption was previously set\nusing {@link #setCaptionText(String)}, the return value is undefined.\n","name":"getCaptionHtml","id":"getCaptionHtml0()","line":"74","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the caption for the panel using an HTML fragment. Pass in empty string\nto remove the caption completely, leaving just the unadorned panel.\n\n@param html HTML for the new caption; must not be <code>null</code>\n","name":"setCaptionHtml","id":"setCaptionHtml1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the caption for the panel using a SafeHtml string.\n\n@param html HTML for the new caption; must not be <code>null</code>\n","name":"setCaptionSafeHtml","id":"setCaptionSafeHtml1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the caption as text; note that if the caption was previously set\nusing {@link #setCaptionHTML(String)}, the return value is undefined.\n","name":"getCaptionText","id":"getCaptionText0()","line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the caption for the panel using text that will be automatically\nescaped. Pass in empty string to remove the caption completely, leaving\njust the unadorned panel.\n\n@param text text for the new caption; must not be <code>null</code>\n","name":"setCaptionText","id":"setCaptionText1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nAccesses the content widget, if present.\n\n@return the content widget specified previously in\n        {@link #setContentWidget(Widget)}\n","name":"getContentWidget","id":"getContentWidget0()","line":"128","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets or replaces the content widget within the CaptionPanel.\n\n@param w the content widget to be set\n","name":"setContentWidget","id":"setContentWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"comment":"\nIterates over the singular content widget, if present.\n","name":"iterator","id":"iterator0()","line":"144","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves the specified widget, although in practice the specified widget\nmust be the content widget.\n\n@param w the widget to remove; note that anything other than the Widget\n           returned by {@link #getContentWidget()} will have no effect\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"155","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nOverloaded version for IsWidget.\n\n@see #remove(Widget)\n","name":"removeIsWidget","id":"removeIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"164","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/CaptionPanelImpl","name":"CaptionPanelImpl"},"isStatic":true,"comment":"\nThe implementation instance.\n","name":"impl","id":"impl","line":"16","kind":"variable"},{"ref":{"refId":"dart.dom.html/LegendElement","name":"LegendElement"},"comment":"\nThe legend element used as the caption.\n","name":"legend","id":"legend","line":"21","kind":"variable"},{"comment":"\nConstructs a CaptionPanel with specified caption text.\n\n@param caption the text of the caption\n","name":"CaptionPanel.fromSafeHtml","id":"CaptionPanel.fromSafeHtml1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"caption","id":"caption","kind":"param"}],"line":"28","kind":"constructor"},{"comment":"\nConstructs a CaptionPanel having the specified caption.\n\n@param caption the caption to display\n@param asHTML if <code>true</code>, the <code>caption</code> param is\n           interpreted as HTML; otherwise, <code>caption</code> is\n           treated as text and automatically escaped\n","name":"CaptionPanel","id":"CaptionPanel2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"caption","id":"caption","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"38","kind":"constructor"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nConvenience class to help lazy loading. The bulk of a LazyPanel is not\ninstantiated until {@link #setVisible}(true) or {@link #ensureWidget} is\ncalled.\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.LazyPanelExample}\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/lazy_panel.dart","name":"LazyPanel","id":"LazyPanel","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nCreate the widget contained within the {@link LazyPanel}.\n\n@return the lazy widget\n","name":"createWidget","id":"createWidget0()","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nEnsures that the widget has been created by calling {@link #createWidget}\nif {@link #getWidget} returns <code>null</code>. Typically it is not\nnecessary to call this directly, as it is called as a side effect of a\n<code>setVisible(true)</code> call.\n","name":"ensureWidget","id":"ensureWidget0()","line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this object is visible.\n\n@param visible <code>true</code> to show the object, <code>false</code> to\n         hide it\n","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"51","kind":"method"},{"name":"LazyPanel","id":"LazyPanel0()","line":"14","kind":"constructor"}],"line":"13","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that contains HTML, and which can attach child widgets to identified\nelements within that HTML.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/html_panel.dart","name":"HtmlPanel","id":"HtmlPanel","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nA helper method for creating unique IDs for elements within dynamically-\ngenerated HTML. This is important because no two elements in a document\nshould have the same id.\n\n@return a new unique identifier\n","name":"createUniqueId","id":"createUniqueId0()","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to the panel.\n\n@param widget the widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to the panel, contained within the HTML element\nspecified by a given id.\n\n@param widget the widget to be added\n@param id the id of the element within which it will be contained\n","name":"addById","id":"addById2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"141","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to the panel, contained within an HTML\nelement.  It is up to the caller to ensure that the given element\nis a child of this panel's root element.\n\n@param widget the widget to be added\n@param elem the element within which it will be contained\n\n\nAdds a child widget to the panel, replacing the HTML element.\n\n@param widget the widget to be added\n@param toReplace the element to be replaced by the widget\n","name":"addAndReplaceElement","id":"addAndReplaceElement2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"toReplace","id":"toReplace","kind":"param"}],"line":"169","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addAndReplaceElement(Widget,Element)\n","name":"addAndReplaceElementIsWidget","id":"addAndReplaceElementIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"toReplace","id":"toReplace","kind":"param"}],"line":"243","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to the panel, replacing the HTML element specified by a\ngiven id.\n\n@param widget the widget to be added\n@param id the id of the element to be replaced by the widget\n","name":"addAndReplaceElementById","id":"addAndReplaceElementById2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"254","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addAndReplaceElement(Widget,String)\n","name":"addAndReplaceElementIsWidgetById","id":"addAndReplaceElementIsWidgetById2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"269","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nFinds an {@link Element element} within this panel by its id.\n\nThis method uses\n{@link com.google.gwt.dom.client.Document#getElementById(String)}, so the\nid must still be unique within the document.\n\n@param id the id of the element to be found\n@return the element with the given id, or <code>null</code> if none is found\nelement.query('#id');\n","name":"getElementById","id":"getElementById1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"284","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nPerforms a {@link Document#getElementById(String)} after attaching the panel's\nelement into a hidden DIV in the document's body. Attachment is necessary\nto be able to use the native getElementById. The panel's element will be\nre-attached to its original parent (if any) after the method returns.\n\n@param id the id whose associated element is to be retrieved\n@return the associated element, or <code>null</code> if none is found\n","name":"_attachToDomAndGetElement","isPrivate":true,"id":"_attachToDomAndGetElement1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","kind":"param"}],"line":"298","kind":"method"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"isStatic":true,"name":"hiddenDiv","id":"hiddenDiv","line":"12","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/HtmlPanel","name":"HtmlPanel"},"comment":"\nCreates an HTML panel that wraps an existing element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"HtmlPanel.wrap","id":"HtmlPanel.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"34","kind":"constructor"},{"comment":"\nCreates an HTML panel with the specified HTML contents inside a DIV\nelement. Any element within this HTML that has a specified id can contain a\nchild widget.\n\n@param html the panel's HTML\n","name":"HtmlPanel","id":"HtmlPanel1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"54","kind":"constructor"},{"comment":"\nCreates an HTML panel whose root element has the given tag, and with the\nspecified HTML contents. Any element within this HTML that has a specified\nid can contain a child widget.\n\n@param tag the tag of the root element\n@param html the panel's HTML\n","name":"HtmlPanel.fromTag","id":"HtmlPanel.fromTag2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"html","id":"html","kind":"param"}],"line":"81","kind":"constructor"},{"comment":"\nConstruct a new {@link HTMLPanel} with the specified element.\n\n@param elem the element at the root of the panel\n","name":"HtmlPanel.fromElement","id":"HtmlPanel.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"121","kind":"constructor"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that formats its child widgets using the default HTML layout\nbehavior.\n\n<p>\n<img class='gallery' src='doc-files/FlowPanel.png'/>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/flow_panel.dart","name":"FlowPanel","id":"FlowPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a new child widget to the panel.\n\n@param w the widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget before the specified index.\n\n@param w the widget to be inserted\n@param beforeIndex the index before which it will be inserted\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"55","kind":"method"},{"comment":"\nCreates an empty flow panel.\n","name":"FlowPanel","id":"FlowPanel0()","line":"19","kind":"constructor"}],"line":"14","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/deck_layout_panel.dart","name":"_LayoutCommandAnimationCallback","isPrivate":true,"id":"_LayoutCommandAnimationCallback","children":[{"returnType":{"refId":"void","name":"void"},"name":"onAnimationComplete","id":"onAnimationComplete0()","line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLayout","id":"onLayout2()","children":[{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"405","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/DeckLayoutPanel","name":"DeckLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"393","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"name":"_callback","isPrivate":true,"id":"_callback","line":"394","kind":"variable"},{"name":"_LayoutCommandAnimationCallback","id":"_LayoutCommandAnimationCallback2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_LayoutCommandAnimationCallback/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/DeckLayoutPanel","name":"DeckLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_LayoutCommandAnimationCallback/_callback","name":"_callback"},"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"name":"_callback","isPrivate":true,"id":"_callback","kind":"param"}],"line":"396","kind":"constructor"}],"line":"391","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"comment":"\n{@link LayoutCommand} used by this widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/deck_layout_panel.dart","name":"_DeckAnimateCommand","isPrivate":true,"id":"_DeckAnimateCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"schedule","id":"schedule2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"382","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doBeforeLayout","id":"doBeforeLayout0()","line":"386","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/DeckLayoutPanel","name":"DeckLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"378","kind":"variable"},{"name":"_DeckAnimateCommand","id":"_DeckAnimateCommand2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_DeckAnimateCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/DeckLayoutPanel","name":"DeckLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"layout","id":"layout","kind":"param"}],"line":"380","kind":"constructor"}],"line":"376","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/AcceptsOneWidget","name":"AcceptsOneWidget"},{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"},{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"},{"refId":"dart_web_toolkit_animation/AnimatedLayout","name":"AnimatedLayout"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that displays all of its child widgets in a 'deck', where only one\ncan be visible at a time. It is used by\n{@link com.google.gwt.user.client.ui.TabLayoutPanel}.\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<p>\nOnce a widget has been added to a DeckPanel, its visibility, width, and\nheight attributes will be manipulated. When the widget is removed from the\nDeckPanel, it will be visible, and its width and height attributes will be\ncleared.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/deck_layout_panel.dart","name":"DeckLayoutPanel","id":"DeckLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nLayout children, animating over the specified period of time.\n\n<p>\nThis method provides a callback that will be informed of animation updates.\nThis can be used to create more complex animation effects.\n</p>\n\n@param duration the animation duration, in milliseconds\n@param callback the animation callback\n","name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nLayout children immediately.\n\n<p>\nThis is not normally necessary, unless you want to update child widgets'\npositions explicitly to create a starting point for a subsequent call to\n{@link #animate(int)}.\n</p>\n\n@see #animate(int)\n@see #animate(int, Layout.AnimationCallback)\n","name":"forceLayout","id":"forceLayout0()","line":"78","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the duration of the animated transition between tabs.\n\n@return the duration in milliseconds\n","name":"getAnimationDuration","id":"getAnimationDuration0()","line":"91","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the currently-visible widget.\n\n@return the visible widget, or null if not visible\n","name":"getVisibleWidget","id":"getVisibleWidget0()","line":"100","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the currently-visible widget.\n\n@return the visible widget's index\n","name":"getVisibleWidgetIndex","id":"getVisibleWidgetIndex0()","line":"109","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInsert a widget before the specified widget. If the widget is already a\nchild of this panel, this method behaves as though {@link #remove(Widget)}\nhad already been called.\n\n@param widget the widget to be added\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertBefore","id":"insertBefore2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether or not transitions slide in vertically or horizontally.\nDefaults to horizontally.\n\n@return true for vertical transitions, false for horizontal\n","name":"isAnimationVertical","id":"isAnimationVertical0()","line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet whether or not transitions slide in vertically or horizontally.\n\n@param isVertical true for vertical transitions, false for horizontal\n","name":"setAnimationVertical","id":"setAnimationVertical1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isVertical","id":"isVertical","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"182","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the duration of the animated transition between tabs.\n\n@param duration the duration in milliseconds.\n","name":"setAnimationDuration","id":"setAnimationDuration1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"}],"line":"215","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShow the specified widget. If the widget is not a child of this panel, it\nis added to the end of the panel. If the specified widget is null, the\ncurrently-visible widget will be hidden.\n\n@param w the widget to show, and add if not a child\n","name":"setWidgetIsWidget","id":"setWidgetIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the widget at the specified index. This causes the currently- visible\nwidget to be hidden.\n\n@param index the index of the widget to be shown\n","name":"showWidgetAt","id":"showWidgetAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"248","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the widget at the specified index. This causes the currently- visible\nwidget to be hidden.\n\n@param widget the widget to be shown\n","name":"showWidget","id":"showWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"259","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"269","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAssert that the specified widget is null or a child of this widget.\n\n@param widget the widget to check\n","name":"assertIsChild","id":"assertIsChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"284","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHide the widget that just slid out of view.\n","name":"doAfterLayout","id":"doAfterLayout0()","line":"291","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the location of the widget that will slide into view.\n","name":"doBeforeLayout","id":"doBeforeLayout0()","line":"303","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidgetVisible","id":"setWidgetVisible3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"362","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_animationDuration","isPrivate":true,"id":"_animationDuration","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isAnimationVertical","isPrivate":true,"id":"_isAnimationVertical","line":"27","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_hidingWidget","isPrivate":true,"id":"_hidingWidget","line":"28","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_lastVisibleWidget","isPrivate":true,"id":"_lastVisibleWidget","line":"29","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"_layout","isPrivate":true,"id":"_layout","line":"30","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"name":"_layoutCmd","isPrivate":true,"id":"_layoutCmd","line":"31","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_visibleWidget","isPrivate":true,"id":"_visibleWidget","line":"32","kind":"variable"},{"comment":"\nCreates an empty deck panel.\n","name":"DeckLayoutPanel","id":"DeckLayoutPanel0()","line":"37","kind":"constructor"}],"line":"24","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/SimpleCheckBox","name":"SimpleCheckBox"},"comment":"\nA simple radio button widget, with no label.\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-SimpleRadioButton { }</li>\n<li>.gwt-SimpleRadioButton-disabled { Applied when radio button is disabled }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/simple_radio_button.dart","name":"SimpleRadioButton","id":"SimpleRadioButton","children":[{"returnType":{"refId":"dart_web_toolkit_ui/SimpleRadioButton","name":"SimpleRadioButton"},"comment":"\nCreates a SimpleRadioButton widget that wraps an existing &lt;input\ntype='radio'&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"SimpleRadioButton.wrap","id":"SimpleRadioButton.wrap2()","children":[{"ref":{"refId":"dart.dom.html/RadioButtonInputElement","name":"RadioButtonInputElement"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"name","id":"name","kind":"param"}],"line":"27","kind":"constructor"},{"comment":"\nCreates a new radio associated with a particular group name. All radio\nbuttons associated with the same group name belong to a mutually-exclusive\nset.\n\nRadio buttons are grouped by their name attribute, so changing their name\nusing the setName() method will also change their associated group.\n\n@param name the group name with which to associate the radio button\n","name":"SimpleRadioButton","id":"SimpleRadioButton2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"}],"line":"50","kind":"constructor"}],"line":"15","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"TakesValue"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"}],"superclass":{"refId":"dart_web_toolkit_ui/FocusWidget","name":"FocusWidget"},"comment":"\nA simple checkbox widget, with no label.\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-SimpleCheckBox { }</li>\n<li>.gwt-SimpleCheckBox-disabled { Applied when checkbox is disabled }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/simple_check_box.dart","name":"SimpleCheckBox","id":"SimpleCheckBox","children":[{"returnType":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"},"name":"asEditor","id":"asEditor0()","line":"49","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value property of the input element that backs this widget.\nThis is the value that will be associated with the check box name and\nsubmitted to the server if a {@link FormPanel} that holds it is submitted\nand the box is checked.\n<p>\nDon't confuse this with {@link #getValue}, which returns true or false if\nthe widget is checked.\n","name":"getFormValue","id":"getFormValue0()","line":"65","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the value property on the input element that backs this widget. This is\nthe value that will be associated with the check box's name and submitted\nto the server if a {@link FormPanel} that holds it is submitted and the box\nis checked.\n<p>\nDon't confuse this with {@link #setValue}, which actually checks and\nunchecks the box.\n\n@param value\n","name":"setFormValue","id":"setFormValue1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's name.\n\n@param name the widget's new name\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"100","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether this check box is currently checked.\n<p>\nNote that this <em>does not</em> return the value property of the checkbox\ninput element wrapped by this widget. For access to that property, see\n{@link #getFormValue()}\n\n@return <code>true</code> if the check box is checked, false otherwise.\n        Will not return null\n","name":"getValue","id":"getValue0()","line":"118","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks or unchecks the check box.\n<p>\nNote that this <em>does not</em> set the value property of the checkbox\ninput element wrapped by this widget. For access to that property, see\n{@link #setFormValue(String)}\n\n@param value true to check, false to uncheck; null value implies false\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"135","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"val","id":"val","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method is called when a widget is detached from the browser's\ndocument. Overridden because of IE bug that throws away checked state.\n","name":"onUnload","id":"onUnload0()","line":"157","kind":"method"},{"returnType":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"_getInputElement","isPrivate":true,"id":"_getInputElement0()","line":"161","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the widget's name.\n\n@return the widget's name\n","name":"name","id":"name","line":"93","kind":"property"},{"ref":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"40","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/SimpleCheckBox","name":"SimpleCheckBox"},"comment":"\nCreates a SimpleCheckBox widget that wraps an existing &lt;input\ntype='checkbox'&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"SimpleCheckBox.wrap","id":"SimpleCheckBox.wrap1()","children":[{"ref":{"refId":"dart.dom.html/CheckboxInputElement","name":"CheckboxInputElement"},"name":"element","id":"element","kind":"param"}],"line":"27","kind":"constructor"},{"comment":"\nCreates a new simple checkbox.\n","name":"SimpleCheckBox","id":"SimpleCheckBox1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"}],"line":"45","kind":"constructor"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueBox","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"ValueBox"},"comment":"\nA ValueBox that uses {@link IntegerParser} and {@link IntegerRenderer}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/integer_box.dart","name":"IntegerBox","id":"IntegerBox","children":[{"name":"IntegerBox","id":"IntegerBox0()","line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueBox","arguments":[{"refId":"dart.core/double","name":"double"}],"name":"ValueBox"},"comment":"\nA ValueBox that uses {@link DoubleParser} and {@link DoubleRenderer}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/double_box.dart","name":"DoubleBox","id":"DoubleBox","children":[{"name":"DoubleBox","id":"DoubleBox0()","line":"11","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueBoxBase","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"ValueBoxBase"},"comment":"\nA text box able to parse its displayed value.\n\n@param <T> the value type\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/value_box.dart","name":"ValueBox","id":"ValueBox","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the maximum allowable length.\n\n@return the maximum length, in characters\n","name":"getMaxLength","id":"getMaxLength0()","line":"58","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the maximum allowable length.\n\n@param length the maximum length, in characters\n","name":"setMaxLength","id":"setMaxLength1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of visible characters.\n\n@return the number of visible characters\n","name":"getVisibleLength","id":"getVisibleLength0()","line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the number of visible characters.\n\n@param length the number of visible characters\n","name":"setVisibleLength","id":"setVisibleLength1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"_getInputElement","isPrivate":true,"id":"_getInputElement0()","line":"89","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBox","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"ValueBox"},"comment":"\nCreates a ValueBox widget that wraps an existing &lt;input type='text'&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"ValueBox.wrap","id":"ValueBox.wrap3()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"Renderer"},"name":"renderer","id":"renderer","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Parser","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"Parser"},"name":"parser","id":"parser","kind":"param"}],"line":"23","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;input&gt; element whose type is\n'text'.\n\n@param element the element to be used\n","name":"ValueBox.fromElement","id":"ValueBox.fromElement3()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"Renderer"},"name":"renderer","id":"renderer","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Parser","arguments":[{"refId":"dart_web_toolkit_ui/ValueBox/T","name":"T"}],"name":"Parser"},"name":"parser","id":"parser","kind":"param"}],"line":"43","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueLabel","arguments":[{"refId":"dart_web_toolkit_ui/NumberLabel/T","name":"T"}],"name":"ValueLabel"},"comment":"\nExtends {@link ValueLabel} for convenience when dealing with numbers and\n{@link NumberFormat}, especially in\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates. (Note\nthat this class does not accept renderers. To do so use {@link ValueLabel}\ndirectly.)\n\n<h3>Use in UiBinder Templates</h3> In\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates, the\n{@link NumberFormat} can be specified with one of these attributes:\n<dl>\n<dt>format</dt>\n<dd>a reference to a {@link NumberFormat} instance.</dd>\n<dt>predefinedFormat</dt>\n<dd>a predefined format (see below for the list of acceptable values).</dd>\n<dt>customFormat</dt>\n<dd>a number format pattern that can be passed to\n{@link NumberFormat#getFormat(String)}. See below for a way of specifying a\ncurrency code.</dd>\n</dl>\nThe valid values for the {@code predefinedFormat} attributes are:\n<dl>\n<dt>DECIMAL</dt>\n<dd>the standard decimal format for the current locale, as given by\n{@link NumberFormat#getDecimalFormat()}.</dd>\n<dt>CURRENCY</dt>\n<dd>the standard currency format for the current locale, as given by\n{@link NumberFormat#getCurrencyFormat()}. See below for a way of specifying a\ncurrency code.</dd>\n<dt>PERCENT</dt>\n<dd>the standard percent format for the current locale, as given by\n{@link NumberFormat#getPercentFormat()}.</dd>\n<dt>SCIENTIFIC</dt>\n<dd>the standard scientific format for the current locale, as given by\n{@link NumberFormat#getScientificFormat()}.</dd>\n</dl>\nWhen using {@code predefinedFormat=\"CURRENCY\"} or a {@code customFormat}, you\ncan specify a currency code using either of the following attributes:\n<dl>\n<dt>currencyData</dt>\n<dd>a reference to a {@link com.google.gwt.i18n.client.CurrencyData\nCurrencyData} instance.</dd>\n<dt>currencyCode</dt>\n<dd>an ISO4217 currency code.</dd>\n</dl>\n\n@param <T> The exact type of number\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/number_label.dart","name":"NumberLabel","id":"NumberLabel","children":[{"name":"NumberLabel","id":"NumberLabel1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/NumberFormat","name":"NumberFormat"},"isOptional":true,"defaultValue":"null","name":"format","id":"format","kind":"param"}],"line":"56","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"54","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueLabel","arguments":[{"refId":"dart.core/DateTime","name":"DateTime"}],"name":"ValueLabel"},"comment":"\nExtends {@link ValueLabel} for convenience when dealing with dates and\n{@link DateTimeFormat}, especially in\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates. (Note\nthat this class does not accept renderers. To do so use {@link ValueLabel}\ndirectly.)\n\n<h3>Use in UiBinder Templates</h3>\nIn {@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates, both the format and time zone can be configured.\n<p>\nThe format can be given with one of these attributes:\n<dl>\n<dt>format</dt><dd>a reference to a {@link DateTimeFormat} instance.</dd>\n<dt>predefinedFormat</dt><dd>a {@link com.google.gwt.i18n.shared.DateTimeFormat.PredefinedFormat DateTimeFormat.PredefinedFormat}.</dd>\n<dt>customFormat</dt><dd>a date time pattern that can be passed to {@link DateTimeFormat#getFormat(String)}.</dd>\n</dl>\n<p>\nThe time zone can be specified with either of these attributes:\n<dl>\n<dt>timezone</dt><dd>a reference to a {@link TimeZone} instance.</dd>\n<dt>timezoneOffset</dt><dd>the time zone offset in minutes.</dd>\n</dl>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/date_label.dart","name":"DateLabel","id":"DateLabel","children":[{"name":"DateLabel","id":"DateLabel2()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DateTimeFormat","name":"DateTimeFormat"},"isOptional":true,"defaultValue":"null","name":"format","id":"format","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/TimeZone","name":"TimeZone"},"isOptional":true,"defaultValue":"null","name":"timeZone","id":"timeZone","kind":"param"}],"line":"31","kind":"constructor"}],"line":"29","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/TakesValue","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"TakesValue"}],"superclass":{"refId":"dart_web_toolkit_ui/LabelBase","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"LabelBase"},"comment":"\nA label displaying its value through a renderer.\n\n@param <T> the value type.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/value_label.dart","name":"ValueLabel","id":"ValueLabel","children":[{"returnType":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"LeafValueEditor"},"name":"asEditor","id":"asEditor0()","line":"64","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"},"comment":"\nReturns the current value.\n\n@return the value as an object of type V\n@see #setValue\n","name":"getValue","id":"getValue0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value.\nFires [ValueChangeEvent] when\nfireEvents is true and the new value does not equal the existing value.\n\n@param value a value object of type V\n@see #getValue()\n@param fireEvents fire events if true and value is new\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"90","kind":"method"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","name":"Renderer"},"isFinal":true,"name":"_renderer","isPrivate":true,"id":"_renderer","line":"44","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","line":"45","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"LeafValueEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"46","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueLabel","arguments":[{"refId":"dart_web_toolkit_ui/ValueLabel/T","name":"T"}],"name":"ValueLabel"},"comment":"\nCreates a ValueLabel widget that wraps an existing &lt;span&gt; element.\n<p>\nThe ValueLabel's value will be <code>null</code>, whether the element being\nwrapped has content or not. Use {@link #wrap(Element, Renderer, Parser)} to\nparse the initial element's content to initialize the ValueLabel's value.\n<p>\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n@param renderer the renderer used to render values into the element\n","name":"ValueLabel.wrap","id":"ValueLabel.wrap3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","name":"Renderer"},"name":"renderer","id":"renderer","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Parser","name":"Parser"},"isOptional":true,"defaultValue":"null","name":"parser","id":"parser","kind":"param"}],"line":"27","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be either a &lt;span&gt; or a &lt;div&gt;\nelement.\n\n@param element the element to be used\n","name":"ValueLabel.fromElement","id":"ValueLabel.fromElement2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/ValueLabel/_renderer","name":"_renderer"},"ref":{"refId":"dart_web_toolkit_text/Renderer","name":"Renderer"},"name":"_renderer","isPrivate":true,"id":"_renderer","kind":"param"}],"line":"55","kind":"constructor"},{"comment":"\nCreates an empty value label.\n\n@param renderer\n","name":"ValueLabel","id":"ValueLabel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/ValueLabel/_renderer","name":"_renderer"},"ref":{"refId":"dart_web_toolkit_text/Renderer","name":"Renderer"},"name":"_renderer","isPrivate":true,"id":"_renderer","kind":"param"}],"line":"62","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"11","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_i18n/HasDirectionalSafeHtml","name":"HasDirectionalSafeHtml"},{"refId":"dart_web_toolkit_i18n/HasDirectionalHtml","name":"HasDirectionalHtml"}],"superclass":{"refId":"dart_web_toolkit_ui/Label","name":"Label"},"comment":"\nA widget that can contain arbitrary HTML.\n\nThis widget uses a &lt;div&gt; element, causing it to be displayed with block\nlayout.\n\n<p>\nIf you only need a simple label (text, but not HTML), then the\n{@link com.google.gwt.user.client.ui.Label} widget is more appropriate, as it\ndisallows the use of HTML, which can lead to potential security issues if not\nused properly.\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-HTML { }</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.HTMLExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/Html.dart","name":"Html","id":"Html","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the label's content to the given HTML.\nSee {@link #setText(String)} for details on potential effects on direction\nand alignment.\n\n@param html the new widget's HTML content\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the label's content to the given HTML, applying the given direction.\nSee\n{@link #setText(String, com.google.gwt.i18n.client.HasDirection.Direction) setText(String, Direction)}\nfor details on potential effects on alignment.\n\n@param html the new widget's HTML content\n@param dir the content's direction. Note: {@code Direction.DEFAULT} means\n         direction should be inherited from the widget's parent element.\n","name":"setHtml","id":"setHtml2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getTextOrHtml","id":"getTextOrHtml1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isHtml","id":"isHtml","kind":"param"}],"line":"116","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","line":"87","kind":"property"},{"returnType":{"refId":"dart_web_toolkit_ui/Html","name":"Html"},"comment":"\nCreates an HTML widget that wraps an existing &lt;div&gt; or &lt;span&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Html.wrap","id":"Html.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"49","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be either a &lt;div&gt; or &lt;span&gt; element.\n\n@param element the element to be used\n","name":"Html.fromElement","id":"Html.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"68","kind":"constructor"},{"comment":"\nCreates an HTML widget with the specified HTML contents.\n\n@param html the new widget's HTML contents\n","name":"Html","id":"Html2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"null","name":"wordWrap","id":"wordWrap","kind":"param"}],"line":"77","kind":"constructor"}],"line":"37","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/HasAllTouchHandlers","name":"HasAllTouchHandlers"},{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"},{"refId":"dart_web_toolkit_event/HasAllGestureHandlers","name":"HasAllGestureHandlers"},{"refId":"dart_web_toolkit_event/HasAllDragAndDropHandlers","name":"HasAllDragAndDropHandlers"},{"refId":"dart_web_toolkit_event/HasDoubleClickHandlers","name":"HasDoubleClickHandlers"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_i18n/HasDirectionalText","name":"HasDirectionalText"}],"superclass":{"refId":"dart_web_toolkit_ui/LabelBase","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LabelBase"},"comment":"\nA widget that contains arbitrary text, <i>not</i> interpreted as HTML.\n\nThis widget uses a &lt;div&gt; element, causing it to be displayed with block\nlayout.\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-Label { }</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.HTMLExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/label.dart","name":"Label","id":"Label","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"94","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"134","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"146","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"154","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"158","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"162","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"},"name":"asEditor","id":"asEditor0()","line":"174","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the label's content to the given text.\n<p>\nDoesn't change the widget's direction or horizontal alignment if {@code\ndirectionEstimator} is null. Otherwise, the widget's direction is set using\nthe estimator, and its alignment may therefore change as described in\n{@link #setText(String, com.google.gwt.i18n.client.HasDirection.Direction) setText(String, Direction)}.\n\n@param text the widget's new text\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"193","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"getTextDirection","id":"getTextDirection0()","line":"198","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the label's content to the given text, applying the given direction.\n<p>\nThis will have the following effect on the horizontal alignment:\n<ul>\n<li> If the automatic alignment setting is ALIGN_CONTENT_START or\nALIGN_CONTENT_END, the horizontal alignment will be set to match the start\nor end edge, respectively, of the new direction (the {@code dir}\nparameter). If that is DEFAULT, the locale direction is used.\n<li> Otherwise, the horizontal alignment value is not changed, but the\neffective alignment may nevertheless change according to the usual HTML\nrules, i.e. it will match the start edge of the new direction if the widget\nelement is a &lt;div&gt; and has no explicit alignment value even by\ninheritance.\n</ul>\n\n@param text the widget's new text\n@param dir the text's direction. Note: {@code Direction.DEFAULT} means\n       direction should be inherited from the widget's parent element.\n","name":"setText","id":"setText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"222","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"181","kind":"property"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"isFinal":true,"isStatic":true,"name":"DEFAULT_DIRECTION_ESTIMATOR","id":"DEFAULT_DIRECTION_ESTIMATOR","line":"36","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"LeafValueEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"61","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/Label","name":"Label"},"comment":"\nCreates a Label widget that wraps an existing &lt;div&gt; or &lt;span&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Label.wrap","id":"Label.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"48","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be either a &lt;div&gt; or &lt;span&gt; element.\n\n@param element the element to be used\n","name":"Label.fromElement","id":"Label.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"69","kind":"constructor"},{"comment":"\nCreates an empty label.\n","name":"Label","id":"Label2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"null","name":"wordWrap","id":"wordWrap","kind":"param"}],"line":"76","kind":"constructor"}],"line":"30","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_i18n/HasAutoHorizontalAlignment","name":"HasAutoHorizontalAlignment"},{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_event/HasWordWrap","name":"HasWordWrap"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nAbstract base class for all text display widgets.\n\n<h3>Use in UiBinder Templates</h3>\n\n@param <T> the value type\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/label_base.dart","name":"LabelBase","id":"LabelBase","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"name":"getAutoHorizontalAlignment","id":"getAutoHorizontalAlignment0()","line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAutoHorizontalAlignment","id":"setAutoHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"name":"autoAlignment","id":"autoAlignment","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"comment":"\nReturns the {@code DirectionEstimator} object.\n","name":"getDirectionEstimator","id":"getDirectionEstimator0()","line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggles on / off direction estimation.\n\n@param enabled Whether to enable direction estimation. If {@code true},\n         sets the {@link DirectionEstimator} object to a default\n         {@code DirectionEstimator}.\n","name":"enableDefaultDirectionEstimator","id":"enableDefaultDirectionEstimator1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nNote: DirectionEstimator should be set before the widget has any content;\nit's highly recommended to set it using a constructor. Reason: if the\nwidget already has non-empty content, this will update its direction\naccording to the new estimator's result. This may cause flicker, and thus\nshould be avoided.\n","name":"setDirectionEstimator","id":"setDirectionEstimator1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"directionEstimator","id":"directionEstimator","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n\n<p>\nNote: A subsequent call to {@link #setAutoHorizontalAlignment} may override\nthe horizontal alignment set by this method.\n<p>\nNote: For {@code null}, the horizontal alignment is cleared, allowing it to\nbe determined by the standard HTML mechanisms such as inheritance and CSS\nrules.\n\n@see #setAutoHorizontalAlignment\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"114","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal alignment of the widget according to the current\nAutoHorizontalAlignment setting. Should be invoked whenever the horizontal\nalignment may be affected, i.e. on every modification of the content or its\ndirection.\n","name":"updateHorizontalAlignment","id":"updateHorizontalAlignment0()","line":"134","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wordWrap","id":"wordWrap","line":"122","kind":"property"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionalTextHelper","name":"DirectionalTextHelper"},"comment":"\nThe widget's DirectionalTextHelper object.\n","name":"directionalTextHelper","id":"directionalTextHelper","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/AutoHorizontalAlignmentConstant","name":"AutoHorizontalAlignmentConstant"},"comment":"\nThe widget's auto horizontal alignment policy.\n\n@see HasAutoHorizontalAlignment\n","name":"_autoHorizontalAlignment","isPrivate":true,"id":"_autoHorizontalAlignment","line":"26","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"comment":"\nThe widget's horizontal alignment.\n","name":"_horzAlign","isPrivate":true,"id":"_horzAlign","line":"31","kind":"variable"},{"name":"LabelBase","id":"LabelBase1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"inline","id":"inline","kind":"param"}],"line":"33","kind":"constructor"},{"name":"LabelBase.fromElement","id":"LabelBase.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"35","kind":"constructor"},{"name":"LabelBase._internal","isPrivate":true,"id":"LabelBase._internal2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isElementInline","id":"isElementInline","kind":"param"}],"line":"37","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"13","kind":"class"},{"superclass":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/stack_layout_panel.dart","name":"_Iterator","isPrivate":true,"id":"_Iterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"moveNext","id":"moveNext0()","line":"502","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_getCurrent","isPrivate":true,"id":"_getCurrent0()","line":"508","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"remove","id":"remove0()","line":"515","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"current","id":"current","line":"506","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"i","id":"i","line":"497","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"last","id":"last","line":"497","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/StackLayoutPanel","name":"StackLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"498","kind":"variable"},{"name":"_Iterator","id":"_Iterator1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_Iterator/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/StackLayoutPanel","name":"StackLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"500","kind":"constructor"}],"line":"495","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/stack_layout_panel.dart","name":"_LayoutData","isPrivate":true,"id":"_LayoutData","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","line":"488","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_Header","name":"_Header"},"name":"header","id":"header","line":"489","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","line":"490","kind":"variable"},{"name":"_LayoutData","id":"_LayoutData3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_LayoutData/widget","name":"widget"},"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_LayoutData/header","name":"header"},"ref":{"refId":"dart_web_toolkit_ui/_Header","name":"_Header"},"name":"header","id":"header","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_LayoutData/headerSize","name":"headerSize"},"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","kind":"param"}],"line":"492","kind":"constructor"}],"line":"486","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/stack_layout_panel.dart","name":"_Header","isPrivate":true,"id":"_Header","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"473","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"477","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"481","kind":"method"},{"name":"_Header","id":"_Header1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"469","kind":"constructor"}],"line":"467","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasSelectionHandlers"},{"refId":"dart_web_toolkit_event/HasBeforeSelectionHandlers","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"HasBeforeSelectionHandlers"},{"refId":"dart_web_toolkit_animation/AnimatedLayout","name":"AnimatedLayout"},{"refId":"dart_web_toolkit_ui/IndexedPanelForIsWidget","name":"IndexedPanelForIsWidget"},{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/HasWidgets","name":"HasWidgets"}],"superclass":{"refId":"dart_web_toolkit_ui/ResizeComposite","name":"ResizeComposite"},"comment":"\nA panel that stacks its children vertically, displaying only one at a time,\nwith a header for each child which the user can click to display.\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-StackLayoutPanel <dd> the panel itself\n<dt>.gwt-StackLayoutPanel .gwt-StackLayoutPanelHeader <dd> applied to each\nheader widget\n<dt>.gwt-StackLayoutPanel .gwt-StackLayoutPanelHeader-hovering <dd> applied to each\nheader widget on mouse hover\n<dt>.gwt-StackLayoutPanel .gwt-StackLayoutPanelContent <dd> applied to each\nchild widget\n</dl>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.StackLayoutPanelExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nA StackLayoutPanel element in a\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} template may have a\n<code>unit</code> attribute with a\n{@link com.google.gwt.dom.client.Style.Unit Style.Unit} value (it defaults to\nPX).\n<p>\nThe children of a StackLayoutPanel element are laid out in &lt;g:stack>\nelements. Each stack can have one widget child and one of two types of header\nelements. A &lt;g:header> element can hold html, or a &lt;g:customHeader>\nelement can hold a widget. (Note that the tags of the header elements are not\ncapitalized. This is meant to signal that the head is not a runtime object,\nand so cannot have a <code>ui:field</code> attribute.)\n<p>\nFor example:\n\n<pre>\n&lt;g:StackLayoutPanel unit='PX'>\n &lt;g:stack>\n   &lt;g:header size='3'>&lt;b>HTML&lt;/b> header&lt;/g:header>\n   &lt;g:Label>able&lt;/g:Label>\n &lt;/g:stack>\n &lt;g:stack>\n   &lt;g:customHeader size='3'>\n     &lt;g:Label>Custom header&lt;/g:Label>\n   &lt;/g:customHeader>\n   &lt;g:Label>baker&lt;/g:Label>\n &lt;/g:stack>\n&lt;/g:StackLayoutPanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/stack_layout_panel.dart","name":"StackLayoutPanel","id":"StackLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to this stack, along with a widget representing the\nstack header.\n\n@param widget the child widget to be added\n@param header the text to be shown on its header\n@param asHtml <code>true</code> to treat the specified text as HTML\n@param headerSize the size of the header widget\n","name":"addWidget","id":"addWidget4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget,String,boolean,double)\n","name":"addIsWidget","id":"addIsWidget4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"header","id":"header","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBeforeSelectionHandler","id":"addBeforeSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BeforeSelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"BeforeSelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addSelectionHandler","id":"addSelectionHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/SelectionHandler","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"SelectionHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"163","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forceLayout","id":"forceLayout0()","line":"169","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the duration of the animated transition between children.\n\n@return the duration in milliseconds\n","name":"getAnimationDuration","id":"getAnimationDuration0()","line":"178","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget in the stack header at the given index.\n\n@param index the index of the stack header to be retrieved\n@return the header widget\n","name":"getHeaderWidgetAt","id":"getHeaderWidgetAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the widget in the stack header associated with the given child widget.\n\n@param child the child whose stack header is to be retrieved\n@return the header widget\n","name":"getHeaderWidget","id":"getHeaderWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"199","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the currently-selected index.\n\n@return the selected index, or <code>-1</code> if none is selected\n","name":"getVisibleIndex","id":"getVisibleIndex0()","line":"209","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the currently-selected widget.\n\n@return the selected widget, or <code>null</code> if none exist\n","name":"getVisibleWidget","id":"getVisibleWidget0()","line":"218","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"getWidgetAt","id":"getWidgetAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"225","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetCount","id":"getWidgetCount0()","line":"229","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetIndexIsWidget","id":"getWidgetIndexIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"233","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetIndex","id":"getWidgetIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"237","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget into the panel. If the Widget is already attached, it will\nbe moved to the requested index.\n\n@param child the widget to be added\n@param text the text to be shown on its header\n@param asHtml <code>true</code> to treat the specified text as HTML\n@param headerSize the size of the header widget\n@param beforeIndex the index before which it will be inserted\n","name":"insertAsText","id":"insertAsText5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"255","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"265","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"269","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"273","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"277","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the duration of the animated transition between children.\n\n@param duration the duration in milliseconds.\n","name":"setAnimationDuration","id":"setAnimationDuration1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"}],"line":"317","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a stack header's HTML contents.\n\nUse care when setting an object's HTML; it is an easy way to expose\nscript-based security problems. Consider using\n{@link #setHeaderHTML(int, SafeHtml)} or\n{@link #setHeaderText(int, String)} whenever possible.\n\n@param index the index of the header whose HTML is to be set\n@param html the header's new HTML contents\n","name":"setHeaderHtml","id":"setHeaderHtml2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"html","id":"html","kind":"param"}],"line":"332","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a stack header's text contents.\n\n@param index the index of the header whose text is to be set\n@param text the object's new text\n","name":"setHeaderText","id":"setHeaderText2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"}],"line":"347","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the specified widget.\n\n@param child the child widget to be shown.\n@param fireEvents true to fire events, false not to\n","name":"showWidget","id":"showWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"362","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoad","id":"onLoad0()","line":"366","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkChild","id":"checkChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"371","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkIndex","id":"checkIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"375","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insert","id":"insert4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/_Header","name":"_Header"},"name":"header","id":"header","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"headerSize","id":"headerSize","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"379","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"showWidgetAt","id":"showWidgetAt3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"null","name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"439","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_WIDGET_STYLE","isPrivate":true,"id":"_WIDGET_STYLE","line":"68","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_CONTENT_STYLE","isPrivate":true,"id":"_CONTENT_STYLE","line":"69","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_HEADER_STYLE","isPrivate":true,"id":"_HEADER_STYLE","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_HEADER_STYLE_HOVERING","isPrivate":true,"id":"_HEADER_STYLE_HOVERING","line":"71","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"_ANIMATION_TIME","isPrivate":true,"id":"_ANIMATION_TIME","line":"73","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_animationDuration","isPrivate":true,"id":"_animationDuration","line":"75","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/LayoutPanel","name":"LayoutPanel"},"name":"layoutPanel","id":"layoutPanel","line":"76","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"isFinal":true,"name":"_unit","isPrivate":true,"id":"_unit","line":"77","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/_LayoutData","name":"_LayoutData"}],"name":"List"},"isFinal":true,"name":"_layoutData","isPrivate":true,"id":"_layoutData","line":"78","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_selectedIndex","isPrivate":true,"id":"_selectedIndex","line":"79","kind":"variable"},{"comment":"\nCreates an empty stack panel.\n\n@param unit the unit to be used for layout\n","name":"StackLayoutPanel","id":"StackLayoutPanel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/StackLayoutPanel/_unit","name":"_unit"},"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"_unit","isPrivate":true,"id":"_unit","kind":"param"}],"line":"86","kind":"constructor"}],"line":"64","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"}],"superclass":{"refId":"dart_web_toolkit_ui/Composite","name":"Composite"},"comment":"\nA {@link Composite} implementation that implements {@link RequiresResize} and\nautomatically delegates that interface's methods to its wrapped widget, which\nmust itself implement {@link RequiresResize}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/resize_composite.dart","name":"ResizeComposite","id":"ResizeComposite","children":[{"returnType":{"refId":"void","name":"void"},"name":"initWidget","id":"initWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"18","kind":"method"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\n<p>\nA {@link SimplePanel} that wraps its contents in stylized boxes, which can be\nused to add rounded corners to a {@link Widget}.\n</p>\n<p>\nThis widget will <em>only</em> work in quirks mode in most cases.\nSpecifically, setting the height or width of the DecoratorPanel will result\nin rendering issues.\n</p>\n<p>\nWrapping a {@link Widget} in a \"9-box\" allows users to specify images in each\nof the corners and along the four borders. This method allows the content\nwithin the {@link DecoratorPanel} to resize without disrupting the look of\nthe border. In addition, rounded corners can generally be combined into a\nsingle image file, which reduces the number of downloaded files at startup.\nThis class also simplifies the process of using AlphaImageLoaders to support\n8-bit transparencies (anti-aliasing and shadows) in ie6, which does not\nsupport them normally.\n</p>\n<h3>Setting the Size:</h3>\n<p>\nIf you set the width or height of the {@link DecoratorPanel}, you need to\nset the height and width of the middleCenter cell to 100% so that the\nmiddleCenter cell takes up all of the available space. If you do not set the\nwidth and height of the {@link DecoratorPanel}, it will wrap its contents\ntightly.\n</p>\n\n<pre>\n.gwt-DecoratorPanel .middleCenter {\n  height: 100%;\n  width: 100%;\n}\n</pre>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-DecoratorPanel { the panel }</li>\n<li>.gwt-DecoratorPanel .top { the top row }</li>\n<li>.gwt-DecoratorPanel .topLeft { the top left cell }</li>\n<li>.gwt-DecoratorPanel .topLeftInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .topCenter { the top center cell }</li>\n<li>.gwt-DecoratorPanel .topCenterInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .topRight { the top right cell }</li>\n<li>.gwt-DecoratorPanel .topRightInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .middle { the middle row }</li>\n<li>.gwt-DecoratorPanel .middleLeft { the middle left cell }</li>\n<li>.gwt-DecoratorPanel .middleLeftInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .middleCenter { the middle center cell }</li>\n<li>.gwt-DecoratorPanel .middleCenterInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .middleRight { the middle right cell }</li>\n<li>.gwt-DecoratorPanel .middleRightInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .bottom { the bottom row }</li>\n<li>.gwt-DecoratorPanel .bottomLeft { the bottom left cell }</li>\n<li>.gwt-DecoratorPanel .bottomLeftInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .bottomCenter { the bottom center cell }</li>\n<li>.gwt-DecoratorPanel .bottomCenterInner { the inner element of the cell }</li>\n<li>.gwt-DecoratorPanel .bottomRight { the bottom right cell }</li>\n<li>.gwt-DecoratorPanel .bottomRightInner { the inner element of the cell }</li>\n</ul>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/decorator_panel.dart","name":"DecoratorPanel","id":"DecoratorPanel","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nCreate a new row with a specific style name. The row will contain three\ncells (Left, Center, and Right), each prefixed with the specified style\nname.\n\nThis method allows Widgets to reuse the code on a Dom level, without\ncreating a DecoratorPanel Widget.\n\n@param styleName the style name\n@return the new row {@link dart_html.Element}\n","name":"createTR","id":"createTR1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nCreate a new table cell with a specific style name.\n\n@param styleName the style name\n@return the new cell {@link dart_html.Element}\n","name":"createTD","id":"createTD1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet a specific dart_html.Element from the panel.\n\n@param row the row index\n@param cell the cell index\n@return the dart_html.Element at the given row and cell\n","name":"getCellElement","id":"getCellElement2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"row","id":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"cell","id":"cell","kind":"param"}],"line":"167","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getContainerElement","id":"getContainerElement0()","line":"173","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"comment":"\nThe default style name.\n","name":"_DEFAULT_STYLENAME","isPrivate":true,"id":"_DEFAULT_STYLENAME","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isStatic":true,"comment":"\nThe default styles applied to each row.\n","name":"_DEFAULT_ROW_STYLENAMES","isPrivate":true,"id":"_DEFAULT_ROW_STYLENAMES","line":"77","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe container element at the center of the panel.\n","name":"_containerElem","isPrivate":true,"id":"_containerElem","line":"123","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe table body element.\n","name":"_tbody","isPrivate":true,"id":"_tbody","line":"128","kind":"variable"},{"comment":"\nCreates a new panel using the specified style names to apply to each row.\nEach row will contain three cells (Left, Center, and Right). The Center\ncell in the containerIndex row will contain the {@link Widget}.\n\n@param rowStyles an array of style names to apply to each row\n@param containerIndex the index of the container row\n","name":"DecoratorPanel","id":"DecoratorPanel2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isOptional":true,"defaultValue":"_DEFAULT_ROW_STYLENAMES","name":"rowStyles","id":"rowStyles","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"containerIndex","id":"containerIndex","kind":"param"}],"line":"138","kind":"constructor"}],"line":"68","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/StackPanel","name":"StackPanel"},"comment":"\n<p>\nA {@link StackPanel} that wraps each item in a 2x3 grid (six box), which\nallows users to add rounded corners.\n</p>\n\n<p>\nThis widget will <em>only</em> work in quirks mode. If your application is in\nStandards Mode, use {@link StackLayoutPanel} instead.\n</p>\n\n<p>\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-DecoratedStackPanel { the panel itself }</li>\n<li>.gwt-DecoratedStackPanel .gwt-StackPanelItem { unselected items }</li>\n<li>.gwt-DecoratedStackPanel .gwt-StackPanelItem-selected { selected items }</li>\n<li>.gwt-DecoratedStackPanel .gwt-StackPanelContent { the wrapper around the\ncontents of the item }</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopLeft { top left corner of the\nitem}</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopLeftInner { the inner element of\nthe cell}</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopCenter { top center of the item}</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopCenterInner { the inner element of\nthe cell}</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopRight { top right corner of the\nitem}</li>\n<li>.gwt-DecoratedStackPanel .stackItemTopRightInner { the inner element of\nthe cell}</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleLeft { left side of the item }</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleLeftInner { the inner element\nof the cell}</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleCenter { center of the item,\nwhere the item text resides }</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleCenterInner { the inner element\nof the cell}</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleRight { right side of the item }</li>\n<li>.gwt-DecoratedStackPanel .stackItemMiddleRightInner { the inner element\nof the cell}</li>\n</ul>\n</p>\n\n@see StackLayoutPanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/decorated_stack_panel.dart","name":"DecoratedStackPanel","id":"DecoratedStackPanel","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"createHeaderElem","id":"createHeaderElem0()","line":"64","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getHeaderTextElem","id":"getHeaderTextElem1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"headerElem","id":"headerElem","kind":"param"}],"line":"82","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"DEFAULT_STYLENAME","id":"DEFAULT_STYLENAME","line":"53","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"isStatic":true,"name":"_DEFAULT_ROW_STYLENAMES","isPrivate":true,"id":"_DEFAULT_ROW_STYLENAMES","line":"55","kind":"variable"},{"comment":"\nCreates an empty decorated stack panel.\n","name":"DecoratedStackPanel","id":"DecoratedStackPanel0()","line":"60","kind":"constructor"}],"line":"51","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that stacks its children vertically, displaying only one at a time,\nwith a header for each child which the user can click to display.\n\n<p>\nThis widget will <em>only</em> work in quirks mode. If your application is in\nStandards Mode, use {@link StackLayoutPanel} instead.\n</p>\n\n<p>\n<img class='gallery' src='doc-files/StackPanel.png'/>\n</p>\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-StackPanel { the panel itself }</li>\n<li>.gwt-StackPanel .gwt-StackPanelItem { unselected items }</li>\n<li>.gwt-StackPanel .gwt-StackPanelItem-selected { selected items }</li>\n<li>.gwt-StackPanel .gwt-StackPanelContent { the wrapper around the contents\nof the item }</li>\n</ul>\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.StackPanelExample}\n</p>\n\n@see StackLayoutPanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/stack_panel.dart","name":"StackPanel","id":"StackPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a new child with the given widget and header, optionally interpreting\nthe header as HTML.\n\n@param w the widget to be added\n@param stackText the header text associated with this widget\n@param asHTML <code>true</code> to treat the specified text as HTML\n","name":"add","id":"add3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"stackText","id":"stackText","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the currently selected child index.\n\n@return selected child\n","name":"getSelectedIndex","id":"getSelectedIndex0()","line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInsert a new child Widget into this Panel at a specified index, attaching\nits Element to the specified container Element. The child Element will\neither be attached to the container at the same index, or simply appended\nto the container, depending on the value of <code>domInsert</code>.\n\n@param child the child Widget to be added\n@param container the Element within which <code>child</code> will be\n         contained\n@param beforeIndex the index before which <code>child</code> will be\n         inserted\n@param domInsert if <code>true</code>, insert <code>child</code> into\n         <code>container</code> at <code>beforeIndex</code>; otherwise\n         append <code>child</code> to the end of <code>container</code>.\n","name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_remove","isPrivate":true,"id":"_remove2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"178","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the text associated with a child by its index.\n\n@param index the index of the child whose text is to be set\n@param text the text to be associated with it\n@param asHtml <code>true</code> to treat the specified text as HTML\n","name":"setStackText","id":"setStackText3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"211","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows the widget at the specified child index.\n\n@param index the index of the child to be shown\n","name":"showStack","id":"showStack1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nReturns a header element.\n","name":"createHeaderElem","id":"createHeaderElem0()","line":"247","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGet the element that holds the header text given the header element created\nby #createHeaderElement.\n\n@param headerElem the header element\n@return the element around the header text\n","name":"getHeaderTextElem","id":"getHeaderTextElem1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"headerElem","id":"headerElem","kind":"param"}],"line":"258","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"_findDividerIndex","isPrivate":true,"id":"_findDividerIndex1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"262","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setStackContentVisible","isPrivate":true,"id":"_setStackContentVisible2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"281","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setStackVisible","isPrivate":true,"id":"_setStackVisible2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"287","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_updateIndicesFrom","isPrivate":true,"id":"_updateIndicesFrom1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"313","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_DEFAULT_STYLENAME","isPrivate":true,"id":"_DEFAULT_STYLENAME","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_DEFAULT_ITEM_STYLENAME","isPrivate":true,"id":"_DEFAULT_ITEM_STYLENAME","line":"35","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_body","isPrivate":true,"id":"_body","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_visibleStack","isPrivate":true,"id":"_visibleStack","line":"38","kind":"variable"},{"comment":"\nCreates an empty stack panel.\n","name":"StackPanel","id":"StackPanel0()","line":"43","kind":"constructor"}],"line":"33","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/TextBoxBase","name":"TextBoxBase"},"comment":"\nA text box that allows multiple lines of text to be entered.\n\n<p>\n<img class='gallery' src='doc-files/TextArea.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-TextArea { primary style }</li>\n<li>.gwt-TextArea-readonly { dependent style set when the text area is read-only }</li>\n</ul>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nthe input text. This feature is controlled by {@link #setDirectionEstimator},\nand is available by default when at least one of the application's locales is\nright-to-left.\n</p>\n\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.TextBoxExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/text_area.dart","name":"TextArea","id":"TextArea","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the requested width of the text box (this is not an exact value, as\nnot all characters are created equal).\n\n@return the requested width, in characters\n","name":"getCharacterWidth","id":"getCharacterWidth0()","line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the requested width of the text box (this is not an exact value, as\nnot all characters are created equal).\n\n@param width the requested width, in characters\n","name":"setCharacterWidth","id":"setCharacterWidth1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getCursorPos","id":"getCursorPos0()","line":"92","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getSelectionLength","id":"getSelectionLength0()","line":"96","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of text lines that are visible.\n\n@return the number of visible lines\n","name":"getVisibleLines","id":"getVisibleLines0()","line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the number of text lines that are visible.\n\n@param lines the number of visible lines\n","name":"setVisibleLines","id":"setVisibleLines1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"lines","id":"lines","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"dart.dom.html/TextAreaElement","name":"TextAreaElement"},"name":"_getTextAreaElement","isPrivate":true,"id":"_getTextAreaElement0()","line":"118","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TextArea","name":"TextArea"},"comment":"\nCreates a TextArea widget that wraps an existing &lt;textarea&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"TextArea.wrap","id":"TextArea.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"43","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;textarea&gt; element whose type is\n'text'.\n\n@param element the element to be used\n","name":"TextArea.fromElement","id":"TextArea.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"63","kind":"constructor"},{"comment":"\nCreates an empty text area.\n","name":"TextArea","id":"TextArea0()","line":"70","kind":"constructor"}],"line":"31","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/TextBox","name":"TextBox"},"comment":"\nA text box that visually masks its input to prevent eavesdropping.\n\n<p>\n<img class='gallery' src='doc-files/PasswordTextBox.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-PasswordTextBox { primary style }</li>\n<li>.gwt-PasswordTextBox-readonly { dependent style set when the password\ntext box is read-only }</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TextBoxExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/password_text_box.dart","name":"PasswordTextBox","id":"PasswordTextBox","children":[{"returnType":{"refId":"dart_web_toolkit_ui/PasswordTextBox","name":"PasswordTextBox"},"comment":"\nCreates a PasswordTextBox widget that wraps an existing &lt;input\ntype='password'&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"PasswordTextBox.wrap","id":"PasswordTextBox.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"37","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;input&gt; element whose type is\n'text'.\n\n@param element the element to be used\n","name":"PasswordTextBox.fromElement","id":"PasswordTextBox.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"57","kind":"constructor"},{"comment":"\nCreates an empty text box.\n","name":"PasswordTextBox","id":"PasswordTextBox0()","line":"65","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/TextBoxBase","name":"TextBoxBase"},"comment":"\nA standard single-line text box.\n\n<p>\n<img class='gallery' src='doc-files/TextBox.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-TextBox { primary style }</li>\n<li>.gwt-TextBox-readonly { dependent style set when the text box is\nread-only }</li>\n</ul>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nthe input text. This feature is controlled by {@link #setDirectionEstimator},\nand is available by default when at least one of the application's locales is\nright-to-left.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.TextBoxExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/text_box.dart","name":"TextBox","id":"TextBox","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the maximum allowable length of the text box.\n\n@return the maximum length, in characters\n","name":"getMaxLength","id":"getMaxLength0()","line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the maximum allowable length of the text box.\n\n@param length the maximum length, in characters\n","name":"setMaxLength","id":"setMaxLength1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of visible characters in the text box.\n\n@return the number of visible characters\n","name":"getVisibleLength","id":"getVisibleLength0()","line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the number of visible characters in the text box.\n\n@param length the number of visible characters\n","name":"setVisibleLength","id":"setVisibleLength1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"_getInputElement","isPrivate":true,"id":"_getInputElement0()","line":"110","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TextBox","name":"TextBox"},"comment":"\nCreates a TextBox widget that wraps an existing &lt;input type='text'&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"TextBox.wrap","id":"TextBox.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"45","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;input&gt; element whose type is\n'text'.\n\n@param element the element to be used\n","name":"TextBox.fromElement","id":"TextBox.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"65","kind":"constructor"},{"comment":"\nCreates an empty text box.\n","name":"TextBox","id":"TextBox0()","line":"72","kind":"constructor"}],"line":"33","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ValueBoxBase","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ValueBoxBase"},"comment":"\nAbstract base class for most text entry widgets.\n\n<p>\nThe names of the static members of {@link TextBoxBase}, as well as simple\nalignment names (<code>left</code>, <code>center</code>, <code>right</code>,\n<code>justify</code>), can be used as values for a <code>textAlignment</code>\nattribute.\n<p>\nFor example,\n\n<pre>\n&lt;g:TextBox textAlignment='ALIGN_RIGHT'/&gt;\n&lt;g:TextBox textAlignment='right'/&gt;\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/text_box_base.dart","name":"TextBoxBase","id":"TextBoxBase","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nOverridden to return \"\" from an empty text box.\n","name":"getValue","id":"getValue0()","line":"34","kind":"method"},{"comment":"\nCreates a text box that wraps the given browser element handle. This is\nonly used by subclasses.\n\n@param elem the browser element to wrap\n","name":"TextBoxBase","id":"TextBoxBase1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"29","kind":"constructor"}],"line":"22","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"ValueBoxEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_i18n/AutoDirectionHandlerTarget","name":"AutoDirectionHandlerTarget"},{"refId":"dart_web_toolkit_event/HasValue","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"HasValue"},{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"},{"refId":"dart_web_toolkit_event/HasChangeHandlers","name":"HasChangeHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/FocusWidget","name":"FocusWidget"},"comment":"\nAbstract base class for all text entry widgets.\n\n<h3>Use in UiBinder Templates</h3>\n\n@param <T> the value type\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/value_box_base.dart","name":"ValueBoxBase","id":"ValueBoxBase","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addChangeHandler","id":"addChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBoxEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"ValueBoxEditor"},"comment":"\nReturns an Editor that is backed by the ValueBoxBase. The default\nimplementation returns {@link ValueBoxEditor#of(ValueBoxBase)}. Subclasses\nmay override this method to provide custom error-handling when using the\nEditor framework.\n","name":"asEditor","id":"asEditor0()","line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nIf a keyboard event is currently being handled on this text box, calling\nthis method will suppress it. This allows listeners to easily filter\nkeyboard input.\n","name":"cancelKey","id":"cancelKey0()","line":"80","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the current position of the cursor (this also serves as the beginning\nof the text selection).\n\n@return the cursor's position\n","name":"getCursorPos","id":"getCursorPos0()","line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the cursor position.\n\nThis will only work when the widget is attached to the document and not\nhidden.\n\n@param pos the new cursor position\n","name":"setCursorPos","id":"setCursorPos1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"pos","id":"pos","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"direction=","id":"direction=1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"val","id":"val","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"getDirectionEstimator","id":"getDirectionEstimator0()","line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggles on / off direction estimation.\n","name":"enableDefaultDirectionEstimator","id":"enableDefaultDirectionEstimator1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the direction estimation model of the auto-dir handler.\n","name":"setDirectionEstimator","id":"setDirectionEstimator1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"directionEstimator","id":"directionEstimator","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"135","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the text currently selected within this text box.\n\n@return the selected text, or an empty string if none is selected\n","name":"getSelectedText","id":"getSelectedText0()","line":"144","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the length of the current text selection.\n\n@return the text selection length\n","name":"getSelectionLength","id":"getSelectionLength0()","line":"158","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's text. Note that some browsers will manipulate the text\nbefore adding it to the widget. For example, most browsers will strip all\n<code>\\r</code> from the text, except IE which will add a <code>\\r</code>\nbefore each <code>\\n</code>. Use {@link #getText()} to get the text\ndirectly from the widget.\n\n@param text the object's new text\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"},"comment":"\nReturn the parsed value, or null if the field is empty or parsing fails.\n","name":"getValue","id":"getValue0()","line":"199","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"},"comment":"\nReturn the parsed value, or null if the field is empty.\n\n@throws ParseException if the value cannot be parsed\n","name":"getValueOrThrow","id":"getValueOrThrow0()","line":"220","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not the widget is read-only.\n\n@return <code>true</code> if the widget is currently read-only,\n        <code>false</code> if the widget is currently editable\n","name":"isReadOnly","id":"isReadOnly0()","line":"236","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSelects all of the text in the box.\n\nThis will only work when the widget is attached to the document and not\nhidden.\n","name":"selectAll","id":"selectAll0()","line":"262","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAlignment","id":"setAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/TextAlignment","name":"TextAlignment"},"name":"align","id":"align","kind":"param"}],"line":"269","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTurns read-only mode on or off.\n\n@param readOnly if <code>true</code>, the widget becomes read-only; if\n         <code>false</code> the widget becomes editable\n","name":"setReadOnly","id":"setReadOnly1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"readOnly","id":"readOnly","kind":"param"}],"line":"279","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the range of text to be selected.\n\nThis will only work when the widget is attached to the document and not\nhidden.\n\n@param pos the position of the first character to be selected\n@param length the number of characters to be selected\n","name":"setSelectionRange","id":"setSelectionRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"pos","id":"pos","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"298","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/TextBoxImpl","name":"TextBoxImpl"},"name":"getImpl","id":"getImpl0()","line":"313","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoad","id":"onLoad0()","line":"317","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"direction","id":"direction","line":"109","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"133","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"162","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/TextBoxImpl","name":"TextBoxImpl"},"isStatic":true,"name":"_impl","isPrivate":true,"id":"_impl","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/AutoDirectionHandler","name":"AutoDirectionHandler"},"name":"_autoDirHandler","isPrivate":true,"id":"_autoDirHandler","line":"18","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_text/Parser","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"Parser"},"name":"_parser","isPrivate":true,"id":"_parser","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"Renderer"},"name":"_renderer","isPrivate":true,"id":"_renderer","line":"21","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ValueBoxEditor","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"ValueBoxEditor"},"name":"_editor","isPrivate":true,"id":"_editor","line":"22","kind":"variable"},{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"_currentEvent","isPrivate":true,"id":"_currentEvent","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_valueChangeHandlerInitialized","isPrivate":true,"id":"_valueChangeHandlerInitialized","line":"25","kind":"variable"},{"comment":"\nCreates a value box that wraps the given browser element handle. This is\nonly used by subclasses.\n\n@param elem the browser element to wrap\n","name":"ValueBoxBase","id":"ValueBoxBase3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Renderer","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"Renderer"},"name":"renderer","id":"renderer","kind":"param"},{"ref":{"refId":"dart_web_toolkit_text/Parser","arguments":[{"refId":"dart_web_toolkit_ui/ValueBoxBase/T","name":"T"}],"name":"Parser"},"name":"parser","id":"parser","kind":"param"}],"line":"33","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"13","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"},{"refId":"dart_web_toolkit_event/HasChangeHandlers","name":"HasChangeHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/FocusWidget","name":"FocusWidget"},"comment":"\nA widget that presents a list of choices to the user, either as a list box or\nas a drop-down list.\n\n<p>\n<img class='gallery' src='doc-files/ListBox.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-ListBox { }</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.ListBoxExample}\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator},\nand is off by default.\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nThe items of a ListBox element are laid out in &lt;g:item> elements.\nEach item contains text that will be added to the list of available\nitems that will be shown, either in the drop down or list. (Note that\nthe tags of the item elements are not capitalized. This is meant to\nsignal that the item is not a runtime object, and so cannot have a\n<code>ui:field</code> attribute.) It is also possible to explicitly\nspecify item's value using value attribute as shown below.\n<p>\nFor example:\n\n<pre>\n&lt;g:ListBox>\n &lt;g:item>\n   first\n &lt;/g:item>\n &lt;g:item value='2'>\n   second\n &lt;/g:item>\n&lt;/g:ListBox>\n</pre>\n<p>\n<h3>Important usage note</h3>\n<b>Subclasses should neither read nor write option text directly from the\noption elements created by this class, since such text may need to be wrapped\nin Unicode bidi formatting characters. They can use the getOptionText and/or\nsetOptionText methods for this purpose instead.</b>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/list_box.dart","name":"ListBox","id":"ListBox","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ChangeEvent} handler.\n\n@param handler the change handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addChangeHandler","id":"addChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's name.\n\n@param name the widget's new name\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds an item to the list box. This method has the same effect as\n\n<pre>\naddItem(item, item)\n</pre>\n\n@param item the text of the item to be added\n","name":"addItem","id":"addItem2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"value","id":"value","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all items from the list box.\n","name":"clear","id":"clear0()","line":"155","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of items present in the list box.\n\n@return the number of items\n","name":"getItemCount","id":"getItemCount0()","line":"164","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the text associated with the item at the specified index.\n\n@param index the index of the item whose text is to be retrieved\n@return the text associated with the item\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"getItemText","id":"getItemText1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the currently-selected item. If multiple items are selected, this\nmethod will return the first selected item ({@link #isItemSelected(int)}\ncan be used to query individual items).\n\n@return the selected index, or <code>-1</code> if none is selected\n","name":"getSelectedIndex","id":"getSelectedIndex0()","line":"187","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the value associated with the item at a given index.\n\n@param index the index of the item to be retrieved\n@return the item's associated value\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"getValue","id":"getValue1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"198","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of items that are visible. If only one item is visible,\nthen the box will be displayed as a drop-down list.\n\n@return the visible item count\n","name":"getVisibleItemCount","id":"getVisibleItemCount0()","line":"209","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the number of items that are visible. If only one item is visible,\nthen the box will be displayed as a drop-down list.\n\n@param visibleItems the visible item count\n","name":"setVisibleItemCount","id":"setVisibleItemCount1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"visibleItems","id":"visibleItems","kind":"param"}],"line":"219","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts an item into the list box, specifying its direction and an initial\nvalue for the item. If the index is less than zero, or greater than or\nequal to the length of the list, then the item will be appended to the end\nof the list.\n\n@param item the text of the item to be inserted\n@param dir the item's direction. If {@code null}, the item is displayed in\n         the widget's overall direction, or, if a direction estimator has\n         been set, in the item's estimated direction.\n@param value the item's value, to be submitted if it is part of a\n         {@link FormPanel}.\n@param index the index at which to insert it\n","name":"insertItem","id":"insertItem4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"item","id":"item","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/TextDirection","name":"TextDirection"},"name":"dir","id":"dir","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"237","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether an individual list item is selected.\n\n@param index the index of the item to be tested\n@return <code>true</code> if the item is selected\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"isItemSelected","id":"isItemSelected1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the item at the specified index.\n\n@param index the index of the item to be removed\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"removeItem","id":"removeItem1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether an individual list item is selected.\n\n<p>\nNote that setting the selection programmatically does <em>not</em> cause\nthe {@link ChangeHandler#onChange(ChangeEvent)} event to be fired.\n</p>\n\n@param index the index of the item to be selected or unselected\n@param selected <code>true</code> to select the item\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"setItemSelected","id":"setItemSelected2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"selected","id":"selected","kind":"param"}],"line":"292","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the text associated with the item at a given index.\n\n@param index the index of the item to be set\n@param text the item's new text\n@param dir the item's direction.\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"setItemText","id":"setItemText3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/TextDirection","name":"TextDirection"},"name":"dir","id":"dir","kind":"param"}],"line":"305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the currently selected index.\n\nAfter calling this method, only the specified item in the list will remain\nselected. For a ListBox with multiple selection enabled, see\n{@link #setItemSelected(int, boolean)} to select multiple items at a time.\n\n<p>\nNote that setting the selected index programmatically does <em>not</em>\ncause the {@link ChangeHandler#onChange(ChangeEvent)} event to be fired.\n</p>\n\n@param index the index of the item to be selected\n","name":"setSelectedIndex","id":"setSelectedIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"327","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the value associated with the item at a given index. This value can be\nused for any purpose, but is also what is passed to the server when the\nlist box is submitted as part of a {@link FormPanel}.\n\n@param index the index of the item to be set\n@param value the item's new value; cannot be <code>null</code>\n@throws IndexOutOfBoundsException if the index is out of range\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"340","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nRetrieves the text of an option element. If the text was set by\n{@link #setOptionText} and was wrapped with Unicode bidi formatting\ncharacters, also removes those additional formatting characters.\n\n@param option an option element\n@return the element's text\n","name":"getOptionText","id":"getOptionText1()","children":[{"ref":{"refId":"dart.dom.html/OptionElement","name":"OptionElement"},"name":"option","id":"option","kind":"param"}],"line":"353","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the text of an option element. If the direction of the text is\nopposite to the page's direction, also wraps it with Unicode bidi\nformatting characters to prevent garbling, and indicates that this was done\nby setting the option's <code>BIDI_ATTR_NAME</code> custom attribute.\n\n@param option an option element\n@param text text to be set to the element\n@param dir the text's direction. If {@code null} and direction estimation\n         is turned off, direction is ignored.\n","name":"setOptionText","id":"setOptionText3()","children":[{"ref":{"refId":"dart.dom.html/OptionElement","name":"OptionElement"},"name":"option","id":"option","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/TextDirection","name":"TextDirection"},"isOptional":true,"defaultValue":"null","name":"dir","id":"dir","kind":"param"}],"line":"372","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this list allows multiple selection.\n\n@return <code>true</code> if multiple selection is allowed\n","name":"isMultipleSelect","id":"isMultipleSelect0()","line":"395","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setMultipleSelect","id":"setMultipleSelect1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"multiple","id":"multiple","kind":"param"}],"line":"399","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_checkIndex","isPrivate":true,"id":"_checkIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"403","kind":"method"},{"returnType":{"refId":"dart.dom.html/SelectElement","name":"SelectElement"},"name":"_getSelectElement","isPrivate":true,"id":"_getSelectElement0()","line":"409","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the widget's name.\n\n@return the widget's name\n","name":"name","id":"name","line":"129","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"INSERT_AT_END","id":"INSERT_AT_END","line":"63","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"BIDI_ATTR_NAME","id":"BIDI_ATTR_NAME","line":"65","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/ListBox","name":"ListBox"},"comment":"\nCreates a ListBox widget that wraps an existing &lt;select&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n@return list box\n","name":"ListBox.wrap","id":"ListBox.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"77","kind":"constructor"},{"comment":"\nCreates an empty list box in single selection mode.\n","name":"ListBox","id":"ListBox2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"isMultipleSelect","id":"isMultipleSelect","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"}],"line":"93","kind":"constructor"}],"line":"60","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/HasValue","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"HasValue"}],"superclass":{"refId":"dart_web_toolkit_ui/CustomButton","name":"CustomButton"},"comment":"\nA <code>ToggleButton</code> is a stylish stateful button which allows the\nuser to toggle between <code>up</code> and <code>down</code> states.\n\n<p>\n<img class='gallery' src='doc-files/ToggleButton.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class=\"css\">\n<li>\n.gwt-ToggleButton-up/down/up-hovering/down-hovering/up-disabled/down-disabled\n{.html-face}</li>\n</ul>\n\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.ToggleButtonExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/toggle_button.dart","name":"ToggleButton","id":"ToggleButton","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nConstructor for <code>CustomButton</code>.\n","name":"_init","isPrivate":true,"id":"_init0()","line":"48","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ValueChangeEvent} handler.\n\n@param handler the handler\n@return the registration for the event\n","name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether this button is currently down.\n\n@return <code>true</code> if the button is pressed, false otherwise. Will\n        not return null\n","name":"getValue","id":"getValue0()","line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this button is down, firing {@link ValueChangeEvent} if\nappropriate.\n\n@param value true to press the button, false otherwise; null value implies\n         false\n@param fireEvents If true, and value has changed, fire a\n         {@link ValueChangeEvent}\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onClick","id":"onClick0()","line":"99","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"27","kind":"variable"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upImage image for the default (_up) face of the button\n","name":"ToggleButton.fromImage","id":"ToggleButton.fromImage3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"upImage","id":"upImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"isOptional":true,"defaultValue":"null","name":"downImage","id":"downImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"34","kind":"constructor"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upText the text for the default (_up) face of the button\n","name":"ToggleButton.fromText","id":"ToggleButton.fromText3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"upText","id":"upText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"downText","id":"downText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"41","kind":"constructor"},{"name":"ToggleButton.internal","id":"ToggleButton.internal0()","line":"43","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/CustomButton","name":"CustomButton"},"comment":"\nA normal push button with custom styling.\n\n<p>\n<img class='gallery' src='doc-files/PushButton.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class=\"css\">\n<li>.gwt-PushButton-up/down/up-hovering/down-hovering/up-disabled/down-disabled {.html-face}</li>\n</ul>\n\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.PushButtonExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/push_button.dart","name":"PushButton","id":"PushButton","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nConstructor for <code>CustomButton</code>.\n","name":"_init","isPrivate":true,"id":"_init0()","line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onClick","id":"onClick0()","line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onClickCancel","id":"onClickCancel0()","line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onClickStart","id":"onClickStart0()","line":"60","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"24","kind":"variable"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upImage image for the default (_up) face of the button\n","name":"PushButton.fromImage","id":"PushButton.fromImage3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"upImage","id":"upImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"isOptional":true,"defaultValue":"null","name":"downImage","id":"downImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"31","kind":"constructor"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upText the text for the default (_up) face of the button\n","name":"PushButton.fromText","id":"PushButton.fromText3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"upText","id":"upText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"downText","id":"downText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"38","kind":"constructor"},{"name":"PushButton.internal","id":"PushButton.internal0()","line":"40","kind":"constructor"}],"line":"22","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasAllTouchHandlers","name":"HasAllTouchHandlers"},{"refId":"dart_web_toolkit_event/HasAllGestureHandlers","name":"HasAllGestureHandlers"},{"refId":"dart_web_toolkit_event/HasAllFocusHandlers","name":"HasAllFocusHandlers"},{"refId":"dart_web_toolkit_event/HasAllKeyHandlers","name":"HasAllKeyHandlers"},{"refId":"dart_web_toolkit_event/HasDoubleClickHandlers","name":"HasDoubleClickHandlers"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"},{"refId":"dart_web_toolkit_event/HasAllDragAndDropHandlers","name":"HasAllDragAndDropHandlers"},{"refId":"dart_web_toolkit_event/Focusable","name":"Focusable"}],"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nA simple panel that makes its contents focusable, and adds the ability to\ncatch mouse and keyboard events.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/focus_panel.dart","name":"FocusPanel","id":"FocusPanel","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ClickEvent} handler.\n\n@param handler the click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBlurHandler","id":"addBlurHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"69","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"81","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addFocusHandler","id":"addFocusHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"89","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureChangeHandler","id":"addGestureChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureEndHandler","id":"addGestureEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"101","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureStartHandler","id":"addGestureStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"141","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"145","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"157","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"161","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"169","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's 'access key'. This key is used (in conjunction with a\nbrowser-specific modifier key) to automatically focus the widget.\n\n@param key the widget's access key\n","name":"accessKey=","id":"accessKey=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's position in the tab index. If more than one widget has\nthe same tab index, each such widget will receive focus in an arbitrary\norder. Setting the tab index to <code>-1</code> will cause this widget to\nbe removed from the tab order.\n\n@param index the widget's tab index\n","name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nExplicitly focus/unfocus this widget. Only one widget can have focus at a\ntime, and the widget that does will receive all keyboard events.\n\n@param focused whether this widget should take focus or release it\n","name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"213","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"193","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isStatic":true,"name":"impl","id":"impl","line":"15","kind":"variable"},{"comment":"\nCreates an empty panel that uses the specified browser element for its\ncontents.\n\n@param elem the browser element to use\n","name":"FocusPanel.fromElement","id":"FocusPanel.fromElement0()","line":"23","kind":"constructor"},{"comment":"\nCreates an empty panel that uses a DIV for its contents or\ncreate a panel with the specified child widget.\n","name":"FocusPanel","id":"FocusPanel1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"isOptional":true,"defaultValue":"null","name":"child","id":"child","kind":"param"}],"line":"29","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"comment":"\nImplementation of behaviors associated with the unclipped state of an\nimage.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/image.dart","name":"_UnclippedState","isPrivate":true,"id":"_UnclippedState","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getHeight","id":"getHeight1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"794","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"getImageElement","id":"getImageElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"798","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginLeft","id":"getOriginLeft0()","line":"802","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginTop","id":"getOriginTop0()","line":"806","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"getUrl","id":"getUrl1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"810","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidth","id":"getWidth1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"814","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrl","id":"setUrl2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"818","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrlAndVisibleRect","id":"setUrlAndVisibleRect6()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","line":"824","kind":"param"}],"line":"823","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setVisibleRect","id":"setVisibleRect5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"828","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getStateName","id":"getStateName0()","line":"833","kind":"method"},{"name":"_UnclippedState","id":"_UnclippedState3()","children":[{"isNamed":true,"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"isOptional":true,"defaultValue":"null","name":"image","id":"image","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"isOptional":true,"defaultValue":"null","name":"url","id":"url","kind":"param"}],"line":"771","kind":"constructor"}],"line":"769","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"comment":"\nImplementation of behaviors associated with the clipped state of an image.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/image.dart","name":"_ClippedState","isPrivate":true,"id":"_ClippedState","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getHeight","id":"getHeight1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"689","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"getImageElement","id":"getImageElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"693","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginLeft","id":"getOriginLeft0()","line":"697","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginTop","id":"getOriginTop0()","line":"701","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"getUrl","id":"getUrl1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"705","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidth","id":"getWidth1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"709","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoadEvent","id":"onLoadEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"713","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrl","id":"setUrl2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"719","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrlAndVisibleRect","id":"setUrlAndVisibleRect6()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","line":"727","kind":"param"}],"line":"726","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setVisibleRect","id":"setVisibleRect5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"755","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getStateName","id":"getStateName0()","line":"760","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ClippedImageImpl","name":"ClippedImageImpl"},"isStatic":true,"name":"impl","id":"impl","line":"667","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","line":"669","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","line":"670","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"pendingNativeLoadEvent","id":"pendingNativeLoadEvent","line":"671","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","line":"672","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","line":"673","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","line":"674","kind":"variable"},{"name":"_ClippedState","id":"_ClippedState6()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ClippedState/url","name":"url"},"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ClippedState/left","name":"left"},"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ClippedState/top","name":"top"},"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ClippedState/width","name":"width"},"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/_ClippedState/height","name":"height"},"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"676","kind":"constructor"}],"line":"665","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/image.dart","name":"StateScheduledCommand","id":"StateScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute0()","line":"636","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"name":"_state","isPrivate":true,"id":"_state","line":"631","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"_image","isPrivate":true,"id":"_image","line":"632","kind":"variable"},{"name":"StateScheduledCommand","id":"StateScheduledCommand2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/StateScheduledCommand/_state","name":"_state"},"ref":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"name":"_state","isPrivate":true,"id":"_state","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/StateScheduledCommand/_image","name":"_image"},"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"_image","isPrivate":true,"id":"_image","kind":"param"}],"line":"634","kind":"constructor"}],"line":"629","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAbstract class which is used to hold the state associated with an image\nobject.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/image.dart","name":"_State","isPrivate":true,"id":"_State","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getHeight","id":"getHeight1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"565","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"getImageElement","id":"getImageElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"567","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginLeft","id":"getOriginLeft0()","line":"569","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getOriginTop","id":"getOriginTop0()","line":"571","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"getUrl","id":"getUrl1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"573","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidth","id":"getWidth1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"575","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the widget is attached to the page. Not to be confused with\nthe load event that fires when the image loads.\n\n@param image the widget\n","name":"onLoad","id":"onLoad1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"583","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when a load event is handled by the widget.\n\n@param image the widget\n","name":"onLoadEvent","id":"onLoadEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"597","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrl","id":"setUrl2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"601","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setUrlAndVisibleRect","id":"setUrlAndVisibleRect6()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","line":"604","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","line":"604","kind":"param"}],"line":"603","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setVisibleRect","id":"setVisibleRect5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"606","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nWe need to synthesize a load event in case the image loads synchronously,\nbefore our handlers can be attached.\n\n@param image the image on which to dispatch the event\n","name":"fireSyntheticLoadEvent","id":"fireSyntheticLoadEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"614","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getStateName","id":"getStateName0()","line":"626","kind":"method"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"comment":"\nThe pending command to create a synthetic event.\n","name":"syntheticEventCommand","id":"syntheticEventCommand","line":"563","kind":"variable"}],"line":"558","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasAllTouchHandlers","name":"HasAllTouchHandlers"},{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"},{"refId":"dart_web_toolkit_event/HasAllGestureHandlers","name":"HasAllGestureHandlers"},{"refId":"dart_web_toolkit_event/HasAllDragAndDropHandlers","name":"HasAllDragAndDropHandlers"},{"refId":"dart_web_toolkit_event/HasDoubleClickHandlers","name":"HasDoubleClickHandlers"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_event/HasErrorHandlers","name":"HasErrorHandlers"},{"refId":"dart_web_toolkit_event/HasLoadHandlers","name":"HasLoadHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA widget that displays the image at a given URL. The image can be in\n'unclipped' mode (the default) or 'clipped' mode. In clipped mode, a viewport\nis overlaid on top of the image so that a subset of the image will be\ndisplayed. In unclipped mode, there is no viewport - the entire image will be\nvisible. Whether an image is in clipped or unclipped mode depends on how the\nimage is constructed, and how it is transformed after construction. Methods\nwill operate differently depending on the mode that the image is in. These\ndifferences are detailed in the documentation for each method.\n\n<p>\nIf an image transitions between clipped mode and unclipped mode, any\n{@link Element}-specific attributes added by the user (including style\nattributes, style names, and style modifiers), except for event listeners,\nwill be lost.\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-Image</dt>\n</dd>The outer element</dd>\n</dl>\n\nTranformations between clipped and unclipped state will result in a loss of\nany style names that were set/added; the only style names that are preserved\nare those that are mentioned in the static CSS style rules. Due to\nbrowser-specific HTML constructions needed to achieve the clipping effect,\ncertain CSS attributes, such as padding and background, may not work as\nexpected when an image is in clipped mode. These limitations can usually be\neasily worked around by encapsulating the image in a container widget that\ncan itself be styled.\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.ImageExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/image.dart","name":"Image","id":"Image","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nCauses the browser to pre-fetch the image at a given URL.\n\n@param url the URL of the image to be prefetched\n","name":"prefetch","id":"prefetch1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nCauses the browser to pre-fetch the image at a given URL.\n\n@param url the URL of the image to be prefetched\n","name":"prefetchSafe","id":"prefetchSafe1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"232","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"236","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"248","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"252","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"256","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"260","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addErrorHandler","id":"addErrorHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ErrorHandler","name":"ErrorHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"268","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureChangeHandler","id":"addGestureChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"272","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureEndHandler","id":"addGestureEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"276","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureStartHandler","id":"addGestureStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"280","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addLoadHandler","id":"addLoadHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/LoadHandler","name":"LoadHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"284","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"288","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"292","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"296","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"300","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"304","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"308","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"312","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"316","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"320","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"324","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the alternate text for the image.\n\n@return the alternate text for the image\n","name":"getAltText","id":"getAltText0()","line":"334","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the alternate text of the image for user agents that can't render the\nimage.\n\n@param altText the alternate text to set to\n","name":"setAltText","id":"setAltText1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"altText","id":"altText","kind":"param"}],"line":"344","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the height of the image. When the image is in the unclipped state, the\nheight of the image is not known until the image has been loaded (i.e. load\nevent has been fired for the image).\n\n@return the height of the image, or 0 if the height is unknown\n","name":"getHeight","id":"getHeight0()","line":"355","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the horizontal co-ordinate of the upper-left vertex of the image's\nvisibility rectangle. If the image is in the unclipped state, then the\nvisibility rectangle is assumed to be the rectangle which encompasses the\nentire image, which has an upper-left vertex of (0,0).\n\n@return the horizontal co-ordinate of the upper-left vertex of the image's\n        visibility rectangle\n","name":"getOriginLeft","id":"getOriginLeft0()","line":"368","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the vertical co-ordinate of the upper-left vertex of the image's\nvisibility rectangle. If the image is in the unclipped state, then the\nvisibility rectangle is assumed to be the rectangle which encompasses the\nentire image, which has an upper-left vertex of (0,0).\n\n@return the vertical co-ordinate of the upper-left vertex of the image's\n        visibility rectangle\n","name":"getOriginTop","id":"getOriginTop0()","line":"381","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the URL of the image. The URL that is returned is not necessarily the\nURL that was passed in by the user. It may have been transformed to an\nabsolute URL.\n\n@return the image URL\n","name":"getUrl","id":"getUrl0()","line":"392","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the URL of the image to be displayed. If the image is in the clipped\nstate, a call to this method will cause a transition of the image to the\nunclipped state. Regardless of whether or not the image is in the clipped\nor unclipped state, a load event will be fired.\n\n@param url the image URL\n","name":"setSafeUrl","id":"setSafeUrl1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"404","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the URL of the image to be displayed. If the image is in the clipped\nstate, a call to this method will cause a transition of the image to the\nunclipped state. Regardless of whether or not the image is in the clipped\nor unclipped state, a load event will be fired.\n\n@param url the image URL\n","name":"setUrl","id":"setUrl1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"416","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the width of the image. When the image is in the unclipped state, the\nwidth of the image is not known until the image has been loaded (i.e. load\nevent has been fired for the image).\n\n@return the width of the image, or 0 if the width is unknown\n","name":"getWidth","id":"getWidth0()","line":"427","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"431","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the url and the visibility rectangle for the image at the same time,\nbased on an ImageResource instance. A single load event will be fired if\neither the incoming url or visiblity rectangle co-ordinates differ from the\nimage's current url or current visibility rectangle co-ordinates. If the\nimage is currently in the unclipped state, a call to this method will cause\na transition to the clipped state.\n\n@param resource the ImageResource to display\n\n\nSets the url and the visibility rectangle for the image at the same time. A\nsingle load event will be fired if either the incoming url or visiblity\nrectangle co-ordinates differ from the image's current url or current\nvisibility rectangle co-ordinates. If the image is currently in the\nunclipped state, a call to this method will cause a transition to the\nclipped state.\n\n@param url the image URL\n@param left the horizontal coordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical coordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"setSafeUrlAndVisibleRect","id":"setSafeUrlAndVisibleRect5()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"473","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the url and the visibility rectangle for the image at the same time. A\nsingle load event will be fired if either the incoming url or visiblity\nrectangle co-ordinates differ from the image's current url or current\nvisibility rectangle co-ordinates. If the image is currently in the\nunclipped state, a call to this method will cause a transition to the\nclipped state.\n\n@param url the image URL\n@param left the horizontal coordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical coordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"setUrlAndVisibleRect","id":"setUrlAndVisibleRect5()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"493","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the visibility rectangle of an image. The visibility rectangle is\ndeclared relative to the the rectangle which encompasses the entire image,\nwhich has an upper-left vertex of (0,0). Provided that any of the left,\ntop, width, and height parameters are different than the those values that\nare currently set for the image, a load event will be fired. If the image\nis in the unclipped state, a call to this method will cause a transition of\nthe image to the clipped state. This transition will cause a load event to\nfire.\n\n@param left the horizontal coordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical coordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"setVisibleRect","id":"setVisibleRect4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"514","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoad","id":"onLoad0()","line":"518","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changeState","id":"changeState1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"name":"newState","id":"newState","kind":"param"}],"line":"526","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nClear the unhandled event.\n","name":"clearUnhandledEvent","id":"clearUnhandledEvent0()","line":"533","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the url and the visibility rectangle for the image at the same time,\nbased on an ImageResource instance. A single load event will be fired if\neither the incoming url or visiblity rectangle co-ordinates differ from the\nimage's current url or current visibility rectangle co-ordinates. If the\nimage is currently in the unclipped state, a call to this method will cause\na transition to the clipped state.\n\n@param resource the ImageResource to display\n","name":"setResource","id":"setResource1()","children":[{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"resource","id":"resource","kind":"param"}],"line":"549","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.dom.html/Element","name":"Element"}],"name":"Map"},"isStatic":true,"comment":"\nThe attribute that is set when an image fires a native load or error event\nbefore it is attached.\nMoved to DomImpl.UNHANDLED_EVENT_ATTR\n\n\nThis map is used to store prefetched images. If a reference is not kept to\nthe prefetched image objects, they can get garbage collected, which\nsometimes keeps them from getting fully fetched.\n","name":"prefetchImages","id":"prefetchImages","line":"59","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/_State","name":"_State"},"name":"_state","isPrivate":true,"id":"_state","line":"103","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"comment":"\nCreates a Image widget that wraps an existing &lt;img&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Image.wrap","id":"Image.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"90","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;img&gt; element.\n\n@param element the element to be used\n","name":"Image.fromElement","id":"Image.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"element","id":"element","kind":"param"}],"line":"111","kind":"constructor"},{"comment":"\nCreates an image with a specified URL. The load event will be fired once\nthe image at the given URL has been retrieved by the browser.\n\n@param url the URL of the image to be displayed\n","name":"Image","id":"Image1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"122","kind":"constructor"},{"comment":"\nCreates a clipped image with a specified URL and visibility rectangle. The\nvisibility rectangle is declared relative to the the rectangle which\nencompasses the entire image, which has an upper-left vertex of (0,0). The\nload event will be fired immediately after the object has been constructed\n(i.e. potentially before the image has been loaded in the browser). Since\nthe width and height are specified explicitly by the user, this behavior\nwill not cause problems with retrieving the width and height of a clipped\nimage in a load event handler.\n\n@param url the URL of the image to be displayed\n@param left the horizontal co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"Image.fromUriAndMeasure","id":"Image.fromUriAndMeasure5()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"142","kind":"constructor"},{"comment":"\nCreates an image with a specified URL. The load event will be fired once\nthe image at the given URL has been retrieved by the browser.\n\n@param url the URL of the image to be displayed\n","name":"Image.fromSafeUri","id":"Image.fromSafeUri1()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"}],"line":"150","kind":"constructor"},{"comment":"\nCreates a clipped image with a specified URL and visibility rectangle. The\nvisibility rectangle is declared relative to the the rectangle which\nencompasses the entire image, which has an upper-left vertex of (0,0). The\nload event will be fired immediately after the object has been constructed\n(i.e. potentially before the image has been loaded in the browser). Since\nthe width and height are specified explicitly by the user, this behavior\nwill not cause problems with retrieving the width and height of a clipped\nimage in a load event handler.\n\n@param url the URL of the image to be displayed\n@param left the horizontal co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"Image.fromSafeUriAndMeasure","id":"Image.fromSafeUriAndMeasure5()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"173","kind":"constructor"},{"comment":"\nCreates an image whose size and content are defined by an ImageResource.\n\n@param resource the ImageResource to be displayed\n","name":"Image.fromImageResource","id":"Image.fromImageResource1()","children":[{"ref":{"refId":"dart_web_toolkit_resource/ImageResource","name":"ImageResource"},"name":"resource","id":"resource","kind":"param"}],"line":"183","kind":"constructor"},{"comment":"\nCreates a clipped image with a specified URL and visibility rectangle. The\nvisibility rectangle is declared relative to the the rectangle which\nencompasses the entire image, which has an upper-left vertex of (0,0). The\nload event will be fired immediately after the object has been constructed\n(i.e. potentially before the image has been loaded in the browser). Since\nthe width and height are specified explicitly by the user, this behavior\nwill not cause problems with retrieving the width and height of a clipped\nimage in a load event handler.\n\n@param url the URL of the image to be displayed\n@param left the horizontal co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"Image.clipped","id":"Image.clipped5()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"203","kind":"constructor"},{"comment":"\nCreates a clipped image with a specified URL and visibility rectangle. The\nvisibility rectangle is declared relative to the the rectangle which\nencompasses the entire image, which has an upper-left vertex of (0,0). The\nload event will be fired immediately after the object has been constructed\n(i.e. potentially before the image has been loaded in the browser). Since\nthe width and height are specified explicitly by the user, this behavior\nwill not cause problems with retrieving the width and height of a clipped\nimage in a load event handler.\n\n@param url the URL of the image to be displayed\n@param left the horizontal co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param top the vertical co-ordinate of the upper-left vertex of the\n         visibility rectangle\n@param width the width of the visibility rectangle\n@param height the height of the visibility rectangle\n","name":"Image.clippedSafe","id":"Image.clippedSafe5()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeUri","name":"SafeUri"},"name":"url","id":"url","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"223","kind":"constructor"}],"line":"43","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/custom_button.dart","name":"SimpleFace","id":"SimpleFace","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getName","id":"getName0()","line":"968","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getFaceID","id":"getFaceID0()","line":"972","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"963","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"faceID","id":"faceID","line":"964","kind":"variable"},{"name":"SimpleFace","id":"SimpleFace4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/CustomButton","name":"CustomButton"},"name":"customButton","id":"customButton","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"delegateTo","id":"delegateTo","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/SimpleFace/name","name":"name"},"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/SimpleFace/faceID","name":"faceID"},"ref":{"refId":"dart.core/int","name":"int"},"name":"faceID","id":"faceID","kind":"param"}],"line":"966","kind":"constructor"}],"line":"961","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nRepresents a button's face. Each face is associated with its own style\nmodifier and, optionally, its own contents html, text, or image.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/custom_button.dart","name":"Face","id":"Face","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the face's contents as html.\n\n@param html html to set as face's contents html\n\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"872","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the face's contents as text.\n\n@param text text to set as face's contents\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"896","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the face's contents as an image.\n\n@param image image to set as face contents\n","name":"setImage","id":"setImage1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"image","id":"image","kind":"param"}],"line":"912","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the contents associated with this face.\n","name":"getFace","id":"getFace0()","line":"920","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateButtonFace","id":"updateButtonFace0()","line":"934","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"940","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the ID associated with this face. This will be a bitwise and of all\nof the attributes that comprise this face.\n","name":"getFaceID","id":"getFaceID0()","line":"948","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the name of the face. This property is also used as a modifier on the\n<code>CustomButton</code> style. <p/> For instance, if the\n<code>CustomButton</code> style is \"gwt-PushButton\" and the face name is\n\"up\", then the CSS class name will be \"gwt-PushButton-up\".\n\n@return the face's name\n","name":"getName","id":"getName0()","line":"958","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the face's contents as html.\n\n@return face's contents as html\n\n","name":"html","id":"html","line":"864","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the face's contents as text.\n\n@return face's contents as text\n\n","name":"text","id":"text","line":"889","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"STYLENAME_HTML_FACE","id":"STYLENAME_HTML_FACE","line":"840","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"delegateTo","id":"delegateTo","line":"841","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"face","id":"face","line":"842","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/CustomButton","name":"CustomButton"},"name":"_customButton","isPrivate":true,"id":"_customButton","line":"844","kind":"variable"},{"comment":"\nConstructor for <code>Face</code>. Creates a new face that delegates to\nthe supplied face.\n\n@param delegateTo default content provider\n","name":"Face","id":"Face2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/Face/_customButton","name":"_customButton"},"ref":{"refId":"dart_web_toolkit_ui/CustomButton","name":"CustomButton"},"name":"_customButton","isPrivate":true,"id":"_customButton","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/Face/delegateTo","name":"delegateTo"},"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"delegateTo","id":"delegateTo","kind":"param"}],"line":"852","kind":"constructor"}],"line":"838","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ButtonBase","name":"ButtonBase"},"comment":"\nCustomButton is a base button class with built in support for a set number\nof button faces.\n\nEach face has its own style modifier. For example, the state for down and\nhovering is assigned the CSS modifier <i>down-hovering</i>. So, if the\nbutton's overall style name is <i>gwt-PushButton</i> then when showing the\n<code>down-hovering</code> face, the button's style is <i>\ngwt-PushButton-down-hovering</i>. The overall style name can be used to\nchange the style of the button irrespective of the current face.\n\n<p>\nEach button face can be assigned is own image, text, or html contents. If no\ncontent is defined for a face, then the face will use the contents of another\nface. For example, if <code>down-hovering</code> does not have defined\ncontents, it will use the contents defined by the <code>down</code> face.\n</p>\n\n<p>\nThe supported faces are defined below:\n</p>\n<p>\n<table border=\"4\">\n<tr>\n\n<td><b>CSS style name</b></td>\n<td><b>Getter method</b></td>\n<td><b>description of face</b></td>\n<td><b>defaults to contents of face</b></td>\n</tr>\n\n<tr>\n<td>up</td>\n<td> {@link #getUpFace()}</td>\n<td>face shown when button is up</td>\n<td>none</td>\n</tr>\n\n<tr>\n<td>down</td>\n<td> {@link #getDownFace()}</td>\n<td>face shown when button is down</td>\n<td>up</td>\n</tr>\n\n<tr>\n<td>up-hovering</td>\n<td> {@link #getUpHoveringFace()}</td>\n<td>face shown when button is up and hovering</td>\n<td>up</td>\n</tr>\n\n<tr>\n<td>up-disabled</td>\n<td> {@link #getUpDisabledFace()}</td>\n<td>face shown when button is up and disabled</td>\n<td>up</td>\n</tr>\n\n<tr>\n<td>down-hovering</td>\n<td> {@link #getDownHoveringFace()}</td>\n<td>face shown when button is down and hovering</td>\n<td>down</td>\n</tr>\n\n<tr>\n<td>down-disabled</td>\n<td> {@link #getDownDisabledFace()}</td>\n<td>face shown when button is down and disabled</td>\n<td>down</td>\n</tr>\n</table>\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n\nWhen working with CustomButton subclasses in\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates, you\ncan set text and assign ImageResources for their various faces via\nchild elements:\n<p>\n<dl>\n<dt>&lt;g:upFace>\n<dt>&lt;g:downFace>\n<dt>&lt;g:upHoveringFace>\n<dt>&lt;g:downHoveringFace>\n<dt>&lt;g:upDisabledFace>\n<dt>&lt;g:downDisabledFace>\n</dl>\n\nEach face element can take an optional <code>image</code> attribute\nand an html body. For example:<pre>\n&lt;ui:image field='downButton'/> &lt;!-- define an {@link com.google.gwt.resources.client.ImageResource ImageResource} -->\n\n&lt;g:PushButton ui:field='pushButton' enabled='true'>\n  &lt;g:upFace>\n    &lt;b>click me&lt;/b>\n  &lt;/gwt:upFace>\n  &lt;g:upHoveringFace>\n    &lt;b>Click ME!&lt;/b>\n  &lt;/gwt:upHoveringFace>\n\n  &lt;g:downFace image='{downButton}'/>\n  &lt;g:downHoveringFace image='{downButton}'/>\n&lt;/g:PushButton>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/custom_button.dart","name":"CustomButton","id":"CustomButton","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nConstructor for <code>CustomButton</code>.\n","name":"_init","isPrivate":true,"id":"_init0()","line":"263","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the up face of the button.\n\n@return the up face\n","name":"getUpFace","id":"getUpFace0()","line":"284","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the _upDisabled face of the button.\n\n@return the _upDisabled face\n","name":"getUpDisabledFace","id":"getUpDisabledFace0()","line":"293","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the _upHovering face of the button.\n\n@return the _upHovering face\n","name":"getUpHoveringFace","id":"getUpHoveringFace0()","line":"305","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the down face of the button.\n\n@return the down face\n","name":"getDownFace","id":"getDownFace0()","line":"321","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the _downDisabled face of the button.\n\n@return the _downDisabled face\n","name":"getDownDisabledFace","id":"getDownDisabledFace0()","line":"333","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the _downHovering face of the button.\n\n@return the _downHovering face\n","name":"getDownHoveringFace","id":"getDownHoveringFace0()","line":"345","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the current face's html.\n\n@param html html to set\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"368","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"374","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the current face's text.\n\n@param text text to set\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"390","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this button down?\n\n@return <code>true</code> if the button is down\n","name":"isDown","id":"isDown0()","line":"399","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"407","kind":"method"},{"returnType":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"getMouseEvent","id":"getMouseEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","kind":"param"}],"line":"509","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAccessKey","id":"setAccessKey1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"513","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this button is enabled.\n\n@param enabled <code>true</code> to enable the button, <code>false</code>\nto disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"523","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setFocus","id":"setFocus1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"536","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverridden on attach to ensure that a button face has been chosen before\nthe button is displayed.\n","name":"onAttach","id":"onAttach0()","line":"548","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"553","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the user finishes clicking on this button. The default behavior\nis to fire the click event to listeners. Subclasses that override\n{@link #onClickStart()} should override this method to restore the normal\nwidget display.\n","name":"onClick","id":"onClick0()","line":"565","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the user aborts a click in progress; for example, by dragging\nthe mouse outside of the button before releasing the mouse button.\nSubclasses that override {@link #onClickStart()} should override this\nmethod to restore the normal widget display.\n","name":"onClickCancel","id":"onClickCancel0()","line":"590","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the user begins to click on this button. Subclasses may\noverride this method to display the start of the click visually; such\nsubclasses should also override {@link #onClick()} and\n{@link #onClickCancel()} to restore normal visual state. Each\n<code>onClickStart</code> will eventually be followed by either\n<code>onClick</code> or <code>onClickCancel</code>, depending on whether\nthe click is completed.\n","name":"onClickStart","id":"onClickStart0()","line":"601","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this button is down.\n\n@param down <code>true</code> to press the button, <code>false</code>\notherwise\n","name":"setDown","id":"setDown1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"down","id":"down","kind":"param"}],"line":"609","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCommon setup between constructors.\n","name":"finishSetup","id":"finishSetup0()","line":"618","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fireClickListeners","id":"fireClickListeners1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"nativeEvent","id":"nativeEvent","kind":"param"}],"line":"624","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nGets the current face of the button.\n\n@return the current face\n","name":"getCurrentFace","id":"getCurrentFace0()","line":"635","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCurrentFace","id":"setCurrentFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"newFace","id":"newFace","kind":"param"}],"line":"644","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the current face based on the faceID.\n\n@param faceID sets the new face of the button\n","name":"_setCurrentFace","isPrivate":true,"id":"_setCurrentFace1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"faceID","id":"faceID","kind":"param"}],"line":"667","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the mouse hovering over this button?\n\n@return <code>true</code> if the mouse is hovering\n","name":"isHovering","id":"isHovering0()","line":"677","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether this button is hovering.\n\n@param hovering is this button hovering?\n","name":"setHovering","id":"setHovering1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hovering","id":"hovering","kind":"param"}],"line":"686","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggle the up/down attribute.\n","name":"toggleDown","id":"toggleDown0()","line":"695","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResets internal state if this button can no longer service events. This can\noccur when the widget becomes detached or disabled.\n","name":"cleanupCaptureState","id":"cleanupCaptureState0()","line":"704","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_createFace","isPrivate":true,"id":"_createFace3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"delegateTo","id":"delegateTo","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"faceID","id":"faceID","kind":"param"}],"line":"713","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_getFaceFromID","isPrivate":true,"id":"_getFaceFromID1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"id","id":"id","kind":"param"}],"line":"717","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setAriaPressed","isPrivate":true,"id":"_setAriaPressed1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"newFace","id":"newFace","kind":"param"}],"line":"736","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setCurrentFaceElement","isPrivate":true,"id":"_setCurrentFaceElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"newFaceElement","id":"newFaceElement","kind":"param"}],"line":"741","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the _downDisabled face of the button.\n\n@param _downDisabled _downDisabled face\n","name":"_setDownDisabledFace","isPrivate":true,"id":"_setDownDisabledFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_downDisabled","isPrivate":true,"id":"_downDisabled","kind":"param"}],"line":"758","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the down face of the button.\n\n@param down the down face\n","name":"_setDownFace","isPrivate":true,"id":"_setDownFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"down","id":"down","kind":"param"}],"line":"767","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the _downHovering face of the button.\n\n@param _downHovering hoverDown face\n","name":"_setDownHoveringFace","isPrivate":true,"id":"_setDownHoveringFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_downHovering","isPrivate":true,"id":"_downHovering","kind":"param"}],"line":"776","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the _upDisabled face of the button.\n\n@param _upDisabled _upDisabled face\n","name":"_setUpDisabledFace","isPrivate":true,"id":"_setUpDisabledFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_upDisabled","isPrivate":true,"id":"_upDisabled","kind":"param"}],"line":"785","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the up face of the button.\n\n@param up up face\n","name":"setUpFace","id":"setUpFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"up","id":"up","kind":"param"}],"line":"794","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the _upHovering face of the button.\n\n@param _upHovering _upHovering face\n","name":"_setUpHoveringFace","isPrivate":true,"id":"_setUpHoveringFace1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"name":"_upHovering","isPrivate":true,"id":"_upHovering","kind":"param"}],"line":"803","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggle the disabled attribute.\n","name":"toggleDisabled","id":"toggleDisabled0()","line":"810","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggle the hovering attribute.\n","name":"toggleHover","id":"toggleHover0()","line":"824","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the current face's html.\n\n@return current face's html\n","name":"html","id":"html","line":"361","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"tabIndex","id":"tabIndex","line":"372","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the current face's text.\n\n@return current face's text\n","name":"text","id":"text","line":"383","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_STYLENAME_DEFAULT","isPrivate":true,"id":"_STYLENAME_DEFAULT","line":"115","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nPressed Attribute bit.\n","name":"_DOWN_ATTRIBUTE","isPrivate":true,"id":"_DOWN_ATTRIBUTE","line":"120","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nHovering Attribute bit.\n","name":"_HOVERING_ATTRIBUTE","isPrivate":true,"id":"_HOVERING_ATTRIBUTE","line":"125","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nDisabled Attribute bit.\n","name":"_DISABLED_ATTRIBUTE","isPrivate":true,"id":"_DISABLED_ATTRIBUTE","line":"130","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for up face.\n","name":"_UP","isPrivate":true,"id":"_UP","line":"135","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for down face.\n","name":"_DOWN","isPrivate":true,"id":"_DOWN","line":"140","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for _upHovering face.\n","name":"_UP_HOVERING","isPrivate":true,"id":"_UP_HOVERING","line":"145","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for _downHovering face.\n","name":"_DOWN_HOVERING","isPrivate":true,"id":"_DOWN_HOVERING","line":"150","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for _upDisabled face.\n","name":"_UP_DISABLED","isPrivate":true,"id":"_UP_DISABLED","line":"155","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nID for _downDisabled face.\n","name":"_DOWN_DISABLED","isPrivate":true,"id":"_DOWN_DISABLED","line":"160","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nThe button's current face element.\n","name":"_curFaceElement","isPrivate":true,"id":"_curFaceElement","line":"165","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nThe button's current face.\n","name":"_curFace","isPrivate":true,"id":"_curFace","line":"170","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for up.\n","name":"_up","isPrivate":true,"id":"_up","line":"175","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for down.\n","name":"_down","isPrivate":true,"id":"_down","line":"180","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for downHover.\n","name":"_downHovering","isPrivate":true,"id":"_downHovering","line":"185","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for upHover.\n","name":"_upHovering","isPrivate":true,"id":"_upHovering","line":"190","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for _upDisabled.\n","name":"_upDisabled","isPrivate":true,"id":"_upDisabled","line":"195","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Face","name":"Face"},"comment":"\nFace for _downDisabled.\n","name":"_downDisabled","isPrivate":true,"id":"_downDisabled","line":"200","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIf <code>true</code>, this widget is capturing with the mouse held down.\n","name":"_isCapturing","isPrivate":true,"id":"_isCapturing","line":"205","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIf <code>true</code>, this widget has focus with the space bar down.\n","name":"_isFocusing","isPrivate":true,"id":"_isFocusing","line":"210","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nUsed to decide whether to allow clicks to propagate up to the superclass\nor container elements.\n","name":"_allowClick","isPrivate":true,"id":"_allowClick","line":"216","kind":"variable"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upImage image for the default (up) face of the button\n","name":"CustomButton.fromImage","id":"CustomButton.fromImage3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"name":"upImage","id":"upImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_ui/Image","name":"Image"},"isOptional":true,"defaultValue":"null","name":"downImage","id":"downImage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"223","kind":"constructor"},{"comment":"\nConstructor for <code>CustomButton</code>.\n\n@param upText the text for the default (up) face of the button\n","name":"CustomButton.fromText","id":"CustomButton.fromText3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"upText","id":"upText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"downText","id":"downText","kind":"param"},{"isNamed":true,"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"242","kind":"constructor"},{"name":"CustomButton.internal","id":"CustomButton.internal0()","line":"256","kind":"constructor"}],"line":"113","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class allows you to interact with the browser's history stack. Each\n\"item\" on the stack is represented by a single string, referred to as a\n\"token\". You can create new history items (which have a token associated with\nthem when they are created), and you can programmatically force the current\nhistory to move back or forward.\n\n<p>\nIn order to receive notification of user-directed changes to the current\nhistory item, implement the {@link ValueChangeHandler} interface and attach\nit via {@link #addValueChangeHandler(ValueChangeHandler)}.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.HistoryExample}\n</p>\n\n<p>\n<h3>URL Encoding</h3>\nAny valid characters may be used in the history token and will survive\nround-trips through {@link #newItem(String)} to {@link #getToken()}/\n{@link ValueChangeHandler#onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent)}\n, but most will be encoded in the user-visible URL. The following US-ASCII\ncharacters are not encoded on any currently supported browser (but may be in\nthe future due to future browser changes):\n<ul>\n<li>a-z\n<li>A-Z\n<li>0-9\n<li>;,/?:@&=+$-_.!~*()\n</ul>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/history.dart","name":"History","id":"History","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"init","id":"init0()","line":"45","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"isStatic":true,"comment":"\nAdds a {@link com.google.gwt.event.logical.shared.ValueChangeEvent} handler\nto be informed of changes to the browser's history stack.\n\n@param handler the handler\n@return the registration used to remove this value change handler\n","name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nProgrammatic equivalent to the user pressing the browser's 'back' button.\n\nNote that this does not work correctly on Safari 2.\n","name":"back","id":"back0()","line":"82","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nProgrammatic equivalent to the user pressing the browser's 'forward'\nbutton.\n","name":"forward","id":"forward0()","line":"91","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nEncode a history token for use as part of a URI.\n\n@param historyToken the token to encode\n@return the encoded token, suitable for use as part of a URI\n","name":"encodeHistoryToken","id":"encodeHistoryToken1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nFire\n{@link ValueChangeHandler#onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent)}\nevents with the current history state. This is most often called at the end \nof an application's\n{@link com.google.gwt.core.client.EntryPoint#onModuleLoad()} to inform\nhistory handlers of the initial application state.\n","name":"fireCurrentHistoryState","id":"fireCurrentHistoryState0()","line":"115","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGets the current history token. The handler will not receive a\n{@link ValueChangeHandler#onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent)}\nevent for the initial token; requiring that an application request the\ntoken explicitly on startup gives it an opportunity to run different\ninitialization code in the presence or absence of an initial token.\n\n@return the initial token, or the empty string if none is present.\n","name":"getToken","id":"getToken0()","line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nAdds a new browser history entry. Calling this method will cause\n{@link ValueChangeHandler#onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent)}\nto be called as well if and only if issueEvent is true.\n\n@param historyToken the token to associate with the new history item\n@param issueEvent true if a\n         {@link ValueChangeHandler#onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent)}\n         event should be issued\n","name":"newItem","id":"newItem2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"historyToken","id":"historyToken","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"issueEvent","id":"issueEvent","kind":"param"}],"line":"147","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HistoryImpl","name":"HistoryImpl"},"isStatic":true,"name":"_impl","isPrivate":true,"id":"_impl","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"_initialized","isPrivate":true,"id":"_initialized","line":"43","kind":"variable"}],"line":"40","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_i18n/HasDirectionalSafeHtml","name":"HasDirectionalSafeHtml"},{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA widget that serves as an \"internal\" hyperlink. That is, it is a link to\nanother state of the running application. When clicked, it will create a new\nhistory frame using {@link com.google.gwt.user.client.History#newItem}, but\nwithout reloading the page.\n\n<p>\nIf you want an HTML hyperlink (&lt;a&gt; tag) without interacting with the\nhistory system, use {@link Anchor} instead.\n</p>\n\n<p>\nBeing a true hyperlink, it is also possible for the user to \"right-click,\nopen link in new window\", which will cause the application to be loaded in a\nnew window at the state specified by the hyperlink.\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<p>\n<img class='gallery' src='doc-files/Hyperlink.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-Hyperlink { }</li>\n</ul>\n\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.HistoryExample}\n</p>\n\n@see Anchor\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/hyperlink.dart","name":"Hyperlink","id":"Hyperlink","children":[{"returnType":{"refId":"void","name":"void"},"name":"_init","isPrivate":true,"id":"_init4()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"token","id":"token","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's contents via HTML. Use care when setting an object's\nHTML; it is an easy way to expose script-based security problems. Consider\nusing {@link #setText(String)} whenever possible.\n\n@param html the object's new HTML\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ClickEvent} handler.\n\n@param handler the click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"comment":"\nReturns the {@code DirectionEstimator} object.\n","name":"getDirectionEstimator","id":"getDirectionEstimator0()","line":"135","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nToggles on / off direction estimation.\n\n@param enabled Whether to enable direction estimation. If {@code true},\n         sets the {@link DirectionEstimator} object to a default\n         {@code DirectionEstimator}.\n","name":"enableDefaultDirectionEstimator","id":"enableDefaultDirectionEstimator1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"146","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nNote: DirectionEstimator should be set before the widget has any content;\nit's highly recommended to set it using a constructor. Reason: if the\nwidget already has non-empty content, this will update its direction\naccording to the new estimator's result. This may cause flicker, and thus\nshould be avoided.\n","name":"setDirectionEstimator","id":"setDirectionEstimator1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"directionEstimator","id":"directionEstimator","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the history token referenced by this hyperlink. This is the history\ntoken that will be passed to {@link History#newItem} when this link is\nclicked.\n\n@param targetHistoryToken the new history token, which may not be null (use\n         {@link Anchor} instead if you don't need history processing)\n","name":"targetHistoryToken=","id":"targetHistoryToken=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"token","id":"token","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"193","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"getTextDirection","id":"getTextDirection0()","line":"197","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setText","id":"setText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"209","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's contents as HTML.\n\n@return the object's HTML\n","name":"html","id":"html","line":"101","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the history token referenced by this hyperlink.\n\n@return the target history token\n@see #setTargetHistoryToken\n","name":"targetHistoryToken","id":"targetHistoryToken","line":"173","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","line":"191","kind":"property"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"isFinal":true,"isStatic":true,"name":"DEFAULT_DIRECTION_ESTIMATOR","id":"DEFAULT_DIRECTION_ESTIMATOR","line":"49","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/HyperlinkImpl","name":"HyperlinkImpl"},"isStatic":true,"name":"_impl","isPrivate":true,"id":"_impl","line":"51","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionalTextHelper","name":"DirectionalTextHelper"},"name":"directionalTextHelper","id":"directionalTextHelper","line":"53","kind":"variable"},{"ref":{"refId":"dart.dom.html/AnchorElement","name":"AnchorElement"},"name":"_anchorElem","isPrivate":true,"id":"_anchorElem","line":"54","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_targetHistoryToken","isPrivate":true,"id":"_targetHistoryToken","line":"55","kind":"variable"},{"comment":"\nCreates a hyperlink with its text and target history token specified.\n\n@param text the hyperlink's text\n@param targetHistoryToken the history token to which it will link, which\n         may not be null (use {@link Anchor} instead if you don't need\n         history processing)\n","name":"Hyperlink","id":"Hyperlink3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"targetHistoryToken","id":"targetHistoryToken","kind":"param"}],"line":"65","kind":"constructor"},{"name":"Hyperlink.fromElement","id":"Hyperlink.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"69","kind":"constructor"}],"line":"46","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplementation class for {@link FileUpload}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/file_upload.dart","name":"FileUploadImpl","id":"FileUploadImpl","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the impl class.\n\n@param fileUpload the {@link FileUpload} to handle\n","name":"init","id":"init1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/FileUpload","name":"FileUpload"},"name":"fileUpload","id":"fileUpload","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHandle the browser event.\n\n@param event the native event\n@return true to fire the event normally, false to ignore it\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"155","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/FileUploadImpl","name":"FileUploadImpl"},"comment":"\nCreate instance of DomHelper depends on broswer.\n","name":"FileUploadImpl.browserDependent","id":"FileUploadImpl.browserDependent0()","line":"136","kind":"constructor"},{"name":"FileUploadImpl._internal","isPrivate":true,"id":"FileUploadImpl._internal0()","line":"140","kind":"constructor"}],"line":"131","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasEnabled","name":"HasEnabled"},{"refId":"dart_web_toolkit_event/HasChangeHandlers","name":"HasChangeHandlers"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA widget that wraps the HTML &lt;input type='file'&gt; element. This widget\nmust be used with {@link com.google.gwt.user.client.ui.FormPanel} if it is to\nbe submitted to a server.\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.FormPanelExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/file_upload.dart","name":"FileUpload","id":"FileUpload","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ChangeEvent} handler.\n\n@param handler the change handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addChangeHandler","id":"addChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ChangeHandler","name":"ChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"70","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this widget is enabled.\n\n@param enabled <code>true</code> to enable the widget, <code>false</code>\n         to disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"101","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the filename selected by the user. This property has no mutator, as\nbrowser security restrictions preclude setting it.\n\n@return the widget's filename\n","name":"getFilename","id":"getFilename0()","line":"113","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"_getInputElement","isPrivate":true,"id":"_getInputElement0()","line":"123","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"78","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this widget is enabled.\n\n@return <code>true</code> if the widget is enabled\n","name":"enabled","id":"enabled","line":"93","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/FileUploadImpl","name":"FileUploadImpl"},"name":"_impl","isPrivate":true,"id":"_impl","line":"41","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/FileUpload","name":"FileUpload"},"comment":"\nCreates a FileUpload widget that wraps an existing &lt;input\ntype='file'&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"FileUpload.wrap","id":"FileUpload.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"28","kind":"constructor"},{"comment":"\nConstructs a new file upload widget.\n","name":"FileUpload","id":"FileUpload1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"isOptional":true,"name":"element","id":"element","kind":"param"}],"line":"46","kind":"constructor"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/splitter.dart","name":"SplitterScheduledCommand","id":"SplitterScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInvokes the command.\n","name":"execute","id":"execute0()","line":"247","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Splitter","name":"Splitter"},"name":"_splitter","isPrivate":true,"id":"_splitter","line":"240","kind":"variable"},{"name":"SplitterScheduledCommand","id":"SplitterScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/SplitterScheduledCommand/_splitter","name":"_splitter"},"ref":{"refId":"dart_web_toolkit_ui/Splitter","name":"Splitter"},"name":"_splitter","isPrivate":true,"id":"_splitter","kind":"param"}],"line":"242","kind":"constructor"}],"line":"238","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Splitter","name":"Splitter"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/splitter.dart","name":"VSplitter","id":"VSplitter","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsolutePosition","id":"getAbsolutePosition0()","line":"213","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getCenterSize","id":"getCenterSize0()","line":"218","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getEventPosition","id":"getEventPosition1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"event","id":"event","kind":"param"}],"line":"223","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetPosition","id":"getTargetPosition0()","line":"228","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetSize","id":"getTargetSize0()","line":"233","kind":"method"},{"name":"VSplitter","id":"VSplitter3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/SplitLayoutPanel","name":"SplitLayoutPanel"},"name":"splitLayoutPanel","id":"splitLayoutPanel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"target","id":"target","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"reverse","id":"reverse","kind":"param"}],"line":"206","kind":"constructor"}],"line":"205","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Splitter","name":"Splitter"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/splitter.dart","name":"HSplitter","id":"HSplitter","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsolutePosition","id":"getAbsolutePosition0()","line":"180","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getCenterSize","id":"getCenterSize0()","line":"185","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getEventPosition","id":"getEventPosition1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"event","id":"event","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetPosition","id":"getTargetPosition0()","line":"195","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetSize","id":"getTargetSize0()","line":"200","kind":"method"},{"name":"HSplitter","id":"HSplitter3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/SplitLayoutPanel","name":"SplitLayoutPanel"},"name":"splitLayoutPanel","id":"splitLayoutPanel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"target","id":"target","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"reverse","id":"reverse","kind":"param"}],"line":"173","kind":"constructor"}],"line":"172","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nAbstract Splitter for SplitLayoutPanelExample. Implemented as Splitter and\nVSplitter.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/splitter.dart","name":"Splitter","id":"Splitter","children":[{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setMinSize","id":"setMinSize1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"minSize","id":"minSize","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setSnapClosedSize","id":"setSnapClosedSize1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"snapClosedSize","id":"snapClosedSize","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setToggleDisplayAllowed","id":"setToggleDisplayAllowed1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"allowed","id":"allowed","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getAbsolutePosition","id":"getAbsolutePosition0()","line":"119","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getCenterSize","id":"getCenterSize0()","line":"121","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getEventPosition","id":"getEventPosition1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetPosition","id":"getTargetPosition0()","line":"125","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getTargetSize","id":"getTargetSize0()","line":"127","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getMaxSize","id":"getMaxSize0()","line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAssociatedWidgetSize","id":"setAssociatedWidgetSize1()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"142","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"target","id":"target","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_offset","isPrivate":true,"id":"_offset","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_mouseDown","isPrivate":true,"id":"_mouseDown","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"_layoutCommand","isPrivate":true,"id":"_layoutCommand","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"reverse","id":"reverse","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_minSize","isPrivate":true,"id":"_minSize","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_snapClosedSize","isPrivate":true,"id":"_snapClosedSize","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"_centerSize","isPrivate":true,"id":"_centerSize","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"_syncedCenterSize","isPrivate":true,"id":"_syncedCenterSize","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_toggleDisplayAllowed","isPrivate":true,"id":"_toggleDisplayAllowed","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_lastClick","isPrivate":true,"id":"_lastClick","line":"23","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/SplitLayoutPanel","name":"SplitLayoutPanel"},"name":"_splitLayoutPanel","isPrivate":true,"id":"_splitLayoutPanel","line":"25","kind":"variable"},{"name":"Splitter","id":"Splitter3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/Splitter/_splitLayoutPanel","name":"_splitLayoutPanel"},"ref":{"refId":"dart_web_toolkit_ui/SplitLayoutPanel","name":"SplitLayoutPanel"},"name":"_splitLayoutPanel","isPrivate":true,"id":"_splitLayoutPanel","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/Splitter/target","name":"target"},"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"target","id":"target","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/Splitter/reverse","name":"reverse"},"ref":{"refId":"dart.core/bool","name":"bool"},"name":"reverse","id":"reverse","kind":"param"}],"line":"27","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/DockLayoutPanel","name":"DockLayoutPanel"},"comment":"\nA panel that adds user-positioned splitters between each of its child\nwidgets.\n\n<p>\nThis panel is used in the same way as {@link DockLayoutPanel}, except that\nits children's sizes are always specified in {@link Unit#PX} units, and each\npair of child widgets has a splitter between them that the user can drag.\n</p>\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<h3>CSS Style Rules</h3>\n<ul class='css'>\n<li>.gwt-SplitLayoutPanel { the panel itself }</li>\n<li>.gwt-SplitLayoutPanel .gwt-SplitLayoutPanel-HDragger { horizontal dragger\n}</li>\n<li>.gwt-SplitLayoutPanel .gwt-SplitLayoutPanel-VDragger { vertical dragger }\n</li>\n</ul>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.SplitLayoutPanelExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/split_layout_panel.dart","name":"SplitLayoutPanel","id":"SplitLayoutPanel","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturn the size of the splitter in pixels.\n\n@return the splitter size\n","name":"getSplitterSize","id":"getSplitterSize0()","line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insert","isPrivate":true,"id":"_insert4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the minimum allowable size for the given widget.\n\n<p>\nIts associated splitter cannot be dragged to a position that would make it\nsmaller than this size. This method has no effect for the\n{@link DockLayoutPanel.DockLayoutConstant#CENTER} widget.\n</p>\n\n@param child the child whose minimum size will be set\n@param minSize the minimum size for this widget\n","name":"setWidgetMinSize","id":"setWidgetMinSize2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"minSize","id":"minSize","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets a size below which the slider will close completely. This can be used\nin conjunction with {@link #setWidgetMinSize} to provide a speed-bump\neffect where the slider will stick to a preferred minimum size before\nclosing completely.\n\n<p>\nThis method has no effect for the {@link DockLayoutPanel.DockLayoutConstant#CENTER}\nwidget.\n</p>\n\n@param child the child whose slider should snap closed\n@param snapClosedSize the width below which the widget will close or\n       -1 to disable.\n","name":"setWidgetSnapClosedSize","id":"setWidgetSnapClosedSize2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"snapClosedSize","id":"snapClosedSize","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether or not double-clicking on the splitter should toggle the\ndisplay of the widget.\n\n@param child the child whose display toggling will be allowed or not.\n@param allowed whether or not display toggling is allowed for this widget\n","name":"setWidgetToggleDisplayAllowed","id":"setWidgetToggleDisplayAllowed2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"allowed","id":"allowed","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Splitter","name":"Splitter"},"name":"_getAssociatedSplitter","isPrivate":true,"id":"_getAssociatedSplitter1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insertSplitter","isPrivate":true,"id":"_insertSplitter2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"181","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DEFAULT_SPLITTER_SIZE","id":"DEFAULT_SPLITTER_SIZE","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DOUBLE_CLICK_TIMEOUT","id":"DOUBLE_CLICK_TIMEOUT","line":"39","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nThe element that masks the screen so we can catch mouse events over\niframes.\n","name":"glassElem","id":"glassElem","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_splitterSize","isPrivate":true,"id":"_splitterSize","line":"47","kind":"variable"},{"comment":"\nConstruct a new {@link SplitLayoutPanel} with the specified splitter size\nin pixels.\n\n@param splitterSize the size of the splitter in pixels\n","name":"SplitLayoutPanel","id":"SplitLayoutPanel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/SplitLayoutPanel/_splitterSize","name":"_splitterSize"},"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"DEFAULT_SPLITTER_SIZE","name":"_splitterSize","isPrivate":true,"id":"_splitterSize","kind":"param"}],"line":"55","kind":"constructor"}],"line":"36","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/LayoutPanel","name":"LayoutPanel"},"comment":"\nA singleton implementation of {@link LayoutPanel} that always attaches itself\nto the document body (i.e. {@link RootPanel#get()}).\n\n<p>\nThis panel automatically calls {@link RequiresResize#onResize()} on itself\nwhen initially created, and whenever the window is resized.\n</p>\n\n<p>\nNOTE: This widget will <em>only</em> work in standards mode, which requires\nthat the HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.LayoutPanelExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/root_layout_panel.dart","name":"RootLayoutPanel","id":"RootLayoutPanel","children":[{"returnType":{"refId":"dart_web_toolkit_ui/RootLayoutPanel","name":"RootLayoutPanel"},"isStatic":true,"comment":"\nGets the singleton instance of RootLayoutPanel. This instance will always\nbe attached to the document body via {@link RootPanel#get()}.\n\n<p>\nNote that, unlike {@link RootPanel#get(String)}, this class provides no way\nto get an instance for any element on the page other than the document\nbody. This is because we know of no way to get resize events for anything\nbut the window.\n</p>\n","name":"get","id":"get0()","line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLoad","id":"onLoad0()","line":"59","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/RootLayoutPanel","name":"RootLayoutPanel"},"isStatic":true,"name":"_singleton","isPrivate":true,"id":"_singleton","line":"28","kind":"variable"},{"name":"RootLayoutPanel._initial","isPrivate":true,"id":"RootLayoutPanel._initial0()","line":"49","kind":"constructor"}],"line":"26","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"},{"refId":"dart_web_toolkit_animation/AnimatedLayout","name":"AnimatedLayout"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that lays its children out in arbitrary\n{@link com.google.gwt.layout.client.Layout.Layer layers} using the\n{@link Layout} class.\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.LayoutPanelExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nLayoutPanel elements in {@link com.google.gwt.uibinder.client.UiBinder\nUiBinder} templates lay out their children with arbitrary constraints, using\n&lt;g:layer> elements. Each layer may have any of the following constraint\nattributes specified as CSS length attributes: <code>left</code>,\n<code>top</code>, <code>right</code>, <code>bottom</code>, <code>width</code>\n, and <code>height</code>.\n\n<p>\nPrecisely zero or two constraints are required for each axis (horizontal and\nvertical). Specifying no constraints implies that the child should fill that\naxis completely.\n\n<p>\nThe valid sets of horizontal constraints are:\n<dl>\n<dt>(none)\n<dd>Fill the parent's horizontal axis\n<dt>left, width\n<dd>Fixed width, positioned from parent's left edge\n<dt>right, width\n<dd>Fixed width, positioned from parent's right edge\n<dt>left, right\n<dd>Width implied by fixed distance from parent's left and right edges\n</dl>\n\n<p>\nThe valid sets of vertical constraints are:\n<dl>\n<dt>(none)\n<dd>Fill the parent's vertical axis\n<dt>top, height\n<dd>Fixed height, positioned from parent's top edge\n<dt>bottom, height\n<dd>Fixed height, positioned from parent's bottom edge\n<dt>top, bottom\n<dd>Height implied by fixed distance from parent's top and bottom edges\n</dl>\n\n<p>\nThe values of constraint attributes can be any valid <a\nhref='http://www.w3.org/TR/CSS21/syndata.html#length-units'>CSS length</a>,\nsuch as <code>1px</code>, <code>3em</code>, or <code>0</code> (zero lengths require no\nunits).\n\n<p>\nFor example:\n\n<pre>\n&lt;g:LayoutPanel>\n  &lt;!-- No constraints causes the layer to fill the parent -->\n  &lt;g:layer>\n    &lt;g:Label>Lorem ipsum...&lt;/g:Label>\n  &lt;/g:layer>\n  &lt;!-- Position horizontally 25% from each edge;\n       Vertically 4px from the top and 10em tall. -->\n  &lt;g:layer left='25%' right='25%' top='4px' height='10em'>\n    &lt;g:Label>Header&lt;/g:Label>\n  &lt;/g:layer>\n&lt;/g:LayoutPanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/layout_panel.dart","name":"LayoutPanel","id":"LayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to this panel.\n\n<p>\nBy default, each child will fill the panel. To build more interesting\nlayouts, set child widgets' layout constraints using\n{@link #setWidgetLeftRight(Widget, double, Style.Unit, double, Style.Unit)}\nand related methods.\n</p>\n\n@param widget the widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forceLayout","id":"forceLayout0()","line":"119","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the container element wrapping the given child widget.\n\n@param child\n@return the widget's container element\n","name":"getWidgetContainerElement","id":"getWidgetContainerElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a widget before the specified index.\n\n<p>\nBy default, each child will fill the panel. To build more interesting\nlayouts, set child widgets' layout constraints using\n{@link #setWidgetLeftRight(Widget, double, Style.Unit, double, Style.Unit)}\nand related methods.\n</p>\n\n<p>\nInserting a widget in this way has no effect on the DOM structure, but can\nbe useful for other panels that wrap LayoutPanel to maintain insertion\norder.\n</p>\n\n@param widget the widget to be inserted\n@param beforeIndex the index before which it will be inserted\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"157","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"178","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's bottom and height values.\n\n@param child\n@param bottom\n@param bottomUnit\n@param height\n@param heightUnit\n","name":"setWidgetBottomHeight","id":"setWidgetBottomHeight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"bottom","id":"bottom","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"bottomUnit","id":"bottomUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"height","id":"height","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"heightUnit","id":"heightUnit","kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetBottomHeight(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetBottomHeight","id":"setIsWidgetBottomHeight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"bottom","id":"bottom","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"bottomUnit","id":"bottomUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"height","id":"height","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"heightUnit","id":"heightUnit","kind":"param"}],"line":"214","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's horizontal position within its layer.\n\n@param child\n@param position\n","name":"setWidgetHorizontalPosition","id":"setWidgetHorizontalPosition2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/Alignment","name":"Alignment"},"name":"position","id":"position","kind":"param"}],"line":"224","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's left and right values.\n\n@param child\n@param left\n@param leftUnit\n@param right\n@param rightUnit\n","name":"setWidgetLeftRight","id":"setWidgetLeftRight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"leftUnit","id":"leftUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"right","id":"right","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"rightUnit","id":"rightUnit","kind":"param"}],"line":"239","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetLeftRight(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetLeftRight","id":"setIsWidgetLeftRight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"leftUnit","id":"leftUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"right","id":"right","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"rightUnit","id":"rightUnit","kind":"param"}],"line":"250","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's left and width values.\n\n@param child\n@param left\n@param leftUnit\n@param width\n@param widthUnit\n","name":"setWidgetLeftWidth","id":"setWidgetLeftWidth5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"leftUnit","id":"leftUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"widthUnit","id":"widthUnit","kind":"param"}],"line":"263","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetLeftWidth(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetLeftWidth","id":"setIsWidgetLeftWidth5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"leftUnit","id":"leftUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"widthUnit","id":"widthUnit","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's right and width values.\n\n@param child\n@param right\n@param rightUnit\n@param width\n@param widthUnit\n","name":"setWidgetRightWidth","id":"setWidgetRightWidth5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"right","id":"right","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"rightUnit","id":"rightUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"widthUnit","id":"widthUnit","kind":"param"}],"line":"287","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetRightWidth(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetRightWidth","id":"setIsWidgetRightWidth5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"right","id":"right","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"rightUnit","id":"rightUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"widthUnit","id":"widthUnit","kind":"param"}],"line":"298","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's top and bottom values.\n\n@param child\n@param top\n@param topUnit\n@param bottom\n@param bottomUnit\n","name":"setWidgetTopBottom","id":"setWidgetTopBottom5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"topUnit","id":"topUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"bottom","id":"bottom","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"bottomUnit","id":"bottomUnit","kind":"param"}],"line":"311","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetTopBottom(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetTopBottom","id":"setIsWidgetTopBottom5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"topUnit","id":"topUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"bottom","id":"bottom","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"bottomUnit","id":"bottomUnit","kind":"param"}],"line":"322","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's top and height values.\n\n@param child\n@param top\n@param topUnit\n@param height\n@param heightUnit\n","name":"setWidgetTopHeight","id":"setWidgetTopHeight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"topUnit","id":"topUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"height","id":"height","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"heightUnit","id":"heightUnit","kind":"param"}],"line":"335","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setWidgetTopHeight(Widget,double, Style.Unit, double, Style.Unit)\n","name":"setIsWidgetTopHeight","id":"setIsWidgetTopHeight5()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"topUnit","id":"topUnit","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"height","id":"height","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"heightUnit","id":"heightUnit","kind":"param"}],"line":"346","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the child widget's vertical position within its layer.\n\n@param child\n@param position\n","name":"setWidgetVerticalPosition","id":"setWidgetVerticalPosition2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/Alignment","name":"Alignment"},"name":"position","id":"position","kind":"param"}],"line":"356","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nShows or hides the given widget and its layer. This method explicitly\ncalls {@link UIObject#setVisible(boolean)} on the child widget and ensures\nthat its associated layer is shown/hidden.\n\n@param child\n@param visible\n","name":"setWidgetVisible","id":"setWidgetVisible2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"370","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"377","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"382","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"comment":"\nGets the {@link Layout} instance associated with this widget. This is made\npackage-protected for use by {@link RootLayoutPanel}.\n\n@return this widget's layout instance\n","name":"getLayout","id":"getLayout0()","line":"393","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_assertIsChild","isPrivate":true,"id":"_assertIsChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"397","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"_getLayer","isPrivate":true,"id":"_getLayer1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"401","kind":"method"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"_layout","isPrivate":true,"id":"_layout","line":"87","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"name":"_layoutCmd","isPrivate":true,"id":"_layoutCmd","line":"88","kind":"variable"},{"comment":"\nCreates an empty layout panel.\n","name":"LayoutPanel","id":"LayoutPanel0()","line":"93","kind":"constructor"}],"line":"85","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/layout_command.dart","name":"LayoutCommandAnimationCallback","id":"LayoutCommandAnimationCallback","children":[{"returnType":{"refId":"void","name":"void"},"name":"onAnimationComplete","id":"onAnimationComplete0()","line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onLayout","id":"onLayout2()","children":[{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"progress","id":"progress","kind":"param"}],"line":"93","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"name":"_command","isPrivate":true,"id":"_command","line":"82","kind":"variable"},{"name":"LayoutCommandAnimationCallback","id":"LayoutCommandAnimationCallback1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/LayoutCommandAnimationCallback/_command","name":"_command"},"ref":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"name":"_command","isPrivate":true,"id":"_command","kind":"param"}],"line":"84","kind":"constructor"}],"line":"80","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA scheduled command used by animated layouts to ensure that only layout is\never performed for a panel within a given user event.\n\n<p>\nNote: This class assumes that {@link com.google.gwt.layout.client.Layout.Layer#getUserObject Layer.getUserObject()} will\nreturn the widget associated with a given layer.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/layout_command.dart","name":"LayoutCommand","id":"LayoutCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels this command. A subsequent call to\n{@link #schedule(int, Layout.AnimationCallback)} will re-enable it.\n","name":"cancel","id":"cancel0()","line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInvokes the command.\n","name":"execute","id":"execute0()","line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedules a layout. The duration and callback passed to this method will\nsupercede any previous call that has not yet been executed.\n\n@param duration\n@param callback\n","name":"schedule","id":"schedule2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled before the layout is executed. Override this method to perform any\nwork that needs to happen just before it.\n","name":"doBeforeLayout","id":"doBeforeLayout0()","line":"76","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_scheduled","isPrivate":true,"id":"_scheduled","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_canceled","isPrivate":true,"id":"_canceled","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_duration","isPrivate":true,"id":"_duration","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"name":"callback","id":"callback","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"_layout","isPrivate":true,"id":"_layout","line":"21","kind":"variable"},{"comment":"\nCreates a new command for the given layout object.\n\n@param layout\n","name":"LayoutCommand","id":"LayoutCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/LayoutCommand/_layout","name":"_layout"},"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"_layout","isPrivate":true,"id":"_layout","kind":"param"}],"line":"28","kind":"constructor"}],"line":"15","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_layout_panel.dart","name":"_DockAnimateCommand","isPrivate":true,"id":"_DockAnimateCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"doBeforeLayout","id":"doBeforeLayout0()","line":"581","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/DockLayoutPanel","name":"DockLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"577","kind":"variable"},{"name":"_DockAnimateCommand","id":"_DockAnimateCommand2()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_DockAnimateCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/DockLayoutPanel","name":"DockLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"layout","id":"layout","kind":"param"}],"line":"579","kind":"constructor"}],"line":"575","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nLayout data associated with each widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_layout_panel.dart","name":"LayoutData","id":"LayoutData","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","line":"566","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"oldSize","id":"oldSize","line":"567","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","line":"567","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"originalSize","id":"originalSize","line":"568","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hidden","id":"hidden","line":"569","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","line":"570","kind":"variable"},{"name":"LayoutData","id":"LayoutData3()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/LayoutData/direction","name":"direction"},"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/LayoutData/size","name":"size"},"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"initializedField":{"refId":"dart_web_toolkit_ui/LayoutData/layer","name":"layer"},"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"572","kind":"constructor"}],"line":"565","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"},{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"},{"refId":"dart_web_toolkit_animation/AnimatedLayout","name":"AnimatedLayout"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel that lays its child widgets out \"docked\" at its outer edges, and\nallows its last widget to take up the remaining space in its center.\n\n<p>\nThis widget will <em>only</em> work in standards mode, which requires that\nthe HTML page in which it is run have an explicit &lt;!DOCTYPE&gt;\ndeclaration.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.DockLayoutPanelExample}\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nDockLayoutPanel elements in\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates\nlay out their children in elements tagged with the cardinal directions,\nand center:\n\n<p>\n<dl>\n<dt>&lt;g:center>\n<dt>&lt;g:north>\n<dt>&lt;g:south>\n<dt>&lt;g:west>\n<dt>&lt;g:east>\n</dl>\n\n<p>\nEach child can hold only widget, and there can be only one &lt;g:center>.\nHowever, there can be any number of the directional children.\n<p>\n(Note that the tags of the child elements are not\ncapitalized. This is meant to signal that they are not runtime objects,\nand so cannot have a <code>ui:field</code> attribute.)\n<p>\nFor example:<pre>\n&lt;g:DockLayoutPanel unit='EM'>\n  &lt;g:north size='5'>\n    &lt;g:Label>Top&lt;/g:Label>\n  &lt;/g:north>\n  &lt;g:center>\n    &lt;g:Label>Body&lt;/g:Label>\n  &lt;/g:center>\n  &lt;g:west size='192'>\n    &lt;g:HTML>\n      &lt;ul>\n        &lt;li>Sidebar&lt;/li>\n        &lt;li>Sidebar&lt;/li>\n        &lt;li>Sidebar&lt;/li>\n      &lt;/ul>\n    &lt;/g:HTML>\n  &lt;/g:west>\n&lt;/g:DockLayoutPanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/dock_layout_panel.dart","name":"DockLayoutPanel","id":"DockLayoutPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget at the center of the dock. No further widgets may be added\nafter this one.\n\n@param widget the widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"94","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the east edge of the dock.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addEast","id":"addEast2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addEast(Widget,double)\n","name":"addIsWidgetEast","id":"addIsWidgetEast2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the end of the line. In LTR mode, the widget is added to\nthe east. In RTL mode, the widget is added to the west.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addLineEnd","id":"addLineEnd2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the start of the line. In LTR mode, the widget is added to\nthe west. In RTL mode, the widget is added to the east.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addLineStart","id":"addLineStart2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the north edge of the dock.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addNorth","id":"addNorth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addNorth(Widget,double)\n","name":"addIsWidgetNorth","id":"addIsWidgetNorth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the south edge of the dock.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addSouth","id":"addSouth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addSouth(Widget,double)\n","name":"addIsWidgetSouth","id":"addIsWidgetSouth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the west edge of the dock.\n\n@param widget the widget to be added\n@param size the child widget's size\n","name":"addWest","id":"addWest2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #addWest(Widget,double)\n","name":"addIsWidgetWest","id":"addIsWidgetWest2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the east edge of the dock, inserting it before an existing\nwidget.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertEast","id":"insertEast3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the start of the line, inserting it before an existing\nwidget. In LTR mode, the widget is added to the east. In RTL mode, the\nwidget is added to the west.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertLineEnd","id":"insertLineEnd3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"221","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the end of the line, inserting it before an existing\nwidget. In LTR mode, the widget is added to the west. In RTL mode, the\nwidget is added to the east.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertLineStart","id":"insertLineStart3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the north edge of the dock, inserting it before an\nexisting widget.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertNorth","id":"insertNorth3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"248","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the south edge of the dock, inserting it before an\nexisting widget.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertSouth","id":"insertSouth3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"261","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the west edge of the dock, inserting it before an existing\nwidget.\n\n@param widget the widget to be added\n@param size the child widget's size\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"insertWest","id":"insertWest3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the specified edge of the dock. If the widget is already a\nchild of this panel, this method behaves as though {@link #remove(Widget)}\nhad already been called.\n\n@param widget the widget to be added\n@param direction the widget's direction in the dock\n@param before the widget before which to insert the new child, or\n         <code>null</code> to append\n","name":"_insert","isPrivate":true,"id":"_insert4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"before","id":"before","kind":"param"}],"line":"288","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"animate","id":"animate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart_web_toolkit_layout/LayoutAnimationCallback","name":"LayoutAnimationCallback"},"isOptional":true,"defaultValue":"null","name":"callback","id":"callback","kind":"param"}],"line":"330","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forceLayout","id":"forceLayout0()","line":"334","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets the container element wrapping the given child widget.\n\n@param child\n@return the widget's container element\n","name":"getWidgetContainerElement","id":"getWidgetContainerElement1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"comment":"\nGets the layout direction of the given child widget.\n\n@param child the widget to be queried\n@return the widget's layout direction, or <code>null</code> if it is not a\n        child of this panel\n@throws AssertionError if the widget is not a child and assertions are enabled\n","name":"getWidgetDirection","id":"getWidgetDirection1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"364","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nGets the layout size of the given child widget.\n\n@param child the widget to be queried\n@return the widget's layout size, or <code>null</code> if it is not a child of\n        this panel\n@throws AssertionError if the widget is not a child and assertions are enabled\n","name":"getWidgetSize","id":"getWidgetSize1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"380","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onResize","id":"onResize0()","line":"390","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets whether or not the given widget should be hidden.\n\n@param widget the widget to hide or display\n@param hidden true to hide the widget, false to display it\n","name":"setWidgetHidden","id":"setWidgetHidden2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hidden","id":"hidden","kind":"param"}],"line":"421","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nUpdates the size of the widget passed in as long as it is not the center\nwidget and updates the layout of the dock.\n\n@param widget the widget that needs to update its size\n@param size the size to update the widget to\n","name":"setWidgetSize","id":"setWidgetSize2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"size","id":"size","kind":"param"}],"line":"440","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"getCenter","id":"getCenter0()","line":"452","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getCenterHeight","id":"getCenterHeight0()","line":"456","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"getCenterWidth","id":"getCenterWidth0()","line":"460","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"comment":"\nResolve the specified direction based on the current locale. If the\ndirection is {@link DockLayoutConstant#LINE_START} or {@link DockLayoutConstant#LINE_END},\nthe return value will be one of {@link DockLayoutConstant#EAST} or\n{@link DockLayoutConstant#WEST} depending on the RTL mode of the locale. For all\nother directions, the specified value is returned.\n\n@param direction the specified direction\n@return the locale\n","name":"getResolvedDirection","id":"getResolvedDirection1()","children":[{"ref":{"refId":"dart_web_toolkit_util/DockLayoutConstant","name":"DockLayoutConstant"},"name":"direction","id":"direction","kind":"param"}],"line":"474","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"getUnit","id":"getUnit0()","line":"483","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"489","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"494","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"assertIsChild","id":"assertIsChild1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"499","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_doLayout","isPrivate":true,"id":"_doLayout0()","line":"507","kind":"method"},{"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"_unit","isPrivate":true,"id":"_unit","line":"66","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_center","isPrivate":true,"id":"_center","line":"67","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"_layout","isPrivate":true,"id":"_layout","line":"68","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/LayoutCommand","name":"LayoutCommand"},"name":"_layoutCmd","isPrivate":true,"id":"_layoutCmd","line":"69","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"_filledWidth","isPrivate":true,"id":"_filledWidth","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"_filledHeigh","isPrivate":true,"id":"_filledHeigh","line":"71","kind":"variable"},{"comment":"\nCreates an empty dock panel.\n\n@param unit the unit to be used for layout\n","name":"DockLayoutPanel","id":"DockLayoutPanel1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/DockLayoutPanel/_unit","name":"_unit"},"ref":{"refId":"dart_web_toolkit_util/Unit","name":"Unit"},"name":"_unit","isPrivate":true,"id":"_unit","kind":"param"}],"line":"78","kind":"constructor"}],"line":"65","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"},{"refId":"dart_web_toolkit_i18n/HasAlignment","name":"HasAlignment"}],"superclass":{"refId":"dart_web_toolkit_ui/CellPanel","name":"CellPanel"},"comment":"\nA panel that lays all of its widgets out in a single horizontal column.\n\n<p>\n<img class='gallery' src='doc-files/HorizontalPanel.png'/>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/horizontal_panel.dart","name":"HorizontalPanel","id":"HorizontalPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default horizontal alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasHorizontalAlignment#setHorizontalAlignment(HasHorizontalAlignment.HorizontalAlignmentConstant)\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"getVerticalAlignment","id":"getVerticalAlignment0()","line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default vertical alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasVerticalAlignment#setVerticalAlignment(HasVerticalAlignment.VerticalAlignmentConstant)\n","name":"setVerticalAlignment","id":"setVerticalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_createAlignedTd","isPrivate":true,"id":"_createAlignedTd0()","line":"95","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"_horzAlign","isPrivate":true,"id":"_horzAlign","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"_vertAlign","isPrivate":true,"id":"_vertAlign","line":"16","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_tableRow","isPrivate":true,"id":"_tableRow","line":"17","kind":"variable"},{"comment":"\nCreates an empty horizontal panel.\n","name":"HorizontalPanel","id":"HorizontalPanel0()","line":"22","kind":"constructor"}],"line":"13","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"},{"refId":"dart_web_toolkit_i18n/HasAlignment","name":"HasAlignment"}],"superclass":{"refId":"dart_web_toolkit_ui/CellPanel","name":"CellPanel"},"comment":"\nA panel that lays all of its widgets out in a single vertical column.\n\n<p>\n<img class='gallery' src='doc-files/VerticalPanel.png'/>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/vertical_panel.dart","name":"VerticalPanel","id":"VerticalPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default horizontal alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasHorizontalAlignment#setHorizontalAlignment(HasHorizontalAlignment.HorizontalAlignmentConstant)\n","name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"44","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"getVerticalAlignment","id":"getVerticalAlignment0()","line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the default vertical alignment to be used for widgets added to this\npanel. It only applies to widgets added after this property is set.\n\n@see HasVerticalAlignment#setVerticalAlignment(HasVerticalAlignment.VerticalAlignmentConstant)\n","name":"setVerticalAlignment","id":"setVerticalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_createAlignedTd","isPrivate":true,"id":"_createAlignedTd0()","line":"99","kind":"method"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"_horzAlign","isPrivate":true,"id":"_horzAlign","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"_vertAlign","isPrivate":true,"id":"_vertAlign","line":"16","kind":"variable"},{"comment":"\nCreates an empty vertical panel.\n","name":"VerticalPanel","id":"VerticalPanel0()","line":"21","kind":"constructor"}],"line":"13","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nA panel whose child widgets are contained within the cells of a table. Each\ncell's size may be set independently. Each child widget can take up a subset\nof its cell and can be aligned within it.\n\n<p>\nNote: This class is not related to the\n{@link com.google.gwt.cell.client.Cell} based data presentation widgets such\nas {@link com.google.gwt.user.cellview.client.CellList} and\n{@link com.google.gwt.user.cellview.client.CellTable}.\n\n<h3>Use in UiBinder Templates</h3>\n<P>\nWhen working with CellPanel subclasses in\n{@link com.google.gwt.uibinder.client.UiBinder UiBinder} templates, wrap\nchild widgets in <code>&lt;g:cell></code> elements. (Note the lower case\n\"c\", meant to signal that the cell is not a runtime object, and so cannot\nhave a <code>ui:field</code> attribute.) Cell elements can have\nattributes setting their height, width and alignment.\n<h4>&lt;g:cell> attributes</h4>\n<p>\n<dl>\n<dt>horizontalAlignment\n<dd>Interpreted as a static member of {@link HorizontalAlignmentConstant}\nand used as the <code>align</code> argument to {@link #setCellHorizontalAlignment}\n<dt>verticalAlignment\n<dd>Interpreted as a static member of {@link VerticalAlignmentConstant}\nand used as the <code>align</code> argument to {@link #setCellVerticalAlignment}\n<dt>width\n<dd>Used as the <code>width</code> argument to {@link #setCellWidth}\n<dt>height\n<dd>Used as the <code>height</code> argument to {@link #setCellHeight}\n</dl>\n<p>\nFor example:<pre>\n&lt;g:HorizontalPanel>\n  &lt;g:cell width='5em' horizontalAlignment='ALIGN_RIGHT'>\n    &lt;g:Label ui:field='leftSide' />\n  &lt;/g:cell>\n  &lt;g:cell width='15em' horizontalAlignment='ALIGN_LEFT'>\n    &lt;g:Label ui:field='rightSide' />\n  &lt;/g:cell>\n&lt;/g:HorizontalPanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/cell_panel.dart","name":"CellPanel","id":"CellPanel","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the amount of spacing between this panel's cells.\n\n@param spacing the inter-cell spacing, in pixels\n","name":"spacing=","id":"spacing=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"val","id":"val","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the width of the border to be applied to all cells in this panel. This\nis particularly useful when debugging layouts, in that it allows you to see\nexplicitly the cells that contain this panel's children.\n\n@param width the width of the panel's cell borders, in pixels\n","name":"borderWidth=","id":"borderWidth=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getBody","id":"getBody0()","line":"97","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getTable","id":"getTable0()","line":"101","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCellHorizontalAlignment","id":"setCellHorizontalAlignment2()","children":[{"ref":{"refId":"dart.dom.html/TableCellElement","name":"TableCellElement"},"name":"td","id":"td","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setCellVerticalAlignment","id":"setCellVerticalAlignment2()","children":[{"ref":{"refId":"dart.dom.html/TableCellElement","name":"TableCellElement"},"name":"td","id":"td","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"getWidgetTd","id":"getWidgetTd1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the height of the cell associated with the given widget, related to\nthe panel as a whole.\n\n@param w the widget whose cell height is to be set\n@param height the cell's height, in CSS units\n","name":"setWidgetCellHeight","id":"setWidgetCellHeight2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setCellHeight(Widget,String)\n","name":"setIsWidgetCellHeight","id":"setIsWidgetCellHeight2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"145","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the horizontal alignment of the given widget within its cell.\n\n@param w the widget whose horizontal alignment is to be set\n@param align the widget's horizontal alignment, as defined in\n         {@link HasHorizontalAlignment}.\n","name":"setWidgetCellHorizontalAlignment","id":"setWidgetCellHorizontalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setCellHorizontalAlignment(Widget,HasHorizontalAlignment.HorizontalAlignmentConstant)\n","name":"setIsWidgetCellHorizontalAlignment","id":"setIsWidgetCellHorizontalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the vertical alignment of the given widget within its cell.\n\n@param w the widget whose vertical alignment is to be set\n@param align the widget's vertical alignment, as defined in\n         {@link HasVerticalAlignment}.\n","name":"setWidgetCellVerticalAlignment","id":"setWidgetCellVerticalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"179","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setCellVerticalAlignment(Widget,HasVerticalAlignment.VerticalAlignmentConstant)\n","name":"setIsWidgetCellVerticalAlignment","id":"setIsWidgetCellVerticalAlignment2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/VerticalAlignmentConstant","name":"VerticalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"191","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the width of the cell associated with the given widget, related to the\npanel as a whole.\n\n@param w the widget whose cell width is to be set\n@param width the cell's width, in CSS units\n","name":"setWidgetCellWidth","id":"setWidgetCellWidth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"202","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #setCellWidth(Widget,String)\n","name":"setIsWidgetCellWidth","id":"setIsWidgetCellWidth2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"215","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the amount of spacing between this panel's cells.\n\n@return the inter-cell spacing, in pixels\n","name":"spacing","id":"spacing","line":"72","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_spacing","isPrivate":true,"id":"_spacing","line":"53","kind":"variable"},{"ref":{"refId":"dart.dom.html/TableElement","name":"TableElement"},"name":"_table","isPrivate":true,"id":"_table","line":"54","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_body","isPrivate":true,"id":"_body","line":"55","kind":"variable"},{"name":"CellPanel","id":"CellPanel0()","line":"57","kind":"constructor"}],"line":"51","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/CheckBox","name":"CheckBox"},"comment":"\nA mutually-exclusive selection radio button widget. Fires\n{@link com.google.gwt.event.dom.client.ClickEvent}s\nwhen the radio button is clicked, and {@link ValueChangeEvent}s when the\nbutton becomes checked. Note, however, that browser limitations prevent\nValueChangeEvents from being sent when the radio button is cleared as a side\neffect of another in the group being clicked.\n\n<p>\n<img class='gallery' src='doc-files/RadioButton.png'/>\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-RadioButton</dt>\n<dd>the outer element</dd>\n</dl>\n\n<p>\n<h3>Example</h3> {@example com.google.gwt.examples.RadioButtonExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/radio_button.dart","name":"RadioButton","id":"RadioButton","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nOverridden to send ValueChangeEvents only when appropriate.\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nChange the group name of this radio button.\n\nRadio buttons are grouped by their name attribute, so changing their name\nusing the setName() method will also change their associated group.\n\nIf changing this group name results in a new radio group with multiple\nradio buttons selected, this radio button will remain selected and the\nother radio buttons will be unselected.\n\n@param name name the group with which to associate the radio button\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkEvents","id":"sinkEvents1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBitsToAdd","id":"eventBitsToAdd","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nNo-op. CheckBox's click handler is no good for radio button, so don't use\nit. Our event handling is all done in {@link #onBrowserEvent}\n","name":"ensureDomEventHandlers","id":"ensureDomEventHandlers0()","line":"146","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_oldValue","isPrivate":true,"id":"_oldValue","line":"38","kind":"variable"},{"comment":"\nCreates a new radio associated with a particular group name. All radio\nbuttons associated with the same group name belong to a mutually-exclusive\nset.\n\nRadio buttons are grouped by their name attribute, so changing their name\nusing the setName() method will also change their associated group.\n\n@param name the group name with which to associate the radio button\n","name":"RadioButton","id":"RadioButton3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"label","id":"label","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"50","kind":"constructor"}],"line":"36","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_editor/IsEditor","arguments":[{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"}],"name":"IsEditor"},{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_i18n/HasDirectionalSafeHtml","name":"HasDirectionalSafeHtml"},{"refId":"dart_web_toolkit_event/HasWordWrap","name":"HasWordWrap"},{"refId":"dart_web_toolkit_event/HasValue","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"HasValue"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"}],"superclass":{"refId":"dart_web_toolkit_ui/ButtonBase","name":"ButtonBase"},"comment":"\nA standard check box widget.\n\nThis class also serves as a base class for\n{@link com.google.gwt.user.client.ui.RadioButton}.\n\n<p>\n<img class='gallery' src='doc-files/CheckBox.png'/>\n</p>\n\n<p>\n<h3>Built-in Bidi Text Support</h3>\nThis widget is capable of automatically adjusting its direction according to\nits content. This feature is controlled by {@link #setDirectionEstimator} or\npassing a DirectionEstimator parameter to the constructor, and is off by\ndefault.\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-CheckBox</dt>\n<dd>the outer element</dd>\n<dt>.gwt-CheckBox-disabled</dt>\n<dd>applied when Checkbox is disabled</dd>\n</dl>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.CheckBoxExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/check_box.dart","name":"CheckBox","id":"CheckBox","children":[{"returnType":{"refId":"void","name":"void"},"name":"_initWidget","isPrivate":true,"id":"_initWidget1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"element","id":"element","kind":"param"}],"line":"82","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's name.\n\n@param name the widget's new name\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's contents via HTML. Use care when setting an object's\nHTML; it is an easy way to expose script-based security problems. Consider\nusing {@link #setText(String)} whenever possible.\n\n@param html the object's new HTML\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addValueChangeHandler","id":"addValueChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ValueChangeHandler","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"ValueChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this widget is enabled.\n\n@param enabled <code>true</code> to enable the widget, <code>false</code>\n         to disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"val","id":"val","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether word-wrapping is enabled.\n\n@param wrap <code>true</code> to enable word-wrapping.\n","name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wrap","id":"wrap","kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's position in the tab index. If more than one widget has\nthe same tab index, each such widget will receive focus in an arbitrary\norder. Setting the tab index to <code>-1</code> will cause this widget to\nbe removed from the tab order.\n\n@param index the widget's tab index\n","name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"223","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nExplicitly focus/unfocus this widget. Only one widget can have focus at a\ntime, and the widget that does will receive all keyboard events.\n\n@param focused whether this widget should take focus or release it\n","name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"239","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"getTextDirection","id":"getTextDirection0()","line":"251","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setText","id":"setText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"255","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setHtml","id":"setHtml2()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"263","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nGet the element's text.\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"279","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the value property on the input element that backs this widget. This is\nthe value that will be associated with the CheckBox's name and submitted to\nthe server if a {@link FormPanel} that holds it is submitted and the box is\nchecked.\n<p>\nDon't confuse this with {@link #setValue}, which actually checks and\nunchecks the box.\n\n@param value\n","name":"formValue=","id":"formValue=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"val","id":"val","kind":"param"}],"line":"305","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether this check box is currently checked.\n<p>\nNote that this <em>does not</em> return the value property of the checkbox\ninput element wrapped by this widget. For access to that property, see\n{@link #getFormValue()}\n\n@return <code>true</code> if the check box is checked, false otherwise.\n        Will not return null\n","name":"getValue","id":"getValue0()","line":"319","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks or unchecks the check box, firing {@link ValueChangeEvent} if\nappropriate.\n<p>\nNote that this <em>does not</em> set the value property of the checkbox\ninput element wrapped by this widget. For access to that property, see\n{@link #setFormValue(String)}\n\n@param value true to check, false to uncheck; null value implies false\n@param fireEvents If true, and value has changed, fire a\n         {@link ValueChangeEvent}\n","name":"setValue","id":"setValue2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"fireEvents","id":"fireEvents","kind":"param"}],"line":"339","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"ensureDomEventHandlers","id":"ensureDomEventHandlers0()","line":"355","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sinkEvents","id":"sinkEvents1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBitsToAdd","id":"eventBitsToAdd","kind":"param"}],"line":"366","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method is called when a widget is attached to the browser's document.\nonAttach needs special handling for the CheckBox case. Must still call\n{@link Widget#onAttach()} to preserve the <code>onAttach</code> contract.\n","name":"onLoad","id":"onLoad0()","line":"383","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method is called when a widget is detached from the browser's\ndocument. Overridden because of IE bug that throws away checked state and\nin order to clear the event listener off of the <code>inputElem</code>.\n","name":"onUnload","id":"onUnload0()","line":"392","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nReplace the current input element with a new one. Preserves all state\nexcept for the name property, for nasty reasons related to radio button\ngrouping. (See implementation of {@link RadioButton#setName}.)\n\n@param elem the new input element\n","name":"replaceInputElement","id":"replaceInputElement1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"newInputElem","id":"newInputElem","kind":"param"}],"line":"406","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setEventListener","id":"setEventListener2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"},"name":"listener","id":"listener","kind":"param"}],"line":"444","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"},"name":"asEditor","id":"asEditor0()","line":"448","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"getDirectionEstimator","id":"getDirectionEstimator0()","line":"455","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nSee note at {@link #setDirectionEstimator(DirectionEstimator)}.\n","name":"enableDirectionEstimator","id":"enableDirectionEstimator1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"464","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nNote: DirectionEstimator should be set before the label has any content;\nit's highly recommended to set it using a constructor. Reason: if the\nlabel already has non-empty content, this will update its direction\naccording to the new estimator's result. This may cause flicker, and thus\nshould be avoided.\n","name":"setDirectionEstimator","id":"setDirectionEstimator1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"directionEstimator","id":"directionEstimator","kind":"param"}],"line":"477","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the widget's name.\n\n@return the widget's name\n","name":"name","id":"name","line":"120","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's contents as HTML.\n\n@return the object's HTML\n","name":"html","id":"html","line":"131","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this widget is enabled.\n\n@return <code>true</code> if the widget is enabled\n","name":"enabled","id":"enabled","line":"167","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether word-wrapping is enabled.\n\n@return <code>true</code> if word-wrapping is enabled.\n","name":"wordWrap","id":"wordWrap","line":"194","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"213","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nSets the element's text.\n","name":"text","id":"text","line":"274","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value property of the input element that backs this widget.\nThis is the value that will be associated with the CheckBox name and\nsubmitted to the server if a {@link FormPanel} that holds it is submitted\nand the box is checked.\n<p>\nDon't confuse this with {@link #getValue}, which returns true or false if\nthe widget is checked.\n","name":"formValue","id":"formValue","line":"292","kind":"property"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"isStatic":true,"name":"DEFAULT_DIRECTION_ESTIMATOR","id":"DEFAULT_DIRECTION_ESTIMATOR","line":"41","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionalTextHelper","name":"DirectionalTextHelper"},"name":"directionalTextHelper","id":"directionalTextHelper","line":"43","kind":"variable"},{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"inputElem","id":"inputElem","line":"45","kind":"variable"},{"ref":{"refId":"dart.dom.html/LabelElement","name":"LabelElement"},"name":"labelElem","id":"labelElem","line":"46","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_editor/LeafValueEditor","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"LeafValueEditor"},"name":"editor","id":"editor","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_valueChangeHandlerInitialized","isPrivate":true,"id":"_valueChangeHandlerInitialized","line":"50","kind":"variable"},{"comment":"\nCreates a check box with label.\n","name":"CheckBox","id":"CheckBox2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"label","id":"label","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"asHtml","id":"asHtml","kind":"param"}],"line":"55","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be a &lt;checkbox&gt; element.\n\n@param element the element to be used\n","name":"CheckBox.fromElement","id":"CheckBox.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/InputElement","name":"InputElement"},"name":"element","id":"element","kind":"param"}],"line":"77","kind":"constructor"}],"line":"37","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nProvides widgets to the iterator.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/finite_widget_iterator.dart","name":"WidgetProvider","id":"WidgetProvider","children":[{"returnType":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"79","kind":"method"}],"line":"78","kind":"class"},{"interfaces":[{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nIterator over a finite number of widgets, which are stored in a delegate\nclass (usually a widget panel).\n\n<p>\nIn order to use this class, assign each widget in the panel an arbitrary\nindex. For example, {@link HeaderPanel} defines the header as index 0, the\ncontent as index 1, and the footer as index 2. Construct a new\n{@link FiniteWidgetIterator} with a {@link WidgetProvider} that provides the\nchild widgets.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/finite_widget_iterator.dart","name":"FiniteWidgetIterator","id":"FiniteWidgetIterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"moveNext","id":"moveNext0()","line":"38","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_getCurrent","isPrivate":true,"id":"_getCurrent0()","line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"remove","id":"remove0()","line":"63","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"current","id":"current","line":"49","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/WidgetProvider","name":"WidgetProvider"},"name":"provider","id":"provider","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"widgetCount","id":"widgetCount","line":"21","kind":"variable"},{"comment":"\nConstruct a new {@link FiniteWidgetIterator}.\n\n<p>\nThe widget count is the number of child widgets that the panel supports,\nregardless of whether or not they are set.\n\n@param provider the widget provider\n@param widgetCount the finite number of widgets that can be provided\n","name":"FiniteWidgetIterator","id":"FiniteWidgetIterator2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/WidgetProvider","name":"WidgetProvider"},"name":"provider","id":"provider","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"widgetCount","id":"widgetCount","kind":"param"}],"line":"33","kind":"constructor"}],"line":"17","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/resize_layout_panel_impl_standard.dart","name":"_ScheduledCommand","isPrivate":true,"id":"_ScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute0()","line":"168","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImplStandard","name":"ResizeLayoutPanelImplStandard"},"name":"_panel","isPrivate":true,"id":"_panel","line":"164","kind":"variable"},{"name":"_ScheduledCommand","id":"_ScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_ScheduledCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImplStandard","name":"ResizeLayoutPanelImplStandard"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"166","kind":"constructor"}],"line":"163","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"}],"superclass":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImpl","name":"ResizeLayoutPanelImpl"},"comment":"\nImplementation of resize event.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/resize_layout_panel_impl_standard.dart","name":"ResizeLayoutPanelImplStandard","id":"ResizeLayoutPanelImplStandard","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeDelegate","name":"ResizeDelegate"},"name":"delegate","id":"delegate","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleResize","id":"handleResize0()","line":"113","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReset the positions of the scrollable elements.\n\n@return true if the size changed, false if not\n","name":"_resetScrollables","isPrivate":true,"id":"_resetScrollables0()","line":"124","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"comment":"\nChrome does not fire an onresize event if the dimensions are too small to\nrender a scrollbar.\n","name":"_MIN_SIZE","isPrivate":true,"id":"_MIN_SIZE","line":"14","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_collapsible","isPrivate":true,"id":"_collapsible","line":"16","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_collapsibleInner","isPrivate":true,"id":"_collapsibleInner","line":"17","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_expandable","isPrivate":true,"id":"_expandable","line":"18","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_expandableInner","isPrivate":true,"id":"_expandableInner","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_lastOffsetHeight","isPrivate":true,"id":"_lastOffsetHeight","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_lastOffsetWidth","isPrivate":true,"id":"_lastOffsetWidth","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_resettingScrollables","isPrivate":true,"id":"_resettingScrollables","line":"22","kind":"variable"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDelegate event handler.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/resize_layout_panel_impl.dart","name":"ResizeDelegate","id":"ResizeDelegate","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the element is resized.\n","name":"onResize","id":"onResize0()","line":"64","kind":"method"}],"line":"59","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/resize_layout_panel_impl.dart","name":"ResizeLayoutPanelImpl","id":"ResizeLayoutPanelImpl","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the implementation.\n\n@param elem the element to listen for resize\n@param delegate the {@link Delegate} to inform when resize occurs\n","name":"init","id":"init2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeDelegate","name":"ResizeDelegate"},"name":"delegate","id":"delegate","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled on attach.\n","name":"onAttach","id":"onAttach0()","line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled on detach.\n","name":"onDetach","id":"onDetach0()","line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHandle a resize event.\n","name":"handleResize","id":"handleResize0()","line":"49","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isAttached","id":"isAttached","line":"15","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"parent","id":"parent","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeDelegate","name":"ResizeDelegate"},"name":"delegate","id":"delegate","line":"17","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImpl","name":"ResizeLayoutPanelImpl"},"comment":"\nCreate instance of [ResizeLayoutPanelImpl] depends on broswer.\n","name":"ResizeLayoutPanelImpl.browserDependent","id":"ResizeLayoutPanelImpl.browserDependent0()","line":"11","kind":"constructor"},{"name":"ResizeLayoutPanelImpl","id":"ResizeLayoutPanelImpl0()","line":"19","kind":"constructor"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis tag interface specifies that the implementing widget will call\n{@link RequiresResize#onResize()} on its children whenever their size may\nhave changed.\n\n<p>\nWith limited exceptions (such as {@link RootLayoutPanel}), widgets that\nimplement this interface will also implement {@link RequiresResize}. A typical\nwidget will implement {@link RequiresResize#onResize()} like this:\n\n<code>\npublic void onResize() {\n  for (Widget child : getChildren()) {\n    if (child instanceof RequiresResize) {\n      ((RequiresResize) child).onResize();\n    }\n  }\n}\n</code>\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/provides_resize.dart","name":"ProvidesResize","id":"ProvidesResize","line":"27","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ResizeDelegate","name":"ResizeDelegate"},"comment":"\nDelegate event handler.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/resize_layout_panel.dart","name":"ResizeLayoutPanelResizeDelegate","id":"ResizeLayoutPanelResizeDelegate","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the element is resized.\n","name":"onResize","id":"onResize0()","line":"150","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanel","name":"ResizeLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"142","kind":"variable"},{"name":"ResizeLayoutPanelResizeDelegate","id":"ResizeLayoutPanelResizeDelegate1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelResizeDelegate/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanel","name":"ResizeLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"144","kind":"constructor"}],"line":"140","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/resize_layout_panel.dart","name":"ResizeScheduledCommand","id":"ResizeScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInvokes the command.\n","name":"execute","id":"execute0()","line":"131","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanel","name":"ResizeLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"124","kind":"variable"},{"name":"ResizeScheduledCommand","id":"ResizeScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/ResizeScheduledCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanel","name":"ResizeLayoutPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"126","kind":"constructor"}],"line":"122","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_event/HasResizeHandlers","name":"HasResizeHandlers"},{"refId":"dart_web_toolkit_ui/ProvidesResize","name":"ProvidesResize"}],"superclass":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"comment":"\nA simple panel that {@link ProvidesResize} to its one child, but does not\n{@link RequiresResize}. Use this to embed layout panels in any location\nwithin your application.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/resize_layout_panel.dart","name":"ResizeLayoutPanel","id":"ResizeLayoutPanel","children":[{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addResizeHandler","id":"addResizeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ResizeHandler","name":"ResizeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onAttach","id":"onAttach0()","line":"82","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDetach","id":"onDetach0()","line":"89","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleResize","id":"handleResize0()","line":"95","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedule a resize handler. We schedule the event so the DOM has time to\nupdate the offset sizes, and to avoid duplicate resize events from both a\nheight and width resize.\n","name":"scheduleResize","id":"scheduleResize0()","line":"114","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImpl","name":"ResizeLayoutPanelImpl"},"isStatic":true,"name":"impl","id":"impl","line":"13","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layer","name":"Layer"},"name":"layer","id":"layer","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_layout/Layout","name":"Layout"},"name":"layout","id":"layout","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"resizeCmd","id":"resizeCmd","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"resizeCmdScheduled","id":"resizeCmdScheduled","line":"17","kind":"variable"},{"name":"ResizeLayoutPanel","id":"ResizeLayoutPanel0()","line":"19","kind":"constructor"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by displays that can be given accept an {@link IsWidget}\nto show.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/accepts_one_widget.dart","name":"AcceptsOneWidget","id":"AcceptsOneWidget","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the only widget of the receiver, replacing the previous\nwidget if there was one.\n\n@param w the widget, or <code>null</code> to remove the widget\n\n@see SimplePanel\n","name":"setWidgetIsWidget","id":"setWidgetIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"20","kind":"method"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/simple_panel.dart","name":"SimplePanelIterator","id":"SimplePanelIterator","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether the [Iterator] has elements left.\n","name":"moveNext","id":"moveNext0()","line":"168","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the next element in the iteration. Throws a\n[StateError] if no element is left.\n","name":"_getCurrent","isPrivate":true,"id":"_getCurrent0()","line":"178","kind":"method"},{"name":"remove","id":"remove0()","line":"186","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"current","id":"current","line":"172","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hasElement","id":"hasElement","line":"157","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"returned","id":"returned","line":"158","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"159","kind":"variable"},{"name":"SimplePanelIterator","id":"SimplePanelIterator1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/SimplePanelIterator/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/SimplePanel","name":"SimplePanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"161","kind":"constructor"}],"line":"155","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/HasOneWidget","name":"HasOneWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"comment":"\nBase class for panels that contain only one widget.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/simple_panel.dart","name":"SimplePanel","id":"SimplePanel","children":[{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nOverride this method to specify that an element other than the root element\nbe the container for the panel's child widget. This can be useful when you\nwant to create a simple panel that decorates its contents.\n\nNote that this method continues to return the\n{@link com.google.gwt.user.client.Element} class defined in the\n<code>User</code> module to maintain backwards compatibility.\n\n@return the element to be used as the panel's container\n","name":"getContainerElement","id":"getContainerElement0()","line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to this panel.\n\n@param w the child widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"59","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"67","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the only widget of the receiver, replacing the previous\nwidget if there was one.\n\n@param w the widget, or <code>null</code> to remove the widget\n\n@see SimplePanel\n","name":"setWidgetIsWidget","id":"setWidgetIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this panel's widget. Any existing child widget will be removed.\n\n@param w the panel's new widget, or <code>null</code> to clear the panel\n","name":"setWidget","id":"setWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the panel's child widget.\n\n@return the child widget, or <code>null</code> if none is present\n","name":"getWidget","id":"getWidget0()","line":"150","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","line":"12","kind":"variable"},{"comment":"\nCreates an empty panel that uses a DIV for its contents or\ncreate a panel with the specified child widget.\n","name":"SimplePanel","id":"SimplePanel1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"isOptional":true,"defaultValue":"null","name":"child","id":"child","kind":"param"}],"line":"19","kind":"constructor"},{"comment":"\nCreates an empty panel that uses the specified browser element for its\ncontents.\n\n@param elem the browser element to use\n","name":"SimplePanel.fromElement","id":"SimplePanel.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"33","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis interface designates that its implementor needs to be informed whenever\nits size is modified.\n\n<p>\nWidgets that implement this interface should only be added to those that\nimplement {@link ProvidesResize}. Failure to do so will usually result in\n{@link #onResize()} not being called.\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/requires_resize.dart","name":"RequiresResize","id":"RequiresResize","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method must be called whenever the implementor's size has been\nmodified.\n","name":"onResize","id":"onResize0()","line":"22","kind":"method"}],"line":"16","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/WidgetProvider","name":"WidgetProvider"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe widget provider for this panel.\n\n<p>\nWidgets are returned in the following order:\n<ol>\n<li>Header widget</li>\n<li>Content widget</li>\n<li>Footer widget</li>\n</ol>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/header_panel.dart","name":"_WidgetProviderImpl","isPrivate":true,"id":"_WidgetProviderImpl","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"394","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"390","kind":"variable"},{"name":"_WidgetProviderImpl","id":"_WidgetProviderImpl1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/_WidgetProviderImpl/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"392","kind":"constructor"}],"line":"388","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ResizeDelegate","name":"ResizeDelegate"},"comment":"\nDelegate event handler.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/header_panel.dart","name":"HeaderPanelResizeDelegate","id":"HeaderPanelResizeDelegate","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when the element is resized.\n","name":"onResize","id":"onResize0()","line":"372","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"364","kind":"variable"},{"name":"HeaderPanelResizeDelegate","id":"HeaderPanelResizeDelegate1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/HeaderPanelResizeDelegate/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"366","kind":"constructor"}],"line":"362","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/header_panel.dart","name":"HeaderPanelScheduledCommand","id":"HeaderPanelScheduledCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCauses the Command to perform its encapsulated behavior.\n","name":"execute","id":"execute0()","line":"353","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"346","kind":"variable"},{"name":"HeaderPanelScheduledCommand","id":"HeaderPanelScheduledCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/HeaderPanelScheduledCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/HeaderPanel","name":"HeaderPanel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"348","kind":"constructor"}],"line":"344","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/RequiresResize","name":"RequiresResize"}],"superclass":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"comment":"\nA panel that includes a header (top), footer (bottom), and content (middle)\narea. The header and footer areas resize naturally. The content area is\nallocated all of the remaining space between the header and footer area.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/header_panel.dart","name":"HeaderPanel","id":"HeaderPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to this panel.\n\n@param w the child widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGet the content widget that appears between the header and footer.\n\n@return the content {@link Widget}\n","name":"getContentWidget","id":"getContentWidget0()","line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the widget in the content portion between the header and footer.\n\n@param w the widget to use as the content\n","name":"setContentWidget","id":"setContentWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGet the footer widget at the bottom of the panel.\n\n@return the footer {@link Widget}\n","name":"getFooterWidget","id":"getFooterWidget0()","line":"139","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the widget in the footer portion at the bottom of the panel.\n\n@param w the widget to use as the footer\n","name":"setFooterWidget","id":"setFooterWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"148","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGet the header widget at the top of the panel.\n\n@return the header {@link Widget}\n","name":"getHeaderWidget","id":"getHeaderWidget0()","line":"162","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the widget in the header portion at the top of the panel.\n\n@param w the widget to use as the header\n","name":"setHeaderWidget","id":"setHeaderWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"171","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdd a widget to the panel in the specified container. Note that this method\ndoes not do the logical attach.\n\n@param w the widget to add\n@param toReplace the widget to replace\n@param container the container in which to place the widget\n","name":"_add","isPrivate":true,"id":"_add3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"toReplace","id":"toReplace","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"container","id":"container","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_createContainer","isPrivate":true,"id":"_createContainer0()","line":"212","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"221","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is attached to the browser's document.\nTo receive notification after a Widget has been added to the document,\noverride the {@link #onLoad} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onLoad()} or\n{@link #doAttachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onAttach()</code> to ensure that the Widget has been attached\nto its underlying Element.\n</p>\n\n@throws IllegalStateException if this widget is already attached\n@see #onLoad()\n@see #doAttachChildren()\n","name":"onAttach","id":"onAttach0()","line":"250","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is detached from the browser's\ndocument. To receive notification before a Widget is removed from the\ndocument, override the {@link #onUnload} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onUnload()} or\n{@link #doDetachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onDetach()</code> to ensure that the Widget has been detached\nfrom the underlying Element. Failure to do so will result in application\nmemory leaks due to circular references between DOM Elements and JavaScript\nobjects.\n</p>\n\n@throws IllegalStateException if this widget is already detached\n@see #onUnload()\n@see #doDetachChildren()\n","name":"onDetach","id":"onDetach0()","line":"280","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method must be called whenever the implementor's size has been\nmodified.\n","name":"onResize","id":"onResize0()","line":"294","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nUpdate the layout.\n","name":"_forceLayout","isPrivate":true,"id":"_forceLayout0()","line":"306","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedule layout to adjust the height of the content area.\n","name":"_scheduledLayout","isPrivate":true,"id":"_scheduledLayout0()","line":"335","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_content","isPrivate":true,"id":"_content","line":"13","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_contentContainer","isPrivate":true,"id":"_contentContainer","line":"14","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_footer","isPrivate":true,"id":"_footer","line":"15","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_footerContainer","isPrivate":true,"id":"_footerContainer","line":"16","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImpl","name":"ResizeLayoutPanelImpl"},"name":"_footerImpl","isPrivate":true,"id":"_footerImpl","line":"17","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_header","isPrivate":true,"id":"_header","line":"18","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_headerContainer","isPrivate":true,"id":"_headerContainer","line":"19","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/ResizeLayoutPanelImpl","name":"ResizeLayoutPanelImpl"},"name":"_headerImpl","isPrivate":true,"id":"_headerImpl","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_scheduler/ScheduledCommand","name":"ScheduledCommand"},"name":"_layoutCmd","isPrivate":true,"id":"_layoutCmd","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_layoutScheduled","isPrivate":true,"id":"_layoutScheduled","line":"22","kind":"variable"},{"name":"HeaderPanel","id":"HeaderPanel0()","line":"24","kind":"constructor"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn interface for UI elements that can be built by first generating a piece\nof HTML and afterwards wrapping a root widget.\n\nThis interface is very experimental and in active development, so the exact\nAPI is likely to change. Very likely. In fact, it will definitely change.\nYou've been warned.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/is_renderable.dart","name":"IsRenderable","id":"IsRenderable","line":"14","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/IsRenderable","name":"IsRenderable"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nA type of widget that can wrap another widget, hiding the wrapped widget's\nmethods. When added to a panel, a composite behaves exactly as if the widget\nit wraps had been added.\n\n<p>\nThe composite is useful for creating a single widget out of an aggregate of\nmultiple other widgets contained in a single panel.\n</p>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.CompositeExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/composite.dart","name":"Composite","id":"Composite","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether or not the receiver is attached to the\n{@link com.google.gwt.dom.client.Document Document}'s\n{@link com.google.gwt.dom.client.BodyElement BodyElement}.\n\n@return true if attached, false otherwise\n","name":"isAttached","id":"isAttached0()","line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFired whenever a browser event is received.\n\n@param event the event received\n\nTODO\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nProvides subclasses access to the topmost widget that defines this\ncomposite.\n\n@return the widget\n","name":"getWidget","id":"getWidget0()","line":"110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the widget to be wrapped by the composite. The wrapped widget must be\nset before calling any {@link Widget} methods on this object, or adding it\nto a panel. This method may only be called once for a given composite.\n\n@param widget the widget to be wrapped\n","name":"initWidget","id":"initWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is attached to the browser's document.\nTo receive notification after a Widget has been added to the document,\noverride the {@link #onLoad} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onLoad()} or\n{@link #doAttachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onAttach()</code> to ensure that the Widget has been attached\nto its underlying Element.\n</p>\n\n@throws IllegalStateException if this widget is already attached\n@see #onLoad()\n@see #doAttachChildren()\n","name":"onAttach","id":"onAttach0()","line":"176","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is detached from the browser's\ndocument. To receive notification before a Widget is removed from the\ndocument, override the {@link #onUnload} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onUnload()} or\n{@link #doDetachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onDetach()</code> to ensure that the Widget has been detached\nfrom the underlying Element. Failure to do so will result in application\nmemory leaks due to circular references between DOM Elements and JavaScript\nobjects.\n</p>\n\n@throws IllegalStateException if this widget is already detached\n@see #onUnload()\n@see #doDetachChildren()\n","name":"onDetach","id":"onDetach0()","line":"218","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_widget","isPrivate":true,"id":"_widget","line":"23","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/IsRenderable","name":"IsRenderable"},"name":"_renderable","isPrivate":true,"id":"_renderable","line":"25","kind":"variable"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Button","name":"Button"},"comment":"\nA standard push-button widget which will automatically submit its enclosing\n{@link FormPanel} if any.\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-SubmitButton</dt>\n<dd>the outer element</dd>\n</dl>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/submit_button.dart","name":"SubmitButton","id":"SubmitButton","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Button","name":"Button"},"isStatic":true,"comment":"\nCreates a SubmitButton widget that wraps an existing &lt;button&gt;\nelement.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"wrap","id":"wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"28","kind":"method"},{"comment":"\nCreates a button with the given HTML caption and click listener.\n\n@param html the HTML caption\n@param handler the click handler\n","name":"SubmitButton","id":"SubmitButton2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"48","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be a &lt;button&gt; element with type submit.\n\n@param element the element to be used\n","name":"SubmitButton.fromElement","id":"SubmitButton.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"59","kind":"constructor"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/Button","name":"Button"},"comment":"\nA standard push-button widget which will automatically reset its enclosing\n{@link FormPanel} if any.\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-ResetButton</dt>\n<dd>the outer element</dd>\n</dl>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/reset_button.dart","name":"ResetButton","id":"ResetButton","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Button","name":"Button"},"isStatic":true,"comment":"\nCreates a ResetButton widget that wraps an existing &lt;button&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"wrap","id":"wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"27","kind":"method"},{"comment":"\nCreates a button with the given HTML caption and click listener.\n\n@param html the HTML caption\n@param handler the click handler\n","name":"ResetButton","id":"ResetButton2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"46","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be a &lt;button&gt; element with type reset.\n\n@param element the element to be used\n","name":"ResetButton.fromElement","id":"ResetButton.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"57","kind":"constructor"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/ButtonBase","name":"ButtonBase"},"comment":"\nA standard push-button widget.\n\n<p>\n<img class='gallery' src='doc-files/Button.png'/>\n</p>\n\n<h3>CSS Style Rules</h3>\n<dl>\n<dt>.gwt-Button</dt>\n<dd>the outer element</dd>\n</dl>\n\n<p>\n<h3>Example</h3>\n{@example com.google.gwt.examples.ButtonExample}\n</p>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/button.dart","name":"Button","id":"Button","children":[{"returnType":{"refId":"dart.dom.html/ButtonElement","name":"ButtonElement"},"comment":"\nGet the underlying button element.\n\n@return the {@link ButtonElement}\n","name":"getButtonElement","id":"getButtonElement0()","line":"79","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Button","name":"Button"},"comment":"\nCreates a Button widget that wraps an existing &lt;button&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Button.wrap","id":"Button.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"35","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be a &lt;button&gt; element.\n\n@param element the element to be used\n","name":"Button.fromElement","id":"Button.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"54","kind":"constructor"},{"comment":"\nCreates a button with the given HTML caption and click listener.\n\n@param html the HTML caption\n@param handler the click handler\n","name":"Button","id":"Button2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"isOptional":true,"defaultValue":"null","name":"handler","id":"handler","kind":"param"}],"line":"64","kind":"constructor"}],"line":"24","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasSafeHtml","name":"HasSafeHtml"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"}],"superclass":{"refId":"dart_web_toolkit_ui/FocusWidget","name":"FocusWidget"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/button_base.dart","name":"ButtonBase","id":"ButtonBase","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets this object's contents via HTML. Use care when setting an object's\nHTML; it is an easy way to expose script-based security problems. Consider\nusing {@link #setText(String)} whenever possible.\n\n@param html the object's new HTML\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nGet the element's text.\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"52","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets this object's contents as HTML.\n\n@return the object's HTML\n","name":"html","id":"html","line":"24","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nSets the element's text.\n","name":"text","id":"text","line":"47","kind":"property"},{"comment":"\nCreates a new ButtonBase that wraps the given browser element.\n\n@param elem the DOM element to be wrapped\n","name":"ButtonBase","id":"ButtonBase1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"13","kind":"constructor"}],"line":"6","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/attach_detach_exception.dart","name":"DetachExceptionCommand","id":"DetachExceptionCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nThe singleton command used to attach widgets.\n","name":"execute","id":"execute1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"130","kind":"method"}],"line":"125","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/attach_detach_exception.dart","name":"AttachExceptionCommand","id":"AttachExceptionCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nThe singleton command used to attach widgets.\n","name":"execute","id":"execute1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"120","kind":"method"}],"line":"115","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe command to execute when iterating through child widgets.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/attach_detach_exception.dart","name":"AttachCommand","id":"AttachCommand","children":[{"returnType":{"refId":"void","name":"void"},"name":"execute","id":"execute1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"112","kind":"method"}],"line":"110","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_event/UmbrellaException","name":"UmbrellaException"},"isThrowable":true,"comment":"\nAn exception that is thrown when the panel fails to attach or detach its\nchildren.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/attach_detach_exception.dart","name":"AttachDetachException","id":"AttachDetachException","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\n<p>\nIterator through all child widgets, trying to perform the specified\n{@link Command} for each. All widgets will be visited even if the Command\nthrows an exception. If one or more exceptions occur, they will be combined\nand thrown as a single {@link AttachDetachException}.\n</p>\n<p>\nUse this method when attaching or detaching a widget with children to\nensure that the logical and physical state of all children match the\nlogical and physical state of the parent.\n</p>\n\n@param hasWidgets children to iterate\n@param c the {@link Command} to try on all children\n","name":"tryCommand","id":"tryCommand2()","children":[{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"hasWidgets","id":"hasWidgets","kind":"param"},{"ref":{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"},"name":"c","id":"c","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\n<p>\nIterator through all child widgets, trying to perform the specified\n{@link Command} for each. All widgets will be visited even if the Command\nthrows an exception. If one or more exceptions occur, they will be combined\nand thrown as a single {@link AttachDetachException}.\n</p>\n<p>\nUse this method when attaching or detaching a widget with children to\nensure that the logical and physical state of all children match the\nlogical and physical state of the parent.\n</p>\n\n@param c the {@link Command} to try on all children\n@param widgets children to iterate, null children are ignored\n","name":"tryCommand2","id":"tryCommand22()","children":[{"ref":{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"},"name":"c","id":"c","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"}],"name":"List"},"name":"widgets","id":"widgets","kind":"param"}],"line":"76","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/AttachExceptionCommand","name":"AttachExceptionCommand"},"isStatic":true,"comment":"\nThe singleton command used to attach widgets.\n","name":"attachCommand","id":"attachCommand","line":"15","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/DetachExceptionCommand","name":"DetachExceptionCommand"},"isStatic":true,"comment":"\nThe singleton command used to detach widgets.\n","name":"detachCommand","id":"detachCommand","line":"20","kind":"variable"},{"comment":"\nConstruct a new {@link AttachDetachException}.\n\n@param causes the causes of the exception\n","name":"AttachDetachException","id":"AttachDetachException1()","children":[{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Exception","name":"Exception"}],"name":"Set"},"name":"causes","id":"causes","kind":"param"}],"line":"104","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/HasWidgetsForIsWidget","name":"HasWidgetsForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nAbstract base class for all panels, which are widgets that can contain other\nwidgets.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/panel.dart","name":"Panel","id":"Panel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget.\n\n<p>\n<b>How to Override this Method</b>\n</p>\n<p>\nThere are several important things that must take place in the correct\norder to properly add or insert a Widget to a Panel. Not all of these steps\nwill be relevant to every Panel, but all of the steps must be considered.\n<ol>\n<li><b>Validate:</b> Perform any sanity checks to ensure the Panel can\naccept a new Widget. Examples: checking for a valid index on insertion;\nchecking that the Panel is not full if there is a max capacity.</li>\n<li><b>Adjust for Reinsertion:</b> Some Panels need to handle the case\nwhere the Widget is already a child of this Panel. Example: when performing\na reinsert, the index might need to be adjusted to account for the Widget's\nremoval. See {@link ComplexPanel#adjustIndex(Widget, int)}.</li>\n<li><b>Detach Child:</b> Remove the Widget from its existing parent, if\nany. Most Panels will simply call {@link Widget#removeFromParent()} on the\nWidget.</li>\n<li><b>Logical Attach:</b> Any state variables of the Panel should be\nupdated to reflect the addition of the new Widget. Example: the Widget is\nadded to the Panel's {@link WidgetCollection} at the appropriate index.</li>\n<li><b>Physical Attach:</b> The Widget's Element must be physically\nattached to the Panel's Element, either directly or indirectly.</li>\n<li><b>Adopt:</b> Call {@link #adopt(Widget)} to finalize the add as the\nvery last step.</li>\n</ol>\n</p>\n\n@param child the widget to be added\n@throws UnsupportedOperationException if this method is not supported (most\n          often this means that a specific overload must be called)\n@see HasWidgets#add(Widget)\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all child widgets.\n","name":"clear","id":"clear0()","line":"58","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves a child widget.\n\n<p>\n<b>How to Override this Method</b>\n</p>\n<p>\nThere are several important things that must take place in the correct\norder to properly remove a Widget from a Panel. Not all of these steps will\nbe relevant to every Panel, but all of the steps must be considered.\n<ol>\n<li><b>Validate:</b> Make sure this Panel is actually the parent of the\nchild Widget; return <code>false</code> if it is not.</li>\n<li><b>Orphan:</b> Call {@link #orphan(Widget)} first while the child\nWidget is still attached.</li>\n<li><b>Physical Detach:</b> Adjust the DOM to account for the removal of\nthe child Widget. The Widget's Element must be physically removed from the\nDOM.</li>\n<li><b>Logical Detach:</b> Update the Panel's state variables to reflect\nthe removal of the child Widget. Example: the Widget is removed from the\nPanel's {@link WidgetCollection}.</li>\n</ol>\n</p>\n\n@param child the widget to be removed\n@return <code>true</code> if the child was present\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"removeIsWidget","id":"removeIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFinalize the attachment of a Widget to this Panel. This method is the\n<b>last</b> step in adding or inserting a Widget into a Panel, and should\nbe called after physical attachment in the DOM is complete. This Panel\nbecomes the parent of the child Widget, and the child will now fire its\n{@link Widget#onAttach()} event if this Panel is currently attached.\n\n@param child the widget to be adopted\n@see #add(Widget)\n","name":"adopt","id":"adopt1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doAttachChildren","id":"doAttachChildren0()","line":"127","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doDetachChildren","id":"doDetachChildren0()","line":"131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method must be called as part of the remove method of any Panel. It\nensures that the Widget's parent is cleared. This method should be called\nafter verifying that the child Widget is an existing child of the Panel,\nbut before physically removing the child Widget from the DOM. The child\nwill now fire its {@link Widget#onDetach()} event if this Panel is\ncurrently attached.\n</p>\n<p>\nCalls to {@link #orphan(Widget)} should be wrapped in a try/finally block\nto ensure that the widget is physically detached even if orphan throws an\nexception.\n</p>\n\n@param child the widget to be disowned\n@see #add(Widget)\n","name":"orphan","id":"orphan1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"153","kind":"method"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/IndexedPanel","name":"IndexedPanel"},"comment":"\nExtends this interface with convenience methods to handle {@link IsWidget}.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/indexed_panel.dart","name":"IndexedPanelForIsWidget","id":"IndexedPanelForIsWidget","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetIndexIsWidget","id":"getWidgetIndexIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"51","kind":"method"}],"line":"49","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nImplemented by panels that impose an explicit ordering on their children.\n\n@see InsertPanel\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/indexed_panel.dart","name":"IndexedPanel","id":"IndexedPanel","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the child widget at the specified index.\n\n@param index the child widget's index\n@return the child widget\n","name":"getWidget","id":"getWidget1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of child widgets in this panel.\n\n@return the number of children\n","name":"getWidgetCount","id":"getWidgetCount0()","line":"26","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the specified child widget.\n\n@param child the widget to be found\n@return the widget's index, or <code>-1</code> if it is not a child of this\n        panel\n","name":"getWidgetIndex","id":"getWidgetIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves the widget at the specified index.\n\n@param index the index of the widget to be removed\n@return <code>false</code> if the widget is not present\n","name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"43","kind":"method"}],"line":"11","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/IndexedPanelForIsWidget","name":"IndexedPanelForIsWidget"},{"refId":"dart_web_toolkit_ui/InsertPanel","name":"InsertPanel"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtends this interface with convenience methods to handle [IsWidget].\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/insert_panel.dart","name":"InsertPanelForIsWidget","id":"InsertPanelForIsWidget","children":[{"returnType":{"refId":"void","name":"void"},"name":"addIsWidget","id":"addIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"36","kind":"method"}],"line":"32","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart_web_toolkit_ui/IndexedPanel","name":"IndexedPanel"},"comment":"\nImplemented by [IndexedPanel]s that also allow insertions.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/insert_panel.dart","name":"InsertPanel","id":"InsertPanel","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a child widget to this panel.\n\n@param w the child widget to be added\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a child widget before the specified index. If the widget is already\na child of this panel, it will be moved to the specified index.\n\n@param w the child widget to be inserted\n@param beforeIndex the index before which it will be inserted\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"26","kind":"method"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/complex_panel.dart","name":"OrpahExceptionCommand","id":"OrpahExceptionCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nThe singleton command used to attach widgets.\n","name":"execute","id":"execute1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"291","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"name":"_panel","isPrivate":true,"id":"_panel","line":"284","kind":"variable"},{"name":"OrpahExceptionCommand","id":"OrpahExceptionCommand1()","children":[{"initializedField":{"refId":"dart_web_toolkit_ui/OrpahExceptionCommand/_panel","name":"_panel"},"ref":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"name":"_panel","isPrivate":true,"id":"_panel","kind":"param"}],"line":"286","kind":"constructor"}],"line":"282","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_ui/IndexedPanelForIsWidget","name":"IndexedPanelForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/Panel","name":"Panel"},"comment":"\nAbstract base class for panels that can contain multiple child widgets.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/complex_panel.dart","name":"ComplexPanel","id":"ComplexPanel","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves a child widget.\n\n<p>\n<b>How to Override this Method</b>\n</p>\n<p>\nThere are several important things that must take place in the correct\norder to properly remove a Widget from a Panel. Not all of these steps will\nbe relevant to every Panel, but all of the steps must be considered.\n<ol>\n<li><b>Validate:</b> Make sure this Panel is actually the parent of the\nchild Widget; return <code>false</code> if it is not.</li>\n<li><b>Orphan:</b> Call {@link #orphan(Widget)} first while the child\nWidget is still attached.</li>\n<li><b>Physical Detach:</b> Adjust the DOM to account for the removal of\nthe child Widget. The Widget's Element must be physically removed from the\nDOM.</li>\n<li><b>Logical Detach:</b> Update the Panel's state variables to reflect\nthe removal of the child Widget. Example: the Widget is removed from the\nPanel's {@link WidgetCollection}.</li>\n</ol>\n</p>\n\n@param child the widget to be removed\n@return <code>true</code> if the child was present\n\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Iterator"},"name":"iterator","id":"iterator0()","line":"77","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets the child widget at the specified index.\n\n@param index the child widget's index\n@return the child widget\n","name":"getWidget","id":"getWidget1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the number of child widgets in this panel.\n\n@return the number of children\n","name":"getWidgetCount","id":"getWidgetCount0()","line":"99","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the index of the specified child widget.\n\n@param child the widget to be found\n@return the widget's index, or <code>-1</code> if it is not a child of this\n        panel\n","name":"getWidgetIndex","id":"getWidgetIndex1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves the widget at the specified index.\n\n@param index the index of the widget to be removed\n@return <code>false</code> if the widget is not present\n","name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"getWidgetIndexIsWidget","id":"getWidgetIndexIsWidget1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"child","id":"child","kind":"param"}],"line":"128","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a new child widget to the panel, attaching its Element to the\nspecified container Element.\n\n@param child the child widget to be added\n@param container the element within which the child will be contained\n","name":"addWidget","id":"addWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"container","id":"container","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nAdjusts beforeIndex to account for the possibility that the given widget is\nalready a child of this panel.\n\n@param child the widget that might be an existing child\n@param beforeIndex the index at which it will be added to this panel\n@return the modified index\n","name":"adjustIndex","id":"adjustIndex2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that <code>index</code> is in the range [0, getWidgetCount()), which\nis the valid range on accessible indexes.\n\n@param index the index being accessed\n","name":"checkIndexBoundsForAccess","id":"checkIndexBoundsForAccess1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nChecks that <code>index</code> is in the range [0, getWidgetCount()], which\nis the valid range for indexes on an insertion.\n\n@param index the index where insertion will occur\n","name":"checkIndexBoundsForInsertion","id":"checkIndexBoundsForInsertion1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/WidgetCollection","name":"WidgetCollection"},"comment":"\nGets the list of children contained in this panel.\n\n@return a collection of child widgets\n","name":"getChildren","id":"getChildren0()","line":"211","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInsert a new child Widget into this Panel at a specified index, attaching\nits Element to the specified container Element. The child Element will\neither be attached to the container at the same index, or simply appended\nto the container, depending on the value of <code>domInsert</code>.\n\n@param child the child Widget to be added\n@param container the Element within which <code>child</code> will be\n         contained\n@param beforeIndex the index before which <code>child</code> will be\n         inserted\n@param domInsert if <code>true</code>, insert <code>child</code> into\n         <code>container</code> at <code>beforeIndex</code>; otherwise\n         append <code>child</code> to the end of <code>container</code>.\n","name":"insert","id":"insert4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"container","id":"container","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"domInsert","id":"domInsert","line":"231","kind":"param"}],"line":"230","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"doLogicalClear","id":"doLogicalClear0()","line":"265","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/WidgetCollection","name":"WidgetCollection"},"name":"_children","isPrivate":true,"id":"_children","line":"11","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"},"comment":"\nThe command used to orphan children.\n","name":"_orphanCommand","isPrivate":true,"id":"_orphanCommand","line":"16","kind":"variable"},{"name":"ComplexPanel","id":"ComplexPanel0()","line":"18","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/InsertPanelForIsWidget","name":"InsertPanelForIsWidget"}],"superclass":{"refId":"dart_web_toolkit_ui/ComplexPanel","name":"ComplexPanel"},"comment":"\nAn absolute panel positions all of its children absolutely, allowing them to\noverlap.\n\n<p>\nNote that this panel will not automatically resize itself to allow enough\nroom for its absolutely-positioned children. It must be explicitly sized in\norder to make room for them.\n</p>\n\n<p>\nOnce a widget has been added to an absolute panel, the panel effectively\n\"owns\" the positioning of the widget. Any existing positioning attributes on\nthe widget may be modified by the panel.\n</p>\n\n<h3>Use in UiBinder Templates</h3>\n<p>\nAbsolutePanel elements in {@link com.google.gwt.uibinder.client.UiBinder\nUiBinder} templates lay out their children with absolute position, using\n&lt;g:at> elements. Each at element should have <code>left</code> and\n<code>top</code> attributes in pixels. They also can contain widget children\ndirectly, with no position specified.\n\n<p>\nFor example:\n\n<pre>\n&lt;g:AbsolutePanel>\n  &lt;g:at left='10' top='20'>\n    &lt;g:Label>Lorem ipsum...&lt;/g:Label>\n  &lt;/g:at>\n  &lt;g:Label>...dolores est.&lt;/g:Label>\n&lt;/g:AbsolutePanel>\n</pre>\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/absolute_panel.dart","name":"AbsolutePanel","id":"AbsolutePanel","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nChanges a DOM element's positioning to static.\n\n@param elem the DOM element\n","name":"_changeToStaticPositioning","isPrivate":true,"id":"_changeToStaticPositioning1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a widget to the panel at the specified position. Setting a position of\n<code>(-1, -1)</code> will cause the child widget to be positioned\nstatically.\n\n@param w the widget to be added\n@param left the widget's left position\n@param top the widget's top position\n","name":"addInPosition","id":"addInPosition3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"87","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverloaded version for IsWidget.\n\n@see #add(Widget,int,int)\n","name":"addIsWidgetInPosition","id":"addIsWidgetInPosition3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the position of the left outer border edge of the widget relative to\nthe left outer border edge of the panel.\n\n@param w the widget whose position is to be retrieved\n@return the widget's left position\n","name":"getWidgetLeft","id":"getWidgetLeft1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the position of the top outer border edge of the widget relative to\nthe top outer border edge of the panel.\n\n@param w the widget whose position is to be retrieved\n@return the widget's top position\n","name":"getWidgetTop","id":"getWidgetTop1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"127","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAt","id":"insertAt2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nConvenience overload to allow {@link IsWidget} to be used directly.\n","name":"insertIsWidget","id":"insertIsWidget2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"139","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts a child widget at the specified position before the specified\nindex. Setting a position of <code>(-1, -1)</code> will cause the child\nwidget to be positioned statically. If the widget is already a child of\nthis panel, it will be moved to the specified index.\n\n@param w the child widget to be inserted\n@param left the widget's left position\n@param top the widget's top position\n@param beforeIndex the index before which it will be inserted\n@throws IndexOutOfBoundsException if <code>beforeIndex</code> is out of\n          range\n","name":"insertPosition","id":"insertPosition4()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"beforeIndex","id":"beforeIndex","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nOverrides {@link ComplexPanel#remove(Widget)} to change the removed\nWidget's element back to static positioning.This is done so that any\npositioning changes to the widget that were done by the panel are undone\nwhen the widget is disowned from the panel.\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"173","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the position of the specified child widget. Setting a position of\n<code>(-1, -1)</code> will cause the child widget to be positioned\nstatically.\n\n@param w the child widget to be positioned\n@param left the widget's left position\n@param top the widget's top position\n","name":"setWidgetPosition","id":"setWidgetPosition3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setWidgetPositionImpl","id":"setWidgetPositionImpl3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_checkWidgetParent","isPrivate":true,"id":"_checkWidgetParent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nVerify that the given widget is not statically positioned on the page\n(relative to the document window), unless the widget is in fact directly\nattached to the document BODY. Note that the current use of this method is\nnot comprehensive, since we can only verify the offsetParent if both parent\n(AbsolutePanel) and child widget are both visible and attached to the DOM\nwhen this test is executed.\n\n@param child the widget whose position and placement should be tested\n","name":"_verifyPositionNotStatic","isPrivate":true,"id":"_verifyPositionNotStatic1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"child","id":"child","kind":"param"}],"line":"223","kind":"method"},{"comment":"\nCreates an empty absolute panel or with the given element.\nThis is protected so that it can be used by [RootPanel] or a subclass that\nwants to substitute another element.\nThe element is presumed to be a <div>.\n","name":"AbsolutePanel","id":"AbsolutePanel1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"name":"elem","id":"elem","kind":"param"}],"line":"61","kind":"constructor"}],"line":"42","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/root_panel.dart","name":"MaybeDetachExceptionCommand","id":"MaybeDetachExceptionCommand","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nThe singleton command used to detach widgets.\n","name":"execute","id":"execute1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"}],"line":"236","kind":"method"}],"line":"231","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/RootPanel","name":"RootPanel"},"comment":"\nA default RootPanel implementation that wraps the body element.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/root_panel.dart","name":"DefaultRootPanel","id":"DefaultRootPanel","children":[{"returnType":{"refId":"void","name":"void"},"name":"setWidgetPositionImpl","id":"setWidgetPositionImpl3()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"w","id":"w","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"left","id":"left","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"top","id":"top","kind":"param"}],"line":"221","kind":"method"},{"name":"DefaultRootPanel","id":"DefaultRootPanel0()","line":"219","kind":"constructor"}],"line":"217","kind":"class"},{"superclass":{"refId":"dart_web_toolkit_ui/AbsolutePanel","name":"AbsolutePanel"},"comment":"\nThe panel to which all other widgets must ultimately be added. RootPanels are\nnever created directly. Rather, they are accessed via [RootPanel#get()].\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/root_panel.dart","name":"RootPanel","id":"RootPanel","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nMarks a widget as detached and removes it from the detach list.\n\nIf an element belonging to a widget originally passed to\n[#detachOnWindowClose(Widget)] has been removed from the document,\ncalling this method will cause it to be marked as detached immediately.\nFailure to do so will keep the widget from being garbage collected until\nthe page is unloaded.\n\nThis method may only be called per widget, and only for widgets that were\noriginally passed to [#detachOnWindowClose(Widget)].\n","name":"detachNow","id":"detachNow1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nAdds a widget to the detach list. This is the list of widgets to be\ndetached when the page unloads.\n\n<p>\nThis method must be called for all widgets that have no parent widgets.\nThese are most commonly {@link RootPanel RootPanels}, but can also be any\nwidget used to wrap an existing element on the page. Failing to do this may\ncause these widgets to leak memory. This method is called automatically by\nwidgets' wrap methods (e.g.\n{@link Button#wrap(com.google.gwt.dom.client.Element)}).\n</p>\n\n<p>\nThis method may <em>not</em> be called on any widget whose element is\ncontained in another widget. This is to ensure that the DOM and Widget\nhierarchies cannot get into an inconsistent state.\n</p>\n\n@param widget the widget to be cleaned up when the page closes\n@see #detachNow(Widget)\n","name":"detachOnWindowClose","id":"detachOnWindowClose1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/RootPanel","name":"RootPanel"},"isStatic":true,"comment":"\nGets the root panel associated with a given browser element. For this to\nwork, the HTML document into which the application is loaded must have\nspecified an element with the given id.\n\n@param id the id of the element to be wrapped with a root panel (\n         <code>null</code> specifies the default instance, which wraps the\n         &lt;body&gt; element)\n@return the root panel, or <code>null</code> if no such element was found\n","name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"id","id":"id","kind":"param"}],"line":"82","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nConvenience method for getting the document's body element.\n\n@return the document's body element\n","name":"getBodyElement","id":"getBodyElement0()","line":"140","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nDetermines whether the given widget is in the detach list.\n\n@param widget the widget to be checked\n@return <code>true</code> if the widget is in the detach list\n","name":"isInDetachList","id":"isInDetachList1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"widget","id":"widget","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"isStatic":true,"comment":"\nConvenience method for getting the document's root (<html>) element.\n\n@return the document's root element\n","name":"getRootElement","id":"getRootElement0()","line":"159","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"_isElementChildOfWidget","isPrivate":true,"id":"_isElementChildOfWidget1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"detachWidgets","id":"detachWidgets0()","line":"185","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"_hookWindowClosing","isPrivate":true,"id":"_hookWindowClosing0()","line":"202","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/AttachCommand","name":"AttachCommand"},"isStatic":true,"comment":"\nThe singleton command used to detach widgets.\n","name":"_maybeDetachCommand","isPrivate":true,"id":"_maybeDetachCommand","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart_web_toolkit_ui/RootPanel","name":"RootPanel"}],"name":"Map"},"isStatic":true,"name":"_rootPanels","isPrivate":true,"id":"_rootPanels","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/Set","arguments":[{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"}],"name":"Set"},"isStatic":true,"name":"_widgetsToDetach","isPrivate":true,"id":"_widgetsToDetach","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"DEFAULT_ID","id":"DEFAULT_ID","line":"19","kind":"variable"},{"name":"RootPanel","id":"RootPanel1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"209","kind":"constructor"}],"line":"10","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_i18n/HasDirectionalSafeHtml","name":"HasDirectionalSafeHtml"},{"refId":"dart_web_toolkit_event/HasDirectionEstimator","name":"HasDirectionEstimator"},{"refId":"dart_web_toolkit_event/HasWordWrap","name":"HasWordWrap"},{"refId":"dart_web_toolkit_event/HasHtml","name":"HasHtml"},{"refId":"dart_web_toolkit_event/HasName","name":"HasName"},{"refId":"dart_web_toolkit_i18n/HasHorizontalAlignment","name":"HasHorizontalAlignment"}],"superclass":{"refId":"dart_web_toolkit_ui/FocusWidget","name":"FocusWidget"},"comment":"\nA widget that represents a simple [:a:] element.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/anchor.dart","name":"Anchor","id":"Anchor","children":[{"returnType":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"getDirectionEstimator","id":"getDirectionEstimator0()","line":"72","kind":"method"},{"returnType":{"refId":"dart.dom.html/AnchorElement","name":"AnchorElement"},"comment":"\nReturn [AnchorElement] class casted element.\n","name":"getAnchorElement","id":"getAnchorElement0()","line":"79","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"getHorizontalAlignment","id":"getHorizontalAlignment0()","line":"87","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setHorizontalAlignment","id":"setHorizontalAlignment1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"align","id":"align","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setTabIndex","id":"setTabIndex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the anchor's href (the url to which it links).\n","name":"href=","id":"href=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the anchor's name.\n","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the anchor's target.\n","name":"target=","id":"target=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the anchor's wordWrap.\n","name":"wordWrap=","id":"wordWrap=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nGet the anchor's html.\n","name":"html=","id":"html=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nGet the anchor's text.\n","name":"text=","id":"text=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setText","id":"setText2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"text","id":"text","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"192","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"getTextDirection","id":"getTextDirection0()","line":"196","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the anchor's text.\n\n\nGet the anchor's text.\n","name":"setHtml","id":"setHtml2()","children":[{"ref":{"refId":"dart_web_toolkit_util/SafeHtml","name":"SafeHtml"},"name":"html","id":"html","kind":"param"},{"ref":{"refId":"dart_web_toolkit_i18n/Direction","name":"Direction"},"name":"dir","id":"dir","kind":"param"}],"line":"220","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nSee note at {@link #setDirectionEstimator(DirectionEstimator)}.\n","name":"enableDirectionEstimator","id":"enableDirectionEstimator1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n{@inheritDoc}\n<p>\nNote: DirectionEstimator should be set before the widget has any content;\nit's highly recommended to set it using a constructor. Reason: if the\nwidget already has non-empty content, this will update its direction\naccording to the new estimator's result. This may cause flicker, and thus\nshould be avoided.\n","name":"setDirectionEstimator","id":"setDirectionEstimator1()","children":[{"ref":{"refId":"dart_web_toolkit_i18n/DirectionEstimator","name":"DirectionEstimator"},"name":"directionEstimator","id":"directionEstimator","kind":"param"}],"line":"242","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAccessKey","id":"setAccessKey1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setFocus","id":"setFocus1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"250","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"104","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the anchor's href.\n","name":"href","id":"href","line":"125","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the anchor's name.\n","name":"name","id":"name","line":"138","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGet the anchor's target.\n","name":"target","id":"target","line":"151","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGet the anchor's wordWrap.\n","name":"wordWrap","id":"wordWrap","line":"164","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nSets the anchor's html.\n","name":"html","id":"html","line":"169","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nSets the anchor's text.\n","name":"text","id":"text","line":"182","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nThe default HREF is a no-op javascript statement. We need an href to ensure\nthat the browser renders the anchor with native styles, such as underline\nand font color.\n","name":"DEFAULT_HREF","id":"DEFAULT_HREF","line":"18","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/HorizontalAlignmentConstant","name":"HorizontalAlignmentConstant"},"name":"_horzAlign","isPrivate":true,"id":"_horzAlign","line":"20","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_i18n/DirectionalTextHelper","name":"DirectionalTextHelper"},"name":"_directionalTextHelper","isPrivate":true,"id":"_directionalTextHelper","line":"22","kind":"variable"},{"returnType":{"refId":"dart_web_toolkit_ui/Anchor","name":"Anchor"},"comment":"\nCreates an Anchor widget that wraps an existing &lt;a&gt; element.\n\nThis element must already be attached to the document. If the element is\nremoved from the document, you must call\n{@link RootPanel#detachNow(Widget)}.\n\n@param element the element to be wrapped\n","name":"Anchor.wrap","id":"Anchor.wrap1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"element","id":"element","kind":"param"}],"line":"33","kind":"constructor"},{"comment":"\nThis constructor may be used by subclasses to explicitly use an existing\nelement. This element must be an &lt;a&gt; element.\n\n@param element the element to be used\n","name":"Anchor.fromElement","id":"Anchor.fromElement1()","children":[{"ref":{"refId":"dart.dom.html/AnchorElement","name":"AnchorElement"},"name":"element","id":"element","kind":"param"}],"line":"52","kind":"constructor"},{"comment":"\nCreates an empty anchor.\n\nThe anchor's href is optionally set to <code>javascript:;</code>, based on\nthe expectation that listeners will be added to the anchor.\n","name":"Anchor","id":"Anchor1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"useDefaultHref","id":"useDefaultHref","kind":"param"}],"line":"63","kind":"constructor"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface for creating and manipulating focusable elements\nthat aren't naturally focusable in all browsers, such as DIVs.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/impl/focus_impl.dart","name":"FocusImpl","id":"FocusImpl","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nRemove focus from [Element].\n","name":"blur","id":"blur1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nCreate focusable element.\n","name":"createFocusable","id":"createFocusable0()","line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet focus on [Element].\n","name":"focus","id":"focus1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturn [Element] tab index.\n","name":"getTabIndex","id":"getTabIndex1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet [Element] tab [index].\n","name":"setTabIndex","id":"setTabIndex2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet Access Key for keyboard navigation.\n","name":"setAccessKey","id":"setAccessKey2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isStatic":true,"comment":"\nReturn instance of [FocusImpl] depends on broswer.\n","name":"getFocusImplForPanel","id":"getFocusImplForPanel0()","line":"60","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isStatic":true,"comment":"\nReturns the focus implementation class for manipulating focusable elements\nthat are naturally focusable in all browsers, such as text boxes.\n","name":"getFocusImplForWidget","id":"getFocusImplForWidget0()","line":"71","kind":"method"},{"ref":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isStatic":true,"comment":"\nStatic instance of FocusImpl.\n","name":"implPanel","id":"implPanel","line":"45","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isStatic":true,"comment":"\nThis instance may not be a {@link FocusImplStandard}, because that special\ncase is only needed for things that aren't naturally focusable on some\nbrowsers, such as DIVs. This exact class works for truly focusable widgets\non those browsers.\n\nThe compiler will optimize out the conditional.\n","name":"implWidget","id":"implWidget","line":"55","kind":"variable"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasAllTouchHandlers","name":"HasAllTouchHandlers"},{"refId":"dart_web_toolkit_event/HasAllMouseHandlers","name":"HasAllMouseHandlers"},{"refId":"dart_web_toolkit_event/HasAllKeyHandlers","name":"HasAllKeyHandlers"},{"refId":"dart_web_toolkit_event/HasAllGestureHandlers","name":"HasAllGestureHandlers"},{"refId":"dart_web_toolkit_event/HasAllFocusHandlers","name":"HasAllFocusHandlers"},{"refId":"dart_web_toolkit_event/HasAllDragAndDropHandlers","name":"HasAllDragAndDropHandlers"},{"refId":"dart_web_toolkit_event/HasEnabled","name":"HasEnabled"},{"refId":"dart_web_toolkit_event/Focusable","name":"Focusable"},{"refId":"dart_web_toolkit_event/HasDoubleClickHandlers","name":"HasDoubleClickHandlers"},{"refId":"dart_web_toolkit_event/HasClickHandlers","name":"HasClickHandlers"}],"superclass":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nAbstract base class for most widgets that can receive focus.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/focus_widget.dart","name":"FocusWidget","id":"FocusWidget","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this widget is enabled.\n\n@param enabled <code>true</code> to enable the widget, <code>false</code>\n         to disable it\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's position in the tab index. If more than one widget has\nthe same tab index, each such widget will receive focus in an arbitrary\norder. Setting the tab index to <code>-1</code> will cause this widget to\nbe removed from the tab order.\n\n@param index the widget's tab index\n","name":"tabIndex=","id":"tabIndex=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nExplicitly focus/unfocus this widget. Only one widget can have focus at a\ntime, and the widget that does will receive all keyboard events.\n\n@param focused whether this widget should take focus or release it\n","name":"focus=","id":"focus=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"focused","id":"focused","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the widget's 'access key'. This key is used (in conjunction with a\nbrowser-specific modifier key) to automatically focus the widget.\n\n@param key the widget's access key\n","name":"accessKey=","id":"accessKey=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"}],"line":"87","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addBlurHandler","id":"addBlurHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/BlurHandler","name":"BlurHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"95","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a {@link ClickEvent} handler.\n\n@param handler the click handler\n@return {@link HandlerRegistration} used to remove this handler\n","name":"addClickHandler","id":"addClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/ClickHandler","name":"ClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDoubleClickHandler","id":"addDoubleClickHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DoubleClickHandler","name":"DoubleClickHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEndHandler","id":"addDragEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEndHandler","name":"DragEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragEnterHandler","id":"addDragEnterHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragEnterHandler","name":"DragEnterHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragHandler","id":"addDragHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragHandler","name":"DragHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragLeaveHandler","id":"addDragLeaveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragLeaveHandler","name":"DragLeaveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragOverHandler","id":"addDragOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragOverHandler","name":"DragOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"133","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDragStartHandler","id":"addDragStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DragStartHandler","name":"DragStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addDropHandler","id":"addDropHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DropHandler","name":"DropHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"141","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addFocusHandler","id":"addFocusHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/FocusHandler","name":"FocusHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"145","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureChangeHandler","id":"addGestureChangeHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureChangeHandler","name":"GestureChangeHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"153","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureEndHandler","id":"addGestureEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureEndHandler","name":"GestureEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"157","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addGestureStartHandler","id":"addGestureStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/GestureStartHandler","name":"GestureStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"161","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyDownHandler","id":"addKeyDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyDownHandler","name":"KeyDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyPressHandler","id":"addKeyPressHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyPressHandler","name":"KeyPressHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addKeyUpHandler","id":"addKeyUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/KeyUpHandler","name":"KeyUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"178","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseDownHandler","id":"addMouseDownHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseDownHandler","name":"MouseDownHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseMoveHandler","id":"addMouseMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseMoveHandler","name":"MouseMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOutHandler","id":"addMouseOutHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOutHandler","name":"MouseOutHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseOverHandler","id":"addMouseOverHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseOverHandler","name":"MouseOverHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"198","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseUpHandler","id":"addMouseUpHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseUpHandler","name":"MouseUpHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"202","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addMouseWheelHandler","id":"addMouseWheelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/MouseWheelHandler","name":"MouseWheelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"206","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchCancelHandler","id":"addTouchCancelHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchCancelHandler","name":"TouchCancelHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"214","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchEndHandler","id":"addTouchEndHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchEndHandler","name":"TouchEndHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchMoveHandler","id":"addTouchMoveHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchMoveHandler","name":"TouchMoveHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"name":"addTouchStartHandler","id":"addTouchStartHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/TouchStartHandler","name":"TouchStartHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is attached to the browser's document.\nTo receive notification after a Widget has been added to the document,\noverride the {@link #onLoad} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onLoad()} or\n{@link #doAttachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onAttach()</code> to ensure that the Widget has been attached\nto its underlying Element.\n</p>\n\n@throws IllegalStateException if this widget is already attached\n@see #onLoad()\n@see #doAttachChildren()\n","name":"onAttach","id":"onAttach0()","line":"251","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGets whether this widget is enabled.\n\n@return <code>true</code> if the widget is enabled\n","name":"enabled","id":"enabled","line":"33","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the widget's position in the tab index.\n\n@return the widget's tab index\n","name":"tabIndex","id":"tabIndex","line":"53","kind":"property"},{"ref":{"refId":"dart_web_toolkit_ui/FocusImpl","name":"FocusImpl"},"isFinal":true,"isStatic":true,"name":"impl","id":"impl","line":"14","kind":"variable"},{"comment":"\nCreates a new focus widget that wraps the specified browser [element].\n","name":"FocusWidget","id":"FocusWidget1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"element","id":"element","kind":"param"}],"line":"19","kind":"constructor"}],"line":"9","kind":"class"},{"interfaces":[{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},{"refId":"dart_web_toolkit_event/HasAttachHandlers","name":"HasAttachHandlers"},{"refId":"dart_web_toolkit_event/EventListener","name":"EventListener"}],"superclass":{"refId":"dart_web_toolkit_ui/UiObject","name":"UiObject"},"comment":"\nThe base class for the majority of user-interface objects. Widget adds\nsupport for receiving events from the browser and being added directly to\n[Panel]s.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/widget.dart","name":"Widget","id":"Widget","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"isStatic":true,"comment":"\nThis convenience method makes a null-safe call to\n{@link IsWidget#asWidget()}.\n\n@return the widget aspect, or <code>null</code> if w is null\n","name":"asWidgetOrNull","id":"asWidgetOrNull1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/IsWidget","name":"IsWidget"},"name":"w","id":"w","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFired whenever a browser event is received.\n\n@param event the event received\n\nTODO\n","name":"onBrowserEvent","id":"onBrowserEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","kind":"param"}],"line":"52","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nReturns the [Widget] aspect of the receiver.\n","name":"asWidget","id":"asWidget0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires the given event to the handlers listening to the event's type.\n\nAny exceptions thrown by handlers will be bundled into a\n[UmbrellaException] and then re-thrown after all handlers have\ncompleted. An exception thrown by a handler will not prevent other handlers\nfrom executing.\n\n@param event the event\n","name":"fireEvent","id":"fireEvent1()","children":[{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"95","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds an [AttachEvent] handler.\n\n@param handler the handler\n@return the handler registration\n","name":"addAttachHandler","id":"addAttachHandler1()","children":[{"ref":{"refId":"dart_web_toolkit_event/AttachEventHandler","name":"AttachEventHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"134","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds this handler to the widget.\n\n@param <H> the type of handler to add\n@param type the event type\n@param handler the handler\n@return {@link HandlerRegistration} used to remove the handler\n","name":"addHandler","id":"addHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"name":"handler","id":"handler","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/EventType","arguments":[{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"}],"name":"EventType"},"name":"type","id":"type","kind":"param"}],"line":"146","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"comment":"\nEnsures the existence of the event bus.\n\n@return the [EventBus].\n","name":"ensureHandlers","id":"ensureHandlers0()","line":"155","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"comment":"\nReturn EventBus.\n","name":"getEventBus","id":"getEventBus0()","line":"162","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nFor <a href=\n\"http://code.google.com/p/google-web-toolkit/wiki/UnderstandingMemoryLeaks\"\n>browsers which do not leak</a>, adds a native event handler to the widget.\nNote that, unlike the\n{@link #addDomHandler(EventHandler, com.google.gwt.event.dom.client.DomEvent.Type)}\nimplementation, there is no need to attach the widget to the DOM in order\nto cause the event handlers to be attached.\n\n@param <H> the type of handler to add\n@param type the event key\n@param handler the handler\n@return {@link HandlerRegistration} used to remove the handler\n","name":"addBitlessDomHandler","id":"addBitlessDomHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"name":"handler","id":"handler","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","name":"DomEventType"},"name":"type","id":"type","kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/HandlerRegistration","name":"HandlerRegistration"},"comment":"\nAdds a native event handler to the widget and sinks the corresponding\nnative event. If you do not want to sink the native event, use the generic\naddHandler method instead.\n\n@param <H> the type of handler to add\n@param type the event key\n@param handler the handler\n@return {@link HandlerRegistration} used to remove the handler\n","name":"addDomHandler","id":"addDomHandler2()","children":[{"ref":{"refId":"dart_web_toolkit_event/EventHandler","name":"EventHandler"},"name":"handler","id":"handler","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/DomEventType","name":"DomEventType"},"name":"type","id":"type","kind":"param"}],"line":"197","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverridden to defer the call to super.sinkEvents until the first time this\nwidget is attached to the dom, as a performance enhancement. Subclasses\nwishing to customize sinkEvents can preserve this deferred sink behavior by\nputting their implementation behind a check of\n<code>isOrWasAttached()</code>:\n\n<pre>\n{@literal @}Override\npublic void sinkEvents(int eventBitsToAdd) {\n  if (isOrWasAttached()) {\n    /{@literal *} customized sink code goes here {@literal *}/\n  } else {\n    super.sinkEvents(eventBitsToAdd);\n }\n} </pre>\n","name":"sinkEvents","id":"sinkEvents1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBitsToAdd","id":"eventBitsToAdd","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"comment":"\nCreates the [SimpleEventBus] used by this Widget. You can override\nthis method to create a custom [EventBus].\n\n@return the [EventBus] you want to use.\n","name":"createEventBus","id":"createEventBus0()","line":"240","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether or not the receiver is attached to the\n{@link com.google.gwt.dom.client.Document Document}'s\n{@link com.google.gwt.dom.client.BodyElement BodyElement}.\n\n@return true if attached, false otherwise\n","name":"isAttached","id":"isAttached0()","line":"252","kind":"method"},{"returnType":{"refId":"dart.core/Object","name":"Object"},"comment":"\nGets the panel-defined layout data associated with this widget.\n\n@return the widget's layout data\n@see #setLayoutData\n","name":"getLayoutData","id":"getLayoutData0()","line":"263","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the panel-defined layout data associated with this widget. Only the\npanel that currently contains a widget should ever set this value. It\nserves as a place to store layout bookkeeping data associated with a\nwidget.\n\n@param layoutData the widget's layout data\n","name":"setLayoutData","id":"setLayoutData1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nGets this widget's parent panel.\n\n@return the widget's parent panel\n","name":"getParent","id":"getParent0()","line":"284","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this widget's parent. This method should only be called by\n{@link Panel} and {@link Composite}.\n\n@param parent the widget's new parent\n@throws IllegalStateException if <code>parent</code> is non-null and the\n          widget already has a parent\n","name":"setParent","id":"setParent1()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"parent","id":"parent","kind":"param"}],"line":"296","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves this widget from its parent widget, if one exists.\n\n<p>\nIf it has no parent, this method does nothing. If it is a \"root\" widget\n(meaning it's been added to the detach list via\n{@link RootPanel#detachOnWindowClose(Widget)}), it will be removed from the\ndetached immediately. This makes it possible for Composites and Panels to\nadopt root widgets.\n</p>\n\n@throws IllegalStateException if this widget's parent does not support\n          removal (e.g. {@link Composite})\n","name":"removeFromParent","id":"removeFromParent0()","line":"333","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nReplaces this object's browser element.\n\nThis method exists only to support a specific use-case in Image, and should\nnot be used by other classes.\n\n@param elem the object's new element\n","name":"replaceElement","id":"replaceElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"355","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFires an event on a child widget. Used to delegate the handling of an event\nfrom one widget to another.\n\n@param event the event\n@param target fire the event on the given target\n","name":"delegateEvent","id":"delegateEvent2()","children":[{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"target","id":"target","kind":"param"},{"ref":{"refId":"dart_web_toolkit_event/DwtEvent","name":"DwtEvent"},"name":"event","id":"event","kind":"param"}],"line":"380","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nIf a widget contains one or more child widgets that are not in the logical\nwidget hierarchy (the child is physically connected only on the DOM level),\nit must override this method and call {@link #onAttach()} for each of its\nchild widgets.\n\n@see #onAttach()\n","name":"doAttachChildren","id":"doAttachChildren0()","line":"395","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nIf a widget contains one or more child widgets that are not in the logical\nwidget hierarchy (the child is physically connected only on the DOM level),\nit must override this method and call {@link #onDetach()} for each of its\nchild widgets.\n\n@see #onDetach()\n","name":"doDetachChildren","id":"doDetachChildren0()","line":"406","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is attached to the browser's document.\nTo receive notification after a Widget has been added to the document,\noverride the {@link #onLoad} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onLoad()} or\n{@link #doAttachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onAttach()</code> to ensure that the Widget has been attached\nto its underlying Element.\n</p>\n\n@throws IllegalStateException if this widget is already attached\n@see #onLoad()\n@see #doAttachChildren()\n","name":"onAttach","id":"onAttach0()","line":"434","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method is called immediately after a widget becomes attached to the\nbrowser's document.\n","name":"onLoad","id":"onLoad0()","line":"461","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\n<p>\nThis method is called when a widget is detached from the browser's\ndocument. To receive notification before a Widget is removed from the\ndocument, override the {@link #onUnload} method or use {@link #addAttachHandler}.\n</p>\n<p>\nIt is strongly recommended that you override {@link #onUnload()} or\n{@link #doDetachChildren()} instead of this method to avoid inconsistencies\nbetween logical and physical attachment states.\n</p>\n<p>\nSubclasses that override this method must call\n<code>super.onDetach()</code> to ensure that the Widget has been detached\nfrom the underlying Element. Failure to do so will result in application\nmemory leaks due to circular references between DOM Elements and JavaScript\nobjects.\n</p>\n\n@throws IllegalStateException if this widget is already detached\n@see #onUnload()\n@see #doDetachChildren()\n","name":"onDetach","id":"onDetach0()","line":"487","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis method is called immediately before a widget will be detached from the\nbrowser's document.\n","name":"onUnload","id":"onUnload0()","line":"513","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nHas this widget ever been attached?\n\n@return true if this widget ever been attached to the DOM, false otherwise\n","name":"isOrWasAttached","id":"isOrWasAttached0()","line":"522","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nA set og events that should be sunk when the widget is attached to\nthe DOM. (We delay the sinking of events to improve startup performance.)\nWhen the widget is attached, this is set is empty\n\nPackage protected to allow Composite to see it.\n","name":"eventsToSink","id":"eventsToSink","line":"36","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_event/EventBus","name":"EventBus"},"name":"_eventBus","isPrivate":true,"id":"_eventBus","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_attached","isPrivate":true,"id":"_attached","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"_layoutData","isPrivate":true,"id":"_layoutData","line":"39","kind":"variable"},{"ref":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"name":"_parent","isPrivate":true,"id":"_parent","line":"40","kind":"variable"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nExtended by view interfaces that are likely to be implemented by Widgets.\nProvides access to that widget, if it exists, without compromising the\nability to provide a mock view instance in JRE unit tests.\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/is_widget.dart","name":"IsWidget","id":"IsWidget","children":[{"returnType":{"refId":"dart_web_toolkit_ui/Widget","name":"Widget"},"comment":"\nReturns the [Widget] aspect of the receiver.\n","name":"asWidget","id":"asWidget0()","line":"16","kind":"method"}],"line":"11","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart_web_toolkit_event/HasVisibility","name":"HasVisibility"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe superclass for all user-interface objects. It simply wraps a DOM element,\nand cannot receive events. Most interesting user-interface classes derive\nfrom [Widget].\n","uri":"file:///Users/akserg/Documents/dart_web_toolkit/lib/src/ui/ui_object.dart","name":"UiObject","id":"UiObject","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nReturns whether the given element is visible in a way consistent with\n{@link #setVisible(Element, boolean)}.\n\n<p>\nWarning: implemented with a heuristic. The value returned takes into\naccount only the \"display\" style, ignoring CSS and Aria roles, thus may not\naccurately reflect whether the element is actually visible in the browser.\n</p>\n","name":"isVisible","id":"isVisible1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nShows or hides the given element. Also updates the \"aria-hidden\" attribute.\n\n<p>\nWarning: implemented with a heuristic based on the \"display\" style:\nclears the \"display\" style to its default value if {@code visible} is true,\nelse forces the style to \"none\". If the \"display\" style is set to \"none\"\nvia CSS style sheets, the element remains invisible after a call to\n{@code setVisible(elem, true)}.\n</p>\n","name":"setVisible","id":"setVisible2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets whether this object is visible.\n\n@param visible <code>true</code> to show the object, <code>false</code> to\n         hide it\n","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"visible","id":"visible","kind":"param"}],"line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this object's browser element. UIObject subclasses must call this\nmethod before attempting to call any other methods, and it may only be\ncalled once.\n\n@param elem the object's element\n","name":"setElement","id":"setElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nGets this object's browser element.\n","name":"getElement","id":"getElement0()","line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nReplaces this object's browser element.\n\nThis method exists only to support a specific use-case in Image, and should\nnot be used by other classes.\n\n@param elem the object's new element\n","name":"replaceElement","id":"replaceElement1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the element's title.\n","name":"title=","id":"title=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's height. This height does not include decorations such as\nborder, margin, and padding.\n\n@param height the object's new height, in CSS units (e.g. \"10px\", \"1em\")\n","name":"setHeight","id":"setHeight1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's width. This width does not include decorations such as\nborder, margin, and padding.\n\n@param width the object's new width, in CSS units (e.g. \"10px\", \"1em\")\n","name":"setWidth","id":"setWidth1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"}],"line":"155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's size, in pixels, not including decorations such as\nborder, margin, and padding.\n\n@param width the object's new width, in pixels\n@param height the object's new height, in pixels\n","name":"setPixelSize","id":"setPixelSize2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"}],"line":"169","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's size. This size does not include decorations such as\nborder, margin, and padding.\n\n@param width the object's new width, in CSS units (e.g. \"10px\", \"1em\")\n@param height the object's new height, in CSS units (e.g. \"10px\", \"1em\")\n","name":"setSize","id":"setSize2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"height","id":"height","kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGets all of the element's style names, as a space-separated list.\n\n@param elem the element whose style is to be retrieved\n@return the objects's space-separated style names\n","name":"getElementStyleName","id":"getElementStyleName1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nClears all of the element's style names and sets it to the given style.\n\n@param elem the element whose style is to be modified\n@param styleName the new style name\n","name":"setElementStyleName","id":"setElementStyleName2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleName","id":"styleName","kind":"param"}],"line":"210","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nGets the element's primary style name.\n\n@param elem the element whose primary style name is to be retrieved\n@return the element's primary style name\n","name":"getElementStylePrimaryName","id":"getElementStylePrimaryName1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"}],"line":"221","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nSets the element's primary style name and updates all dependent style\nnames.\n\n@param elem the element whose style is to be reset\n@param style the new primary style name\n@see #setStyleName(Element, String, boolean)\n","name":"setElementStylePrimaryName","id":"setElementStylePrimaryName2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"}],"line":"243","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nThis convenience method adds or removes a style name for a given element.\nThis method is typically used to add and remove secondary style names, but\nit can be used to remove primary stylenames as well, but that is not\nrecommended. See {@link #setStyleName(String)} for a description of how\nprimary and secondary style names are used.\n\n@param elem the element whose style is to be modified\n@param style the secondary style name to be added or removed\n@param add <code>true</code> to add the given style, <code>false</code> to\n         remove it\n","name":"manageElementStyleName","id":"manageElementStyleName3()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"add","id":"add","kind":"param"}],"line":"270","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nReplaces all instances of the primary style name with newPrimaryStyleName.\n","name":"_updatePrimaryAndDependentStyleNames","isPrivate":true,"id":"_updatePrimaryAndDependentStyleNames2()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"elem","id":"elem","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"newPrimaryStyle","id":"newPrimaryStyle","line":"352","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a dependent style name by specifying the style name's suffix. The\nactual form of the style name that is added is:\n\n<pre class=\"code\">\ngetStylePrimaryName() + '-' + styleSuffix\n</pre>\n\n@param styleSuffix the suffix of the dependent style to be added.\n@see #setStylePrimaryName(String)\n@see #removeStyleDependentName(String)\n@see #setStyleDependentName(String, boolean)\n@see #addStyleName(String)\n","name":"addStyleDependentName","id":"addStyleDependentName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleSuffix","id":"styleSuffix","kind":"param"}],"line":"399","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a secondary or dependent style name to this object. A secondary style\nname is an additional style name that is, in HTML/CSS terms, included as a\nspace-separated token in the value of the CSS <code>class</code> attribute\nfor this object's root element.\n\n<p>\nThe most important use for this method is to add a special kind of\nsecondary style name called a <i>dependent style name</i>. To add a\ndependent style name, use {@link #addStyleDependentName(String)}, which\nwill prefix the 'style' argument with the result of\n{@link #k()} (followed by a '-'). For example, suppose\nthe primary style name is <code>gwt-TextBox</code>. If the following method\nis called as <code>obj.setReadOnly(true)</code>:\n</p>\n\n<pre class=\"code\">\npublic void setReadOnly(boolean readOnly) {\n  isReadOnlyMode = readOnly;\n\n  // Create a dependent style name.\n  String readOnlyStyle = \"readonly\";\n\n  if (readOnly) {\n    addStyleDependentName(readOnlyStyle);\n  } else {\n    removeStyleDependentName(readOnlyStyle);\n  }\n}</pre>\n\n<p>\nthen both of the CSS style rules below will be applied:\n</p>\n\n<pre class=\"code\">\n\n// This rule is based on the primary style name and is always active.\n.gwt-TextBox {\n  font-size: 12pt;\n}\n\n// This rule is based on a dependent style name that is only active\n// when the widget has called addStyleName(getStylePrimaryName() +\n// \"-readonly\").\n.gwt-TextBox-readonly {\n  background-color: lightgrey;\n  border: none;\n}</pre>\n\n<p>\nThe code can also be simplified with\n{@link #setStyleDependentName(String, boolean)}:\n</p>\n\n<pre class=\"code\">\npublic void setReadOnly(boolean readOnly) {\n  isReadOnlyMode = readOnly;\n  setStyleDependentName(\"readonly\", readOnly);\n}</pre>\n\n<p>\nDependent style names are powerful because they are automatically updated\nwhenever the primary style name changes. Continuing with the example above,\nif the primary style name changed due to the following call:\n</p>\n\n<pre class=\"code\">setStylePrimaryName(\"my-TextThingy\");</pre>\n\n<p>\nthen the object would be re-associated with following style rules, removing\nthose that were shown above.\n</p>\n\n<pre class=\"code\">\n.my-TextThingy {\n  font-size: 20pt;\n}\n\n.my-TextThingy-readonly {\n  background-color: red;\n  border: 2px solid yellow;\n}</pre>\n\n<p>\nSecondary style names that are not dependent style names are not\nautomatically updated when the primary style name changes.\n</p>\n\n@param style the secondary style name to be added\n@see UIObject\n@see #removeStyleName(String)\n","name":"addStyleName","id":"addStyleName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"}],"line":"495","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets all of the object's style names, as a space-separated list. If you\nwish to retrieve only the primary style name, call\n{@link #getStylePrimaryName()}.\n\n@return the objects's space-separated style names\n@see #getStylePrimaryName()\n","name":"getStyleName","id":"getStyleName0()","line":"507","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a dependent style name by specifying the style name's suffix.\n\n@param styleSuffix the suffix of the dependent style to be removed\n@see #setStylePrimaryName(Element, String)\n@see #addStyleDependentName(String)\n@see #setStyleDependentName(String, boolean)\n","name":"removeStyleDependentName","id":"removeStyleDependentName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleSuffix","id":"styleSuffix","kind":"param"}],"line":"519","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a style name. This method is typically used to remove secondary\nstyle names, but it can be used to remove primary stylenames as well. That\nuse is not recommended.\n\n@param style the secondary style name to be removed\n@see #addStyleName(String)\n@see #setStyleName(String, boolean)\n","name":"removeStyleName","id":"removeStyleName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"}],"line":"532","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds or removes a dependent style name by specifying the style name's\nsuffix. The actual form of the style name that is added is:\n\n<pre class=\"code\">\ngetStylePrimaryName() + '-' + styleSuffix\n</pre>\n\n@param styleSuffix the suffix of the dependent style to be added or removed\n@param add <code>true</code> to add the given style, <code>false</code> to\n         remove it\n@see #setStylePrimaryName(Element, String)\n@see #addStyleDependentName(String)\n@see #setStyleName(String, boolean)\n@see #removeStyleDependentName(String)\n","name":"setStyleDependentName","id":"setStyleDependentName2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"styleSuffix","id":"styleSuffix","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"add","id":"add","kind":"param"}],"line":"552","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds or removes a style name. This method is typically used to remove\nsecondary style names, but it can be used to remove primary stylenames as\nwell. That use is not recommended.\n\n@param style the style name to be added or removed\n@param add <code>true</code> to add the given style, <code>false</code> to\n         remove it\n@see #addStyleName(String)\n@see #removeStyleName(String)\n","name":"setStyleName","id":"setStyleName2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"add","id":"add","kind":"param"}],"line":"567","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nClears all of the object's style names and sets it to the given style. You\nshould normally use {@link #setStylePrimaryName(String)} unless you wish to\nexplicitly remove all existing styles.\n\n@param style the new style name\n@see #setStylePrimaryName(String)\n","name":"clearAndSetStyleName","id":"clearAndSetStyleName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"}],"line":"579","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the primary style name associated with the object.\n\n@return the object's primary style name\n@see #setStyleName(String)\n@see #addStyleName(String)\n@see #removeStyleName(String)\n","name":"getStylePrimaryName","id":"getStylePrimaryName0()","line":"591","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the object's primary style name and updates all dependent style names.\n\n@param style the new primary style name\n@see #addStyleName(String)\n@see #removeStyleName(String)\n","name":"setStylePrimaryName","id":"setStylePrimaryName1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"style","id":"style","kind":"param"}],"line":"602","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"\nTemplate method that returns the element to which style names will be\napplied. By default it returns the root element, but this method may be\noverridden to apply styles to a child element.\n\n@return the element to which style names will be applied\n","name":"getStyleElement","id":"getStyleElement0()","line":"613","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nIntended to be used to pull the value out of a CSS length. If the\nvalue is \"auto\" or \"inherit\", 0 will be returned.\n\n@param s The CSS length string to extract\n@return The leading numeric portion of <code>s</code>, or 0 if \"auto\" or\n        \"inherit\" are passed in.\n","name":"extractLengthValue","id":"extractLengthValue1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"625","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the object's absolute left position in pixels, as measured from the\nbrowser window's client area.\n\n@return the object's absolute left position\n","name":"getAbsoluteLeft","id":"getAbsoluteLeft0()","line":"645","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the object's absolute top position in pixels, as measured from the\nbrowser window's client area.\n\n@return the object's absolute top position\n","name":"getAbsoluteTop","id":"getAbsoluteTop0()","line":"655","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the object's offset height in pixels. This is the total height of the\nobject, including decorations such as border and padding, but not margin.\n\n@return the object's offset height\n","name":"getOffsetHeight","id":"getOffsetHeight0()","line":"665","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGets the object's offset width in pixels. This is the total width of the\nobject, including decorations such as border and padding, but not margin.\n\n@return the object's offset width\n","name":"getOffsetWidth","id":"getOffsetWidth0()","line":"675","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nThis method is overridden so that any object can be viewed in the debugger\nas an HTML snippet.\n\n@return a string representation of the object\n","name":"toString","id":"toString0()","line":"685","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSinks a named event. Note that only {@link Widget widgets} may actually\nreceive events, but can receive events from all objects contained within\nthem.\n\n@param eventTypeName name of the event to sink on this element\n@see com.google.gwt.user.client.Event\n","name":"sinkBitlessEvent","id":"sinkBitlessEvent1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeName","id":"eventTypeName","kind":"param"}],"line":"704","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a set of events to be sunk by this object. Note that only\n{@link Widget widgets} may actually receive events, but can receive events\nfrom all objects contained within them.\n\n@param eventBitsToAdd a bitfield representing the set of events to be added\n         to this element's event set\n@see com.google.gwt.user.client.Event\n","name":"sinkEvents","id":"sinkEvents1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBitsToAdd","id":"eventBitsToAdd","kind":"param"}],"line":"717","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves a set of events from this object's event list.\n\n@param eventBitsToRemove a bitfield representing the set of events to be\n         removed from this element's event set\n@see #sinkEvents\n@see com.google.gwt.user.client.Event\n","name":"unsinkEvents","id":"unsinkEvents1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventBitsToRemove","id":"eventBitsToRemove","kind":"param"}],"line":"729","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDetermines whether or not this object is visible. Note that this does not\nnecessarily take into account whether or not the receiver's parent is\nvisible, or even if it is attached to the\nDocument. The default implementation of this trait in UIObject is\nbased on the value of a dom element's style object's display attribute.\n\n@return <code>true</code> if the object is visible\n","name":"visible","id":"visible","line":"68","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nGets the title associated with this object. The title is the 'tool-tip'\ndisplayed to users when they hover over the object.\n\n@return the object's title\n","name":"title","id":"title","line":"134","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"EMPTY_STYLENAME_MSG","id":"EMPTY_STYLENAME_MSG","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"NULL_HANDLE_MSG","id":"NULL_HANDLE_MSG","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/RegExp","name":"RegExp"},"isStatic":true,"comment":"\nStores a regular expression object to extract float values from the\nleading portion of an input string.\n","name":"numberRegex","id":"numberRegex","line":"20","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_element","isPrivate":true,"id":"_element","line":"22","kind":"variable"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSupports core functionality that in some cases requires direct support from\nthe compiler and runtime systems such as runtime type information and\ndeferred binding.\n","name":"UI","id":"UI","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nReturns <code>true</code> when running in production mode. Returns\n<code>false</code> when running either in development mode, or when running\nin a plain JVM.\n","name":"isProdMode","id":"isProdMode0()","line":"167","kind":"method"}],"line":"160","kind":"class"}],"line":"7","kind":"library"}